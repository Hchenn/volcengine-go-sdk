// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package transitrouter

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateTransitRouterGrantRuleCommon = "CreateTransitRouterGrantRule"

// CreateTransitRouterGrantRuleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateTransitRouterGrantRuleCommon operation. The "output" return
// value will be populated with the CreateTransitRouterGrantRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateTransitRouterGrantRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateTransitRouterGrantRuleCommon Send returns without error.
//
// See CreateTransitRouterGrantRuleCommon for more information on using the CreateTransitRouterGrantRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateTransitRouterGrantRuleCommonRequest method.
//    req, resp := client.CreateTransitRouterGrantRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) CreateTransitRouterGrantRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateTransitRouterGrantRuleCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateTransitRouterGrantRuleCommon API operation for TRANSITROUTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TRANSITROUTER's
// API operation CreateTransitRouterGrantRuleCommon for usage and error information.
func (c *TRANSITROUTER) CreateTransitRouterGrantRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateTransitRouterGrantRuleCommonRequest(input)
	return out, req.Send()
}

// CreateTransitRouterGrantRuleCommonWithContext is the same as CreateTransitRouterGrantRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateTransitRouterGrantRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) CreateTransitRouterGrantRuleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateTransitRouterGrantRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateTransitRouterGrantRule = "CreateTransitRouterGrantRule"

// CreateTransitRouterGrantRuleRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateTransitRouterGrantRule operation. The "output" return
// value will be populated with the CreateTransitRouterGrantRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateTransitRouterGrantRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateTransitRouterGrantRuleCommon Send returns without error.
//
// See CreateTransitRouterGrantRule for more information on using the CreateTransitRouterGrantRule
// API call, and error handling.
//
//    // Example sending a request using the CreateTransitRouterGrantRuleRequest method.
//    req, resp := client.CreateTransitRouterGrantRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) CreateTransitRouterGrantRuleRequest(input *CreateTransitRouterGrantRuleInput) (req *request.Request, output *CreateTransitRouterGrantRuleOutput) {
	op := &request.Operation{
		Name:       opCreateTransitRouterGrantRule,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateTransitRouterGrantRuleInput{}
	}

	output = &CreateTransitRouterGrantRuleOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateTransitRouterGrantRule API operation for TRANSITROUTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TRANSITROUTER's
// API operation CreateTransitRouterGrantRule for usage and error information.
func (c *TRANSITROUTER) CreateTransitRouterGrantRule(input *CreateTransitRouterGrantRuleInput) (*CreateTransitRouterGrantRuleOutput, error) {
	req, out := c.CreateTransitRouterGrantRuleRequest(input)
	return out, req.Send()
}

// CreateTransitRouterGrantRuleWithContext is the same as CreateTransitRouterGrantRule with the addition of
// the ability to pass a context and additional request options.
//
// See CreateTransitRouterGrantRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) CreateTransitRouterGrantRuleWithContext(ctx volcengine.Context, input *CreateTransitRouterGrantRuleInput, opts ...request.Option) (*CreateTransitRouterGrantRuleOutput, error) {
	req, out := c.CreateTransitRouterGrantRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateTransitRouterGrantRuleInput struct {
	_ struct{} `type:"structure"`

	Description *string `type:"string"`

	// GrantAccountId is a required field
	GrantAccountId *string `type:"string" required:"true"`

	// TransitRouterId is a required field
	TransitRouterId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s CreateTransitRouterGrantRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateTransitRouterGrantRuleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateTransitRouterGrantRuleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateTransitRouterGrantRuleInput"}
	if s.GrantAccountId == nil {
		invalidParams.Add(request.NewErrParamRequired("GrantAccountId"))
	}
	if s.TransitRouterId == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *CreateTransitRouterGrantRuleInput) SetDescription(v string) *CreateTransitRouterGrantRuleInput {
	s.Description = &v
	return s
}

// SetGrantAccountId sets the GrantAccountId field's value.
func (s *CreateTransitRouterGrantRuleInput) SetGrantAccountId(v string) *CreateTransitRouterGrantRuleInput {
	s.GrantAccountId = &v
	return s
}

// SetTransitRouterId sets the TransitRouterId field's value.
func (s *CreateTransitRouterGrantRuleInput) SetTransitRouterId(v string) *CreateTransitRouterGrantRuleInput {
	s.TransitRouterId = &v
	return s
}

type CreateTransitRouterGrantRuleOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s CreateTransitRouterGrantRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateTransitRouterGrantRuleOutput) GoString() string {
	return s.String()
}
