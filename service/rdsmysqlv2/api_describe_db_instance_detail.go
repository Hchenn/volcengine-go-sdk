// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDBInstanceDetailCommon = "DescribeDBInstanceDetail"

// DescribeDBInstanceDetailCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstanceDetailCommon operation. The "output" return
// value will be populated with the DescribeDBInstanceDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstanceDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstanceDetailCommon Send returns without error.
//
// See DescribeDBInstanceDetailCommon for more information on using the DescribeDBInstanceDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstanceDetailCommonRequest method.
//    req, resp := client.DescribeDBInstanceDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDBInstanceDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDBInstanceDetailCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstanceDetailCommon API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeDBInstanceDetailCommon for usage and error information.
func (c *RDSMYSQLV2) DescribeDBInstanceDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstanceDetailCommonRequest(input)
	return out, req.Send()
}

// DescribeDBInstanceDetailCommonWithContext is the same as DescribeDBInstanceDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstanceDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDBInstanceDetailCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstanceDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDBInstanceDetail = "DescribeDBInstanceDetail"

// DescribeDBInstanceDetailRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstanceDetail operation. The "output" return
// value will be populated with the DescribeDBInstanceDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstanceDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstanceDetailCommon Send returns without error.
//
// See DescribeDBInstanceDetail for more information on using the DescribeDBInstanceDetail
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstanceDetailRequest method.
//    req, resp := client.DescribeDBInstanceDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDBInstanceDetailRequest(input *DescribeDBInstanceDetailInput) (req *request.Request, output *DescribeDBInstanceDetailOutput) {
	op := &request.Operation{
		Name:       opDescribeDBInstanceDetail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDBInstanceDetailInput{}
	}

	output = &DescribeDBInstanceDetailOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstanceDetail API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeDBInstanceDetail for usage and error information.
func (c *RDSMYSQLV2) DescribeDBInstanceDetail(input *DescribeDBInstanceDetailInput) (*DescribeDBInstanceDetailOutput, error) {
	req, out := c.DescribeDBInstanceDetailRequest(input)
	return out, req.Send()
}

// DescribeDBInstanceDetailWithContext is the same as DescribeDBInstanceDetail with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstanceDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDBInstanceDetailWithContext(ctx volcengine.Context, input *DescribeDBInstanceDetailInput, opts ...request.Option) (*DescribeDBInstanceDetailOutput, error) {
	req, out := c.DescribeDBInstanceDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AddressForDescribeDBInstanceDetailOutput struct {
	_ struct{} `type:"structure"`

	Domain *string `type:"string"`

	EipId *string `type:"string"`

	IPAddress *string `type:"string"`

	NetworkType *string `type:"string" enum:"EnumOfNetworkTypeForDescribeDBInstanceDetailOutput"`

	Port *string `type:"string"`

	SubnetId *string `type:"string"`
}

// String returns the string representation
func (s AddressForDescribeDBInstanceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddressForDescribeDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetDomain sets the Domain field's value.
func (s *AddressForDescribeDBInstanceDetailOutput) SetDomain(v string) *AddressForDescribeDBInstanceDetailOutput {
	s.Domain = &v
	return s
}

// SetEipId sets the EipId field's value.
func (s *AddressForDescribeDBInstanceDetailOutput) SetEipId(v string) *AddressForDescribeDBInstanceDetailOutput {
	s.EipId = &v
	return s
}

// SetIPAddress sets the IPAddress field's value.
func (s *AddressForDescribeDBInstanceDetailOutput) SetIPAddress(v string) *AddressForDescribeDBInstanceDetailOutput {
	s.IPAddress = &v
	return s
}

// SetNetworkType sets the NetworkType field's value.
func (s *AddressForDescribeDBInstanceDetailOutput) SetNetworkType(v string) *AddressForDescribeDBInstanceDetailOutput {
	s.NetworkType = &v
	return s
}

// SetPort sets the Port field's value.
func (s *AddressForDescribeDBInstanceDetailOutput) SetPort(v string) *AddressForDescribeDBInstanceDetailOutput {
	s.Port = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *AddressForDescribeDBInstanceDetailOutput) SetSubnetId(v string) *AddressForDescribeDBInstanceDetailOutput {
	s.SubnetId = &v
	return s
}

type BasicInfoForDescribeDBInstanceDetailOutput struct {
	_ struct{} `type:"structure"`

	AllowListVersion *string `type:"string"`

	BackupAuditLogSize *int64 `type:"int64"`

	BackupBinLogSize *int64 `type:"int64"`

	BackupDataSize *int64 `type:"int64"`

	BackupErrorLogSize *int64 `type:"int64"`

	BackupLogSize *int64 `type:"int64"`

	BackupSlowLogSize *int64 `type:"int64"`

	BackupUse *float64 `type:"double"`

	CreateTime *string `type:"string"`

	DBEngine *string `type:"string" enum:"EnumOfDBEngineForDescribeDBInstanceDetailOutput"`

	DBEngineVersion *string `type:"string" enum:"EnumOfDBEngineVersionForDescribeDBInstanceDetailOutput"`

	DataSyncMode *string `type:"string" enum:"EnumOfDataSyncModeForDescribeDBInstanceDetailOutput"`

	InnerVersion *string `type:"string"`

	InstanceId *string `type:"string"`

	InstanceName *string `type:"string"`

	InstanceStatus *string `type:"string" enum:"EnumOfInstanceStatusForDescribeDBInstanceDetailOutput"`

	InstanceType *string `type:"string" enum:"EnumOfInstanceTypeForDescribeDBInstanceDetailOutput"`

	IsLatestVersion *bool `type:"boolean"`

	LowerCaseTableNames *string `type:"string"`

	Memory *int32 `type:"int32"`

	NodeNumber *string `type:"string"`

	NodeSpec *string `type:"string"`

	PrimaryDBAccount *string `type:"string"`

	ProjectName *string `type:"string"`

	RegionId *string `type:"string"`

	ServerCollation *string `type:"string"`

	ShardNumber *int32 `type:"int32"`

	StorageAuditLogSize *int64 `type:"int64"`

	StorageBinLogSize *int64 `type:"int64"`

	StorageDataSize *int64 `type:"int64"`

	StorageErrorLogSize *int64 `type:"int64"`

	StorageLogSize *int64 `type:"int64"`

	StorageSlowLogSize *int64 `type:"int64"`

	StorageSpace *int64 `type:"int64"`

	StorageType *string `type:"string" enum:"EnumOfStorageTypeForDescribeDBInstanceDetailOutput"`

	StorageUse *float64 `type:"double"`

	SubnetId *string `type:"string"`

	TimeZone *string `type:"string"`

	UpdateTime *string `type:"string"`

	VCPU *int32 `type:"int32"`

	VpcId *string `type:"string"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s BasicInfoForDescribeDBInstanceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BasicInfoForDescribeDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetAllowListVersion sets the AllowListVersion field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetAllowListVersion(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.AllowListVersion = &v
	return s
}

// SetBackupAuditLogSize sets the BackupAuditLogSize field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetBackupAuditLogSize(v int64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.BackupAuditLogSize = &v
	return s
}

// SetBackupBinLogSize sets the BackupBinLogSize field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetBackupBinLogSize(v int64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.BackupBinLogSize = &v
	return s
}

// SetBackupDataSize sets the BackupDataSize field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetBackupDataSize(v int64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.BackupDataSize = &v
	return s
}

// SetBackupErrorLogSize sets the BackupErrorLogSize field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetBackupErrorLogSize(v int64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.BackupErrorLogSize = &v
	return s
}

// SetBackupLogSize sets the BackupLogSize field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetBackupLogSize(v int64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.BackupLogSize = &v
	return s
}

// SetBackupSlowLogSize sets the BackupSlowLogSize field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetBackupSlowLogSize(v int64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.BackupSlowLogSize = &v
	return s
}

// SetBackupUse sets the BackupUse field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetBackupUse(v float64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.BackupUse = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetCreateTime(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.CreateTime = &v
	return s
}

// SetDBEngine sets the DBEngine field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetDBEngine(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.DBEngine = &v
	return s
}

// SetDBEngineVersion sets the DBEngineVersion field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetDBEngineVersion(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.DBEngineVersion = &v
	return s
}

// SetDataSyncMode sets the DataSyncMode field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetDataSyncMode(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.DataSyncMode = &v
	return s
}

// SetInnerVersion sets the InnerVersion field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetInnerVersion(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.InnerVersion = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetInstanceId(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetInstanceName(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.InstanceName = &v
	return s
}

// SetInstanceStatus sets the InstanceStatus field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetInstanceStatus(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.InstanceStatus = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetInstanceType(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.InstanceType = &v
	return s
}

// SetIsLatestVersion sets the IsLatestVersion field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetIsLatestVersion(v bool) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.IsLatestVersion = &v
	return s
}

// SetLowerCaseTableNames sets the LowerCaseTableNames field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetLowerCaseTableNames(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.LowerCaseTableNames = &v
	return s
}

// SetMemory sets the Memory field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetMemory(v int32) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.Memory = &v
	return s
}

// SetNodeNumber sets the NodeNumber field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetNodeNumber(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.NodeNumber = &v
	return s
}

// SetNodeSpec sets the NodeSpec field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetNodeSpec(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.NodeSpec = &v
	return s
}

// SetPrimaryDBAccount sets the PrimaryDBAccount field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetPrimaryDBAccount(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.PrimaryDBAccount = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetProjectName(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.ProjectName = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetRegionId(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.RegionId = &v
	return s
}

// SetServerCollation sets the ServerCollation field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetServerCollation(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.ServerCollation = &v
	return s
}

// SetShardNumber sets the ShardNumber field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetShardNumber(v int32) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.ShardNumber = &v
	return s
}

// SetStorageAuditLogSize sets the StorageAuditLogSize field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetStorageAuditLogSize(v int64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.StorageAuditLogSize = &v
	return s
}

// SetStorageBinLogSize sets the StorageBinLogSize field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetStorageBinLogSize(v int64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.StorageBinLogSize = &v
	return s
}

// SetStorageDataSize sets the StorageDataSize field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetStorageDataSize(v int64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.StorageDataSize = &v
	return s
}

// SetStorageErrorLogSize sets the StorageErrorLogSize field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetStorageErrorLogSize(v int64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.StorageErrorLogSize = &v
	return s
}

// SetStorageLogSize sets the StorageLogSize field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetStorageLogSize(v int64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.StorageLogSize = &v
	return s
}

// SetStorageSlowLogSize sets the StorageSlowLogSize field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetStorageSlowLogSize(v int64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.StorageSlowLogSize = &v
	return s
}

// SetStorageSpace sets the StorageSpace field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetStorageSpace(v int64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.StorageSpace = &v
	return s
}

// SetStorageType sets the StorageType field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetStorageType(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.StorageType = &v
	return s
}

// SetStorageUse sets the StorageUse field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetStorageUse(v float64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.StorageUse = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetSubnetId(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.SubnetId = &v
	return s
}

// SetTimeZone sets the TimeZone field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetTimeZone(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.TimeZone = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetUpdateTime(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.UpdateTime = &v
	return s
}

// SetVCPU sets the VCPU field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetVCPU(v int32) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.VCPU = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetVpcId(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.VpcId = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetZoneId(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.ZoneId = &v
	return s
}

type ChargeDetailForDescribeDBInstanceDetailOutput struct {
	_ struct{} `type:"structure"`

	AutoRenew *bool `type:"boolean"`

	ChargeEndTime *string `type:"string"`

	ChargeStartTime *string `type:"string"`

	ChargeStatus *string `type:"string" enum:"EnumOfChargeStatusForDescribeDBInstanceDetailOutput"`

	ChargeType *string `type:"string" enum:"EnumOfChargeTypeForDescribeDBInstanceDetailOutput"`

	Number *int32 `type:"int32"`

	OverdueReclaimTime *string `type:"string"`

	OverdueTime *string `type:"string"`

	Period *int32 `type:"int32"`

	PeriodUnit *string `type:"string" enum:"EnumOfPeriodUnitForDescribeDBInstanceDetailOutput"`
}

// String returns the string representation
func (s ChargeDetailForDescribeDBInstanceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ChargeDetailForDescribeDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetAutoRenew sets the AutoRenew field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetAutoRenew(v bool) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.AutoRenew = &v
	return s
}

// SetChargeEndTime sets the ChargeEndTime field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetChargeEndTime(v string) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.ChargeEndTime = &v
	return s
}

// SetChargeStartTime sets the ChargeStartTime field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetChargeStartTime(v string) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.ChargeStartTime = &v
	return s
}

// SetChargeStatus sets the ChargeStatus field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetChargeStatus(v string) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.ChargeStatus = &v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetChargeType(v string) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.ChargeType = &v
	return s
}

// SetNumber sets the Number field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetNumber(v int32) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.Number = &v
	return s
}

// SetOverdueReclaimTime sets the OverdueReclaimTime field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetOverdueReclaimTime(v string) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.OverdueReclaimTime = &v
	return s
}

// SetOverdueTime sets the OverdueTime field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetOverdueTime(v string) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.OverdueTime = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetPeriod(v int32) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.Period = &v
	return s
}

// SetPeriodUnit sets the PeriodUnit field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetPeriodUnit(v string) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.PeriodUnit = &v
	return s
}

type ConnectionInfoForDescribeDBInstanceDetailOutput struct {
	_ struct{} `type:"structure"`

	Address []*AddressForDescribeDBInstanceDetailOutput `type:"list"`

	AutoAddNewNodes *string `type:"string" enum:"EnumOfAutoAddNewNodesForDescribeDBInstanceDetailOutput"`

	Description *string `type:"string"`

	EipId *string `type:"string"`

	EnableReadOnly *string `type:"string" enum:"EnumOfEnableReadOnlyForDescribeDBInstanceDetailOutput"`

	EnableReadWriteSplitting *string `type:"string" enum:"EnumOfEnableReadWriteSplittingForDescribeDBInstanceDetailOutput"`

	EndpointId *string `type:"string"`

	EndpointName *string `type:"string"`

	EndpointType *string `type:"string" enum:"EnumOfEndpointTypeForDescribeDBInstanceDetailOutput"`

	PublicIPAddress *string `type:"string"`

	ReadOnlyNodeDistributionType *string `type:"string" enum:"EnumOfReadOnlyNodeDistributionTypeForDescribeDBInstanceDetailOutput"`

	ReadOnlyNodeMaxDelayTime *int32 `type:"int32"`

	ReadOnlyNodeWeight []*ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput `type:"list"`

	ReadWriteMode *string `type:"string" enum:"EnumOfReadWriteModeForDescribeDBInstanceDetailOutput"`
}

// String returns the string representation
func (s ConnectionInfoForDescribeDBInstanceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConnectionInfoForDescribeDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *ConnectionInfoForDescribeDBInstanceDetailOutput) SetAddress(v []*AddressForDescribeDBInstanceDetailOutput) *ConnectionInfoForDescribeDBInstanceDetailOutput {
	s.Address = v
	return s
}

// SetAutoAddNewNodes sets the AutoAddNewNodes field's value.
func (s *ConnectionInfoForDescribeDBInstanceDetailOutput) SetAutoAddNewNodes(v string) *ConnectionInfoForDescribeDBInstanceDetailOutput {
	s.AutoAddNewNodes = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ConnectionInfoForDescribeDBInstanceDetailOutput) SetDescription(v string) *ConnectionInfoForDescribeDBInstanceDetailOutput {
	s.Description = &v
	return s
}

// SetEipId sets the EipId field's value.
func (s *ConnectionInfoForDescribeDBInstanceDetailOutput) SetEipId(v string) *ConnectionInfoForDescribeDBInstanceDetailOutput {
	s.EipId = &v
	return s
}

// SetEnableReadOnly sets the EnableReadOnly field's value.
func (s *ConnectionInfoForDescribeDBInstanceDetailOutput) SetEnableReadOnly(v string) *ConnectionInfoForDescribeDBInstanceDetailOutput {
	s.EnableReadOnly = &v
	return s
}

// SetEnableReadWriteSplitting sets the EnableReadWriteSplitting field's value.
func (s *ConnectionInfoForDescribeDBInstanceDetailOutput) SetEnableReadWriteSplitting(v string) *ConnectionInfoForDescribeDBInstanceDetailOutput {
	s.EnableReadWriteSplitting = &v
	return s
}

// SetEndpointId sets the EndpointId field's value.
func (s *ConnectionInfoForDescribeDBInstanceDetailOutput) SetEndpointId(v string) *ConnectionInfoForDescribeDBInstanceDetailOutput {
	s.EndpointId = &v
	return s
}

// SetEndpointName sets the EndpointName field's value.
func (s *ConnectionInfoForDescribeDBInstanceDetailOutput) SetEndpointName(v string) *ConnectionInfoForDescribeDBInstanceDetailOutput {
	s.EndpointName = &v
	return s
}

// SetEndpointType sets the EndpointType field's value.
func (s *ConnectionInfoForDescribeDBInstanceDetailOutput) SetEndpointType(v string) *ConnectionInfoForDescribeDBInstanceDetailOutput {
	s.EndpointType = &v
	return s
}

// SetPublicIPAddress sets the PublicIPAddress field's value.
func (s *ConnectionInfoForDescribeDBInstanceDetailOutput) SetPublicIPAddress(v string) *ConnectionInfoForDescribeDBInstanceDetailOutput {
	s.PublicIPAddress = &v
	return s
}

// SetReadOnlyNodeDistributionType sets the ReadOnlyNodeDistributionType field's value.
func (s *ConnectionInfoForDescribeDBInstanceDetailOutput) SetReadOnlyNodeDistributionType(v string) *ConnectionInfoForDescribeDBInstanceDetailOutput {
	s.ReadOnlyNodeDistributionType = &v
	return s
}

// SetReadOnlyNodeMaxDelayTime sets the ReadOnlyNodeMaxDelayTime field's value.
func (s *ConnectionInfoForDescribeDBInstanceDetailOutput) SetReadOnlyNodeMaxDelayTime(v int32) *ConnectionInfoForDescribeDBInstanceDetailOutput {
	s.ReadOnlyNodeMaxDelayTime = &v
	return s
}

// SetReadOnlyNodeWeight sets the ReadOnlyNodeWeight field's value.
func (s *ConnectionInfoForDescribeDBInstanceDetailOutput) SetReadOnlyNodeWeight(v []*ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput) *ConnectionInfoForDescribeDBInstanceDetailOutput {
	s.ReadOnlyNodeWeight = v
	return s
}

// SetReadWriteMode sets the ReadWriteMode field's value.
func (s *ConnectionInfoForDescribeDBInstanceDetailOutput) SetReadWriteMode(v string) *ConnectionInfoForDescribeDBInstanceDetailOutput {
	s.ReadWriteMode = &v
	return s
}

type DescribeDBInstanceDetailInput struct {
	_ struct{} `type:"structure"`

	// InstanceId is a required field
	InstanceId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeDBInstanceDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstanceDetailInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDBInstanceDetailInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDBInstanceDetailInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDBInstanceDetailInput) SetInstanceId(v string) *DescribeDBInstanceDetailInput {
	s.InstanceId = &v
	return s
}

type DescribeDBInstanceDetailOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	BasicInfo *BasicInfoForDescribeDBInstanceDetailOutput `type:"structure"`

	ChargeDetail *ChargeDetailForDescribeDBInstanceDetailOutput `type:"structure"`

	ConnectionInfo []*ConnectionInfoForDescribeDBInstanceDetailOutput `type:"list"`

	NodeDetailInfo []*NodeDetailInfoForDescribeDBInstanceDetailOutput `type:"list"`

	ShardInfo []*ShardInfoForDescribeDBInstanceDetailOutput `type:"list"`
}

// String returns the string representation
func (s DescribeDBInstanceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetBasicInfo sets the BasicInfo field's value.
func (s *DescribeDBInstanceDetailOutput) SetBasicInfo(v *BasicInfoForDescribeDBInstanceDetailOutput) *DescribeDBInstanceDetailOutput {
	s.BasicInfo = v
	return s
}

// SetChargeDetail sets the ChargeDetail field's value.
func (s *DescribeDBInstanceDetailOutput) SetChargeDetail(v *ChargeDetailForDescribeDBInstanceDetailOutput) *DescribeDBInstanceDetailOutput {
	s.ChargeDetail = v
	return s
}

// SetConnectionInfo sets the ConnectionInfo field's value.
func (s *DescribeDBInstanceDetailOutput) SetConnectionInfo(v []*ConnectionInfoForDescribeDBInstanceDetailOutput) *DescribeDBInstanceDetailOutput {
	s.ConnectionInfo = v
	return s
}

// SetNodeDetailInfo sets the NodeDetailInfo field's value.
func (s *DescribeDBInstanceDetailOutput) SetNodeDetailInfo(v []*NodeDetailInfoForDescribeDBInstanceDetailOutput) *DescribeDBInstanceDetailOutput {
	s.NodeDetailInfo = v
	return s
}

// SetShardInfo sets the ShardInfo field's value.
func (s *DescribeDBInstanceDetailOutput) SetShardInfo(v []*ShardInfoForDescribeDBInstanceDetailOutput) *DescribeDBInstanceDetailOutput {
	s.ShardInfo = v
	return s
}

type NodeDetailInfoForDescribeDBInstanceDetailOutput struct {
	_ struct{} `type:"structure"`

	CreateTime *string `type:"string"`

	InstanceId *string `type:"string"`

	Memory *int32 `type:"int32"`

	NodeId *string `type:"string"`

	NodeSpec *string `type:"string"`

	NodeStatus *string `type:"string" enum:"EnumOfNodeStatusForDescribeDBInstanceDetailOutput"`

	NodeType *string `type:"string" enum:"EnumOfNodeTypeForDescribeDBInstanceDetailOutput"`

	RegionId *string `type:"string"`

	ShardId *string `type:"string"`

	UpdateTime *string `type:"string"`

	VCPU *int32 `type:"int32"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s NodeDetailInfoForDescribeDBInstanceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NodeDetailInfoForDescribeDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetCreateTime sets the CreateTime field's value.
func (s *NodeDetailInfoForDescribeDBInstanceDetailOutput) SetCreateTime(v string) *NodeDetailInfoForDescribeDBInstanceDetailOutput {
	s.CreateTime = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *NodeDetailInfoForDescribeDBInstanceDetailOutput) SetInstanceId(v string) *NodeDetailInfoForDescribeDBInstanceDetailOutput {
	s.InstanceId = &v
	return s
}

// SetMemory sets the Memory field's value.
func (s *NodeDetailInfoForDescribeDBInstanceDetailOutput) SetMemory(v int32) *NodeDetailInfoForDescribeDBInstanceDetailOutput {
	s.Memory = &v
	return s
}

// SetNodeId sets the NodeId field's value.
func (s *NodeDetailInfoForDescribeDBInstanceDetailOutput) SetNodeId(v string) *NodeDetailInfoForDescribeDBInstanceDetailOutput {
	s.NodeId = &v
	return s
}

// SetNodeSpec sets the NodeSpec field's value.
func (s *NodeDetailInfoForDescribeDBInstanceDetailOutput) SetNodeSpec(v string) *NodeDetailInfoForDescribeDBInstanceDetailOutput {
	s.NodeSpec = &v
	return s
}

// SetNodeStatus sets the NodeStatus field's value.
func (s *NodeDetailInfoForDescribeDBInstanceDetailOutput) SetNodeStatus(v string) *NodeDetailInfoForDescribeDBInstanceDetailOutput {
	s.NodeStatus = &v
	return s
}

// SetNodeType sets the NodeType field's value.
func (s *NodeDetailInfoForDescribeDBInstanceDetailOutput) SetNodeType(v string) *NodeDetailInfoForDescribeDBInstanceDetailOutput {
	s.NodeType = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *NodeDetailInfoForDescribeDBInstanceDetailOutput) SetRegionId(v string) *NodeDetailInfoForDescribeDBInstanceDetailOutput {
	s.RegionId = &v
	return s
}

// SetShardId sets the ShardId field's value.
func (s *NodeDetailInfoForDescribeDBInstanceDetailOutput) SetShardId(v string) *NodeDetailInfoForDescribeDBInstanceDetailOutput {
	s.ShardId = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *NodeDetailInfoForDescribeDBInstanceDetailOutput) SetUpdateTime(v string) *NodeDetailInfoForDescribeDBInstanceDetailOutput {
	s.UpdateTime = &v
	return s
}

// SetVCPU sets the VCPU field's value.
func (s *NodeDetailInfoForDescribeDBInstanceDetailOutput) SetVCPU(v int32) *NodeDetailInfoForDescribeDBInstanceDetailOutput {
	s.VCPU = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *NodeDetailInfoForDescribeDBInstanceDetailOutput) SetZoneId(v string) *NodeDetailInfoForDescribeDBInstanceDetailOutput {
	s.ZoneId = &v
	return s
}

type ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput struct {
	_ struct{} `type:"structure"`

	NodeId *string `type:"string"`

	NodeType *string `type:"string" enum:"EnumOfNodeTypeForDescribeDBInstanceDetailOutput"`

	Weight *int32 `type:"int32"`
}

// String returns the string representation
func (s ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetNodeId sets the NodeId field's value.
func (s *ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput) SetNodeId(v string) *ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput {
	s.NodeId = &v
	return s
}

// SetNodeType sets the NodeType field's value.
func (s *ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput) SetNodeType(v string) *ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput {
	s.NodeType = &v
	return s
}

// SetWeight sets the Weight field's value.
func (s *ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput) SetWeight(v int32) *ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput {
	s.Weight = &v
	return s
}

type ShardInfoForDescribeDBInstanceDetailOutput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `type:"string"`

	NodeDetailInfo []*NodeDetailInfoForDescribeDBInstanceDetailOutput `type:"list"`

	ShardId *string `type:"string"`

	ShardStatus *string `type:"string" enum:"EnumOfShardStatusForDescribeDBInstanceDetailOutput"`
}

// String returns the string representation
func (s ShardInfoForDescribeDBInstanceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ShardInfoForDescribeDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *ShardInfoForDescribeDBInstanceDetailOutput) SetInstanceId(v string) *ShardInfoForDescribeDBInstanceDetailOutput {
	s.InstanceId = &v
	return s
}

// SetNodeDetailInfo sets the NodeDetailInfo field's value.
func (s *ShardInfoForDescribeDBInstanceDetailOutput) SetNodeDetailInfo(v []*NodeDetailInfoForDescribeDBInstanceDetailOutput) *ShardInfoForDescribeDBInstanceDetailOutput {
	s.NodeDetailInfo = v
	return s
}

// SetShardId sets the ShardId field's value.
func (s *ShardInfoForDescribeDBInstanceDetailOutput) SetShardId(v string) *ShardInfoForDescribeDBInstanceDetailOutput {
	s.ShardId = &v
	return s
}

// SetShardStatus sets the ShardStatus field's value.
func (s *ShardInfoForDescribeDBInstanceDetailOutput) SetShardStatus(v string) *ShardInfoForDescribeDBInstanceDetailOutput {
	s.ShardStatus = &v
	return s
}

const (
	// EnumOfAutoAddNewNodesForDescribeDBInstanceDetailOutputDisable is a EnumOfAutoAddNewNodesForDescribeDBInstanceDetailOutput enum value
	EnumOfAutoAddNewNodesForDescribeDBInstanceDetailOutputDisable = "Disable"

	// EnumOfAutoAddNewNodesForDescribeDBInstanceDetailOutputEnable is a EnumOfAutoAddNewNodesForDescribeDBInstanceDetailOutput enum value
	EnumOfAutoAddNewNodesForDescribeDBInstanceDetailOutputEnable = "Enable"
)

const (
	// EnumOfChargeStatusForDescribeDBInstanceDetailOutputNormal is a EnumOfChargeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfChargeStatusForDescribeDBInstanceDetailOutputNormal = "Normal"

	// EnumOfChargeStatusForDescribeDBInstanceDetailOutputOverdue is a EnumOfChargeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfChargeStatusForDescribeDBInstanceDetailOutputOverdue = "Overdue"

	// EnumOfChargeStatusForDescribeDBInstanceDetailOutputUnpaid is a EnumOfChargeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfChargeStatusForDescribeDBInstanceDetailOutputUnpaid = "Unpaid"
)

const (
	// EnumOfChargeTypeForDescribeDBInstanceDetailOutputNotEnabled is a EnumOfChargeTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfChargeTypeForDescribeDBInstanceDetailOutputNotEnabled = "NotEnabled"

	// EnumOfChargeTypeForDescribeDBInstanceDetailOutputPostPaid is a EnumOfChargeTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfChargeTypeForDescribeDBInstanceDetailOutputPostPaid = "PostPaid"

	// EnumOfChargeTypeForDescribeDBInstanceDetailOutputPrePaid is a EnumOfChargeTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfChargeTypeForDescribeDBInstanceDetailOutputPrePaid = "PrePaid"
)

const (
	// EnumOfDBEngineForDescribeDBInstanceDetailOutputMysql is a EnumOfDBEngineForDescribeDBInstanceDetailOutput enum value
	EnumOfDBEngineForDescribeDBInstanceDetailOutputMysql = "Mysql"

	// EnumOfDBEngineForDescribeDBInstanceDetailOutputPostgresql is a EnumOfDBEngineForDescribeDBInstanceDetailOutput enum value
	EnumOfDBEngineForDescribeDBInstanceDetailOutputPostgresql = "Postgresql"

	// EnumOfDBEngineForDescribeDBInstanceDetailOutputSqlserver is a EnumOfDBEngineForDescribeDBInstanceDetailOutput enum value
	EnumOfDBEngineForDescribeDBInstanceDetailOutputSqlserver = "Sqlserver"
)

const (
	// EnumOfDBEngineVersionForDescribeDBInstanceDetailOutputMySql56 is a EnumOfDBEngineVersionForDescribeDBInstanceDetailOutput enum value
	EnumOfDBEngineVersionForDescribeDBInstanceDetailOutputMySql56 = "MySQL_5_6"

	// EnumOfDBEngineVersionForDescribeDBInstanceDetailOutputMySql57 is a EnumOfDBEngineVersionForDescribeDBInstanceDetailOutput enum value
	EnumOfDBEngineVersionForDescribeDBInstanceDetailOutputMySql57 = "MySQL_5_7"

	// EnumOfDBEngineVersionForDescribeDBInstanceDetailOutputMySql80 is a EnumOfDBEngineVersionForDescribeDBInstanceDetailOutput enum value
	EnumOfDBEngineVersionForDescribeDBInstanceDetailOutputMySql80 = "MySQL_8_0"

	// EnumOfDBEngineVersionForDescribeDBInstanceDetailOutputSqlserver2019Ent is a EnumOfDBEngineVersionForDescribeDBInstanceDetailOutput enum value
	EnumOfDBEngineVersionForDescribeDBInstanceDetailOutputSqlserver2019Ent = "SQLServer_2019_Ent"

	// EnumOfDBEngineVersionForDescribeDBInstanceDetailOutputSqlserver2019Std is a EnumOfDBEngineVersionForDescribeDBInstanceDetailOutput enum value
	EnumOfDBEngineVersionForDescribeDBInstanceDetailOutputSqlserver2019Std = "SQLServer_2019_Std"

	// EnumOfDBEngineVersionForDescribeDBInstanceDetailOutputSqlserver2019Web is a EnumOfDBEngineVersionForDescribeDBInstanceDetailOutput enum value
	EnumOfDBEngineVersionForDescribeDBInstanceDetailOutputSqlserver2019Web = "SQLServer_2019_Web"
)

const (
	// EnumOfDataSyncModeForDescribeDBInstanceDetailOutputAsync is a EnumOfDataSyncModeForDescribeDBInstanceDetailOutput enum value
	EnumOfDataSyncModeForDescribeDBInstanceDetailOutputAsync = "Async"

	// EnumOfDataSyncModeForDescribeDBInstanceDetailOutputSemiSync is a EnumOfDataSyncModeForDescribeDBInstanceDetailOutput enum value
	EnumOfDataSyncModeForDescribeDBInstanceDetailOutputSemiSync = "SemiSync"

	// EnumOfDataSyncModeForDescribeDBInstanceDetailOutputSync is a EnumOfDataSyncModeForDescribeDBInstanceDetailOutput enum value
	EnumOfDataSyncModeForDescribeDBInstanceDetailOutputSync = "Sync"
)

const (
	// EnumOfEnableReadOnlyForDescribeDBInstanceDetailOutputDisable is a EnumOfEnableReadOnlyForDescribeDBInstanceDetailOutput enum value
	EnumOfEnableReadOnlyForDescribeDBInstanceDetailOutputDisable = "Disable"

	// EnumOfEnableReadOnlyForDescribeDBInstanceDetailOutputEnable is a EnumOfEnableReadOnlyForDescribeDBInstanceDetailOutput enum value
	EnumOfEnableReadOnlyForDescribeDBInstanceDetailOutputEnable = "Enable"
)

const (
	// EnumOfEnableReadWriteSplittingForDescribeDBInstanceDetailOutputDisable is a EnumOfEnableReadWriteSplittingForDescribeDBInstanceDetailOutput enum value
	EnumOfEnableReadWriteSplittingForDescribeDBInstanceDetailOutputDisable = "Disable"

	// EnumOfEnableReadWriteSplittingForDescribeDBInstanceDetailOutputEnable is a EnumOfEnableReadWriteSplittingForDescribeDBInstanceDetailOutput enum value
	EnumOfEnableReadWriteSplittingForDescribeDBInstanceDetailOutputEnable = "Enable"
)

const (
	// EnumOfEndpointTypeForDescribeDBInstanceDetailOutputAllNode is a EnumOfEndpointTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfEndpointTypeForDescribeDBInstanceDetailOutputAllNode = "AllNode"

	// EnumOfEndpointTypeForDescribeDBInstanceDetailOutputCluster is a EnumOfEndpointTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfEndpointTypeForDescribeDBInstanceDetailOutputCluster = "Cluster"

	// EnumOfEndpointTypeForDescribeDBInstanceDetailOutputCustom is a EnumOfEndpointTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfEndpointTypeForDescribeDBInstanceDetailOutputCustom = "Custom"

	// EnumOfEndpointTypeForDescribeDBInstanceDetailOutputDirect is a EnumOfEndpointTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfEndpointTypeForDescribeDBInstanceDetailOutputDirect = "Direct"

	// EnumOfEndpointTypeForDescribeDBInstanceDetailOutputPrimary is a EnumOfEndpointTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfEndpointTypeForDescribeDBInstanceDetailOutputPrimary = "Primary"
)

const (
	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputAllowListMaintaining is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputAllowListMaintaining = "AllowListMaintaining"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputClosed is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputClosed = "Closed"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputClosing is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputClosing = "Closing"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputCreateFailed is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputCreateFailed = "CreateFailed"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputCreating is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputCreating = "Creating"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputDeleting is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputDeleting = "Deleting"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputDestroyed is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputDestroyed = "Destroyed"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputDestroying is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputDestroying = "Destroying"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputError is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputError = "Error"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputImporting is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputImporting = "Importing"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputMaintaining is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputMaintaining = "Maintaining"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputMasterChanging is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputMasterChanging = "MasterChanging"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputMigrating is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputMigrating = "Migrating"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputReclaiming is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputReclaiming = "Reclaiming"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputRecycled is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputRecycled = "Recycled"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputReleased is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputReleased = "Released"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputRestarting is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputRestarting = "Restarting"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputRestoring is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputRestoring = "Restoring"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputResuming is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputResuming = "Resuming"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputRunning is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputRunning = "Running"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputSslupdating is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputSslupdating = "SSLUpdating"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputTdeupdating is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputTdeupdating = "TDEUpdating"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputUnknown is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputUnknown = "Unknown"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputUpdating is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputUpdating = "Updating"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputUpgrading is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputUpgrading = "Upgrading"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputWaitingPaid is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputWaitingPaid = "WaitingPaid"
)

const (
	// EnumOfInstanceTypeForDescribeDBInstanceDetailOutputBasic is a EnumOfInstanceTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceTypeForDescribeDBInstanceDetailOutputBasic = "Basic"

	// EnumOfInstanceTypeForDescribeDBInstanceDetailOutputCluster is a EnumOfInstanceTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceTypeForDescribeDBInstanceDetailOutputCluster = "Cluster"

	// EnumOfInstanceTypeForDescribeDBInstanceDetailOutputHa is a EnumOfInstanceTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceTypeForDescribeDBInstanceDetailOutputHa = "HA"
)

const (
	// EnumOfNetworkTypeForDescribeDBInstanceDetailOutputCarma is a EnumOfNetworkTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfNetworkTypeForDescribeDBInstanceDetailOutputCarma = "Carma"

	// EnumOfNetworkTypeForDescribeDBInstanceDetailOutputIngress is a EnumOfNetworkTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfNetworkTypeForDescribeDBInstanceDetailOutputIngress = "Ingress"

	// EnumOfNetworkTypeForDescribeDBInstanceDetailOutputInner is a EnumOfNetworkTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfNetworkTypeForDescribeDBInstanceDetailOutputInner = "Inner"

	// EnumOfNetworkTypeForDescribeDBInstanceDetailOutputPrivate is a EnumOfNetworkTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfNetworkTypeForDescribeDBInstanceDetailOutputPrivate = "Private"

	// EnumOfNetworkTypeForDescribeDBInstanceDetailOutputPublic is a EnumOfNetworkTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfNetworkTypeForDescribeDBInstanceDetailOutputPublic = "Public"
)

const (
	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputCreateFailed is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputCreateFailed = "CreateFailed"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputCreating is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputCreating = "Creating"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputDeleting is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputDeleting = "Deleting"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputDestroyed is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputDestroyed = "Destroyed"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputDestroying is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputDestroying = "Destroying"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputError is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputError = "Error"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputRecycled is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputRecycled = "Recycled"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputReleased is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputReleased = "Released"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputRestarting is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputRestarting = "Restarting"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputRestoring is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputRestoring = "Restoring"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputRunning is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputRunning = "Running"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputUpdating is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputUpdating = "Updating"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputUpgrading is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputUpgrading = "Upgrading"
)

const (
	// EnumOfNodeTypeForDescribeDBInstanceDetailOutputPrimary is a EnumOfNodeTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeTypeForDescribeDBInstanceDetailOutputPrimary = "Primary"

	// EnumOfNodeTypeForDescribeDBInstanceDetailOutputReadOnly is a EnumOfNodeTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeTypeForDescribeDBInstanceDetailOutputReadOnly = "ReadOnly"

	// EnumOfNodeTypeForDescribeDBInstanceDetailOutputSecondary is a EnumOfNodeTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeTypeForDescribeDBInstanceDetailOutputSecondary = "Secondary"
)

const (
	// EnumOfPeriodUnitForDescribeDBInstanceDetailOutputMonth is a EnumOfPeriodUnitForDescribeDBInstanceDetailOutput enum value
	EnumOfPeriodUnitForDescribeDBInstanceDetailOutputMonth = "Month"

	// EnumOfPeriodUnitForDescribeDBInstanceDetailOutputYear is a EnumOfPeriodUnitForDescribeDBInstanceDetailOutput enum value
	EnumOfPeriodUnitForDescribeDBInstanceDetailOutputYear = "Year"
)

const (
	// EnumOfReadOnlyNodeDistributionTypeForDescribeDBInstanceDetailOutputCustom is a EnumOfReadOnlyNodeDistributionTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfReadOnlyNodeDistributionTypeForDescribeDBInstanceDetailOutputCustom = "Custom"

	// EnumOfReadOnlyNodeDistributionTypeForDescribeDBInstanceDetailOutputDefault is a EnumOfReadOnlyNodeDistributionTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfReadOnlyNodeDistributionTypeForDescribeDBInstanceDetailOutputDefault = "Default"
)

const (
	// EnumOfReadWriteModeForDescribeDBInstanceDetailOutputReadOnly is a EnumOfReadWriteModeForDescribeDBInstanceDetailOutput enum value
	EnumOfReadWriteModeForDescribeDBInstanceDetailOutputReadOnly = "ReadOnly"

	// EnumOfReadWriteModeForDescribeDBInstanceDetailOutputReadWrite is a EnumOfReadWriteModeForDescribeDBInstanceDetailOutput enum value
	EnumOfReadWriteModeForDescribeDBInstanceDetailOutputReadWrite = "ReadWrite"
)

const (
	// EnumOfShardStatusForDescribeDBInstanceDetailOutputAllowListMaintaining is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputAllowListMaintaining = "AllowListMaintaining"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputClosed is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputClosed = "Closed"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputClosing is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputClosing = "Closing"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputCreateFailed is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputCreateFailed = "CreateFailed"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputCreating is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputCreating = "Creating"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputDeleting is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputDeleting = "Deleting"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputDestroyed is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputDestroyed = "Destroyed"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputDestroying is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputDestroying = "Destroying"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputError is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputError = "Error"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputImporting is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputImporting = "Importing"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputMaintaining is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputMaintaining = "Maintaining"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputMasterChanging is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputMasterChanging = "MasterChanging"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputMigrating is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputMigrating = "Migrating"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputReclaiming is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputReclaiming = "Reclaiming"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputRecycled is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputRecycled = "Recycled"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputReleased is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputReleased = "Released"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputRestarting is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputRestarting = "Restarting"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputRestoring is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputRestoring = "Restoring"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputResuming is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputResuming = "Resuming"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputRunning is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputRunning = "Running"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputSslupdating is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputSslupdating = "SSLUpdating"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputTdeupdating is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputTdeupdating = "TDEUpdating"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputUnknown is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputUnknown = "Unknown"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputUpdating is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputUpdating = "Updating"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputUpgrading is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputUpgrading = "Upgrading"

	// EnumOfShardStatusForDescribeDBInstanceDetailOutputWaitingPaid is a EnumOfShardStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfShardStatusForDescribeDBInstanceDetailOutputWaitingPaid = "WaitingPaid"
)

const (
	// EnumOfStorageTypeForDescribeDBInstanceDetailOutputCloudStorage is a EnumOfStorageTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfStorageTypeForDescribeDBInstanceDetailOutputCloudStorage = "CloudStorage"

	// EnumOfStorageTypeForDescribeDBInstanceDetailOutputEssdpl1 is a EnumOfStorageTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfStorageTypeForDescribeDBInstanceDetailOutputEssdpl1 = "ESSDPL1"

	// EnumOfStorageTypeForDescribeDBInstanceDetailOutputEssdpl2 is a EnumOfStorageTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfStorageTypeForDescribeDBInstanceDetailOutputEssdpl2 = "ESSDPL2"

	// EnumOfStorageTypeForDescribeDBInstanceDetailOutputLocalSsd is a EnumOfStorageTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfStorageTypeForDescribeDBInstanceDetailOutputLocalSsd = "LocalSSD"
)
