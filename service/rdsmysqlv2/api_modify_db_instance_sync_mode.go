// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyDBInstanceSyncModeCommon = "ModifyDBInstanceSyncMode"

// ModifyDBInstanceSyncModeCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyDBInstanceSyncModeCommon operation. The "output" return
// value will be populated with the ModifyDBInstanceSyncModeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBInstanceSyncModeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBInstanceSyncModeCommon Send returns without error.
//
// See ModifyDBInstanceSyncModeCommon for more information on using the ModifyDBInstanceSyncModeCommon
// API call, and error handling.
//
//	// Example sending a request using the ModifyDBInstanceSyncModeCommonRequest method.
//	req, resp := client.ModifyDBInstanceSyncModeCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *RDSMYSQLV2) ModifyDBInstanceSyncModeCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyDBInstanceSyncModeCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBInstanceSyncModeCommon API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation ModifyDBInstanceSyncModeCommon for usage and error information.
func (c *RDSMYSQLV2) ModifyDBInstanceSyncModeCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyDBInstanceSyncModeCommonRequest(input)
	return out, req.Send()
}

// ModifyDBInstanceSyncModeCommonWithContext is the same as ModifyDBInstanceSyncModeCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBInstanceSyncModeCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) ModifyDBInstanceSyncModeCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyDBInstanceSyncModeCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyDBInstanceSyncMode = "ModifyDBInstanceSyncMode"

// ModifyDBInstanceSyncModeRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyDBInstanceSyncMode operation. The "output" return
// value will be populated with the ModifyDBInstanceSyncModeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBInstanceSyncModeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBInstanceSyncModeCommon Send returns without error.
//
// See ModifyDBInstanceSyncMode for more information on using the ModifyDBInstanceSyncMode
// API call, and error handling.
//
//	// Example sending a request using the ModifyDBInstanceSyncModeRequest method.
//	req, resp := client.ModifyDBInstanceSyncModeRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *RDSMYSQLV2) ModifyDBInstanceSyncModeRequest(input *ModifyDBInstanceSyncModeInput) (req *request.Request, output *ModifyDBInstanceSyncModeOutput) {
	op := &request.Operation{
		Name:       opModifyDBInstanceSyncMode,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyDBInstanceSyncModeInput{}
	}

	output = &ModifyDBInstanceSyncModeOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBInstanceSyncMode API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation ModifyDBInstanceSyncMode for usage and error information.
func (c *RDSMYSQLV2) ModifyDBInstanceSyncMode(input *ModifyDBInstanceSyncModeInput) (*ModifyDBInstanceSyncModeOutput, error) {
	req, out := c.ModifyDBInstanceSyncModeRequest(input)
	return out, req.Send()
}

// ModifyDBInstanceSyncModeWithContext is the same as ModifyDBInstanceSyncMode with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBInstanceSyncMode for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) ModifyDBInstanceSyncModeWithContext(ctx volcengine.Context, input *ModifyDBInstanceSyncModeInput, opts ...request.Option) (*ModifyDBInstanceSyncModeOutput, error) {
	req, out := c.ModifyDBInstanceSyncModeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyDBInstanceSyncModeInput struct {
	_ struct{} `type:"structure"`

	// InstanceId is a required field
	InstanceId *string `type:"string" required:"true"`

	SyncMode *string `type:"string" enum:"EnumOfSyncModeForModifyDBInstanceSyncModeInput"`
}

// String returns the string representation
func (s ModifyDBInstanceSyncModeInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBInstanceSyncModeInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyDBInstanceSyncModeInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyDBInstanceSyncModeInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyDBInstanceSyncModeInput) SetInstanceId(v string) *ModifyDBInstanceSyncModeInput {
	s.InstanceId = &v
	return s
}

// SetSyncMode sets the SyncMode field's value.
func (s *ModifyDBInstanceSyncModeInput) SetSyncMode(v string) *ModifyDBInstanceSyncModeInput {
	s.SyncMode = &v
	return s
}

type ModifyDBInstanceSyncModeOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyDBInstanceSyncModeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBInstanceSyncModeOutput) GoString() string {
	return s.String()
}

const (
	// EnumOfSyncModeForModifyDBInstanceSyncModeInputAsync is a EnumOfSyncModeForModifyDBInstanceSyncModeInput enum value
	EnumOfSyncModeForModifyDBInstanceSyncModeInputAsync = "Async"

	// EnumOfSyncModeForModifyDBInstanceSyncModeInputSemiSync is a EnumOfSyncModeForModifyDBInstanceSyncModeInput enum value
	EnumOfSyncModeForModifyDBInstanceSyncModeInputSemiSync = "SemiSync"

	// EnumOfSyncModeForModifyDBInstanceSyncModeInputSync is a EnumOfSyncModeForModifyDBInstanceSyncModeInput enum value
	EnumOfSyncModeForModifyDBInstanceSyncModeInputSync = "Sync"
)
