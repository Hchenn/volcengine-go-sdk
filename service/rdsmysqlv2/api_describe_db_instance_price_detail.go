// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDBInstancePriceDetailCommon = "DescribeDBInstancePriceDetail"

// DescribeDBInstancePriceDetailCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstancePriceDetailCommon operation. The "output" return
// value will be populated with the DescribeDBInstancePriceDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstancePriceDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstancePriceDetailCommon Send returns without error.
//
// See DescribeDBInstancePriceDetailCommon for more information on using the DescribeDBInstancePriceDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstancePriceDetailCommonRequest method.
//    req, resp := client.DescribeDBInstancePriceDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDBInstancePriceDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDBInstancePriceDetailCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstancePriceDetailCommon API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeDBInstancePriceDetailCommon for usage and error information.
func (c *RDSMYSQLV2) DescribeDBInstancePriceDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstancePriceDetailCommonRequest(input)
	return out, req.Send()
}

// DescribeDBInstancePriceDetailCommonWithContext is the same as DescribeDBInstancePriceDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstancePriceDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDBInstancePriceDetailCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstancePriceDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDBInstancePriceDetail = "DescribeDBInstancePriceDetail"

// DescribeDBInstancePriceDetailRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstancePriceDetail operation. The "output" return
// value will be populated with the DescribeDBInstancePriceDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstancePriceDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstancePriceDetailCommon Send returns without error.
//
// See DescribeDBInstancePriceDetail for more information on using the DescribeDBInstancePriceDetail
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstancePriceDetailRequest method.
//    req, resp := client.DescribeDBInstancePriceDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDBInstancePriceDetailRequest(input *DescribeDBInstancePriceDetailInput) (req *request.Request, output *DescribeDBInstancePriceDetailOutput) {
	op := &request.Operation{
		Name:       opDescribeDBInstancePriceDetail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDBInstancePriceDetailInput{}
	}

	output = &DescribeDBInstancePriceDetailOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstancePriceDetail API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeDBInstancePriceDetail for usage and error information.
func (c *RDSMYSQLV2) DescribeDBInstancePriceDetail(input *DescribeDBInstancePriceDetailInput) (*DescribeDBInstancePriceDetailOutput, error) {
	req, out := c.DescribeDBInstancePriceDetailRequest(input)
	return out, req.Send()
}

// DescribeDBInstancePriceDetailWithContext is the same as DescribeDBInstancePriceDetail with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstancePriceDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDBInstancePriceDetailWithContext(ctx volcengine.Context, input *DescribeDBInstancePriceDetailInput, opts ...request.Option) (*DescribeDBInstancePriceDetailOutput, error) {
	req, out := c.DescribeDBInstancePriceDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ChargeItemPriceForDescribeDBInstancePriceDetailOutput struct {
	_ struct{} `type:"structure"`

	ChargeItemCode *string `type:"string"`

	DiscountPrice *float64 `type:"double"`

	OriginalPrice *float64 `type:"double"`

	PayablePrice *float64 `type:"double"`

	Quantity *int64 `type:"int64"`

	UnitPrice *float64 `type:"double"`
}

// String returns the string representation
func (s ChargeItemPriceForDescribeDBInstancePriceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ChargeItemPriceForDescribeDBInstancePriceDetailOutput) GoString() string {
	return s.String()
}

// SetChargeItemCode sets the ChargeItemCode field's value.
func (s *ChargeItemPriceForDescribeDBInstancePriceDetailOutput) SetChargeItemCode(v string) *ChargeItemPriceForDescribeDBInstancePriceDetailOutput {
	s.ChargeItemCode = &v
	return s
}

// SetDiscountPrice sets the DiscountPrice field's value.
func (s *ChargeItemPriceForDescribeDBInstancePriceDetailOutput) SetDiscountPrice(v float64) *ChargeItemPriceForDescribeDBInstancePriceDetailOutput {
	s.DiscountPrice = &v
	return s
}

// SetOriginalPrice sets the OriginalPrice field's value.
func (s *ChargeItemPriceForDescribeDBInstancePriceDetailOutput) SetOriginalPrice(v float64) *ChargeItemPriceForDescribeDBInstancePriceDetailOutput {
	s.OriginalPrice = &v
	return s
}

// SetPayablePrice sets the PayablePrice field's value.
func (s *ChargeItemPriceForDescribeDBInstancePriceDetailOutput) SetPayablePrice(v float64) *ChargeItemPriceForDescribeDBInstancePriceDetailOutput {
	s.PayablePrice = &v
	return s
}

// SetQuantity sets the Quantity field's value.
func (s *ChargeItemPriceForDescribeDBInstancePriceDetailOutput) SetQuantity(v int64) *ChargeItemPriceForDescribeDBInstancePriceDetailOutput {
	s.Quantity = &v
	return s
}

// SetUnitPrice sets the UnitPrice field's value.
func (s *ChargeItemPriceForDescribeDBInstancePriceDetailOutput) SetUnitPrice(v float64) *ChargeItemPriceForDescribeDBInstancePriceDetailOutput {
	s.UnitPrice = &v
	return s
}

type DescribeDBInstancePriceDetailInput struct {
	_ struct{} `type:"structure"`

	ChargeType *string `type:"string" enum:"EnumOfChargeTypeForDescribeDBInstancePriceDetailInput"`

	InstanceId *string `type:"string"`

	NodeInfo []*NodeInfoForDescribeDBInstancePriceDetailInput `type:"list"`

	NodeNumber *string `type:"string"`

	NodeSpec *string `type:"string"`

	Number *int32 `type:"int32"`

	Period *int32 `type:"int32"`

	PeriodUnit *string `type:"string" enum:"EnumOfPeriodUnitForDescribeDBInstancePriceDetailInput"`

	ShardNumber *int32 `type:"int32"`

	StorageSpace *int32 `type:"int32"`

	StorageType *string `type:"string" enum:"EnumOfStorageTypeForDescribeDBInstancePriceDetailInput"`
}

// String returns the string representation
func (s DescribeDBInstancePriceDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstancePriceDetailInput) GoString() string {
	return s.String()
}

// SetChargeType sets the ChargeType field's value.
func (s *DescribeDBInstancePriceDetailInput) SetChargeType(v string) *DescribeDBInstancePriceDetailInput {
	s.ChargeType = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDBInstancePriceDetailInput) SetInstanceId(v string) *DescribeDBInstancePriceDetailInput {
	s.InstanceId = &v
	return s
}

// SetNodeInfo sets the NodeInfo field's value.
func (s *DescribeDBInstancePriceDetailInput) SetNodeInfo(v []*NodeInfoForDescribeDBInstancePriceDetailInput) *DescribeDBInstancePriceDetailInput {
	s.NodeInfo = v
	return s
}

// SetNodeNumber sets the NodeNumber field's value.
func (s *DescribeDBInstancePriceDetailInput) SetNodeNumber(v string) *DescribeDBInstancePriceDetailInput {
	s.NodeNumber = &v
	return s
}

// SetNodeSpec sets the NodeSpec field's value.
func (s *DescribeDBInstancePriceDetailInput) SetNodeSpec(v string) *DescribeDBInstancePriceDetailInput {
	s.NodeSpec = &v
	return s
}

// SetNumber sets the Number field's value.
func (s *DescribeDBInstancePriceDetailInput) SetNumber(v int32) *DescribeDBInstancePriceDetailInput {
	s.Number = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *DescribeDBInstancePriceDetailInput) SetPeriod(v int32) *DescribeDBInstancePriceDetailInput {
	s.Period = &v
	return s
}

// SetPeriodUnit sets the PeriodUnit field's value.
func (s *DescribeDBInstancePriceDetailInput) SetPeriodUnit(v string) *DescribeDBInstancePriceDetailInput {
	s.PeriodUnit = &v
	return s
}

// SetShardNumber sets the ShardNumber field's value.
func (s *DescribeDBInstancePriceDetailInput) SetShardNumber(v int32) *DescribeDBInstancePriceDetailInput {
	s.ShardNumber = &v
	return s
}

// SetStorageSpace sets the StorageSpace field's value.
func (s *DescribeDBInstancePriceDetailInput) SetStorageSpace(v int32) *DescribeDBInstancePriceDetailInput {
	s.StorageSpace = &v
	return s
}

// SetStorageType sets the StorageType field's value.
func (s *DescribeDBInstancePriceDetailInput) SetStorageType(v string) *DescribeDBInstancePriceDetailInput {
	s.StorageType = &v
	return s
}

type DescribeDBInstancePriceDetailOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	ChargeItemPrices []*ChargeItemPriceForDescribeDBInstancePriceDetailOutput `type:"list"`

	ChargeType *string `type:"string"`

	CouponAmount *float64 `type:"double"`

	Currency *string `type:"string"`

	DiscountPrice *float64 `type:"double"`

	InstanceId *string `type:"string"`

	OriginalPrice *float64 `type:"double"`

	PayablePrice *float64 `type:"double"`

	RefundAmount *float64 `type:"double"`
}

// String returns the string representation
func (s DescribeDBInstancePriceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstancePriceDetailOutput) GoString() string {
	return s.String()
}

// SetChargeItemPrices sets the ChargeItemPrices field's value.
func (s *DescribeDBInstancePriceDetailOutput) SetChargeItemPrices(v []*ChargeItemPriceForDescribeDBInstancePriceDetailOutput) *DescribeDBInstancePriceDetailOutput {
	s.ChargeItemPrices = v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *DescribeDBInstancePriceDetailOutput) SetChargeType(v string) *DescribeDBInstancePriceDetailOutput {
	s.ChargeType = &v
	return s
}

// SetCouponAmount sets the CouponAmount field's value.
func (s *DescribeDBInstancePriceDetailOutput) SetCouponAmount(v float64) *DescribeDBInstancePriceDetailOutput {
	s.CouponAmount = &v
	return s
}

// SetCurrency sets the Currency field's value.
func (s *DescribeDBInstancePriceDetailOutput) SetCurrency(v string) *DescribeDBInstancePriceDetailOutput {
	s.Currency = &v
	return s
}

// SetDiscountPrice sets the DiscountPrice field's value.
func (s *DescribeDBInstancePriceDetailOutput) SetDiscountPrice(v float64) *DescribeDBInstancePriceDetailOutput {
	s.DiscountPrice = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDBInstancePriceDetailOutput) SetInstanceId(v string) *DescribeDBInstancePriceDetailOutput {
	s.InstanceId = &v
	return s
}

// SetOriginalPrice sets the OriginalPrice field's value.
func (s *DescribeDBInstancePriceDetailOutput) SetOriginalPrice(v float64) *DescribeDBInstancePriceDetailOutput {
	s.OriginalPrice = &v
	return s
}

// SetPayablePrice sets the PayablePrice field's value.
func (s *DescribeDBInstancePriceDetailOutput) SetPayablePrice(v float64) *DescribeDBInstancePriceDetailOutput {
	s.PayablePrice = &v
	return s
}

// SetRefundAmount sets the RefundAmount field's value.
func (s *DescribeDBInstancePriceDetailOutput) SetRefundAmount(v float64) *DescribeDBInstancePriceDetailOutput {
	s.RefundAmount = &v
	return s
}

type NodeInfoForDescribeDBInstancePriceDetailInput struct {
	_ struct{} `type:"structure"`

	NodeId *string `type:"string"`

	NodeOperateType *string `type:"string" enum:"EnumOfNodeOperateTypeForDescribeDBInstancePriceDetailInput"`

	NodePool *string `type:"string"`

	NodeSpec *string `type:"string"`

	NodeType *string `type:"string" enum:"EnumOfNodeTypeForDescribeDBInstancePriceDetailInput"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s NodeInfoForDescribeDBInstancePriceDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NodeInfoForDescribeDBInstancePriceDetailInput) GoString() string {
	return s.String()
}

// SetNodeId sets the NodeId field's value.
func (s *NodeInfoForDescribeDBInstancePriceDetailInput) SetNodeId(v string) *NodeInfoForDescribeDBInstancePriceDetailInput {
	s.NodeId = &v
	return s
}

// SetNodeOperateType sets the NodeOperateType field's value.
func (s *NodeInfoForDescribeDBInstancePriceDetailInput) SetNodeOperateType(v string) *NodeInfoForDescribeDBInstancePriceDetailInput {
	s.NodeOperateType = &v
	return s
}

// SetNodePool sets the NodePool field's value.
func (s *NodeInfoForDescribeDBInstancePriceDetailInput) SetNodePool(v string) *NodeInfoForDescribeDBInstancePriceDetailInput {
	s.NodePool = &v
	return s
}

// SetNodeSpec sets the NodeSpec field's value.
func (s *NodeInfoForDescribeDBInstancePriceDetailInput) SetNodeSpec(v string) *NodeInfoForDescribeDBInstancePriceDetailInput {
	s.NodeSpec = &v
	return s
}

// SetNodeType sets the NodeType field's value.
func (s *NodeInfoForDescribeDBInstancePriceDetailInput) SetNodeType(v string) *NodeInfoForDescribeDBInstancePriceDetailInput {
	s.NodeType = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *NodeInfoForDescribeDBInstancePriceDetailInput) SetZoneId(v string) *NodeInfoForDescribeDBInstancePriceDetailInput {
	s.ZoneId = &v
	return s
}

const (
	// EnumOfChargeTypeForDescribeDBInstancePriceDetailInputNotEnabled is a EnumOfChargeTypeForDescribeDBInstancePriceDetailInput enum value
	EnumOfChargeTypeForDescribeDBInstancePriceDetailInputNotEnabled = "NotEnabled"

	// EnumOfChargeTypeForDescribeDBInstancePriceDetailInputPostPaid is a EnumOfChargeTypeForDescribeDBInstancePriceDetailInput enum value
	EnumOfChargeTypeForDescribeDBInstancePriceDetailInputPostPaid = "PostPaid"

	// EnumOfChargeTypeForDescribeDBInstancePriceDetailInputPrePaid is a EnumOfChargeTypeForDescribeDBInstancePriceDetailInput enum value
	EnumOfChargeTypeForDescribeDBInstancePriceDetailInputPrePaid = "PrePaid"
)

const (
	// EnumOfNodeOperateTypeForDescribeDBInstancePriceDetailInputCreate is a EnumOfNodeOperateTypeForDescribeDBInstancePriceDetailInput enum value
	EnumOfNodeOperateTypeForDescribeDBInstancePriceDetailInputCreate = "Create"

	// EnumOfNodeOperateTypeForDescribeDBInstancePriceDetailInputDelete is a EnumOfNodeOperateTypeForDescribeDBInstancePriceDetailInput enum value
	EnumOfNodeOperateTypeForDescribeDBInstancePriceDetailInputDelete = "Delete"

	// EnumOfNodeOperateTypeForDescribeDBInstancePriceDetailInputModify is a EnumOfNodeOperateTypeForDescribeDBInstancePriceDetailInput enum value
	EnumOfNodeOperateTypeForDescribeDBInstancePriceDetailInputModify = "Modify"
)

const (
	// EnumOfNodeTypeForDescribeDBInstancePriceDetailInputPrimary is a EnumOfNodeTypeForDescribeDBInstancePriceDetailInput enum value
	EnumOfNodeTypeForDescribeDBInstancePriceDetailInputPrimary = "Primary"

	// EnumOfNodeTypeForDescribeDBInstancePriceDetailInputReadOnly is a EnumOfNodeTypeForDescribeDBInstancePriceDetailInput enum value
	EnumOfNodeTypeForDescribeDBInstancePriceDetailInputReadOnly = "ReadOnly"

	// EnumOfNodeTypeForDescribeDBInstancePriceDetailInputSecondary is a EnumOfNodeTypeForDescribeDBInstancePriceDetailInput enum value
	EnumOfNodeTypeForDescribeDBInstancePriceDetailInputSecondary = "Secondary"
)

const (
	// EnumOfPeriodUnitForDescribeDBInstancePriceDetailInputMonth is a EnumOfPeriodUnitForDescribeDBInstancePriceDetailInput enum value
	EnumOfPeriodUnitForDescribeDBInstancePriceDetailInputMonth = "Month"

	// EnumOfPeriodUnitForDescribeDBInstancePriceDetailInputYear is a EnumOfPeriodUnitForDescribeDBInstancePriceDetailInput enum value
	EnumOfPeriodUnitForDescribeDBInstancePriceDetailInputYear = "Year"
)

const (
	// EnumOfStorageTypeForDescribeDBInstancePriceDetailInputCloudStorage is a EnumOfStorageTypeForDescribeDBInstancePriceDetailInput enum value
	EnumOfStorageTypeForDescribeDBInstancePriceDetailInputCloudStorage = "CloudStorage"

	// EnumOfStorageTypeForDescribeDBInstancePriceDetailInputEssdflexPl is a EnumOfStorageTypeForDescribeDBInstancePriceDetailInput enum value
	EnumOfStorageTypeForDescribeDBInstancePriceDetailInputEssdflexPl = "ESSDFlexPL"

	// EnumOfStorageTypeForDescribeDBInstancePriceDetailInputLocalSsd is a EnumOfStorageTypeForDescribeDBInstancePriceDetailInput enum value
	EnumOfStorageTypeForDescribeDBInstancePriceDetailInputLocalSsd = "LocalSSD"
)
