// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyProxySQLConcurrencyControlConfigCommon = "ModifyProxySQLConcurrencyControlConfig"

// ModifyProxySQLConcurrencyControlConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyProxySQLConcurrencyControlConfigCommon operation. The "output" return
// value will be populated with the ModifyProxySQLConcurrencyControlConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyProxySQLConcurrencyControlConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyProxySQLConcurrencyControlConfigCommon Send returns without error.
//
// See ModifyProxySQLConcurrencyControlConfigCommon for more information on using the ModifyProxySQLConcurrencyControlConfigCommon
// API call, and error handling.
//
//	// Example sending a request using the ModifyProxySQLConcurrencyControlConfigCommonRequest method.
//	req, resp := client.ModifyProxySQLConcurrencyControlConfigCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *RDSMYSQLV2) ModifyProxySQLConcurrencyControlConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyProxySQLConcurrencyControlConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyProxySQLConcurrencyControlConfigCommon API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation ModifyProxySQLConcurrencyControlConfigCommon for usage and error information.
func (c *RDSMYSQLV2) ModifyProxySQLConcurrencyControlConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyProxySQLConcurrencyControlConfigCommonRequest(input)
	return out, req.Send()
}

// ModifyProxySQLConcurrencyControlConfigCommonWithContext is the same as ModifyProxySQLConcurrencyControlConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyProxySQLConcurrencyControlConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) ModifyProxySQLConcurrencyControlConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyProxySQLConcurrencyControlConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyProxySQLConcurrencyControlConfig = "ModifyProxySQLConcurrencyControlConfig"

// ModifyProxySQLConcurrencyControlConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyProxySQLConcurrencyControlConfig operation. The "output" return
// value will be populated with the ModifyProxySQLConcurrencyControlConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyProxySQLConcurrencyControlConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyProxySQLConcurrencyControlConfigCommon Send returns without error.
//
// See ModifyProxySQLConcurrencyControlConfig for more information on using the ModifyProxySQLConcurrencyControlConfig
// API call, and error handling.
//
//	// Example sending a request using the ModifyProxySQLConcurrencyControlConfigRequest method.
//	req, resp := client.ModifyProxySQLConcurrencyControlConfigRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *RDSMYSQLV2) ModifyProxySQLConcurrencyControlConfigRequest(input *ModifyProxySQLConcurrencyControlConfigInput) (req *request.Request, output *ModifyProxySQLConcurrencyControlConfigOutput) {
	op := &request.Operation{
		Name:       opModifyProxySQLConcurrencyControlConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyProxySQLConcurrencyControlConfigInput{}
	}

	output = &ModifyProxySQLConcurrencyControlConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyProxySQLConcurrencyControlConfig API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation ModifyProxySQLConcurrencyControlConfig for usage and error information.
func (c *RDSMYSQLV2) ModifyProxySQLConcurrencyControlConfig(input *ModifyProxySQLConcurrencyControlConfigInput) (*ModifyProxySQLConcurrencyControlConfigOutput, error) {
	req, out := c.ModifyProxySQLConcurrencyControlConfigRequest(input)
	return out, req.Send()
}

// ModifyProxySQLConcurrencyControlConfigWithContext is the same as ModifyProxySQLConcurrencyControlConfig with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyProxySQLConcurrencyControlConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) ModifyProxySQLConcurrencyControlConfigWithContext(ctx volcengine.Context, input *ModifyProxySQLConcurrencyControlConfigInput, opts ...request.Option) (*ModifyProxySQLConcurrencyControlConfigOutput, error) {
	req, out := c.ModifyProxySQLConcurrencyControlConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyProxySQLConcurrencyControlConfigInput struct {
	_ struct{} `type:"structure"`

	EnableSQLConcurrencyControl *bool `type:"boolean"`

	InstanceId *string `type:"string"`
}

// String returns the string representation
func (s ModifyProxySQLConcurrencyControlConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyProxySQLConcurrencyControlConfigInput) GoString() string {
	return s.String()
}

// SetEnableSQLConcurrencyControl sets the EnableSQLConcurrencyControl field's value.
func (s *ModifyProxySQLConcurrencyControlConfigInput) SetEnableSQLConcurrencyControl(v bool) *ModifyProxySQLConcurrencyControlConfigInput {
	s.EnableSQLConcurrencyControl = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyProxySQLConcurrencyControlConfigInput) SetInstanceId(v string) *ModifyProxySQLConcurrencyControlConfigInput {
	s.InstanceId = &v
	return s
}

type ModifyProxySQLConcurrencyControlConfigOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyProxySQLConcurrencyControlConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyProxySQLConcurrencyControlConfigOutput) GoString() string {
	return s.String()
}
