// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyDBAccountPrivilegeCommon = "ModifyDBAccountPrivilege"

// ModifyDBAccountPrivilegeCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyDBAccountPrivilegeCommon operation. The "output" return
// value will be populated with the ModifyDBAccountPrivilegeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBAccountPrivilegeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBAccountPrivilegeCommon Send returns without error.
//
// See ModifyDBAccountPrivilegeCommon for more information on using the ModifyDBAccountPrivilegeCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyDBAccountPrivilegeCommonRequest method.
//    req, resp := client.ModifyDBAccountPrivilegeCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) ModifyDBAccountPrivilegeCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyDBAccountPrivilegeCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBAccountPrivilegeCommon API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation ModifyDBAccountPrivilegeCommon for usage and error information.
func (c *RDSMYSQLV2) ModifyDBAccountPrivilegeCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyDBAccountPrivilegeCommonRequest(input)
	return out, req.Send()
}

// ModifyDBAccountPrivilegeCommonWithContext is the same as ModifyDBAccountPrivilegeCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBAccountPrivilegeCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) ModifyDBAccountPrivilegeCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyDBAccountPrivilegeCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyDBAccountPrivilege = "ModifyDBAccountPrivilege"

// ModifyDBAccountPrivilegeRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyDBAccountPrivilege operation. The "output" return
// value will be populated with the ModifyDBAccountPrivilegeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBAccountPrivilegeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBAccountPrivilegeCommon Send returns without error.
//
// See ModifyDBAccountPrivilege for more information on using the ModifyDBAccountPrivilege
// API call, and error handling.
//
//    // Example sending a request using the ModifyDBAccountPrivilegeRequest method.
//    req, resp := client.ModifyDBAccountPrivilegeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) ModifyDBAccountPrivilegeRequest(input *ModifyDBAccountPrivilegeInput) (req *request.Request, output *ModifyDBAccountPrivilegeOutput) {
	op := &request.Operation{
		Name:       opModifyDBAccountPrivilege,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyDBAccountPrivilegeInput{}
	}

	output = &ModifyDBAccountPrivilegeOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBAccountPrivilege API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation ModifyDBAccountPrivilege for usage and error information.
func (c *RDSMYSQLV2) ModifyDBAccountPrivilege(input *ModifyDBAccountPrivilegeInput) (*ModifyDBAccountPrivilegeOutput, error) {
	req, out := c.ModifyDBAccountPrivilegeRequest(input)
	return out, req.Send()
}

// ModifyDBAccountPrivilegeWithContext is the same as ModifyDBAccountPrivilege with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBAccountPrivilege for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) ModifyDBAccountPrivilegeWithContext(ctx volcengine.Context, input *ModifyDBAccountPrivilegeInput, opts ...request.Option) (*ModifyDBAccountPrivilegeOutput, error) {
	req, out := c.ModifyDBAccountPrivilegeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyAccountPrivilegesInfoForModifyDBAccountPrivilegeInput struct {
	_ struct{} `type:"structure"`

	ActionType *string `type:"string" enum:"EnumOfActionTypeForModifyDBAccountPrivilegeInput"`

	DBName *string `type:"string"`

	Privilege *string `type:"string" enum:"EnumOfPrivilegeForModifyDBAccountPrivilegeInput"`

	PrivilegeCustom *string `type:"string"`
}

// String returns the string representation
func (s ModifyAccountPrivilegesInfoForModifyDBAccountPrivilegeInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyAccountPrivilegesInfoForModifyDBAccountPrivilegeInput) GoString() string {
	return s.String()
}

// SetActionType sets the ActionType field's value.
func (s *ModifyAccountPrivilegesInfoForModifyDBAccountPrivilegeInput) SetActionType(v string) *ModifyAccountPrivilegesInfoForModifyDBAccountPrivilegeInput {
	s.ActionType = &v
	return s
}

// SetDBName sets the DBName field's value.
func (s *ModifyAccountPrivilegesInfoForModifyDBAccountPrivilegeInput) SetDBName(v string) *ModifyAccountPrivilegesInfoForModifyDBAccountPrivilegeInput {
	s.DBName = &v
	return s
}

// SetPrivilege sets the Privilege field's value.
func (s *ModifyAccountPrivilegesInfoForModifyDBAccountPrivilegeInput) SetPrivilege(v string) *ModifyAccountPrivilegesInfoForModifyDBAccountPrivilegeInput {
	s.Privilege = &v
	return s
}

// SetPrivilegeCustom sets the PrivilegeCustom field's value.
func (s *ModifyAccountPrivilegesInfoForModifyDBAccountPrivilegeInput) SetPrivilegeCustom(v string) *ModifyAccountPrivilegesInfoForModifyDBAccountPrivilegeInput {
	s.PrivilegeCustom = &v
	return s
}

type ModifyDBAccountPrivilegeInput struct {
	_ struct{} `type:"structure"`

	// AccountName is a required field
	AccountName *string `min:"2" max:"16" type:"string" required:"true"`

	// InstanceId is a required field
	InstanceId *string `type:"string" required:"true"`

	ModifyAccountPrivilegesInfo []*ModifyAccountPrivilegesInfoForModifyDBAccountPrivilegeInput `type:"list"`
}

// String returns the string representation
func (s ModifyDBAccountPrivilegeInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBAccountPrivilegeInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyDBAccountPrivilegeInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyDBAccountPrivilegeInput"}
	if s.AccountName == nil {
		invalidParams.Add(request.NewErrParamRequired("AccountName"))
	}
	if s.AccountName != nil && len(*s.AccountName) < 2 {
		invalidParams.Add(request.NewErrParamMinLen("AccountName", 2))
	}
	if s.AccountName != nil && len(*s.AccountName) > 16 {
		invalidParams.Add(request.NewErrParamMaxLen("AccountName", 16, *s.AccountName))
	}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAccountName sets the AccountName field's value.
func (s *ModifyDBAccountPrivilegeInput) SetAccountName(v string) *ModifyDBAccountPrivilegeInput {
	s.AccountName = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyDBAccountPrivilegeInput) SetInstanceId(v string) *ModifyDBAccountPrivilegeInput {
	s.InstanceId = &v
	return s
}

// SetModifyAccountPrivilegesInfo sets the ModifyAccountPrivilegesInfo field's value.
func (s *ModifyDBAccountPrivilegeInput) SetModifyAccountPrivilegesInfo(v []*ModifyAccountPrivilegesInfoForModifyDBAccountPrivilegeInput) *ModifyDBAccountPrivilegeInput {
	s.ModifyAccountPrivilegesInfo = v
	return s
}

type ModifyDBAccountPrivilegeOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyDBAccountPrivilegeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBAccountPrivilegeOutput) GoString() string {
	return s.String()
}

const (
	// EnumOfActionTypeForModifyDBAccountPrivilegeInputGrant is a EnumOfActionTypeForModifyDBAccountPrivilegeInput enum value
	EnumOfActionTypeForModifyDBAccountPrivilegeInputGrant = "Grant"

	// EnumOfActionTypeForModifyDBAccountPrivilegeInputRevoke is a EnumOfActionTypeForModifyDBAccountPrivilegeInput enum value
	EnumOfActionTypeForModifyDBAccountPrivilegeInputRevoke = "Revoke"
)

const (
	// EnumOfPrivilegeForModifyDBAccountPrivilegeInputCustom is a EnumOfPrivilegeForModifyDBAccountPrivilegeInput enum value
	EnumOfPrivilegeForModifyDBAccountPrivilegeInputCustom = "Custom"

	// EnumOfPrivilegeForModifyDBAccountPrivilegeInputDdlonly is a EnumOfPrivilegeForModifyDBAccountPrivilegeInput enum value
	EnumOfPrivilegeForModifyDBAccountPrivilegeInputDdlonly = "DDLOnly"

	// EnumOfPrivilegeForModifyDBAccountPrivilegeInputDmlonly is a EnumOfPrivilegeForModifyDBAccountPrivilegeInput enum value
	EnumOfPrivilegeForModifyDBAccountPrivilegeInputDmlonly = "DMLOnly"

	// EnumOfPrivilegeForModifyDBAccountPrivilegeInputNone is a EnumOfPrivilegeForModifyDBAccountPrivilegeInput enum value
	EnumOfPrivilegeForModifyDBAccountPrivilegeInputNone = "None"

	// EnumOfPrivilegeForModifyDBAccountPrivilegeInputReadOnly is a EnumOfPrivilegeForModifyDBAccountPrivilegeInput enum value
	EnumOfPrivilegeForModifyDBAccountPrivilegeInputReadOnly = "ReadOnly"

	// EnumOfPrivilegeForModifyDBAccountPrivilegeInputReadWrite is a EnumOfPrivilegeForModifyDBAccountPrivilegeInput enum value
	EnumOfPrivilegeForModifyDBAccountPrivilegeInputReadWrite = "ReadWrite"
)
