// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package cloudtrail20180101iface provides an interface to enable mocking the CLOUD_TRAIL20180101 service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package cloudtrail20180101

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
)

// CLOUDTRAIL20180101API provides an interface to enable mocking the
// cloudtrail20180101.CLOUDTRAIL20180101 service client's API operation,
//
//    // volcengine sdk func uses an SDK service client to make a request to
//    // CLOUD_TRAIL20180101.
//    func myFunc(svc CLOUDTRAIL20180101API) bool {
//        // Make svc.CreateTrail request
//    }
//
//    func main() {
//        sess := session.New()
//        svc := cloudtrail20180101.New(sess)
//
//        myFunc(svc)
//    }
//
type CLOUDTRAIL20180101API interface {
	CreateTrailCommon(*map[string]interface{}) (*map[string]interface{}, error)
	CreateTrailCommonWithContext(volcengine.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	CreateTrailCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	CreateTrail(*CreateTrailInput) (*CreateTrailOutput, error)
	CreateTrailWithContext(volcengine.Context, *CreateTrailInput, ...request.Option) (*CreateTrailOutput, error)
	CreateTrailRequest(*CreateTrailInput) (*request.Request, *CreateTrailOutput)

	DeleteTrailCommon(*map[string]interface{}) (*map[string]interface{}, error)
	DeleteTrailCommonWithContext(volcengine.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DeleteTrailCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DeleteTrail(*DeleteTrailInput) (*DeleteTrailOutput, error)
	DeleteTrailWithContext(volcengine.Context, *DeleteTrailInput, ...request.Option) (*DeleteTrailOutput, error)
	DeleteTrailRequest(*DeleteTrailInput) (*request.Request, *DeleteTrailOutput)

	DescribeTrailsCommon(*map[string]interface{}) (*map[string]interface{}, error)
	DescribeTrailsCommonWithContext(volcengine.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DescribeTrailsCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DescribeTrails(*DescribeTrailsInput) (*DescribeTrailsOutput, error)
	DescribeTrailsWithContext(volcengine.Context, *DescribeTrailsInput, ...request.Option) (*DescribeTrailsOutput, error)
	DescribeTrailsRequest(*DescribeTrailsInput) (*request.Request, *DescribeTrailsOutput)

	StartLoggingCommon(*map[string]interface{}) (*map[string]interface{}, error)
	StartLoggingCommonWithContext(volcengine.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	StartLoggingCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	StartLogging(*StartLoggingInput) (*StartLoggingOutput, error)
	StartLoggingWithContext(volcengine.Context, *StartLoggingInput, ...request.Option) (*StartLoggingOutput, error)
	StartLoggingRequest(*StartLoggingInput) (*request.Request, *StartLoggingOutput)

	StopLoggingCommon(*map[string]interface{}) (*map[string]interface{}, error)
	StopLoggingCommonWithContext(volcengine.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	StopLoggingCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	StopLogging(*StopLoggingInput) (*StopLoggingOutput, error)
	StopLoggingWithContext(volcengine.Context, *StopLoggingInput, ...request.Option) (*StopLoggingOutput, error)
	StopLoggingRequest(*StopLoggingInput) (*request.Request, *StopLoggingOutput)

	UpdateTrailCommon(*map[string]interface{}) (*map[string]interface{}, error)
	UpdateTrailCommonWithContext(volcengine.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	UpdateTrailCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	UpdateTrail(*UpdateTrailInput) (*UpdateTrailOutput, error)
	UpdateTrailWithContext(volcengine.Context, *UpdateTrailInput, ...request.Option) (*UpdateTrailOutput, error)
	UpdateTrailRequest(*UpdateTrailInput) (*request.Request, *UpdateTrailOutput)
}

var _ CLOUDTRAIL20180101API = (*CLOUDTRAIL20180101)(nil)
