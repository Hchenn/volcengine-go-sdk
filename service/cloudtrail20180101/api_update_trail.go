// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudtrail20180101

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateTrailCommon = "UpdateTrail"

// UpdateTrailCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateTrailCommon operation. The "output" return
// value will be populated with the UpdateTrailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateTrailCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateTrailCommon Send returns without error.
//
// See UpdateTrailCommon for more information on using the UpdateTrailCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateTrailCommonRequest method.
//    req, resp := client.UpdateTrailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDTRAIL20180101) UpdateTrailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateTrailCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// UpdateTrailCommon API operation for CLOUD_TRAIL20180101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUD_TRAIL20180101's
// API operation UpdateTrailCommon for usage and error information.
func (c *CLOUDTRAIL20180101) UpdateTrailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateTrailCommonRequest(input)
	return out, req.Send()
}

// UpdateTrailCommonWithContext is the same as UpdateTrailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateTrailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDTRAIL20180101) UpdateTrailCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateTrailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateTrail = "UpdateTrail"

// UpdateTrailRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateTrail operation. The "output" return
// value will be populated with the UpdateTrailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateTrailCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateTrailCommon Send returns without error.
//
// See UpdateTrail for more information on using the UpdateTrail
// API call, and error handling.
//
//    // Example sending a request using the UpdateTrailRequest method.
//    req, resp := client.UpdateTrailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDTRAIL20180101) UpdateTrailRequest(input *UpdateTrailInput) (req *request.Request, output *UpdateTrailOutput) {
	op := &request.Operation{
		Name:       opUpdateTrail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateTrailInput{}
	}

	output = &UpdateTrailOutput{}
	req = c.newRequest(op, input, output)

	return
}

// UpdateTrail API operation for CLOUD_TRAIL20180101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUD_TRAIL20180101's
// API operation UpdateTrail for usage and error information.
func (c *CLOUDTRAIL20180101) UpdateTrail(input *UpdateTrailInput) (*UpdateTrailOutput, error) {
	req, out := c.UpdateTrailRequest(input)
	return out, req.Send()
}

// UpdateTrailWithContext is the same as UpdateTrail with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateTrail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDTRAIL20180101) UpdateTrailWithContext(ctx volcengine.Context, input *UpdateTrailInput, opts ...request.Option) (*UpdateTrailOutput, error) {
	req, out := c.UpdateTrailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type UpdateTrailInput struct {
	_ struct{} `type:"structure"`

	EventRW *string `type:"string"`

	EventSources []*string `type:"list"`

	TlsProjectName *string `type:"string"`

	TlsProjectRegion *string `type:"string"`

	TlsProjectTopicProject *string `type:"string"`

	TlsTopicName *string `type:"string"`

	TosBucketName *string `type:"string"`

	TosBucketProject *string `type:"string"`

	TosBucketRegion *string `type:"string"`

	TosKeyPrefix *string `type:"string"`

	TrailName *string `type:"string"`

	TrailType *int32 `type:"int32"`
}

// String returns the string representation
func (s UpdateTrailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateTrailInput) GoString() string {
	return s.String()
}

// SetEventRW sets the EventRW field's value.
func (s *UpdateTrailInput) SetEventRW(v string) *UpdateTrailInput {
	s.EventRW = &v
	return s
}

// SetEventSources sets the EventSources field's value.
func (s *UpdateTrailInput) SetEventSources(v []*string) *UpdateTrailInput {
	s.EventSources = v
	return s
}

// SetTlsProjectName sets the TlsProjectName field's value.
func (s *UpdateTrailInput) SetTlsProjectName(v string) *UpdateTrailInput {
	s.TlsProjectName = &v
	return s
}

// SetTlsProjectRegion sets the TlsProjectRegion field's value.
func (s *UpdateTrailInput) SetTlsProjectRegion(v string) *UpdateTrailInput {
	s.TlsProjectRegion = &v
	return s
}

// SetTlsProjectTopicProject sets the TlsProjectTopicProject field's value.
func (s *UpdateTrailInput) SetTlsProjectTopicProject(v string) *UpdateTrailInput {
	s.TlsProjectTopicProject = &v
	return s
}

// SetTlsTopicName sets the TlsTopicName field's value.
func (s *UpdateTrailInput) SetTlsTopicName(v string) *UpdateTrailInput {
	s.TlsTopicName = &v
	return s
}

// SetTosBucketName sets the TosBucketName field's value.
func (s *UpdateTrailInput) SetTosBucketName(v string) *UpdateTrailInput {
	s.TosBucketName = &v
	return s
}

// SetTosBucketProject sets the TosBucketProject field's value.
func (s *UpdateTrailInput) SetTosBucketProject(v string) *UpdateTrailInput {
	s.TosBucketProject = &v
	return s
}

// SetTosBucketRegion sets the TosBucketRegion field's value.
func (s *UpdateTrailInput) SetTosBucketRegion(v string) *UpdateTrailInput {
	s.TosBucketRegion = &v
	return s
}

// SetTosKeyPrefix sets the TosKeyPrefix field's value.
func (s *UpdateTrailInput) SetTosKeyPrefix(v string) *UpdateTrailInput {
	s.TosKeyPrefix = &v
	return s
}

// SetTrailName sets the TrailName field's value.
func (s *UpdateTrailInput) SetTrailName(v string) *UpdateTrailInput {
	s.TrailName = &v
	return s
}

// SetTrailType sets the TrailType field's value.
func (s *UpdateTrailInput) SetTrailType(v int32) *UpdateTrailInput {
	s.TrailType = &v
	return s
}

type UpdateTrailOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	EventRW *string `type:"string"`

	EventSources []*string `type:"list"`

	TlsProjectName *string `type:"string"`

	TlsProjectRegion *string `type:"string"`

	TlsTopicName *string `type:"string"`

	TosBucketName *string `type:"string"`

	TosBucketRegion *string `type:"string"`

	TosKeyPrefix *string `type:"string"`

	TrailName *string `type:"string"`

	TrailType *int32 `type:"int32"`
}

// String returns the string representation
func (s UpdateTrailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateTrailOutput) GoString() string {
	return s.String()
}

// SetEventRW sets the EventRW field's value.
func (s *UpdateTrailOutput) SetEventRW(v string) *UpdateTrailOutput {
	s.EventRW = &v
	return s
}

// SetEventSources sets the EventSources field's value.
func (s *UpdateTrailOutput) SetEventSources(v []*string) *UpdateTrailOutput {
	s.EventSources = v
	return s
}

// SetTlsProjectName sets the TlsProjectName field's value.
func (s *UpdateTrailOutput) SetTlsProjectName(v string) *UpdateTrailOutput {
	s.TlsProjectName = &v
	return s
}

// SetTlsProjectRegion sets the TlsProjectRegion field's value.
func (s *UpdateTrailOutput) SetTlsProjectRegion(v string) *UpdateTrailOutput {
	s.TlsProjectRegion = &v
	return s
}

// SetTlsTopicName sets the TlsTopicName field's value.
func (s *UpdateTrailOutput) SetTlsTopicName(v string) *UpdateTrailOutput {
	s.TlsTopicName = &v
	return s
}

// SetTosBucketName sets the TosBucketName field's value.
func (s *UpdateTrailOutput) SetTosBucketName(v string) *UpdateTrailOutput {
	s.TosBucketName = &v
	return s
}

// SetTosBucketRegion sets the TosBucketRegion field's value.
func (s *UpdateTrailOutput) SetTosBucketRegion(v string) *UpdateTrailOutput {
	s.TosBucketRegion = &v
	return s
}

// SetTosKeyPrefix sets the TosKeyPrefix field's value.
func (s *UpdateTrailOutput) SetTosKeyPrefix(v string) *UpdateTrailOutput {
	s.TosKeyPrefix = &v
	return s
}

// SetTrailName sets the TrailName field's value.
func (s *UpdateTrailOutput) SetTrailName(v string) *UpdateTrailOutput {
	s.TrailName = &v
	return s
}

// SetTrailType sets the TrailType field's value.
func (s *UpdateTrailOutput) SetTrailType(v int32) *UpdateTrailOutput {
	s.TrailType = &v
	return s
}
