// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudtrail20180101

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeTrailsCommon = "DescribeTrails"

// DescribeTrailsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeTrailsCommon operation. The "output" return
// value will be populated with the DescribeTrailsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTrailsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTrailsCommon Send returns without error.
//
// See DescribeTrailsCommon for more information on using the DescribeTrailsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeTrailsCommonRequest method.
//    req, resp := client.DescribeTrailsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDTRAIL20180101) DescribeTrailsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeTrailsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeTrailsCommon API operation for CLOUD_TRAIL20180101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUD_TRAIL20180101's
// API operation DescribeTrailsCommon for usage and error information.
func (c *CLOUDTRAIL20180101) DescribeTrailsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeTrailsCommonRequest(input)
	return out, req.Send()
}

// DescribeTrailsCommonWithContext is the same as DescribeTrailsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTrailsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDTRAIL20180101) DescribeTrailsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeTrailsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeTrails = "DescribeTrails"

// DescribeTrailsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeTrails operation. The "output" return
// value will be populated with the DescribeTrailsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTrailsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTrailsCommon Send returns without error.
//
// See DescribeTrails for more information on using the DescribeTrails
// API call, and error handling.
//
//    // Example sending a request using the DescribeTrailsRequest method.
//    req, resp := client.DescribeTrailsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDTRAIL20180101) DescribeTrailsRequest(input *DescribeTrailsInput) (req *request.Request, output *DescribeTrailsOutput) {
	op := &request.Operation{
		Name:       opDescribeTrails,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeTrailsInput{}
	}

	output = &DescribeTrailsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeTrails API operation for CLOUD_TRAIL20180101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUD_TRAIL20180101's
// API operation DescribeTrails for usage and error information.
func (c *CLOUDTRAIL20180101) DescribeTrails(input *DescribeTrailsInput) (*DescribeTrailsOutput, error) {
	req, out := c.DescribeTrailsRequest(input)
	return out, req.Send()
}

// DescribeTrailsWithContext is the same as DescribeTrails with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTrails for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDTRAIL20180101) DescribeTrailsWithContext(ctx volcengine.Context, input *DescribeTrailsInput, opts ...request.Option) (*DescribeTrailsOutput, error) {
	req, out := c.DescribeTrailsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeTrailsInput struct {
	_ struct{} `type:"structure"`

	IncludeOrganizationTrail *int32 `type:"int32"`

	TrailNames []*string `type:"list"`
}

// String returns the string representation
func (s DescribeTrailsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTrailsInput) GoString() string {
	return s.String()
}

// SetIncludeOrganizationTrail sets the IncludeOrganizationTrail field's value.
func (s *DescribeTrailsInput) SetIncludeOrganizationTrail(v int32) *DescribeTrailsInput {
	s.IncludeOrganizationTrail = &v
	return s
}

// SetTrailNames sets the TrailNames field's value.
func (s *DescribeTrailsInput) SetTrailNames(v []*string) *DescribeTrailsInput {
	s.TrailNames = v
	return s
}

type DescribeTrailsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Trails []*TrailForDescribeTrailsOutput `type:"list"`
}

// String returns the string representation
func (s DescribeTrailsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTrailsOutput) GoString() string {
	return s.String()
}

// SetTrails sets the Trails field's value.
func (s *DescribeTrailsOutput) SetTrails(v []*TrailForDescribeTrailsOutput) *DescribeTrailsOutput {
	s.Trails = v
	return s
}

type TrailForDescribeTrailsOutput struct {
	_ struct{} `type:"structure"`

	CreatedTime *string `type:"string"`

	CreatorID *int64 `type:"int64"`

	EventRW *string `type:"string"`

	EventSources []*string `type:"list"`

	LatestDeliveryError *string `type:"string"`

	LatestDeliveryTime *string `type:"string"`

	LoggingStatus *string `type:"string"`

	OrganizationID *int64 `type:"int64"`

	StartLoggingTime *string `type:"string"`

	StopLoggingTime *string `type:"string"`

	TlsProjectName *string `type:"string"`

	TlsProjectRegion *string `type:"string"`

	TlsTopicName *string `type:"string"`

	TosBucketName *string `type:"string"`

	TosBucketRegion *string `type:"string"`

	TosKeyPrefix *string `type:"string"`

	TrailName *string `type:"string"`

	TrailType *int32 `type:"int32"`

	UpdatedTime *string `type:"string"`
}

// String returns the string representation
func (s TrailForDescribeTrailsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TrailForDescribeTrailsOutput) GoString() string {
	return s.String()
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *TrailForDescribeTrailsOutput) SetCreatedTime(v string) *TrailForDescribeTrailsOutput {
	s.CreatedTime = &v
	return s
}

// SetCreatorID sets the CreatorID field's value.
func (s *TrailForDescribeTrailsOutput) SetCreatorID(v int64) *TrailForDescribeTrailsOutput {
	s.CreatorID = &v
	return s
}

// SetEventRW sets the EventRW field's value.
func (s *TrailForDescribeTrailsOutput) SetEventRW(v string) *TrailForDescribeTrailsOutput {
	s.EventRW = &v
	return s
}

// SetEventSources sets the EventSources field's value.
func (s *TrailForDescribeTrailsOutput) SetEventSources(v []*string) *TrailForDescribeTrailsOutput {
	s.EventSources = v
	return s
}

// SetLatestDeliveryError sets the LatestDeliveryError field's value.
func (s *TrailForDescribeTrailsOutput) SetLatestDeliveryError(v string) *TrailForDescribeTrailsOutput {
	s.LatestDeliveryError = &v
	return s
}

// SetLatestDeliveryTime sets the LatestDeliveryTime field's value.
func (s *TrailForDescribeTrailsOutput) SetLatestDeliveryTime(v string) *TrailForDescribeTrailsOutput {
	s.LatestDeliveryTime = &v
	return s
}

// SetLoggingStatus sets the LoggingStatus field's value.
func (s *TrailForDescribeTrailsOutput) SetLoggingStatus(v string) *TrailForDescribeTrailsOutput {
	s.LoggingStatus = &v
	return s
}

// SetOrganizationID sets the OrganizationID field's value.
func (s *TrailForDescribeTrailsOutput) SetOrganizationID(v int64) *TrailForDescribeTrailsOutput {
	s.OrganizationID = &v
	return s
}

// SetStartLoggingTime sets the StartLoggingTime field's value.
func (s *TrailForDescribeTrailsOutput) SetStartLoggingTime(v string) *TrailForDescribeTrailsOutput {
	s.StartLoggingTime = &v
	return s
}

// SetStopLoggingTime sets the StopLoggingTime field's value.
func (s *TrailForDescribeTrailsOutput) SetStopLoggingTime(v string) *TrailForDescribeTrailsOutput {
	s.StopLoggingTime = &v
	return s
}

// SetTlsProjectName sets the TlsProjectName field's value.
func (s *TrailForDescribeTrailsOutput) SetTlsProjectName(v string) *TrailForDescribeTrailsOutput {
	s.TlsProjectName = &v
	return s
}

// SetTlsProjectRegion sets the TlsProjectRegion field's value.
func (s *TrailForDescribeTrailsOutput) SetTlsProjectRegion(v string) *TrailForDescribeTrailsOutput {
	s.TlsProjectRegion = &v
	return s
}

// SetTlsTopicName sets the TlsTopicName field's value.
func (s *TrailForDescribeTrailsOutput) SetTlsTopicName(v string) *TrailForDescribeTrailsOutput {
	s.TlsTopicName = &v
	return s
}

// SetTosBucketName sets the TosBucketName field's value.
func (s *TrailForDescribeTrailsOutput) SetTosBucketName(v string) *TrailForDescribeTrailsOutput {
	s.TosBucketName = &v
	return s
}

// SetTosBucketRegion sets the TosBucketRegion field's value.
func (s *TrailForDescribeTrailsOutput) SetTosBucketRegion(v string) *TrailForDescribeTrailsOutput {
	s.TosBucketRegion = &v
	return s
}

// SetTosKeyPrefix sets the TosKeyPrefix field's value.
func (s *TrailForDescribeTrailsOutput) SetTosKeyPrefix(v string) *TrailForDescribeTrailsOutput {
	s.TosKeyPrefix = &v
	return s
}

// SetTrailName sets the TrailName field's value.
func (s *TrailForDescribeTrailsOutput) SetTrailName(v string) *TrailForDescribeTrailsOutput {
	s.TrailName = &v
	return s
}

// SetTrailType sets the TrailType field's value.
func (s *TrailForDescribeTrailsOutput) SetTrailType(v int32) *TrailForDescribeTrailsOutput {
	s.TrailType = &v
	return s
}

// SetUpdatedTime sets the UpdatedTime field's value.
func (s *TrailForDescribeTrailsOutput) SetUpdatedTime(v string) *TrailForDescribeTrailsOutput {
	s.UpdatedTime = &v
	return s
}
