// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opResizeInstancesCommon = "ResizeInstances"

// ResizeInstancesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ResizeInstancesCommon operation. The "output" return
// value will be populated with the ResizeInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ResizeInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ResizeInstancesCommon Send returns without error.
//
// See ResizeInstancesCommon for more information on using the ResizeInstancesCommon
// API call, and error handling.
//
//    // Example sending a request using the ResizeInstancesCommonRequest method.
//    req, resp := client.ResizeInstancesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) ResizeInstancesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opResizeInstancesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ResizeInstancesCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation ResizeInstancesCommon for usage and error information.
func (c *ECS) ResizeInstancesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ResizeInstancesCommonRequest(input)
	return out, req.Send()
}

// ResizeInstancesCommonWithContext is the same as ResizeInstancesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ResizeInstancesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) ResizeInstancesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ResizeInstancesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opResizeInstances = "ResizeInstances"

// ResizeInstancesRequest generates a "volcengine/request.Request" representing the
// client's request for the ResizeInstances operation. The "output" return
// value will be populated with the ResizeInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ResizeInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ResizeInstancesCommon Send returns without error.
//
// See ResizeInstances for more information on using the ResizeInstances
// API call, and error handling.
//
//    // Example sending a request using the ResizeInstancesRequest method.
//    req, resp := client.ResizeInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) ResizeInstancesRequest(input *ResizeInstancesInput) (req *request.Request, output *ResizeInstancesOutput) {
	op := &request.Operation{
		Name:       opResizeInstances,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ResizeInstancesInput{}
	}

	output = &ResizeInstancesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ResizeInstances API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation ResizeInstances for usage and error information.
func (c *ECS) ResizeInstances(input *ResizeInstancesInput) (*ResizeInstancesOutput, error) {
	req, out := c.ResizeInstancesRequest(input)
	return out, req.Send()
}

// ResizeInstancesWithContext is the same as ResizeInstances with the addition of
// the ability to pass a context and additional request options.
//
// See ResizeInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) ResizeInstancesWithContext(ctx volcengine.Context, input *ResizeInstancesInput, opts ...request.Option) (*ResizeInstancesOutput, error) {
	req, out := c.ResizeInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ErrorForResizeInstancesOutput struct {
	_ struct{} `type:"structure"`

	Code *string `type:"string"`

	Message *string `type:"string"`
}

// String returns the string representation
func (s ErrorForResizeInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ErrorForResizeInstancesOutput) GoString() string {
	return s.String()
}

// SetCode sets the Code field's value.
func (s *ErrorForResizeInstancesOutput) SetCode(v string) *ErrorForResizeInstancesOutput {
	s.Code = &v
	return s
}

// SetMessage sets the Message field's value.
func (s *ErrorForResizeInstancesOutput) SetMessage(v string) *ErrorForResizeInstancesOutput {
	s.Message = &v
	return s
}

type OperationDetailForResizeInstancesOutput struct {
	_ struct{} `type:"structure"`

	Error *ErrorForResizeInstancesOutput `type:"structure"`

	InstanceId *string `type:"string"`
}

// String returns the string representation
func (s OperationDetailForResizeInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OperationDetailForResizeInstancesOutput) GoString() string {
	return s.String()
}

// SetError sets the Error field's value.
func (s *OperationDetailForResizeInstancesOutput) SetError(v *ErrorForResizeInstancesOutput) *OperationDetailForResizeInstancesOutput {
	s.Error = v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *OperationDetailForResizeInstancesOutput) SetInstanceId(v string) *OperationDetailForResizeInstancesOutput {
	s.InstanceId = &v
	return s
}

type ResizeInstancesInput struct {
	_ struct{} `type:"structure"`

	ClientToken *string `type:"string"`

	InstanceIds []*string `type:"list"`

	InstanceTypeId *string `type:"string"`

	NeedPreorders *bool `type:"boolean"`
}

// String returns the string representation
func (s ResizeInstancesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResizeInstancesInput) GoString() string {
	return s.String()
}

// SetClientToken sets the ClientToken field's value.
func (s *ResizeInstancesInput) SetClientToken(v string) *ResizeInstancesInput {
	s.ClientToken = &v
	return s
}

// SetInstanceIds sets the InstanceIds field's value.
func (s *ResizeInstancesInput) SetInstanceIds(v []*string) *ResizeInstancesInput {
	s.InstanceIds = v
	return s
}

// SetInstanceTypeId sets the InstanceTypeId field's value.
func (s *ResizeInstancesInput) SetInstanceTypeId(v string) *ResizeInstancesInput {
	s.InstanceTypeId = &v
	return s
}

// SetNeedPreorders sets the NeedPreorders field's value.
func (s *ResizeInstancesInput) SetNeedPreorders(v bool) *ResizeInstancesInput {
	s.NeedPreorders = &v
	return s
}

type ResizeInstancesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	OperationDetails []*OperationDetailForResizeInstancesOutput `type:"list"`

	OrderId *string `type:"string"`

	PreorderIds []*string `type:"list"`
}

// String returns the string representation
func (s ResizeInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResizeInstancesOutput) GoString() string {
	return s.String()
}

// SetOperationDetails sets the OperationDetails field's value.
func (s *ResizeInstancesOutput) SetOperationDetails(v []*OperationDetailForResizeInstancesOutput) *ResizeInstancesOutput {
	s.OperationDetails = v
	return s
}

// SetOrderId sets the OrderId field's value.
func (s *ResizeInstancesOutput) SetOrderId(v string) *ResizeInstancesOutput {
	s.OrderId = &v
	return s
}

// SetPreorderIds sets the PreorderIds field's value.
func (s *ResizeInstancesOutput) SetPreorderIds(v []*string) *ResizeInstancesOutput {
	s.PreorderIds = v
	return s
}
