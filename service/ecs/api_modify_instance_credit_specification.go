// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyInstanceCreditSpecificationCommon = "ModifyInstanceCreditSpecification"

// ModifyInstanceCreditSpecificationCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyInstanceCreditSpecificationCommon operation. The "output" return
// value will be populated with the ModifyInstanceCreditSpecificationCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyInstanceCreditSpecificationCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyInstanceCreditSpecificationCommon Send returns without error.
//
// See ModifyInstanceCreditSpecificationCommon for more information on using the ModifyInstanceCreditSpecificationCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyInstanceCreditSpecificationCommonRequest method.
//    req, resp := client.ModifyInstanceCreditSpecificationCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) ModifyInstanceCreditSpecificationCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyInstanceCreditSpecificationCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyInstanceCreditSpecificationCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation ModifyInstanceCreditSpecificationCommon for usage and error information.
func (c *ECS) ModifyInstanceCreditSpecificationCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyInstanceCreditSpecificationCommonRequest(input)
	return out, req.Send()
}

// ModifyInstanceCreditSpecificationCommonWithContext is the same as ModifyInstanceCreditSpecificationCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyInstanceCreditSpecificationCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) ModifyInstanceCreditSpecificationCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyInstanceCreditSpecificationCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyInstanceCreditSpecification = "ModifyInstanceCreditSpecification"

// ModifyInstanceCreditSpecificationRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyInstanceCreditSpecification operation. The "output" return
// value will be populated with the ModifyInstanceCreditSpecificationCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyInstanceCreditSpecificationCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyInstanceCreditSpecificationCommon Send returns without error.
//
// See ModifyInstanceCreditSpecification for more information on using the ModifyInstanceCreditSpecification
// API call, and error handling.
//
//    // Example sending a request using the ModifyInstanceCreditSpecificationRequest method.
//    req, resp := client.ModifyInstanceCreditSpecificationRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) ModifyInstanceCreditSpecificationRequest(input *ModifyInstanceCreditSpecificationInput) (req *request.Request, output *ModifyInstanceCreditSpecificationOutput) {
	op := &request.Operation{
		Name:       opModifyInstanceCreditSpecification,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyInstanceCreditSpecificationInput{}
	}

	output = &ModifyInstanceCreditSpecificationOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyInstanceCreditSpecification API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation ModifyInstanceCreditSpecification for usage and error information.
func (c *ECS) ModifyInstanceCreditSpecification(input *ModifyInstanceCreditSpecificationInput) (*ModifyInstanceCreditSpecificationOutput, error) {
	req, out := c.ModifyInstanceCreditSpecificationRequest(input)
	return out, req.Send()
}

// ModifyInstanceCreditSpecificationWithContext is the same as ModifyInstanceCreditSpecification with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyInstanceCreditSpecification for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) ModifyInstanceCreditSpecificationWithContext(ctx volcengine.Context, input *ModifyInstanceCreditSpecificationInput, opts ...request.Option) (*ModifyInstanceCreditSpecificationOutput, error) {
	req, out := c.ModifyInstanceCreditSpecificationRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyInstanceCreditSpecificationInput struct {
	_ struct{} `type:"structure"`

	CreditSpecification *string `type:"string"`

	InstanceId *string `type:"string"`
}

// String returns the string representation
func (s ModifyInstanceCreditSpecificationInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstanceCreditSpecificationInput) GoString() string {
	return s.String()
}

// SetCreditSpecification sets the CreditSpecification field's value.
func (s *ModifyInstanceCreditSpecificationInput) SetCreditSpecification(v string) *ModifyInstanceCreditSpecificationInput {
	s.CreditSpecification = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyInstanceCreditSpecificationInput) SetInstanceId(v string) *ModifyInstanceCreditSpecificationInput {
	s.InstanceId = &v
	return s
}

type ModifyInstanceCreditSpecificationOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyInstanceCreditSpecificationOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstanceCreditSpecificationOutput) GoString() string {
	return s.String()
}
