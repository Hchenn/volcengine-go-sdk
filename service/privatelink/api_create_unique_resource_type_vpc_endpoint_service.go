// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package privatelink

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateUniqueResourceTypeVpcEndpointServiceCommon = "CreateUniqueResourceTypeVpcEndpointService"

// CreateUniqueResourceTypeVpcEndpointServiceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateUniqueResourceTypeVpcEndpointServiceCommon operation. The "output" return
// value will be populated with the CreateUniqueResourceTypeVpcEndpointServiceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateUniqueResourceTypeVpcEndpointServiceCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateUniqueResourceTypeVpcEndpointServiceCommon Send returns without error.
//
// See CreateUniqueResourceTypeVpcEndpointServiceCommon for more information on using the CreateUniqueResourceTypeVpcEndpointServiceCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateUniqueResourceTypeVpcEndpointServiceCommonRequest method.
//    req, resp := client.CreateUniqueResourceTypeVpcEndpointServiceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATELINK) CreateUniqueResourceTypeVpcEndpointServiceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateUniqueResourceTypeVpcEndpointServiceCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateUniqueResourceTypeVpcEndpointServiceCommon API operation for PRIVATELINK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATELINK's
// API operation CreateUniqueResourceTypeVpcEndpointServiceCommon for usage and error information.
func (c *PRIVATELINK) CreateUniqueResourceTypeVpcEndpointServiceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateUniqueResourceTypeVpcEndpointServiceCommonRequest(input)
	return out, req.Send()
}

// CreateUniqueResourceTypeVpcEndpointServiceCommonWithContext is the same as CreateUniqueResourceTypeVpcEndpointServiceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateUniqueResourceTypeVpcEndpointServiceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATELINK) CreateUniqueResourceTypeVpcEndpointServiceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateUniqueResourceTypeVpcEndpointServiceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateUniqueResourceTypeVpcEndpointService = "CreateUniqueResourceTypeVpcEndpointService"

// CreateUniqueResourceTypeVpcEndpointServiceRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateUniqueResourceTypeVpcEndpointService operation. The "output" return
// value will be populated with the CreateUniqueResourceTypeVpcEndpointServiceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateUniqueResourceTypeVpcEndpointServiceCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateUniqueResourceTypeVpcEndpointServiceCommon Send returns without error.
//
// See CreateUniqueResourceTypeVpcEndpointService for more information on using the CreateUniqueResourceTypeVpcEndpointService
// API call, and error handling.
//
//    // Example sending a request using the CreateUniqueResourceTypeVpcEndpointServiceRequest method.
//    req, resp := client.CreateUniqueResourceTypeVpcEndpointServiceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATELINK) CreateUniqueResourceTypeVpcEndpointServiceRequest(input *CreateUniqueResourceTypeVpcEndpointServiceInput) (req *request.Request, output *CreateUniqueResourceTypeVpcEndpointServiceOutput) {
	op := &request.Operation{
		Name:       opCreateUniqueResourceTypeVpcEndpointService,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateUniqueResourceTypeVpcEndpointServiceInput{}
	}

	output = &CreateUniqueResourceTypeVpcEndpointServiceOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateUniqueResourceTypeVpcEndpointService API operation for PRIVATELINK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATELINK's
// API operation CreateUniqueResourceTypeVpcEndpointService for usage and error information.
func (c *PRIVATELINK) CreateUniqueResourceTypeVpcEndpointService(input *CreateUniqueResourceTypeVpcEndpointServiceInput) (*CreateUniqueResourceTypeVpcEndpointServiceOutput, error) {
	req, out := c.CreateUniqueResourceTypeVpcEndpointServiceRequest(input)
	return out, req.Send()
}

// CreateUniqueResourceTypeVpcEndpointServiceWithContext is the same as CreateUniqueResourceTypeVpcEndpointService with the addition of
// the ability to pass a context and additional request options.
//
// See CreateUniqueResourceTypeVpcEndpointService for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATELINK) CreateUniqueResourceTypeVpcEndpointServiceWithContext(ctx volcengine.Context, input *CreateUniqueResourceTypeVpcEndpointServiceInput, opts ...request.Option) (*CreateUniqueResourceTypeVpcEndpointServiceOutput, error) {
	req, out := c.CreateUniqueResourceTypeVpcEndpointServiceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateUniqueResourceTypeVpcEndpointServiceInput struct {
	_ struct{} `type:"structure"`

	AutoAcceptEnabled *bool `type:"boolean"`

	ClientToken *string `type:"string"`

	Description *string `type:"string"`

	IpAddressVersions []*string `type:"list"`

	ProjectName *string `type:"string"`

	Resource *ResourceForCreateUniqueResourceTypeVpcEndpointServiceInput `type:"structure"`

	ServiceResourceType *string `type:"string"`

	Tags *TagsForCreateUniqueResourceTypeVpcEndpointServiceInput `type:"structure"`

	// ZoneIds is a required field
	ZoneIds []*string `type:"list" required:"true"`
}

// String returns the string representation
func (s CreateUniqueResourceTypeVpcEndpointServiceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateUniqueResourceTypeVpcEndpointServiceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateUniqueResourceTypeVpcEndpointServiceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateUniqueResourceTypeVpcEndpointServiceInput"}
	if s.ZoneIds == nil {
		invalidParams.Add(request.NewErrParamRequired("ZoneIds"))
	}
	if s.Resource != nil {
		if err := s.Resource.Validate(); err != nil {
			invalidParams.AddNested("Resource", err.(request.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAutoAcceptEnabled sets the AutoAcceptEnabled field's value.
func (s *CreateUniqueResourceTypeVpcEndpointServiceInput) SetAutoAcceptEnabled(v bool) *CreateUniqueResourceTypeVpcEndpointServiceInput {
	s.AutoAcceptEnabled = &v
	return s
}

// SetClientToken sets the ClientToken field's value.
func (s *CreateUniqueResourceTypeVpcEndpointServiceInput) SetClientToken(v string) *CreateUniqueResourceTypeVpcEndpointServiceInput {
	s.ClientToken = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateUniqueResourceTypeVpcEndpointServiceInput) SetDescription(v string) *CreateUniqueResourceTypeVpcEndpointServiceInput {
	s.Description = &v
	return s
}

// SetIpAddressVersions sets the IpAddressVersions field's value.
func (s *CreateUniqueResourceTypeVpcEndpointServiceInput) SetIpAddressVersions(v []*string) *CreateUniqueResourceTypeVpcEndpointServiceInput {
	s.IpAddressVersions = v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *CreateUniqueResourceTypeVpcEndpointServiceInput) SetProjectName(v string) *CreateUniqueResourceTypeVpcEndpointServiceInput {
	s.ProjectName = &v
	return s
}

// SetResource sets the Resource field's value.
func (s *CreateUniqueResourceTypeVpcEndpointServiceInput) SetResource(v *ResourceForCreateUniqueResourceTypeVpcEndpointServiceInput) *CreateUniqueResourceTypeVpcEndpointServiceInput {
	s.Resource = v
	return s
}

// SetServiceResourceType sets the ServiceResourceType field's value.
func (s *CreateUniqueResourceTypeVpcEndpointServiceInput) SetServiceResourceType(v string) *CreateUniqueResourceTypeVpcEndpointServiceInput {
	s.ServiceResourceType = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *CreateUniqueResourceTypeVpcEndpointServiceInput) SetTags(v *TagsForCreateUniqueResourceTypeVpcEndpointServiceInput) *CreateUniqueResourceTypeVpcEndpointServiceInput {
	s.Tags = v
	return s
}

// SetZoneIds sets the ZoneIds field's value.
func (s *CreateUniqueResourceTypeVpcEndpointServiceInput) SetZoneIds(v []*string) *CreateUniqueResourceTypeVpcEndpointServiceInput {
	s.ZoneIds = v
	return s
}

type CreateUniqueResourceTypeVpcEndpointServiceOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`

	ServiceId *string `type:"string"`
}

// String returns the string representation
func (s CreateUniqueResourceTypeVpcEndpointServiceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateUniqueResourceTypeVpcEndpointServiceOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *CreateUniqueResourceTypeVpcEndpointServiceOutput) SetRequestId(v string) *CreateUniqueResourceTypeVpcEndpointServiceOutput {
	s.RequestId = &v
	return s
}

// SetServiceId sets the ServiceId field's value.
func (s *CreateUniqueResourceTypeVpcEndpointServiceOutput) SetServiceId(v string) *CreateUniqueResourceTypeVpcEndpointServiceOutput {
	s.ServiceId = &v
	return s
}

type ResourceForCreateUniqueResourceTypeVpcEndpointServiceInput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `type:"string"`

	// ResourceId is a required field
	ResourceId *string `type:"string" required:"true"`

	ZoneIds []*string `type:"list"`
}

// String returns the string representation
func (s ResourceForCreateUniqueResourceTypeVpcEndpointServiceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceForCreateUniqueResourceTypeVpcEndpointServiceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ResourceForCreateUniqueResourceTypeVpcEndpointServiceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ResourceForCreateUniqueResourceTypeVpcEndpointServiceInput"}
	if s.ResourceId == nil {
		invalidParams.Add(request.NewErrParamRequired("ResourceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *ResourceForCreateUniqueResourceTypeVpcEndpointServiceInput) SetInstanceId(v string) *ResourceForCreateUniqueResourceTypeVpcEndpointServiceInput {
	s.InstanceId = &v
	return s
}

// SetResourceId sets the ResourceId field's value.
func (s *ResourceForCreateUniqueResourceTypeVpcEndpointServiceInput) SetResourceId(v string) *ResourceForCreateUniqueResourceTypeVpcEndpointServiceInput {
	s.ResourceId = &v
	return s
}

// SetZoneIds sets the ZoneIds field's value.
func (s *ResourceForCreateUniqueResourceTypeVpcEndpointServiceInput) SetZoneIds(v []*string) *ResourceForCreateUniqueResourceTypeVpcEndpointServiceInput {
	s.ZoneIds = v
	return s
}

type TagsForCreateUniqueResourceTypeVpcEndpointServiceInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagsForCreateUniqueResourceTypeVpcEndpointServiceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagsForCreateUniqueResourceTypeVpcEndpointServiceInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagsForCreateUniqueResourceTypeVpcEndpointServiceInput) SetKey(v string) *TagsForCreateUniqueResourceTypeVpcEndpointServiceInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagsForCreateUniqueResourceTypeVpcEndpointServiceInput) SetValue(v string) *TagsForCreateUniqueResourceTypeVpcEndpointServiceInput {
	s.Value = &v
	return s
}
