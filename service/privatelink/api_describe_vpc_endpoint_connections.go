// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package privatelink

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeVpcEndpointConnectionsCommon = "DescribeVpcEndpointConnections"

// DescribeVpcEndpointConnectionsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeVpcEndpointConnectionsCommon operation. The "output" return
// value will be populated with the DescribeVpcEndpointConnectionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeVpcEndpointConnectionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeVpcEndpointConnectionsCommon Send returns without error.
//
// See DescribeVpcEndpointConnectionsCommon for more information on using the DescribeVpcEndpointConnectionsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeVpcEndpointConnectionsCommonRequest method.
//    req, resp := client.DescribeVpcEndpointConnectionsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATELINK) DescribeVpcEndpointConnectionsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeVpcEndpointConnectionsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeVpcEndpointConnectionsCommon API operation for PRIVATELINK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATELINK's
// API operation DescribeVpcEndpointConnectionsCommon for usage and error information.
func (c *PRIVATELINK) DescribeVpcEndpointConnectionsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeVpcEndpointConnectionsCommonRequest(input)
	return out, req.Send()
}

// DescribeVpcEndpointConnectionsCommonWithContext is the same as DescribeVpcEndpointConnectionsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeVpcEndpointConnectionsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATELINK) DescribeVpcEndpointConnectionsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeVpcEndpointConnectionsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeVpcEndpointConnections = "DescribeVpcEndpointConnections"

// DescribeVpcEndpointConnectionsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeVpcEndpointConnections operation. The "output" return
// value will be populated with the DescribeVpcEndpointConnectionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeVpcEndpointConnectionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeVpcEndpointConnectionsCommon Send returns without error.
//
// See DescribeVpcEndpointConnections for more information on using the DescribeVpcEndpointConnections
// API call, and error handling.
//
//    // Example sending a request using the DescribeVpcEndpointConnectionsRequest method.
//    req, resp := client.DescribeVpcEndpointConnectionsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATELINK) DescribeVpcEndpointConnectionsRequest(input *DescribeVpcEndpointConnectionsInput) (req *request.Request, output *DescribeVpcEndpointConnectionsOutput) {
	op := &request.Operation{
		Name:       opDescribeVpcEndpointConnections,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeVpcEndpointConnectionsInput{}
	}

	output = &DescribeVpcEndpointConnectionsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeVpcEndpointConnections API operation for PRIVATELINK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATELINK's
// API operation DescribeVpcEndpointConnections for usage and error information.
func (c *PRIVATELINK) DescribeVpcEndpointConnections(input *DescribeVpcEndpointConnectionsInput) (*DescribeVpcEndpointConnectionsOutput, error) {
	req, out := c.DescribeVpcEndpointConnectionsRequest(input)
	return out, req.Send()
}

// DescribeVpcEndpointConnectionsWithContext is the same as DescribeVpcEndpointConnections with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeVpcEndpointConnections for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATELINK) DescribeVpcEndpointConnectionsWithContext(ctx volcengine.Context, input *DescribeVpcEndpointConnectionsInput, opts ...request.Option) (*DescribeVpcEndpointConnectionsOutput, error) {
	req, out := c.DescribeVpcEndpointConnectionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeVpcEndpointConnectionsInput struct {
	_ struct{} `type:"structure"`

	EndpointId *string `type:"string"`

	EndpointOwnerAccountId *string `type:"string"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	// ServiceId is a required field
	ServiceId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeVpcEndpointConnectionsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVpcEndpointConnectionsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeVpcEndpointConnectionsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeVpcEndpointConnectionsInput"}
	if s.ServiceId == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetEndpointId sets the EndpointId field's value.
func (s *DescribeVpcEndpointConnectionsInput) SetEndpointId(v string) *DescribeVpcEndpointConnectionsInput {
	s.EndpointId = &v
	return s
}

// SetEndpointOwnerAccountId sets the EndpointOwnerAccountId field's value.
func (s *DescribeVpcEndpointConnectionsInput) SetEndpointOwnerAccountId(v string) *DescribeVpcEndpointConnectionsInput {
	s.EndpointOwnerAccountId = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeVpcEndpointConnectionsInput) SetPageNumber(v int32) *DescribeVpcEndpointConnectionsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeVpcEndpointConnectionsInput) SetPageSize(v int32) *DescribeVpcEndpointConnectionsInput {
	s.PageSize = &v
	return s
}

// SetServiceId sets the ServiceId field's value.
func (s *DescribeVpcEndpointConnectionsInput) SetServiceId(v string) *DescribeVpcEndpointConnectionsInput {
	s.ServiceId = &v
	return s
}

type DescribeVpcEndpointConnectionsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	EndpointConnections []*EndpointConnectionForDescribeVpcEndpointConnectionsOutput `type:"list"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	RequestId *string `type:"string"`

	TotalCount *int32 `type:"int32"`
}

// String returns the string representation
func (s DescribeVpcEndpointConnectionsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVpcEndpointConnectionsOutput) GoString() string {
	return s.String()
}

// SetEndpointConnections sets the EndpointConnections field's value.
func (s *DescribeVpcEndpointConnectionsOutput) SetEndpointConnections(v []*EndpointConnectionForDescribeVpcEndpointConnectionsOutput) *DescribeVpcEndpointConnectionsOutput {
	s.EndpointConnections = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeVpcEndpointConnectionsOutput) SetPageNumber(v int32) *DescribeVpcEndpointConnectionsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeVpcEndpointConnectionsOutput) SetPageSize(v int32) *DescribeVpcEndpointConnectionsOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeVpcEndpointConnectionsOutput) SetRequestId(v string) *DescribeVpcEndpointConnectionsOutput {
	s.RequestId = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeVpcEndpointConnectionsOutput) SetTotalCount(v int32) *DescribeVpcEndpointConnectionsOutput {
	s.TotalCount = &v
	return s
}

type EndpointConnectionForDescribeVpcEndpointConnectionsOutput struct {
	_ struct{} `type:"structure"`

	ConnectionStatus *string `type:"string"`

	CreationTime *string `type:"string"`

	EndpointId *string `type:"string"`

	EndpointOwnerAccountId *string `type:"string"`

	EndpointVpcId *string `type:"string"`

	ServiceId *string `type:"string"`

	UpdateTime *string `type:"string"`

	Zones []*ZoneForDescribeVpcEndpointConnectionsOutput `type:"list"`
}

// String returns the string representation
func (s EndpointConnectionForDescribeVpcEndpointConnectionsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EndpointConnectionForDescribeVpcEndpointConnectionsOutput) GoString() string {
	return s.String()
}

// SetConnectionStatus sets the ConnectionStatus field's value.
func (s *EndpointConnectionForDescribeVpcEndpointConnectionsOutput) SetConnectionStatus(v string) *EndpointConnectionForDescribeVpcEndpointConnectionsOutput {
	s.ConnectionStatus = &v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *EndpointConnectionForDescribeVpcEndpointConnectionsOutput) SetCreationTime(v string) *EndpointConnectionForDescribeVpcEndpointConnectionsOutput {
	s.CreationTime = &v
	return s
}

// SetEndpointId sets the EndpointId field's value.
func (s *EndpointConnectionForDescribeVpcEndpointConnectionsOutput) SetEndpointId(v string) *EndpointConnectionForDescribeVpcEndpointConnectionsOutput {
	s.EndpointId = &v
	return s
}

// SetEndpointOwnerAccountId sets the EndpointOwnerAccountId field's value.
func (s *EndpointConnectionForDescribeVpcEndpointConnectionsOutput) SetEndpointOwnerAccountId(v string) *EndpointConnectionForDescribeVpcEndpointConnectionsOutput {
	s.EndpointOwnerAccountId = &v
	return s
}

// SetEndpointVpcId sets the EndpointVpcId field's value.
func (s *EndpointConnectionForDescribeVpcEndpointConnectionsOutput) SetEndpointVpcId(v string) *EndpointConnectionForDescribeVpcEndpointConnectionsOutput {
	s.EndpointVpcId = &v
	return s
}

// SetServiceId sets the ServiceId field's value.
func (s *EndpointConnectionForDescribeVpcEndpointConnectionsOutput) SetServiceId(v string) *EndpointConnectionForDescribeVpcEndpointConnectionsOutput {
	s.ServiceId = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *EndpointConnectionForDescribeVpcEndpointConnectionsOutput) SetUpdateTime(v string) *EndpointConnectionForDescribeVpcEndpointConnectionsOutput {
	s.UpdateTime = &v
	return s
}

// SetZones sets the Zones field's value.
func (s *EndpointConnectionForDescribeVpcEndpointConnectionsOutput) SetZones(v []*ZoneForDescribeVpcEndpointConnectionsOutput) *EndpointConnectionForDescribeVpcEndpointConnectionsOutput {
	s.Zones = v
	return s
}

type ZoneForDescribeVpcEndpointConnectionsOutput struct {
	_ struct{} `type:"structure"`

	NetworkInterfaceIP *string `type:"string"`

	NetworkInterfaceId *string `type:"string"`

	ResourceId *string `type:"string"`

	ServiceStatus *string `type:"string"`

	SubnetId *string `type:"string"`

	ZoneDomain *string `type:"string"`

	ZoneId *string `type:"string"`

	ZoneStatus *string `type:"string"`
}

// String returns the string representation
func (s ZoneForDescribeVpcEndpointConnectionsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ZoneForDescribeVpcEndpointConnectionsOutput) GoString() string {
	return s.String()
}

// SetNetworkInterfaceIP sets the NetworkInterfaceIP field's value.
func (s *ZoneForDescribeVpcEndpointConnectionsOutput) SetNetworkInterfaceIP(v string) *ZoneForDescribeVpcEndpointConnectionsOutput {
	s.NetworkInterfaceIP = &v
	return s
}

// SetNetworkInterfaceId sets the NetworkInterfaceId field's value.
func (s *ZoneForDescribeVpcEndpointConnectionsOutput) SetNetworkInterfaceId(v string) *ZoneForDescribeVpcEndpointConnectionsOutput {
	s.NetworkInterfaceId = &v
	return s
}

// SetResourceId sets the ResourceId field's value.
func (s *ZoneForDescribeVpcEndpointConnectionsOutput) SetResourceId(v string) *ZoneForDescribeVpcEndpointConnectionsOutput {
	s.ResourceId = &v
	return s
}

// SetServiceStatus sets the ServiceStatus field's value.
func (s *ZoneForDescribeVpcEndpointConnectionsOutput) SetServiceStatus(v string) *ZoneForDescribeVpcEndpointConnectionsOutput {
	s.ServiceStatus = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *ZoneForDescribeVpcEndpointConnectionsOutput) SetSubnetId(v string) *ZoneForDescribeVpcEndpointConnectionsOutput {
	s.SubnetId = &v
	return s
}

// SetZoneDomain sets the ZoneDomain field's value.
func (s *ZoneForDescribeVpcEndpointConnectionsOutput) SetZoneDomain(v string) *ZoneForDescribeVpcEndpointConnectionsOutput {
	s.ZoneDomain = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *ZoneForDescribeVpcEndpointConnectionsOutput) SetZoneId(v string) *ZoneForDescribeVpcEndpointConnectionsOutput {
	s.ZoneId = &v
	return s
}

// SetZoneStatus sets the ZoneStatus field's value.
func (s *ZoneForDescribeVpcEndpointConnectionsOutput) SetZoneStatus(v string) *ZoneForDescribeVpcEndpointConnectionsOutput {
	s.ZoneStatus = &v
	return s
}
