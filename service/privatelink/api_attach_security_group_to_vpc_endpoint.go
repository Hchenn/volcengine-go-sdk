// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package privatelink

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opAttachSecurityGroupToVpcEndpointCommon = "AttachSecurityGroupToVpcEndpoint"

// AttachSecurityGroupToVpcEndpointCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the AttachSecurityGroupToVpcEndpointCommon operation. The "output" return
// value will be populated with the AttachSecurityGroupToVpcEndpointCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AttachSecurityGroupToVpcEndpointCommon Request to send the API call to the service.
// the "output" return value is not valid until after AttachSecurityGroupToVpcEndpointCommon Send returns without error.
//
// See AttachSecurityGroupToVpcEndpointCommon for more information on using the AttachSecurityGroupToVpcEndpointCommon
// API call, and error handling.
//
//    // Example sending a request using the AttachSecurityGroupToVpcEndpointCommonRequest method.
//    req, resp := client.AttachSecurityGroupToVpcEndpointCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATELINK) AttachSecurityGroupToVpcEndpointCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opAttachSecurityGroupToVpcEndpointCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// AttachSecurityGroupToVpcEndpointCommon API operation for PRIVATELINK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATELINK's
// API operation AttachSecurityGroupToVpcEndpointCommon for usage and error information.
func (c *PRIVATELINK) AttachSecurityGroupToVpcEndpointCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.AttachSecurityGroupToVpcEndpointCommonRequest(input)
	return out, req.Send()
}

// AttachSecurityGroupToVpcEndpointCommonWithContext is the same as AttachSecurityGroupToVpcEndpointCommon with the addition of
// the ability to pass a context and additional request options.
//
// See AttachSecurityGroupToVpcEndpointCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATELINK) AttachSecurityGroupToVpcEndpointCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.AttachSecurityGroupToVpcEndpointCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAttachSecurityGroupToVpcEndpoint = "AttachSecurityGroupToVpcEndpoint"

// AttachSecurityGroupToVpcEndpointRequest generates a "volcengine/request.Request" representing the
// client's request for the AttachSecurityGroupToVpcEndpoint operation. The "output" return
// value will be populated with the AttachSecurityGroupToVpcEndpointCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AttachSecurityGroupToVpcEndpointCommon Request to send the API call to the service.
// the "output" return value is not valid until after AttachSecurityGroupToVpcEndpointCommon Send returns without error.
//
// See AttachSecurityGroupToVpcEndpoint for more information on using the AttachSecurityGroupToVpcEndpoint
// API call, and error handling.
//
//    // Example sending a request using the AttachSecurityGroupToVpcEndpointRequest method.
//    req, resp := client.AttachSecurityGroupToVpcEndpointRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATELINK) AttachSecurityGroupToVpcEndpointRequest(input *AttachSecurityGroupToVpcEndpointInput) (req *request.Request, output *AttachSecurityGroupToVpcEndpointOutput) {
	op := &request.Operation{
		Name:       opAttachSecurityGroupToVpcEndpoint,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AttachSecurityGroupToVpcEndpointInput{}
	}

	output = &AttachSecurityGroupToVpcEndpointOutput{}
	req = c.newRequest(op, input, output)

	return
}

// AttachSecurityGroupToVpcEndpoint API operation for PRIVATELINK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATELINK's
// API operation AttachSecurityGroupToVpcEndpoint for usage and error information.
func (c *PRIVATELINK) AttachSecurityGroupToVpcEndpoint(input *AttachSecurityGroupToVpcEndpointInput) (*AttachSecurityGroupToVpcEndpointOutput, error) {
	req, out := c.AttachSecurityGroupToVpcEndpointRequest(input)
	return out, req.Send()
}

// AttachSecurityGroupToVpcEndpointWithContext is the same as AttachSecurityGroupToVpcEndpoint with the addition of
// the ability to pass a context and additional request options.
//
// See AttachSecurityGroupToVpcEndpoint for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATELINK) AttachSecurityGroupToVpcEndpointWithContext(ctx volcengine.Context, input *AttachSecurityGroupToVpcEndpointInput, opts ...request.Option) (*AttachSecurityGroupToVpcEndpointOutput, error) {
	req, out := c.AttachSecurityGroupToVpcEndpointRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AttachSecurityGroupToVpcEndpointInput struct {
	_ struct{} `type:"structure"`

	// EndpointId is a required field
	EndpointId *string `type:"string" required:"true"`

	// SecurityGroupId is a required field
	SecurityGroupId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s AttachSecurityGroupToVpcEndpointInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AttachSecurityGroupToVpcEndpointInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AttachSecurityGroupToVpcEndpointInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "AttachSecurityGroupToVpcEndpointInput"}
	if s.EndpointId == nil {
		invalidParams.Add(request.NewErrParamRequired("EndpointId"))
	}
	if s.SecurityGroupId == nil {
		invalidParams.Add(request.NewErrParamRequired("SecurityGroupId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetEndpointId sets the EndpointId field's value.
func (s *AttachSecurityGroupToVpcEndpointInput) SetEndpointId(v string) *AttachSecurityGroupToVpcEndpointInput {
	s.EndpointId = &v
	return s
}

// SetSecurityGroupId sets the SecurityGroupId field's value.
func (s *AttachSecurityGroupToVpcEndpointInput) SetSecurityGroupId(v string) *AttachSecurityGroupToVpcEndpointInput {
	s.SecurityGroupId = &v
	return s
}

type AttachSecurityGroupToVpcEndpointOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s AttachSecurityGroupToVpcEndpointOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AttachSecurityGroupToVpcEndpointOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *AttachSecurityGroupToVpcEndpointOutput) SetRequestId(v string) *AttachSecurityGroupToVpcEndpointOutput {
	s.RequestId = &v
	return s
}
