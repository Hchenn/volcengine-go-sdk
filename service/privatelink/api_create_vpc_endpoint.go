// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package privatelink

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateVpcEndpointCommon = "CreateVpcEndpoint"

// CreateVpcEndpointCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateVpcEndpointCommon operation. The "output" return
// value will be populated with the CreateVpcEndpointCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateVpcEndpointCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateVpcEndpointCommon Send returns without error.
//
// See CreateVpcEndpointCommon for more information on using the CreateVpcEndpointCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateVpcEndpointCommonRequest method.
//    req, resp := client.CreateVpcEndpointCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATELINK) CreateVpcEndpointCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateVpcEndpointCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateVpcEndpointCommon API operation for PRIVATELINK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATELINK's
// API operation CreateVpcEndpointCommon for usage and error information.
func (c *PRIVATELINK) CreateVpcEndpointCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateVpcEndpointCommonRequest(input)
	return out, req.Send()
}

// CreateVpcEndpointCommonWithContext is the same as CreateVpcEndpointCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateVpcEndpointCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATELINK) CreateVpcEndpointCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateVpcEndpointCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateVpcEndpoint = "CreateVpcEndpoint"

// CreateVpcEndpointRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateVpcEndpoint operation. The "output" return
// value will be populated with the CreateVpcEndpointCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateVpcEndpointCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateVpcEndpointCommon Send returns without error.
//
// See CreateVpcEndpoint for more information on using the CreateVpcEndpoint
// API call, and error handling.
//
//    // Example sending a request using the CreateVpcEndpointRequest method.
//    req, resp := client.CreateVpcEndpointRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATELINK) CreateVpcEndpointRequest(input *CreateVpcEndpointInput) (req *request.Request, output *CreateVpcEndpointOutput) {
	op := &request.Operation{
		Name:       opCreateVpcEndpoint,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateVpcEndpointInput{}
	}

	output = &CreateVpcEndpointOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateVpcEndpoint API operation for PRIVATELINK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATELINK's
// API operation CreateVpcEndpoint for usage and error information.
func (c *PRIVATELINK) CreateVpcEndpoint(input *CreateVpcEndpointInput) (*CreateVpcEndpointOutput, error) {
	req, out := c.CreateVpcEndpointRequest(input)
	return out, req.Send()
}

// CreateVpcEndpointWithContext is the same as CreateVpcEndpoint with the addition of
// the ability to pass a context and additional request options.
//
// See CreateVpcEndpoint for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATELINK) CreateVpcEndpointWithContext(ctx volcengine.Context, input *CreateVpcEndpointInput, opts ...request.Option) (*CreateVpcEndpointOutput, error) {
	req, out := c.CreateVpcEndpointRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateVpcEndpointInput struct {
	_ struct{} `type:"structure"`

	ClientToken *string `type:"string"`

	Description *string `type:"string"`

	EndpointName *string `type:"string"`

	IpAddressVersions []*string `type:"list"`

	PrivateDNSEnabled *string `type:"string"`

	ProjectName *string `type:"string"`

	// SecurityGroupIds is a required field
	SecurityGroupIds []*string `type:"list" required:"true"`

	// ServiceId is a required field
	ServiceId *string `type:"string" required:"true"`

	ServiceManaged *bool `type:"boolean"`

	ServiceName *string `type:"string"`

	Tags []*TagForCreateVpcEndpointInput `type:"list"`

	// VpcId is a required field
	VpcId *string `type:"string" required:"true"`

	Zones []*ZoneForCreateVpcEndpointInput `type:"list"`
}

// String returns the string representation
func (s CreateVpcEndpointInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateVpcEndpointInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateVpcEndpointInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateVpcEndpointInput"}
	if s.SecurityGroupIds == nil {
		invalidParams.Add(request.NewErrParamRequired("SecurityGroupIds"))
	}
	if s.ServiceId == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceId"))
	}
	if s.VpcId == nil {
		invalidParams.Add(request.NewErrParamRequired("VpcId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClientToken sets the ClientToken field's value.
func (s *CreateVpcEndpointInput) SetClientToken(v string) *CreateVpcEndpointInput {
	s.ClientToken = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateVpcEndpointInput) SetDescription(v string) *CreateVpcEndpointInput {
	s.Description = &v
	return s
}

// SetEndpointName sets the EndpointName field's value.
func (s *CreateVpcEndpointInput) SetEndpointName(v string) *CreateVpcEndpointInput {
	s.EndpointName = &v
	return s
}

// SetIpAddressVersions sets the IpAddressVersions field's value.
func (s *CreateVpcEndpointInput) SetIpAddressVersions(v []*string) *CreateVpcEndpointInput {
	s.IpAddressVersions = v
	return s
}

// SetPrivateDNSEnabled sets the PrivateDNSEnabled field's value.
func (s *CreateVpcEndpointInput) SetPrivateDNSEnabled(v string) *CreateVpcEndpointInput {
	s.PrivateDNSEnabled = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *CreateVpcEndpointInput) SetProjectName(v string) *CreateVpcEndpointInput {
	s.ProjectName = &v
	return s
}

// SetSecurityGroupIds sets the SecurityGroupIds field's value.
func (s *CreateVpcEndpointInput) SetSecurityGroupIds(v []*string) *CreateVpcEndpointInput {
	s.SecurityGroupIds = v
	return s
}

// SetServiceId sets the ServiceId field's value.
func (s *CreateVpcEndpointInput) SetServiceId(v string) *CreateVpcEndpointInput {
	s.ServiceId = &v
	return s
}

// SetServiceManaged sets the ServiceManaged field's value.
func (s *CreateVpcEndpointInput) SetServiceManaged(v bool) *CreateVpcEndpointInput {
	s.ServiceManaged = &v
	return s
}

// SetServiceName sets the ServiceName field's value.
func (s *CreateVpcEndpointInput) SetServiceName(v string) *CreateVpcEndpointInput {
	s.ServiceName = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *CreateVpcEndpointInput) SetTags(v []*TagForCreateVpcEndpointInput) *CreateVpcEndpointInput {
	s.Tags = v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *CreateVpcEndpointInput) SetVpcId(v string) *CreateVpcEndpointInput {
	s.VpcId = &v
	return s
}

// SetZones sets the Zones field's value.
func (s *CreateVpcEndpointInput) SetZones(v []*ZoneForCreateVpcEndpointInput) *CreateVpcEndpointInput {
	s.Zones = v
	return s
}

type CreateVpcEndpointOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	EndpointId *string `type:"string"`

	PreOrderNumbers []*string `type:"list"`

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s CreateVpcEndpointOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateVpcEndpointOutput) GoString() string {
	return s.String()
}

// SetEndpointId sets the EndpointId field's value.
func (s *CreateVpcEndpointOutput) SetEndpointId(v string) *CreateVpcEndpointOutput {
	s.EndpointId = &v
	return s
}

// SetPreOrderNumbers sets the PreOrderNumbers field's value.
func (s *CreateVpcEndpointOutput) SetPreOrderNumbers(v []*string) *CreateVpcEndpointOutput {
	s.PreOrderNumbers = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *CreateVpcEndpointOutput) SetRequestId(v string) *CreateVpcEndpointOutput {
	s.RequestId = &v
	return s
}

type TagForCreateVpcEndpointInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForCreateVpcEndpointInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForCreateVpcEndpointInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForCreateVpcEndpointInput) SetKey(v string) *TagForCreateVpcEndpointInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForCreateVpcEndpointInput) SetValue(v string) *TagForCreateVpcEndpointInput {
	s.Value = &v
	return s
}

type ZoneForCreateVpcEndpointInput struct {
	_ struct{} `type:"structure"`

	PrivateIpAddress *string `type:"string"`

	PrivateIpv6Address *string `type:"string"`

	SubnetId *string `type:"string"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s ZoneForCreateVpcEndpointInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ZoneForCreateVpcEndpointInput) GoString() string {
	return s.String()
}

// SetPrivateIpAddress sets the PrivateIpAddress field's value.
func (s *ZoneForCreateVpcEndpointInput) SetPrivateIpAddress(v string) *ZoneForCreateVpcEndpointInput {
	s.PrivateIpAddress = &v
	return s
}

// SetPrivateIpv6Address sets the PrivateIpv6Address field's value.
func (s *ZoneForCreateVpcEndpointInput) SetPrivateIpv6Address(v string) *ZoneForCreateVpcEndpointInput {
	s.PrivateIpv6Address = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *ZoneForCreateVpcEndpointInput) SetSubnetId(v string) *ZoneForCreateVpcEndpointInput {
	s.SubnetId = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *ZoneForCreateVpcEndpointInput) SetZoneId(v string) *ZoneForCreateVpcEndpointInput {
	s.ZoneId = &v
	return s
}
