// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package privatelink

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opAddZoneToVpcEndpointCommon = "AddZoneToVpcEndpoint"

// AddZoneToVpcEndpointCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the AddZoneToVpcEndpointCommon operation. The "output" return
// value will be populated with the AddZoneToVpcEndpointCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AddZoneToVpcEndpointCommon Request to send the API call to the service.
// the "output" return value is not valid until after AddZoneToVpcEndpointCommon Send returns without error.
//
// See AddZoneToVpcEndpointCommon for more information on using the AddZoneToVpcEndpointCommon
// API call, and error handling.
//
//    // Example sending a request using the AddZoneToVpcEndpointCommonRequest method.
//    req, resp := client.AddZoneToVpcEndpointCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATELINK) AddZoneToVpcEndpointCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opAddZoneToVpcEndpointCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// AddZoneToVpcEndpointCommon API operation for PRIVATELINK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATELINK's
// API operation AddZoneToVpcEndpointCommon for usage and error information.
func (c *PRIVATELINK) AddZoneToVpcEndpointCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.AddZoneToVpcEndpointCommonRequest(input)
	return out, req.Send()
}

// AddZoneToVpcEndpointCommonWithContext is the same as AddZoneToVpcEndpointCommon with the addition of
// the ability to pass a context and additional request options.
//
// See AddZoneToVpcEndpointCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATELINK) AddZoneToVpcEndpointCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.AddZoneToVpcEndpointCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAddZoneToVpcEndpoint = "AddZoneToVpcEndpoint"

// AddZoneToVpcEndpointRequest generates a "volcengine/request.Request" representing the
// client's request for the AddZoneToVpcEndpoint operation. The "output" return
// value will be populated with the AddZoneToVpcEndpointCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AddZoneToVpcEndpointCommon Request to send the API call to the service.
// the "output" return value is not valid until after AddZoneToVpcEndpointCommon Send returns without error.
//
// See AddZoneToVpcEndpoint for more information on using the AddZoneToVpcEndpoint
// API call, and error handling.
//
//    // Example sending a request using the AddZoneToVpcEndpointRequest method.
//    req, resp := client.AddZoneToVpcEndpointRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATELINK) AddZoneToVpcEndpointRequest(input *AddZoneToVpcEndpointInput) (req *request.Request, output *AddZoneToVpcEndpointOutput) {
	op := &request.Operation{
		Name:       opAddZoneToVpcEndpoint,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AddZoneToVpcEndpointInput{}
	}

	output = &AddZoneToVpcEndpointOutput{}
	req = c.newRequest(op, input, output)

	return
}

// AddZoneToVpcEndpoint API operation for PRIVATELINK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATELINK's
// API operation AddZoneToVpcEndpoint for usage and error information.
func (c *PRIVATELINK) AddZoneToVpcEndpoint(input *AddZoneToVpcEndpointInput) (*AddZoneToVpcEndpointOutput, error) {
	req, out := c.AddZoneToVpcEndpointRequest(input)
	return out, req.Send()
}

// AddZoneToVpcEndpointWithContext is the same as AddZoneToVpcEndpoint with the addition of
// the ability to pass a context and additional request options.
//
// See AddZoneToVpcEndpoint for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATELINK) AddZoneToVpcEndpointWithContext(ctx volcengine.Context, input *AddZoneToVpcEndpointInput, opts ...request.Option) (*AddZoneToVpcEndpointOutput, error) {
	req, out := c.AddZoneToVpcEndpointRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AddZoneToVpcEndpointInput struct {
	_ struct{} `type:"structure"`

	// EndpointId is a required field
	EndpointId *string `type:"string" required:"true"`

	PrivateIpAddress *string `type:"string"`

	PrivateIpv6Address *string `type:"string"`

	// SubnetId is a required field
	SubnetId *string `type:"string" required:"true"`

	// ZoneId is a required field
	ZoneId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s AddZoneToVpcEndpointInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddZoneToVpcEndpointInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AddZoneToVpcEndpointInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "AddZoneToVpcEndpointInput"}
	if s.EndpointId == nil {
		invalidParams.Add(request.NewErrParamRequired("EndpointId"))
	}
	if s.SubnetId == nil {
		invalidParams.Add(request.NewErrParamRequired("SubnetId"))
	}
	if s.ZoneId == nil {
		invalidParams.Add(request.NewErrParamRequired("ZoneId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetEndpointId sets the EndpointId field's value.
func (s *AddZoneToVpcEndpointInput) SetEndpointId(v string) *AddZoneToVpcEndpointInput {
	s.EndpointId = &v
	return s
}

// SetPrivateIpAddress sets the PrivateIpAddress field's value.
func (s *AddZoneToVpcEndpointInput) SetPrivateIpAddress(v string) *AddZoneToVpcEndpointInput {
	s.PrivateIpAddress = &v
	return s
}

// SetPrivateIpv6Address sets the PrivateIpv6Address field's value.
func (s *AddZoneToVpcEndpointInput) SetPrivateIpv6Address(v string) *AddZoneToVpcEndpointInput {
	s.PrivateIpv6Address = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *AddZoneToVpcEndpointInput) SetSubnetId(v string) *AddZoneToVpcEndpointInput {
	s.SubnetId = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *AddZoneToVpcEndpointInput) SetZoneId(v string) *AddZoneToVpcEndpointInput {
	s.ZoneId = &v
	return s
}

type AddZoneToVpcEndpointOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s AddZoneToVpcEndpointOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddZoneToVpcEndpointOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *AddZoneToVpcEndpointOutput) SetRequestId(v string) *AddZoneToVpcEndpointOutput {
	s.RequestId = &v
	return s
}
