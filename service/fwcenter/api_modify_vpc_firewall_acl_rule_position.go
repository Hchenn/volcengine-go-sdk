// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package fwcenter

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyVpcFirewallAclRulePositionCommon = "ModifyVpcFirewallAclRulePosition"

// ModifyVpcFirewallAclRulePositionCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyVpcFirewallAclRulePositionCommon operation. The "output" return
// value will be populated with the ModifyVpcFirewallAclRulePositionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyVpcFirewallAclRulePositionCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyVpcFirewallAclRulePositionCommon Send returns without error.
//
// See ModifyVpcFirewallAclRulePositionCommon for more information on using the ModifyVpcFirewallAclRulePositionCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyVpcFirewallAclRulePositionCommonRequest method.
//    req, resp := client.ModifyVpcFirewallAclRulePositionCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FWCENTER) ModifyVpcFirewallAclRulePositionCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyVpcFirewallAclRulePositionCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyVpcFirewallAclRulePositionCommon API operation for FWCENTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FWCENTER's
// API operation ModifyVpcFirewallAclRulePositionCommon for usage and error information.
func (c *FWCENTER) ModifyVpcFirewallAclRulePositionCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyVpcFirewallAclRulePositionCommonRequest(input)
	return out, req.Send()
}

// ModifyVpcFirewallAclRulePositionCommonWithContext is the same as ModifyVpcFirewallAclRulePositionCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyVpcFirewallAclRulePositionCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FWCENTER) ModifyVpcFirewallAclRulePositionCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyVpcFirewallAclRulePositionCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyVpcFirewallAclRulePosition = "ModifyVpcFirewallAclRulePosition"

// ModifyVpcFirewallAclRulePositionRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyVpcFirewallAclRulePosition operation. The "output" return
// value will be populated with the ModifyVpcFirewallAclRulePositionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyVpcFirewallAclRulePositionCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyVpcFirewallAclRulePositionCommon Send returns without error.
//
// See ModifyVpcFirewallAclRulePosition for more information on using the ModifyVpcFirewallAclRulePosition
// API call, and error handling.
//
//    // Example sending a request using the ModifyVpcFirewallAclRulePositionRequest method.
//    req, resp := client.ModifyVpcFirewallAclRulePositionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FWCENTER) ModifyVpcFirewallAclRulePositionRequest(input *ModifyVpcFirewallAclRulePositionInput) (req *request.Request, output *ModifyVpcFirewallAclRulePositionOutput) {
	op := &request.Operation{
		Name:       opModifyVpcFirewallAclRulePosition,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyVpcFirewallAclRulePositionInput{}
	}

	output = &ModifyVpcFirewallAclRulePositionOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyVpcFirewallAclRulePosition API operation for FWCENTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FWCENTER's
// API operation ModifyVpcFirewallAclRulePosition for usage and error information.
func (c *FWCENTER) ModifyVpcFirewallAclRulePosition(input *ModifyVpcFirewallAclRulePositionInput) (*ModifyVpcFirewallAclRulePositionOutput, error) {
	req, out := c.ModifyVpcFirewallAclRulePositionRequest(input)
	return out, req.Send()
}

// ModifyVpcFirewallAclRulePositionWithContext is the same as ModifyVpcFirewallAclRulePosition with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyVpcFirewallAclRulePosition for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FWCENTER) ModifyVpcFirewallAclRulePositionWithContext(ctx volcengine.Context, input *ModifyVpcFirewallAclRulePositionInput, opts ...request.Option) (*ModifyVpcFirewallAclRulePositionOutput, error) {
	req, out := c.ModifyVpcFirewallAclRulePositionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyVpcFirewallAclRulePositionInput struct {
	_ struct{} `type:"structure"`

	// NewPrio is a required field
	NewPrio *int32 `type:"int32" required:"true"`

	// RuleId is a required field
	RuleId *string `type:"string" required:"true"`

	// VpcFirewallId is a required field
	VpcFirewallId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s ModifyVpcFirewallAclRulePositionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyVpcFirewallAclRulePositionInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyVpcFirewallAclRulePositionInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyVpcFirewallAclRulePositionInput"}
	if s.NewPrio == nil {
		invalidParams.Add(request.NewErrParamRequired("NewPrio"))
	}
	if s.RuleId == nil {
		invalidParams.Add(request.NewErrParamRequired("RuleId"))
	}
	if s.VpcFirewallId == nil {
		invalidParams.Add(request.NewErrParamRequired("VpcFirewallId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetNewPrio sets the NewPrio field's value.
func (s *ModifyVpcFirewallAclRulePositionInput) SetNewPrio(v int32) *ModifyVpcFirewallAclRulePositionInput {
	s.NewPrio = &v
	return s
}

// SetRuleId sets the RuleId field's value.
func (s *ModifyVpcFirewallAclRulePositionInput) SetRuleId(v string) *ModifyVpcFirewallAclRulePositionInput {
	s.RuleId = &v
	return s
}

// SetVpcFirewallId sets the VpcFirewallId field's value.
func (s *ModifyVpcFirewallAclRulePositionInput) SetVpcFirewallId(v string) *ModifyVpcFirewallAclRulePositionInput {
	s.VpcFirewallId = &v
	return s
}

type ModifyVpcFirewallAclRulePositionOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyVpcFirewallAclRulePositionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyVpcFirewallAclRulePositionOutput) GoString() string {
	return s.String()
}
