// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package fwcenter

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateNatFirewallControlPolicySwitchCommon = "UpdateNatFirewallControlPolicySwitch"

// UpdateNatFirewallControlPolicySwitchCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateNatFirewallControlPolicySwitchCommon operation. The "output" return
// value will be populated with the UpdateNatFirewallControlPolicySwitchCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateNatFirewallControlPolicySwitchCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateNatFirewallControlPolicySwitchCommon Send returns without error.
//
// See UpdateNatFirewallControlPolicySwitchCommon for more information on using the UpdateNatFirewallControlPolicySwitchCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateNatFirewallControlPolicySwitchCommonRequest method.
//    req, resp := client.UpdateNatFirewallControlPolicySwitchCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FWCENTER) UpdateNatFirewallControlPolicySwitchCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateNatFirewallControlPolicySwitchCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateNatFirewallControlPolicySwitchCommon API operation for FWCENTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FWCENTER's
// API operation UpdateNatFirewallControlPolicySwitchCommon for usage and error information.
func (c *FWCENTER) UpdateNatFirewallControlPolicySwitchCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateNatFirewallControlPolicySwitchCommonRequest(input)
	return out, req.Send()
}

// UpdateNatFirewallControlPolicySwitchCommonWithContext is the same as UpdateNatFirewallControlPolicySwitchCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateNatFirewallControlPolicySwitchCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FWCENTER) UpdateNatFirewallControlPolicySwitchCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateNatFirewallControlPolicySwitchCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateNatFirewallControlPolicySwitch = "UpdateNatFirewallControlPolicySwitch"

// UpdateNatFirewallControlPolicySwitchRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateNatFirewallControlPolicySwitch operation. The "output" return
// value will be populated with the UpdateNatFirewallControlPolicySwitchCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateNatFirewallControlPolicySwitchCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateNatFirewallControlPolicySwitchCommon Send returns without error.
//
// See UpdateNatFirewallControlPolicySwitch for more information on using the UpdateNatFirewallControlPolicySwitch
// API call, and error handling.
//
//    // Example sending a request using the UpdateNatFirewallControlPolicySwitchRequest method.
//    req, resp := client.UpdateNatFirewallControlPolicySwitchRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FWCENTER) UpdateNatFirewallControlPolicySwitchRequest(input *UpdateNatFirewallControlPolicySwitchInput) (req *request.Request, output *UpdateNatFirewallControlPolicySwitchOutput) {
	op := &request.Operation{
		Name:       opUpdateNatFirewallControlPolicySwitch,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateNatFirewallControlPolicySwitchInput{}
	}

	output = &UpdateNatFirewallControlPolicySwitchOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateNatFirewallControlPolicySwitch API operation for FWCENTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FWCENTER's
// API operation UpdateNatFirewallControlPolicySwitch for usage and error information.
func (c *FWCENTER) UpdateNatFirewallControlPolicySwitch(input *UpdateNatFirewallControlPolicySwitchInput) (*UpdateNatFirewallControlPolicySwitchOutput, error) {
	req, out := c.UpdateNatFirewallControlPolicySwitchRequest(input)
	return out, req.Send()
}

// UpdateNatFirewallControlPolicySwitchWithContext is the same as UpdateNatFirewallControlPolicySwitch with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateNatFirewallControlPolicySwitch for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FWCENTER) UpdateNatFirewallControlPolicySwitchWithContext(ctx volcengine.Context, input *UpdateNatFirewallControlPolicySwitchInput, opts ...request.Option) (*UpdateNatFirewallControlPolicySwitchOutput, error) {
	req, out := c.UpdateNatFirewallControlPolicySwitchRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type UpdateNatFirewallControlPolicySwitchInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Direction is a required field
	Direction *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfDirectionForUpdateNatFirewallControlPolicySwitchInput"`

	// NatFirewallId is a required field
	NatFirewallId *string `type:"string" json:",omitempty" required:"true"`

	RuleIds []*string `type:"list" json:",omitempty"`

	Status *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s UpdateNatFirewallControlPolicySwitchInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateNatFirewallControlPolicySwitchInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateNatFirewallControlPolicySwitchInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateNatFirewallControlPolicySwitchInput"}
	if s.Direction == nil {
		invalidParams.Add(request.NewErrParamRequired("Direction"))
	}
	if s.NatFirewallId == nil {
		invalidParams.Add(request.NewErrParamRequired("NatFirewallId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDirection sets the Direction field's value.
func (s *UpdateNatFirewallControlPolicySwitchInput) SetDirection(v string) *UpdateNatFirewallControlPolicySwitchInput {
	s.Direction = &v
	return s
}

// SetNatFirewallId sets the NatFirewallId field's value.
func (s *UpdateNatFirewallControlPolicySwitchInput) SetNatFirewallId(v string) *UpdateNatFirewallControlPolicySwitchInput {
	s.NatFirewallId = &v
	return s
}

// SetRuleIds sets the RuleIds field's value.
func (s *UpdateNatFirewallControlPolicySwitchInput) SetRuleIds(v []*string) *UpdateNatFirewallControlPolicySwitchInput {
	s.RuleIds = v
	return s
}

// SetStatus sets the Status field's value.
func (s *UpdateNatFirewallControlPolicySwitchInput) SetStatus(v bool) *UpdateNatFirewallControlPolicySwitchInput {
	s.Status = &v
	return s
}

type UpdateNatFirewallControlPolicySwitchOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	RuleIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s UpdateNatFirewallControlPolicySwitchOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateNatFirewallControlPolicySwitchOutput) GoString() string {
	return s.String()
}

// SetRuleIds sets the RuleIds field's value.
func (s *UpdateNatFirewallControlPolicySwitchOutput) SetRuleIds(v []*string) *UpdateNatFirewallControlPolicySwitchOutput {
	s.RuleIds = v
	return s
}

const (
	// EnumOfDirectionForUpdateNatFirewallControlPolicySwitchInputIn is a EnumOfDirectionForUpdateNatFirewallControlPolicySwitchInput enum value
	EnumOfDirectionForUpdateNatFirewallControlPolicySwitchInputIn = "in"

	// EnumOfDirectionForUpdateNatFirewallControlPolicySwitchInputOut is a EnumOfDirectionForUpdateNatFirewallControlPolicySwitchInput enum value
	EnumOfDirectionForUpdateNatFirewallControlPolicySwitchInputOut = "out"
)
