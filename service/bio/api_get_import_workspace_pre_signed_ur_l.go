// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package bio

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetImportWorkspacePreSignedURLCommon = "GetImportWorkspacePreSignedURL"

// GetImportWorkspacePreSignedURLCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetImportWorkspacePreSignedURLCommon operation. The "output" return
// value will be populated with the GetImportWorkspacePreSignedURLCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetImportWorkspacePreSignedURLCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetImportWorkspacePreSignedURLCommon Send returns without error.
//
// See GetImportWorkspacePreSignedURLCommon for more information on using the GetImportWorkspacePreSignedURLCommon
// API call, and error handling.
//
//    // Example sending a request using the GetImportWorkspacePreSignedURLCommonRequest method.
//    req, resp := client.GetImportWorkspacePreSignedURLCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BIO) GetImportWorkspacePreSignedURLCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetImportWorkspacePreSignedURLCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetImportWorkspacePreSignedURLCommon API operation for BIO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BIO's
// API operation GetImportWorkspacePreSignedURLCommon for usage and error information.
func (c *BIO) GetImportWorkspacePreSignedURLCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetImportWorkspacePreSignedURLCommonRequest(input)
	return out, req.Send()
}

// GetImportWorkspacePreSignedURLCommonWithContext is the same as GetImportWorkspacePreSignedURLCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetImportWorkspacePreSignedURLCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BIO) GetImportWorkspacePreSignedURLCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetImportWorkspacePreSignedURLCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetImportWorkspacePreSignedURL = "GetImportWorkspacePreSignedURL"

// GetImportWorkspacePreSignedURLRequest generates a "volcengine/request.Request" representing the
// client's request for the GetImportWorkspacePreSignedURL operation. The "output" return
// value will be populated with the GetImportWorkspacePreSignedURLCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetImportWorkspacePreSignedURLCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetImportWorkspacePreSignedURLCommon Send returns without error.
//
// See GetImportWorkspacePreSignedURL for more information on using the GetImportWorkspacePreSignedURL
// API call, and error handling.
//
//    // Example sending a request using the GetImportWorkspacePreSignedURLRequest method.
//    req, resp := client.GetImportWorkspacePreSignedURLRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BIO) GetImportWorkspacePreSignedURLRequest(input *GetImportWorkspacePreSignedURLInput) (req *request.Request, output *GetImportWorkspacePreSignedURLOutput) {
	op := &request.Operation{
		Name:       opGetImportWorkspacePreSignedURL,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetImportWorkspacePreSignedURLInput{}
	}

	output = &GetImportWorkspacePreSignedURLOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetImportWorkspacePreSignedURL API operation for BIO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BIO's
// API operation GetImportWorkspacePreSignedURL for usage and error information.
func (c *BIO) GetImportWorkspacePreSignedURL(input *GetImportWorkspacePreSignedURLInput) (*GetImportWorkspacePreSignedURLOutput, error) {
	req, out := c.GetImportWorkspacePreSignedURLRequest(input)
	return out, req.Send()
}

// GetImportWorkspacePreSignedURLWithContext is the same as GetImportWorkspacePreSignedURL with the addition of
// the ability to pass a context and additional request options.
//
// See GetImportWorkspacePreSignedURL for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BIO) GetImportWorkspacePreSignedURLWithContext(ctx volcengine.Context, input *GetImportWorkspacePreSignedURLInput, opts ...request.Option) (*GetImportWorkspacePreSignedURLOutput, error) {
	req, out := c.GetImportWorkspacePreSignedURLRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetImportWorkspacePreSignedURLInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// FileName is a required field
	FileName *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetImportWorkspacePreSignedURLInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetImportWorkspacePreSignedURLInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetImportWorkspacePreSignedURLInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetImportWorkspacePreSignedURLInput"}
	if s.FileName == nil {
		invalidParams.Add(request.NewErrParamRequired("FileName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFileName sets the FileName field's value.
func (s *GetImportWorkspacePreSignedURLInput) SetFileName(v string) *GetImportWorkspacePreSignedURLInput {
	s.FileName = &v
	return s
}

type GetImportWorkspacePreSignedURLOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	PreSignedURL *string `type:"string" json:",omitempty"`

	SchemaKey *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetImportWorkspacePreSignedURLOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetImportWorkspacePreSignedURLOutput) GoString() string {
	return s.String()
}

// SetPreSignedURL sets the PreSignedURL field's value.
func (s *GetImportWorkspacePreSignedURLOutput) SetPreSignedURL(v string) *GetImportWorkspacePreSignedURLOutput {
	s.PreSignedURL = &v
	return s
}

// SetSchemaKey sets the SchemaKey field's value.
func (s *GetImportWorkspacePreSignedURLOutput) SetSchemaKey(v string) *GetImportWorkspacePreSignedURLOutput {
	s.SchemaKey = &v
	return s
}
