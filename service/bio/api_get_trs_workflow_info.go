// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package bio

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetTRSWorkflowInfoCommon = "GetTRSWorkflowInfo"

// GetTRSWorkflowInfoCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetTRSWorkflowInfoCommon operation. The "output" return
// value will be populated with the GetTRSWorkflowInfoCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetTRSWorkflowInfoCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetTRSWorkflowInfoCommon Send returns without error.
//
// See GetTRSWorkflowInfoCommon for more information on using the GetTRSWorkflowInfoCommon
// API call, and error handling.
//
//    // Example sending a request using the GetTRSWorkflowInfoCommonRequest method.
//    req, resp := client.GetTRSWorkflowInfoCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BIO) GetTRSWorkflowInfoCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetTRSWorkflowInfoCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetTRSWorkflowInfoCommon API operation for BIO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BIO's
// API operation GetTRSWorkflowInfoCommon for usage and error information.
func (c *BIO) GetTRSWorkflowInfoCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetTRSWorkflowInfoCommonRequest(input)
	return out, req.Send()
}

// GetTRSWorkflowInfoCommonWithContext is the same as GetTRSWorkflowInfoCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetTRSWorkflowInfoCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BIO) GetTRSWorkflowInfoCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetTRSWorkflowInfoCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetTRSWorkflowInfo = "GetTRSWorkflowInfo"

// GetTRSWorkflowInfoRequest generates a "volcengine/request.Request" representing the
// client's request for the GetTRSWorkflowInfo operation. The "output" return
// value will be populated with the GetTRSWorkflowInfoCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetTRSWorkflowInfoCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetTRSWorkflowInfoCommon Send returns without error.
//
// See GetTRSWorkflowInfo for more information on using the GetTRSWorkflowInfo
// API call, and error handling.
//
//    // Example sending a request using the GetTRSWorkflowInfoRequest method.
//    req, resp := client.GetTRSWorkflowInfoRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BIO) GetTRSWorkflowInfoRequest(input *GetTRSWorkflowInfoInput) (req *request.Request, output *GetTRSWorkflowInfoOutput) {
	op := &request.Operation{
		Name:       opGetTRSWorkflowInfo,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetTRSWorkflowInfoInput{}
	}

	output = &GetTRSWorkflowInfoOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetTRSWorkflowInfo API operation for BIO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BIO's
// API operation GetTRSWorkflowInfo for usage and error information.
func (c *BIO) GetTRSWorkflowInfo(input *GetTRSWorkflowInfoInput) (*GetTRSWorkflowInfoOutput, error) {
	req, out := c.GetTRSWorkflowInfoRequest(input)
	return out, req.Send()
}

// GetTRSWorkflowInfoWithContext is the same as GetTRSWorkflowInfo with the addition of
// the ability to pass a context and additional request options.
//
// See GetTRSWorkflowInfo for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BIO) GetTRSWorkflowInfoWithContext(ctx volcengine.Context, input *GetTRSWorkflowInfoInput, opts ...request.Option) (*GetTRSWorkflowInfoOutput, error) {
	req, out := c.GetTRSWorkflowInfoRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetTRSWorkflowInfoInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// ID is a required field
	ID *string `type:"string" json:",omitempty" required:"true"`

	// TRSServer is a required field
	TRSServer *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetTRSWorkflowInfoInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTRSWorkflowInfoInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetTRSWorkflowInfoInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetTRSWorkflowInfoInput"}
	if s.ID == nil {
		invalidParams.Add(request.NewErrParamRequired("ID"))
	}
	if s.TRSServer == nil {
		invalidParams.Add(request.NewErrParamRequired("TRSServer"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetID sets the ID field's value.
func (s *GetTRSWorkflowInfoInput) SetID(v string) *GetTRSWorkflowInfoInput {
	s.ID = &v
	return s
}

// SetTRSServer sets the TRSServer field's value.
func (s *GetTRSWorkflowInfoInput) SetTRSServer(v string) *GetTRSWorkflowInfoInput {
	s.TRSServer = &v
	return s
}

type GetTRSWorkflowInfoOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Description *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	VersionsInfo []*VersionsInfoForGetTRSWorkflowInfoOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s GetTRSWorkflowInfoOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTRSWorkflowInfoOutput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *GetTRSWorkflowInfoOutput) SetDescription(v string) *GetTRSWorkflowInfoOutput {
	s.Description = &v
	return s
}

// SetName sets the Name field's value.
func (s *GetTRSWorkflowInfoOutput) SetName(v string) *GetTRSWorkflowInfoOutput {
	s.Name = &v
	return s
}

// SetVersionsInfo sets the VersionsInfo field's value.
func (s *GetTRSWorkflowInfoOutput) SetVersionsInfo(v []*VersionsInfoForGetTRSWorkflowInfoOutput) *GetTRSWorkflowInfoOutput {
	s.VersionsInfo = v
	return s
}

type VersionsInfoForGetTRSWorkflowInfoOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Language *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s VersionsInfoForGetTRSWorkflowInfoOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VersionsInfoForGetTRSWorkflowInfoOutput) GoString() string {
	return s.String()
}

// SetLanguage sets the Language field's value.
func (s *VersionsInfoForGetTRSWorkflowInfoOutput) SetLanguage(v string) *VersionsInfoForGetTRSWorkflowInfoOutput {
	s.Language = &v
	return s
}

// SetName sets the Name field's value.
func (s *VersionsInfoForGetTRSWorkflowInfoOutput) SetName(v string) *VersionsInfoForGetTRSWorkflowInfoOutput {
	s.Name = &v
	return s
}
