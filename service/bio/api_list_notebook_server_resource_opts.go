// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package bio

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListNotebookServerResourceOptsCommon = "ListNotebookServerResourceOpts"

// ListNotebookServerResourceOptsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListNotebookServerResourceOptsCommon operation. The "output" return
// value will be populated with the ListNotebookServerResourceOptsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListNotebookServerResourceOptsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListNotebookServerResourceOptsCommon Send returns without error.
//
// See ListNotebookServerResourceOptsCommon for more information on using the ListNotebookServerResourceOptsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListNotebookServerResourceOptsCommonRequest method.
//    req, resp := client.ListNotebookServerResourceOptsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BIO) ListNotebookServerResourceOptsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListNotebookServerResourceOptsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListNotebookServerResourceOptsCommon API operation for BIO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BIO's
// API operation ListNotebookServerResourceOptsCommon for usage and error information.
func (c *BIO) ListNotebookServerResourceOptsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListNotebookServerResourceOptsCommonRequest(input)
	return out, req.Send()
}

// ListNotebookServerResourceOptsCommonWithContext is the same as ListNotebookServerResourceOptsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListNotebookServerResourceOptsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BIO) ListNotebookServerResourceOptsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListNotebookServerResourceOptsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListNotebookServerResourceOpts = "ListNotebookServerResourceOpts"

// ListNotebookServerResourceOptsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListNotebookServerResourceOpts operation. The "output" return
// value will be populated with the ListNotebookServerResourceOptsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListNotebookServerResourceOptsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListNotebookServerResourceOptsCommon Send returns without error.
//
// See ListNotebookServerResourceOpts for more information on using the ListNotebookServerResourceOpts
// API call, and error handling.
//
//    // Example sending a request using the ListNotebookServerResourceOptsRequest method.
//    req, resp := client.ListNotebookServerResourceOptsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BIO) ListNotebookServerResourceOptsRequest(input *ListNotebookServerResourceOptsInput) (req *request.Request, output *ListNotebookServerResourceOptsOutput) {
	op := &request.Operation{
		Name:       opListNotebookServerResourceOpts,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListNotebookServerResourceOptsInput{}
	}

	output = &ListNotebookServerResourceOptsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListNotebookServerResourceOpts API operation for BIO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BIO's
// API operation ListNotebookServerResourceOpts for usage and error information.
func (c *BIO) ListNotebookServerResourceOpts(input *ListNotebookServerResourceOptsInput) (*ListNotebookServerResourceOptsOutput, error) {
	req, out := c.ListNotebookServerResourceOptsRequest(input)
	return out, req.Send()
}

// ListNotebookServerResourceOptsWithContext is the same as ListNotebookServerResourceOpts with the addition of
// the ability to pass a context and additional request options.
//
// See ListNotebookServerResourceOpts for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BIO) ListNotebookServerResourceOptsWithContext(ctx volcengine.Context, input *ListNotebookServerResourceOptsInput, opts ...request.Option) (*ListNotebookServerResourceOptsOutput, error) {
	req, out := c.ListNotebookServerResourceOptsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListNotebookServerResourceOptsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ListNotebookServerResourceOptsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListNotebookServerResourceOptsInput) GoString() string {
	return s.String()
}

type ListNotebookServerResourceOptsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ResourceSize []*ResourceSizeForListNotebookServerResourceOptsOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListNotebookServerResourceOptsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListNotebookServerResourceOptsOutput) GoString() string {
	return s.String()
}

// SetResourceSize sets the ResourceSize field's value.
func (s *ListNotebookServerResourceOptsOutput) SetResourceSize(v []*ResourceSizeForListNotebookServerResourceOptsOutput) *ListNotebookServerResourceOptsOutput {
	s.ResourceSize = v
	return s
}

type ResourceSizeForListNotebookServerResourceOptsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Cpu *int32 `type:"int32" json:",omitempty"`

	Memory *int32 `type:"int32" json:",omitempty"`

	ResourceSize *string `type:"string" json:",omitempty" enum:"EnumOfResourceSizeForListNotebookServerResourceOptsOutput"`
}

// String returns the string representation
func (s ResourceSizeForListNotebookServerResourceOptsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceSizeForListNotebookServerResourceOptsOutput) GoString() string {
	return s.String()
}

// SetCpu sets the Cpu field's value.
func (s *ResourceSizeForListNotebookServerResourceOptsOutput) SetCpu(v int32) *ResourceSizeForListNotebookServerResourceOptsOutput {
	s.Cpu = &v
	return s
}

// SetMemory sets the Memory field's value.
func (s *ResourceSizeForListNotebookServerResourceOptsOutput) SetMemory(v int32) *ResourceSizeForListNotebookServerResourceOptsOutput {
	s.Memory = &v
	return s
}

// SetResourceSize sets the ResourceSize field's value.
func (s *ResourceSizeForListNotebookServerResourceOptsOutput) SetResourceSize(v string) *ResourceSizeForListNotebookServerResourceOptsOutput {
	s.ResourceSize = &v
	return s
}

const (
	// EnumOfResourceSizeForListNotebookServerResourceOptsOutputSmall is a EnumOfResourceSizeForListNotebookServerResourceOptsOutput enum value
	EnumOfResourceSizeForListNotebookServerResourceOptsOutputSmall = "small"

	// EnumOfResourceSizeForListNotebookServerResourceOptsOutputMiddle is a EnumOfResourceSizeForListNotebookServerResourceOptsOutput enum value
	EnumOfResourceSizeForListNotebookServerResourceOptsOutputMiddle = "middle"

	// EnumOfResourceSizeForListNotebookServerResourceOptsOutputLarge is a EnumOfResourceSizeForListNotebookServerResourceOptsOutput enum value
	EnumOfResourceSizeForListNotebookServerResourceOptsOutputLarge = "large"
)
