// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package bio

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opAttachWorkspaceExtraBucketCommon = "AttachWorkspaceExtraBucket"

// AttachWorkspaceExtraBucketCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the AttachWorkspaceExtraBucketCommon operation. The "output" return
// value will be populated with the AttachWorkspaceExtraBucketCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AttachWorkspaceExtraBucketCommon Request to send the API call to the service.
// the "output" return value is not valid until after AttachWorkspaceExtraBucketCommon Send returns without error.
//
// See AttachWorkspaceExtraBucketCommon for more information on using the AttachWorkspaceExtraBucketCommon
// API call, and error handling.
//
//    // Example sending a request using the AttachWorkspaceExtraBucketCommonRequest method.
//    req, resp := client.AttachWorkspaceExtraBucketCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BIO) AttachWorkspaceExtraBucketCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opAttachWorkspaceExtraBucketCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AttachWorkspaceExtraBucketCommon API operation for BIO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BIO's
// API operation AttachWorkspaceExtraBucketCommon for usage and error information.
func (c *BIO) AttachWorkspaceExtraBucketCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.AttachWorkspaceExtraBucketCommonRequest(input)
	return out, req.Send()
}

// AttachWorkspaceExtraBucketCommonWithContext is the same as AttachWorkspaceExtraBucketCommon with the addition of
// the ability to pass a context and additional request options.
//
// See AttachWorkspaceExtraBucketCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BIO) AttachWorkspaceExtraBucketCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.AttachWorkspaceExtraBucketCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAttachWorkspaceExtraBucket = "AttachWorkspaceExtraBucket"

// AttachWorkspaceExtraBucketRequest generates a "volcengine/request.Request" representing the
// client's request for the AttachWorkspaceExtraBucket operation. The "output" return
// value will be populated with the AttachWorkspaceExtraBucketCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AttachWorkspaceExtraBucketCommon Request to send the API call to the service.
// the "output" return value is not valid until after AttachWorkspaceExtraBucketCommon Send returns without error.
//
// See AttachWorkspaceExtraBucket for more information on using the AttachWorkspaceExtraBucket
// API call, and error handling.
//
//    // Example sending a request using the AttachWorkspaceExtraBucketRequest method.
//    req, resp := client.AttachWorkspaceExtraBucketRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BIO) AttachWorkspaceExtraBucketRequest(input *AttachWorkspaceExtraBucketInput) (req *request.Request, output *AttachWorkspaceExtraBucketOutput) {
	op := &request.Operation{
		Name:       opAttachWorkspaceExtraBucket,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AttachWorkspaceExtraBucketInput{}
	}

	output = &AttachWorkspaceExtraBucketOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AttachWorkspaceExtraBucket API operation for BIO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BIO's
// API operation AttachWorkspaceExtraBucket for usage and error information.
func (c *BIO) AttachWorkspaceExtraBucket(input *AttachWorkspaceExtraBucketInput) (*AttachWorkspaceExtraBucketOutput, error) {
	req, out := c.AttachWorkspaceExtraBucketRequest(input)
	return out, req.Send()
}

// AttachWorkspaceExtraBucketWithContext is the same as AttachWorkspaceExtraBucket with the addition of
// the ability to pass a context and additional request options.
//
// See AttachWorkspaceExtraBucket for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BIO) AttachWorkspaceExtraBucketWithContext(ctx volcengine.Context, input *AttachWorkspaceExtraBucketInput, opts ...request.Option) (*AttachWorkspaceExtraBucketOutput, error) {
	req, out := c.AttachWorkspaceExtraBucketRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AttachWorkspaceExtraBucketInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Bucket is a required field
	Bucket *string `type:"string" json:",omitempty" required:"true"`

	// ID is a required field
	ID *string `type:"string" json:",omitempty" required:"true"`

	// Type is a required field
	Type *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfTypeForAttachWorkspaceExtraBucketInput"`
}

// String returns the string representation
func (s AttachWorkspaceExtraBucketInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AttachWorkspaceExtraBucketInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AttachWorkspaceExtraBucketInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "AttachWorkspaceExtraBucketInput"}
	if s.Bucket == nil {
		invalidParams.Add(request.NewErrParamRequired("Bucket"))
	}
	if s.ID == nil {
		invalidParams.Add(request.NewErrParamRequired("ID"))
	}
	if s.Type == nil {
		invalidParams.Add(request.NewErrParamRequired("Type"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBucket sets the Bucket field's value.
func (s *AttachWorkspaceExtraBucketInput) SetBucket(v string) *AttachWorkspaceExtraBucketInput {
	s.Bucket = &v
	return s
}

// SetID sets the ID field's value.
func (s *AttachWorkspaceExtraBucketInput) SetID(v string) *AttachWorkspaceExtraBucketInput {
	s.ID = &v
	return s
}

// SetType sets the Type field's value.
func (s *AttachWorkspaceExtraBucketInput) SetType(v string) *AttachWorkspaceExtraBucketInput {
	s.Type = &v
	return s
}

type AttachWorkspaceExtraBucketOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s AttachWorkspaceExtraBucketOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AttachWorkspaceExtraBucketOutput) GoString() string {
	return s.String()
}

const (
	// EnumOfTypeForAttachWorkspaceExtraBucketInputPublicCloud is a EnumOfTypeForAttachWorkspaceExtraBucketInput enum value
	EnumOfTypeForAttachWorkspaceExtraBucketInputPublicCloud = "PublicCloud"
)
