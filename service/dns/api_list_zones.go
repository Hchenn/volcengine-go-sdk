// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package dns

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListZonesCommon = "ListZones"

// ListZonesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListZonesCommon operation. The "output" return
// value will be populated with the ListZonesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListZonesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListZonesCommon Send returns without error.
//
// See ListZonesCommon for more information on using the ListZonesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListZonesCommonRequest method.
//    req, resp := client.ListZonesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DNS) ListZonesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListZonesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListZonesCommon API operation for DNS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DNS's
// API operation ListZonesCommon for usage and error information.
func (c *DNS) ListZonesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListZonesCommonRequest(input)
	return out, req.Send()
}

// ListZonesCommonWithContext is the same as ListZonesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListZonesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DNS) ListZonesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListZonesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListZones = "ListZones"

// ListZonesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListZones operation. The "output" return
// value will be populated with the ListZonesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListZonesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListZonesCommon Send returns without error.
//
// See ListZones for more information on using the ListZones
// API call, and error handling.
//
//    // Example sending a request using the ListZonesRequest method.
//    req, resp := client.ListZonesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DNS) ListZonesRequest(input *ListZonesInput) (req *request.Request, output *ListZonesOutput) {
	op := &request.Operation{
		Name:       opListZones,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListZonesInput{}
	}

	output = &ListZonesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListZones API operation for DNS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DNS's
// API operation ListZones for usage and error information.
func (c *DNS) ListZones(input *ListZonesInput) (*ListZonesOutput, error) {
	req, out := c.ListZonesRequest(input)
	return out, req.Send()
}

// ListZonesWithContext is the same as ListZones with the addition of
// the ability to pass a context and additional request options.
//
// See ListZones for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DNS) ListZonesWithContext(ctx volcengine.Context, input *ListZonesInput, opts ...request.Option) (*ListZonesOutput, error) {
	req, out := c.ListZonesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListZonesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	OrderKey *string `type:"string" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	SearchMode *string `type:"string" json:",omitempty"`

	SearchOrder *string `type:"string" json:",omitempty"`

	Stage *string `type:"string" json:",omitempty"`

	TagFilters []*TagFilterForListZonesInput `type:"list" json:",omitempty"`

	TradeCode *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListZonesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListZonesInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *ListZonesInput) SetKey(v string) *ListZonesInput {
	s.Key = &v
	return s
}

// SetOrderKey sets the OrderKey field's value.
func (s *ListZonesInput) SetOrderKey(v string) *ListZonesInput {
	s.OrderKey = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListZonesInput) SetPageNumber(v int32) *ListZonesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListZonesInput) SetPageSize(v int32) *ListZonesInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ListZonesInput) SetProjectName(v string) *ListZonesInput {
	s.ProjectName = &v
	return s
}

// SetSearchMode sets the SearchMode field's value.
func (s *ListZonesInput) SetSearchMode(v string) *ListZonesInput {
	s.SearchMode = &v
	return s
}

// SetSearchOrder sets the SearchOrder field's value.
func (s *ListZonesInput) SetSearchOrder(v string) *ListZonesInput {
	s.SearchOrder = &v
	return s
}

// SetStage sets the Stage field's value.
func (s *ListZonesInput) SetStage(v string) *ListZonesInput {
	s.Stage = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *ListZonesInput) SetTagFilters(v []*TagFilterForListZonesInput) *ListZonesInput {
	s.TagFilters = v
	return s
}

// SetTradeCode sets the TradeCode field's value.
func (s *ListZonesInput) SetTradeCode(v string) *ListZonesInput {
	s.TradeCode = &v
	return s
}

type ListZonesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Total *int32 `type:"int32" json:",omitempty"`

	Zones []*ZoneForListZonesOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListZonesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListZonesOutput) GoString() string {
	return s.String()
}

// SetTotal sets the Total field's value.
func (s *ListZonesOutput) SetTotal(v int32) *ListZonesOutput {
	s.Total = &v
	return s
}

// SetZones sets the Zones field's value.
func (s *ListZonesOutput) SetZones(v []*ZoneForListZonesOutput) *ListZonesOutput {
	s.Zones = v
	return s
}

type TagFilterForListZonesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Values []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s TagFilterForListZonesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForListZonesInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForListZonesInput) SetKey(v string) *TagFilterForListZonesInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagFilterForListZonesInput) SetValues(v []*string) *TagFilterForListZonesInput {
	s.Values = v
	return s
}

type TagForListZonesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForListZonesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForListZonesOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForListZonesOutput) SetKey(v string) *TagForListZonesOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForListZonesOutput) SetValue(v string) *TagForListZonesOutput {
	s.Value = &v
	return s
}

type ZoneForListZonesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CacheStage *int32 `type:"int32" json:",omitempty"`

	ConfigurationCode *string `type:"string" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	DnsSecurity *string `type:"string" json:",omitempty"`

	ExpiredTime *int64 `type:"int64" json:",omitempty"`

	InstanceID *string `type:"string" json:",omitempty"`

	IsSubDomain *bool `type:"boolean" json:",omitempty"`

	LastOperator *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	RecordCount *int32 `type:"int32" json:",omitempty"`

	Remark *string `type:"string" json:",omitempty"`

	Tags []*TagForListZonesOutput `type:"list" json:",omitempty"`

	TradeCode *string `type:"string" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`

	ZID *int32 `type:"int32" json:",omitempty"`

	ZoneName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ZoneForListZonesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ZoneForListZonesOutput) GoString() string {
	return s.String()
}

// SetCacheStage sets the CacheStage field's value.
func (s *ZoneForListZonesOutput) SetCacheStage(v int32) *ZoneForListZonesOutput {
	s.CacheStage = &v
	return s
}

// SetConfigurationCode sets the ConfigurationCode field's value.
func (s *ZoneForListZonesOutput) SetConfigurationCode(v string) *ZoneForListZonesOutput {
	s.ConfigurationCode = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *ZoneForListZonesOutput) SetCreatedAt(v string) *ZoneForListZonesOutput {
	s.CreatedAt = &v
	return s
}

// SetDnsSecurity sets the DnsSecurity field's value.
func (s *ZoneForListZonesOutput) SetDnsSecurity(v string) *ZoneForListZonesOutput {
	s.DnsSecurity = &v
	return s
}

// SetExpiredTime sets the ExpiredTime field's value.
func (s *ZoneForListZonesOutput) SetExpiredTime(v int64) *ZoneForListZonesOutput {
	s.ExpiredTime = &v
	return s
}

// SetInstanceID sets the InstanceID field's value.
func (s *ZoneForListZonesOutput) SetInstanceID(v string) *ZoneForListZonesOutput {
	s.InstanceID = &v
	return s
}

// SetIsSubDomain sets the IsSubDomain field's value.
func (s *ZoneForListZonesOutput) SetIsSubDomain(v bool) *ZoneForListZonesOutput {
	s.IsSubDomain = &v
	return s
}

// SetLastOperator sets the LastOperator field's value.
func (s *ZoneForListZonesOutput) SetLastOperator(v string) *ZoneForListZonesOutput {
	s.LastOperator = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ZoneForListZonesOutput) SetProjectName(v string) *ZoneForListZonesOutput {
	s.ProjectName = &v
	return s
}

// SetRecordCount sets the RecordCount field's value.
func (s *ZoneForListZonesOutput) SetRecordCount(v int32) *ZoneForListZonesOutput {
	s.RecordCount = &v
	return s
}

// SetRemark sets the Remark field's value.
func (s *ZoneForListZonesOutput) SetRemark(v string) *ZoneForListZonesOutput {
	s.Remark = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *ZoneForListZonesOutput) SetTags(v []*TagForListZonesOutput) *ZoneForListZonesOutput {
	s.Tags = v
	return s
}

// SetTradeCode sets the TradeCode field's value.
func (s *ZoneForListZonesOutput) SetTradeCode(v string) *ZoneForListZonesOutput {
	s.TradeCode = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *ZoneForListZonesOutput) SetUpdatedAt(v string) *ZoneForListZonesOutput {
	s.UpdatedAt = &v
	return s
}

// SetZID sets the ZID field's value.
func (s *ZoneForListZonesOutput) SetZID(v int32) *ZoneForListZonesOutput {
	s.ZID = &v
	return s
}

// SetZoneName sets the ZoneName field's value.
func (s *ZoneForListZonesOutput) SetZoneName(v string) *ZoneForListZonesOutput {
	s.ZoneName = &v
	return s
}
