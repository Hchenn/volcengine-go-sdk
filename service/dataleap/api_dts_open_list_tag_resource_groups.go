// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package dataleap

import (
	"fmt"

	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDTSOpenListTagResourceGroupsCommon = "DTSOpenListTagResourceGroups"

// DTSOpenListTagResourceGroupsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DTSOpenListTagResourceGroupsCommon operation. The "output" return
// value will be populated with the DTSOpenListTagResourceGroupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DTSOpenListTagResourceGroupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DTSOpenListTagResourceGroupsCommon Send returns without error.
//
// See DTSOpenListTagResourceGroupsCommon for more information on using the DTSOpenListTagResourceGroupsCommon
// API call, and error handling.
//
//    // Example sending a request using the DTSOpenListTagResourceGroupsCommonRequest method.
//    req, resp := client.DTSOpenListTagResourceGroupsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DATALEAP) DTSOpenListTagResourceGroupsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDTSOpenListTagResourceGroupsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DTSOpenListTagResourceGroupsCommon API operation for DATALEAP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DATALEAP's
// API operation DTSOpenListTagResourceGroupsCommon for usage and error information.
func (c *DATALEAP) DTSOpenListTagResourceGroupsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DTSOpenListTagResourceGroupsCommonRequest(input)
	return out, req.Send()
}

// DTSOpenListTagResourceGroupsCommonWithContext is the same as DTSOpenListTagResourceGroupsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DTSOpenListTagResourceGroupsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DATALEAP) DTSOpenListTagResourceGroupsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DTSOpenListTagResourceGroupsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDTSOpenListTagResourceGroups = "DTSOpenListTagResourceGroups"

// DTSOpenListTagResourceGroupsRequest generates a "volcengine/request.Request" representing the
// client's request for the DTSOpenListTagResourceGroups operation. The "output" return
// value will be populated with the DTSOpenListTagResourceGroupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DTSOpenListTagResourceGroupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DTSOpenListTagResourceGroupsCommon Send returns without error.
//
// See DTSOpenListTagResourceGroups for more information on using the DTSOpenListTagResourceGroups
// API call, and error handling.
//
//    // Example sending a request using the DTSOpenListTagResourceGroupsRequest method.
//    req, resp := client.DTSOpenListTagResourceGroupsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DATALEAP) DTSOpenListTagResourceGroupsRequest(input *DTSOpenListTagResourceGroupsInput) (req *request.Request, output *DTSOpenListTagResourceGroupsOutput) {
	op := &request.Operation{
		Name:       opDTSOpenListTagResourceGroups,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DTSOpenListTagResourceGroupsInput{}
	}

	output = &DTSOpenListTagResourceGroupsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DTSOpenListTagResourceGroups API operation for DATALEAP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DATALEAP's
// API operation DTSOpenListTagResourceGroups for usage and error information.
func (c *DATALEAP) DTSOpenListTagResourceGroups(input *DTSOpenListTagResourceGroupsInput) (*DTSOpenListTagResourceGroupsOutput, error) {
	req, out := c.DTSOpenListTagResourceGroupsRequest(input)
	return out, req.Send()
}

// DTSOpenListTagResourceGroupsWithContext is the same as DTSOpenListTagResourceGroups with the addition of
// the ability to pass a context and additional request options.
//
// See DTSOpenListTagResourceGroups for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DATALEAP) DTSOpenListTagResourceGroupsWithContext(ctx volcengine.Context, input *DTSOpenListTagResourceGroupsInput, opts ...request.Option) (*DTSOpenListTagResourceGroupsOutput, error) {
	req, out := c.DTSOpenListTagResourceGroupsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DTSOpenListTagResourceGroupsInput struct {
	_ struct{} `type:"structure"`

	Tags []*TagForDTSOpenListTagResourceGroupsInput `type:"list"`
}

// String returns the string representation
func (s DTSOpenListTagResourceGroupsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DTSOpenListTagResourceGroupsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DTSOpenListTagResourceGroupsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DTSOpenListTagResourceGroupsInput"}
	if s.Tags != nil {
		for i, v := range s.Tags {
			if v == nil {
				continue
			}
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Tags", i), err.(request.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetTags sets the Tags field's value.
func (s *DTSOpenListTagResourceGroupsInput) SetTags(v []*TagForDTSOpenListTagResourceGroupsInput) *DTSOpenListTagResourceGroupsInput {
	s.Tags = v
	return s
}

type DTSOpenListTagResourceGroupsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	NextToken *string `type:"string"`

	ResourceTags []*ResourceTagForDTSOpenListTagResourceGroupsOutput `type:"list"`
}

// String returns the string representation
func (s DTSOpenListTagResourceGroupsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DTSOpenListTagResourceGroupsOutput) GoString() string {
	return s.String()
}

// SetNextToken sets the NextToken field's value.
func (s *DTSOpenListTagResourceGroupsOutput) SetNextToken(v string) *DTSOpenListTagResourceGroupsOutput {
	s.NextToken = &v
	return s
}

// SetResourceTags sets the ResourceTags field's value.
func (s *DTSOpenListTagResourceGroupsOutput) SetResourceTags(v []*ResourceTagForDTSOpenListTagResourceGroupsOutput) *DTSOpenListTagResourceGroupsOutput {
	s.ResourceTags = v
	return s
}

type ResourceTagForDTSOpenListTagResourceGroupsOutput struct {
	_ struct{} `type:"structure"`

	ResourceId *string `type:"string"`

	ResourceType *string `type:"string"`

	TagKey *string `type:"string"`

	TagValue *string `type:"string"`
}

// String returns the string representation
func (s ResourceTagForDTSOpenListTagResourceGroupsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceTagForDTSOpenListTagResourceGroupsOutput) GoString() string {
	return s.String()
}

// SetResourceId sets the ResourceId field's value.
func (s *ResourceTagForDTSOpenListTagResourceGroupsOutput) SetResourceId(v string) *ResourceTagForDTSOpenListTagResourceGroupsOutput {
	s.ResourceId = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *ResourceTagForDTSOpenListTagResourceGroupsOutput) SetResourceType(v string) *ResourceTagForDTSOpenListTagResourceGroupsOutput {
	s.ResourceType = &v
	return s
}

// SetTagKey sets the TagKey field's value.
func (s *ResourceTagForDTSOpenListTagResourceGroupsOutput) SetTagKey(v string) *ResourceTagForDTSOpenListTagResourceGroupsOutput {
	s.TagKey = &v
	return s
}

// SetTagValue sets the TagValue field's value.
func (s *ResourceTagForDTSOpenListTagResourceGroupsOutput) SetTagValue(v string) *ResourceTagForDTSOpenListTagResourceGroupsOutput {
	s.TagValue = &v
	return s
}

type TagForDTSOpenListTagResourceGroupsInput struct {
	_ struct{} `type:"structure"`

	// Key is a required field
	Key *string `type:"string" required:"true"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s TagForDTSOpenListTagResourceGroupsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDTSOpenListTagResourceGroupsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *TagForDTSOpenListTagResourceGroupsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "TagForDTSOpenListTagResourceGroupsInput"}
	if s.Key == nil {
		invalidParams.Add(request.NewErrParamRequired("Key"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetKey sets the Key field's value.
func (s *TagForDTSOpenListTagResourceGroupsInput) SetKey(v string) *TagForDTSOpenListTagResourceGroupsInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagForDTSOpenListTagResourceGroupsInput) SetValues(v []*string) *TagForDTSOpenListTagResourceGroupsInput {
	s.Values = v
	return s
}
