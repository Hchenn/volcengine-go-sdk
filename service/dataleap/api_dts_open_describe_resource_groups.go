// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package dataleap

import (
	"fmt"

	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDTSOpenDescribeResourceGroupsCommon = "DTSOpenDescribeResourceGroups"

// DTSOpenDescribeResourceGroupsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DTSOpenDescribeResourceGroupsCommon operation. The "output" return
// value will be populated with the DTSOpenDescribeResourceGroupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DTSOpenDescribeResourceGroupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DTSOpenDescribeResourceGroupsCommon Send returns without error.
//
// See DTSOpenDescribeResourceGroupsCommon for more information on using the DTSOpenDescribeResourceGroupsCommon
// API call, and error handling.
//
//    // Example sending a request using the DTSOpenDescribeResourceGroupsCommonRequest method.
//    req, resp := client.DTSOpenDescribeResourceGroupsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DATALEAP) DTSOpenDescribeResourceGroupsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDTSOpenDescribeResourceGroupsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DTSOpenDescribeResourceGroupsCommon API operation for DATALEAP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DATALEAP's
// API operation DTSOpenDescribeResourceGroupsCommon for usage and error information.
func (c *DATALEAP) DTSOpenDescribeResourceGroupsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DTSOpenDescribeResourceGroupsCommonRequest(input)
	return out, req.Send()
}

// DTSOpenDescribeResourceGroupsCommonWithContext is the same as DTSOpenDescribeResourceGroupsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DTSOpenDescribeResourceGroupsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DATALEAP) DTSOpenDescribeResourceGroupsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DTSOpenDescribeResourceGroupsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDTSOpenDescribeResourceGroups = "DTSOpenDescribeResourceGroups"

// DTSOpenDescribeResourceGroupsRequest generates a "volcengine/request.Request" representing the
// client's request for the DTSOpenDescribeResourceGroups operation. The "output" return
// value will be populated with the DTSOpenDescribeResourceGroupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DTSOpenDescribeResourceGroupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DTSOpenDescribeResourceGroupsCommon Send returns without error.
//
// See DTSOpenDescribeResourceGroups for more information on using the DTSOpenDescribeResourceGroups
// API call, and error handling.
//
//    // Example sending a request using the DTSOpenDescribeResourceGroupsRequest method.
//    req, resp := client.DTSOpenDescribeResourceGroupsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DATALEAP) DTSOpenDescribeResourceGroupsRequest(input *DTSOpenDescribeResourceGroupsInput) (req *request.Request, output *DTSOpenDescribeResourceGroupsOutput) {
	op := &request.Operation{
		Name:       opDTSOpenDescribeResourceGroups,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DTSOpenDescribeResourceGroupsInput{}
	}

	output = &DTSOpenDescribeResourceGroupsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DTSOpenDescribeResourceGroups API operation for DATALEAP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DATALEAP's
// API operation DTSOpenDescribeResourceGroups for usage and error information.
func (c *DATALEAP) DTSOpenDescribeResourceGroups(input *DTSOpenDescribeResourceGroupsInput) (*DTSOpenDescribeResourceGroupsOutput, error) {
	req, out := c.DTSOpenDescribeResourceGroupsRequest(input)
	return out, req.Send()
}

// DTSOpenDescribeResourceGroupsWithContext is the same as DTSOpenDescribeResourceGroups with the addition of
// the ability to pass a context and additional request options.
//
// See DTSOpenDescribeResourceGroups for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DATALEAP) DTSOpenDescribeResourceGroupsWithContext(ctx volcengine.Context, input *DTSOpenDescribeResourceGroupsInput, opts ...request.Option) (*DTSOpenDescribeResourceGroupsOutput, error) {
	req, out := c.DTSOpenDescribeResourceGroupsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConfForDTSOpenDescribeResourceGroupsOutput struct {
	_ struct{} `type:"structure"`

	BucketName *string `type:"string"`

	SecurityGroupIdList []*string `type:"list"`

	SubnetIdList []*string `type:"list"`

	VpcId *string `type:"string"`
}

// String returns the string representation
func (s ConfForDTSOpenDescribeResourceGroupsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConfForDTSOpenDescribeResourceGroupsOutput) GoString() string {
	return s.String()
}

// SetBucketName sets the BucketName field's value.
func (s *ConfForDTSOpenDescribeResourceGroupsOutput) SetBucketName(v string) *ConfForDTSOpenDescribeResourceGroupsOutput {
	s.BucketName = &v
	return s
}

// SetSecurityGroupIdList sets the SecurityGroupIdList field's value.
func (s *ConfForDTSOpenDescribeResourceGroupsOutput) SetSecurityGroupIdList(v []*string) *ConfForDTSOpenDescribeResourceGroupsOutput {
	s.SecurityGroupIdList = v
	return s
}

// SetSubnetIdList sets the SubnetIdList field's value.
func (s *ConfForDTSOpenDescribeResourceGroupsOutput) SetSubnetIdList(v []*string) *ConfForDTSOpenDescribeResourceGroupsOutput {
	s.SubnetIdList = v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *ConfForDTSOpenDescribeResourceGroupsOutput) SetVpcId(v string) *ConfForDTSOpenDescribeResourceGroupsOutput {
	s.VpcId = &v
	return s
}

type DTSOpenDescribeResourceGroupsInput struct {
	_ struct{} `type:"structure"`

	InstanceIds *string `type:"string"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	ProjectName *string `type:"string"`

	TagFilters []*TagFilterForDTSOpenDescribeResourceGroupsInput `type:"list"`
}

// String returns the string representation
func (s DTSOpenDescribeResourceGroupsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DTSOpenDescribeResourceGroupsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DTSOpenDescribeResourceGroupsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DTSOpenDescribeResourceGroupsInput"}
	if s.TagFilters != nil {
		for i, v := range s.TagFilters {
			if v == nil {
				continue
			}
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "TagFilters", i), err.(request.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceIds sets the InstanceIds field's value.
func (s *DTSOpenDescribeResourceGroupsInput) SetInstanceIds(v string) *DTSOpenDescribeResourceGroupsInput {
	s.InstanceIds = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DTSOpenDescribeResourceGroupsInput) SetPageNumber(v int32) *DTSOpenDescribeResourceGroupsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DTSOpenDescribeResourceGroupsInput) SetPageSize(v int32) *DTSOpenDescribeResourceGroupsInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DTSOpenDescribeResourceGroupsInput) SetProjectName(v string) *DTSOpenDescribeResourceGroupsInput {
	s.ProjectName = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *DTSOpenDescribeResourceGroupsInput) SetTagFilters(v []*TagFilterForDTSOpenDescribeResourceGroupsInput) *DTSOpenDescribeResourceGroupsInput {
	s.TagFilters = v
	return s
}

type DTSOpenDescribeResourceGroupsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	List []*ListForDTSOpenDescribeResourceGroupsOutput `type:"list"`

	PageNum *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	Total *int32 `type:"int32"`
}

// String returns the string representation
func (s DTSOpenDescribeResourceGroupsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DTSOpenDescribeResourceGroupsOutput) GoString() string {
	return s.String()
}

// SetList sets the List field's value.
func (s *DTSOpenDescribeResourceGroupsOutput) SetList(v []*ListForDTSOpenDescribeResourceGroupsOutput) *DTSOpenDescribeResourceGroupsOutput {
	s.List = v
	return s
}

// SetPageNum sets the PageNum field's value.
func (s *DTSOpenDescribeResourceGroupsOutput) SetPageNum(v int32) *DTSOpenDescribeResourceGroupsOutput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DTSOpenDescribeResourceGroupsOutput) SetPageSize(v int32) *DTSOpenDescribeResourceGroupsOutput {
	s.PageSize = &v
	return s
}

// SetTotal sets the Total field's value.
func (s *DTSOpenDescribeResourceGroupsOutput) SetTotal(v int32) *DTSOpenDescribeResourceGroupsOutput {
	s.Total = &v
	return s
}

type ListForDTSOpenDescribeResourceGroupsOutput struct {
	_ struct{} `type:"structure"`

	Conf *ConfForDTSOpenDescribeResourceGroupsOutput `type:"structure"`

	CreateTime *string `type:"string"`

	Description *string `type:"string"`

	InstanceNo *string `type:"string"`

	Name *string `type:"string"`

	ProjectName *string `type:"string"`

	ResourceType *string `type:"string"`

	Status *string `type:"string"`

	Tags []*TagForDTSOpenDescribeResourceGroupsOutput `type:"list"`

	TenantId *int64 `type:"int64"`
}

// String returns the string representation
func (s ListForDTSOpenDescribeResourceGroupsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListForDTSOpenDescribeResourceGroupsOutput) GoString() string {
	return s.String()
}

// SetConf sets the Conf field's value.
func (s *ListForDTSOpenDescribeResourceGroupsOutput) SetConf(v *ConfForDTSOpenDescribeResourceGroupsOutput) *ListForDTSOpenDescribeResourceGroupsOutput {
	s.Conf = v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *ListForDTSOpenDescribeResourceGroupsOutput) SetCreateTime(v string) *ListForDTSOpenDescribeResourceGroupsOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ListForDTSOpenDescribeResourceGroupsOutput) SetDescription(v string) *ListForDTSOpenDescribeResourceGroupsOutput {
	s.Description = &v
	return s
}

// SetInstanceNo sets the InstanceNo field's value.
func (s *ListForDTSOpenDescribeResourceGroupsOutput) SetInstanceNo(v string) *ListForDTSOpenDescribeResourceGroupsOutput {
	s.InstanceNo = &v
	return s
}

// SetName sets the Name field's value.
func (s *ListForDTSOpenDescribeResourceGroupsOutput) SetName(v string) *ListForDTSOpenDescribeResourceGroupsOutput {
	s.Name = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ListForDTSOpenDescribeResourceGroupsOutput) SetProjectName(v string) *ListForDTSOpenDescribeResourceGroupsOutput {
	s.ProjectName = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *ListForDTSOpenDescribeResourceGroupsOutput) SetResourceType(v string) *ListForDTSOpenDescribeResourceGroupsOutput {
	s.ResourceType = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ListForDTSOpenDescribeResourceGroupsOutput) SetStatus(v string) *ListForDTSOpenDescribeResourceGroupsOutput {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *ListForDTSOpenDescribeResourceGroupsOutput) SetTags(v []*TagForDTSOpenDescribeResourceGroupsOutput) *ListForDTSOpenDescribeResourceGroupsOutput {
	s.Tags = v
	return s
}

// SetTenantId sets the TenantId field's value.
func (s *ListForDTSOpenDescribeResourceGroupsOutput) SetTenantId(v int64) *ListForDTSOpenDescribeResourceGroupsOutput {
	s.TenantId = &v
	return s
}

type TagFilterForDTSOpenDescribeResourceGroupsInput struct {
	_ struct{} `type:"structure"`

	// Key is a required field
	Key *string `type:"string" required:"true"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s TagFilterForDTSOpenDescribeResourceGroupsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForDTSOpenDescribeResourceGroupsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *TagFilterForDTSOpenDescribeResourceGroupsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "TagFilterForDTSOpenDescribeResourceGroupsInput"}
	if s.Key == nil {
		invalidParams.Add(request.NewErrParamRequired("Key"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetKey sets the Key field's value.
func (s *TagFilterForDTSOpenDescribeResourceGroupsInput) SetKey(v string) *TagFilterForDTSOpenDescribeResourceGroupsInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagFilterForDTSOpenDescribeResourceGroupsInput) SetValues(v []*string) *TagFilterForDTSOpenDescribeResourceGroupsInput {
	s.Values = v
	return s
}

type TagForDTSOpenDescribeResourceGroupsOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForDTSOpenDescribeResourceGroupsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDTSOpenDescribeResourceGroupsOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDTSOpenDescribeResourceGroupsOutput) SetKey(v string) *TagForDTSOpenDescribeResourceGroupsOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDTSOpenDescribeResourceGroupsOutput) SetValue(v string) *TagForDTSOpenDescribeResourceGroupsOutput {
	s.Value = &v
	return s
}
