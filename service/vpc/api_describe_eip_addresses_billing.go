// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpc

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeEipAddressesBillingCommon = "DescribeEipAddressesBilling"

// DescribeEipAddressesBillingCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeEipAddressesBillingCommon operation. The "output" return
// value will be populated with the DescribeEipAddressesBillingCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeEipAddressesBillingCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeEipAddressesBillingCommon Send returns without error.
//
// See DescribeEipAddressesBillingCommon for more information on using the DescribeEipAddressesBillingCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeEipAddressesBillingCommonRequest method.
//    req, resp := client.DescribeEipAddressesBillingCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) DescribeEipAddressesBillingCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeEipAddressesBillingCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeEipAddressesBillingCommon API operation for VPC.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VPC's
// API operation DescribeEipAddressesBillingCommon for usage and error information.
func (c *VPC) DescribeEipAddressesBillingCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeEipAddressesBillingCommonRequest(input)
	return out, req.Send()
}

// DescribeEipAddressesBillingCommonWithContext is the same as DescribeEipAddressesBillingCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeEipAddressesBillingCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) DescribeEipAddressesBillingCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeEipAddressesBillingCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeEipAddressesBilling = "DescribeEipAddressesBilling"

// DescribeEipAddressesBillingRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeEipAddressesBilling operation. The "output" return
// value will be populated with the DescribeEipAddressesBillingCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeEipAddressesBillingCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeEipAddressesBillingCommon Send returns without error.
//
// See DescribeEipAddressesBilling for more information on using the DescribeEipAddressesBilling
// API call, and error handling.
//
//    // Example sending a request using the DescribeEipAddressesBillingRequest method.
//    req, resp := client.DescribeEipAddressesBillingRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) DescribeEipAddressesBillingRequest(input *DescribeEipAddressesBillingInput) (req *request.Request, output *DescribeEipAddressesBillingOutput) {
	op := &request.Operation{
		Name:       opDescribeEipAddressesBilling,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeEipAddressesBillingInput{}
	}

	output = &DescribeEipAddressesBillingOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeEipAddressesBilling API operation for VPC.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VPC's
// API operation DescribeEipAddressesBilling for usage and error information.
func (c *VPC) DescribeEipAddressesBilling(input *DescribeEipAddressesBillingInput) (*DescribeEipAddressesBillingOutput, error) {
	req, out := c.DescribeEipAddressesBillingRequest(input)
	return out, req.Send()
}

// DescribeEipAddressesBillingWithContext is the same as DescribeEipAddressesBilling with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeEipAddressesBilling for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) DescribeEipAddressesBillingWithContext(ctx volcengine.Context, input *DescribeEipAddressesBillingInput, opts ...request.Option) (*DescribeEipAddressesBillingOutput, error) {
	req, out := c.DescribeEipAddressesBillingRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeEipAddressesBillingInput struct {
	_ struct{} `type:"structure"`

	AllocationIds []*string `type:"list"`

	EipAddresses []*string `type:"list"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `max:"100" type:"integer"`

	ProjectName *string `type:"string"`
}

// String returns the string representation
func (s DescribeEipAddressesBillingInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeEipAddressesBillingInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeEipAddressesBillingInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeEipAddressesBillingInput"}
	if s.PageSize != nil && *s.PageSize > 100 {
		invalidParams.Add(request.NewErrParamMaxValue("PageSize", 100))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAllocationIds sets the AllocationIds field's value.
func (s *DescribeEipAddressesBillingInput) SetAllocationIds(v []*string) *DescribeEipAddressesBillingInput {
	s.AllocationIds = v
	return s
}

// SetEipAddresses sets the EipAddresses field's value.
func (s *DescribeEipAddressesBillingInput) SetEipAddresses(v []*string) *DescribeEipAddressesBillingInput {
	s.EipAddresses = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeEipAddressesBillingInput) SetPageNumber(v int64) *DescribeEipAddressesBillingInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeEipAddressesBillingInput) SetPageSize(v int64) *DescribeEipAddressesBillingInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeEipAddressesBillingInput) SetProjectName(v string) *DescribeEipAddressesBillingInput {
	s.ProjectName = &v
	return s
}

type DescribeEipAddressesBillingOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	EipAddresses []*EipAddressForDescribeEipAddressesBillingOutput `type:"list"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RequestId *string `type:"string"`

	TotalCount *int64 `type:"integer"`
}

// String returns the string representation
func (s DescribeEipAddressesBillingOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeEipAddressesBillingOutput) GoString() string {
	return s.String()
}

// SetEipAddresses sets the EipAddresses field's value.
func (s *DescribeEipAddressesBillingOutput) SetEipAddresses(v []*EipAddressForDescribeEipAddressesBillingOutput) *DescribeEipAddressesBillingOutput {
	s.EipAddresses = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeEipAddressesBillingOutput) SetPageNumber(v int64) *DescribeEipAddressesBillingOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeEipAddressesBillingOutput) SetPageSize(v int64) *DescribeEipAddressesBillingOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeEipAddressesBillingOutput) SetRequestId(v string) *DescribeEipAddressesBillingOutput {
	s.RequestId = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeEipAddressesBillingOutput) SetTotalCount(v int64) *DescribeEipAddressesBillingOutput {
	s.TotalCount = &v
	return s
}

type EipAddressForDescribeEipAddressesBillingOutput struct {
	_ struct{} `type:"structure"`

	AllocationId *string `type:"string"`

	BillingType *int64 `type:"integer"`

	ExpiredTime *string `type:"string"`

	OverdueReclaimTime *string `type:"string"`

	OverdueTime *string `type:"string"`

	ReclaimTime *string `type:"string"`

	RemainRenewTimes *int64 `type:"integer"`

	RenewPeriodTimes *int64 `type:"integer"`

	RenewType *int64 `type:"integer"`

	Status *int64 `type:"integer"`
}

// String returns the string representation
func (s EipAddressForDescribeEipAddressesBillingOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EipAddressForDescribeEipAddressesBillingOutput) GoString() string {
	return s.String()
}

// SetAllocationId sets the AllocationId field's value.
func (s *EipAddressForDescribeEipAddressesBillingOutput) SetAllocationId(v string) *EipAddressForDescribeEipAddressesBillingOutput {
	s.AllocationId = &v
	return s
}

// SetBillingType sets the BillingType field's value.
func (s *EipAddressForDescribeEipAddressesBillingOutput) SetBillingType(v int64) *EipAddressForDescribeEipAddressesBillingOutput {
	s.BillingType = &v
	return s
}

// SetExpiredTime sets the ExpiredTime field's value.
func (s *EipAddressForDescribeEipAddressesBillingOutput) SetExpiredTime(v string) *EipAddressForDescribeEipAddressesBillingOutput {
	s.ExpiredTime = &v
	return s
}

// SetOverdueReclaimTime sets the OverdueReclaimTime field's value.
func (s *EipAddressForDescribeEipAddressesBillingOutput) SetOverdueReclaimTime(v string) *EipAddressForDescribeEipAddressesBillingOutput {
	s.OverdueReclaimTime = &v
	return s
}

// SetOverdueTime sets the OverdueTime field's value.
func (s *EipAddressForDescribeEipAddressesBillingOutput) SetOverdueTime(v string) *EipAddressForDescribeEipAddressesBillingOutput {
	s.OverdueTime = &v
	return s
}

// SetReclaimTime sets the ReclaimTime field's value.
func (s *EipAddressForDescribeEipAddressesBillingOutput) SetReclaimTime(v string) *EipAddressForDescribeEipAddressesBillingOutput {
	s.ReclaimTime = &v
	return s
}

// SetRemainRenewTimes sets the RemainRenewTimes field's value.
func (s *EipAddressForDescribeEipAddressesBillingOutput) SetRemainRenewTimes(v int64) *EipAddressForDescribeEipAddressesBillingOutput {
	s.RemainRenewTimes = &v
	return s
}

// SetRenewPeriodTimes sets the RenewPeriodTimes field's value.
func (s *EipAddressForDescribeEipAddressesBillingOutput) SetRenewPeriodTimes(v int64) *EipAddressForDescribeEipAddressesBillingOutput {
	s.RenewPeriodTimes = &v
	return s
}

// SetRenewType sets the RenewType field's value.
func (s *EipAddressForDescribeEipAddressesBillingOutput) SetRenewType(v int64) *EipAddressForDescribeEipAddressesBillingOutput {
	s.RenewType = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *EipAddressForDescribeEipAddressesBillingOutput) SetStatus(v int64) *EipAddressForDescribeEipAddressesBillingOutput {
	s.Status = &v
	return s
}
