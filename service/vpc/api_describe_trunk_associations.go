// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpc

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeTrunkAssociationsCommon = "DescribeTrunkAssociations"

// DescribeTrunkAssociationsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeTrunkAssociationsCommon operation. The "output" return
// value will be populated with the DescribeTrunkAssociationsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTrunkAssociationsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTrunkAssociationsCommon Send returns without error.
//
// See DescribeTrunkAssociationsCommon for more information on using the DescribeTrunkAssociationsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeTrunkAssociationsCommonRequest method.
//    req, resp := client.DescribeTrunkAssociationsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) DescribeTrunkAssociationsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeTrunkAssociationsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeTrunkAssociationsCommon API operation for VPC.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VPC's
// API operation DescribeTrunkAssociationsCommon for usage and error information.
func (c *VPC) DescribeTrunkAssociationsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeTrunkAssociationsCommonRequest(input)
	return out, req.Send()
}

// DescribeTrunkAssociationsCommonWithContext is the same as DescribeTrunkAssociationsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTrunkAssociationsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) DescribeTrunkAssociationsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeTrunkAssociationsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeTrunkAssociations = "DescribeTrunkAssociations"

// DescribeTrunkAssociationsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeTrunkAssociations operation. The "output" return
// value will be populated with the DescribeTrunkAssociationsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTrunkAssociationsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTrunkAssociationsCommon Send returns without error.
//
// See DescribeTrunkAssociations for more information on using the DescribeTrunkAssociations
// API call, and error handling.
//
//    // Example sending a request using the DescribeTrunkAssociationsRequest method.
//    req, resp := client.DescribeTrunkAssociationsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) DescribeTrunkAssociationsRequest(input *DescribeTrunkAssociationsInput) (req *request.Request, output *DescribeTrunkAssociationsOutput) {
	op := &request.Operation{
		Name:       opDescribeTrunkAssociations,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeTrunkAssociationsInput{}
	}

	output = &DescribeTrunkAssociationsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeTrunkAssociations API operation for VPC.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VPC's
// API operation DescribeTrunkAssociations for usage and error information.
func (c *VPC) DescribeTrunkAssociations(input *DescribeTrunkAssociationsInput) (*DescribeTrunkAssociationsOutput, error) {
	req, out := c.DescribeTrunkAssociationsRequest(input)
	return out, req.Send()
}

// DescribeTrunkAssociationsWithContext is the same as DescribeTrunkAssociations with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTrunkAssociations for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) DescribeTrunkAssociationsWithContext(ctx volcengine.Context, input *DescribeTrunkAssociationsInput, opts ...request.Option) (*DescribeTrunkAssociationsOutput, error) {
	req, out := c.DescribeTrunkAssociationsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeTrunkAssociationsInput struct {
	_ struct{} `type:"structure"`

	BranchInterfaceIds []*string `type:"list"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `max:"100" type:"integer"`

	TrunkInterfaceId *string `type:"string"`
}

// String returns the string representation
func (s DescribeTrunkAssociationsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTrunkAssociationsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeTrunkAssociationsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeTrunkAssociationsInput"}
	if s.PageSize != nil && *s.PageSize > 100 {
		invalidParams.Add(request.NewErrParamMaxValue("PageSize", 100))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBranchInterfaceIds sets the BranchInterfaceIds field's value.
func (s *DescribeTrunkAssociationsInput) SetBranchInterfaceIds(v []*string) *DescribeTrunkAssociationsInput {
	s.BranchInterfaceIds = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeTrunkAssociationsInput) SetPageNumber(v int64) *DescribeTrunkAssociationsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeTrunkAssociationsInput) SetPageSize(v int64) *DescribeTrunkAssociationsInput {
	s.PageSize = &v
	return s
}

// SetTrunkInterfaceId sets the TrunkInterfaceId field's value.
func (s *DescribeTrunkAssociationsInput) SetTrunkInterfaceId(v string) *DescribeTrunkAssociationsInput {
	s.TrunkInterfaceId = &v
	return s
}

type DescribeTrunkAssociationsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RequestId *string `type:"string"`

	TotalCount *int64 `type:"integer"`

	TrunkAssociations []*TrunkAssociationForDescribeTrunkAssociationsOutput `type:"list"`
}

// String returns the string representation
func (s DescribeTrunkAssociationsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTrunkAssociationsOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeTrunkAssociationsOutput) SetPageNumber(v int64) *DescribeTrunkAssociationsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeTrunkAssociationsOutput) SetPageSize(v int64) *DescribeTrunkAssociationsOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeTrunkAssociationsOutput) SetRequestId(v string) *DescribeTrunkAssociationsOutput {
	s.RequestId = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeTrunkAssociationsOutput) SetTotalCount(v int64) *DescribeTrunkAssociationsOutput {
	s.TotalCount = &v
	return s
}

// SetTrunkAssociations sets the TrunkAssociations field's value.
func (s *DescribeTrunkAssociationsOutput) SetTrunkAssociations(v []*TrunkAssociationForDescribeTrunkAssociationsOutput) *DescribeTrunkAssociationsOutput {
	s.TrunkAssociations = v
	return s
}

type TrunkAssociationForDescribeTrunkAssociationsOutput struct {
	_ struct{} `type:"structure"`

	BranchInterfaceId *string `type:"string"`

	SegmentationId *int64 `type:"integer"`

	SegmentationType *string `type:"string"`

	TrunkInterfaceId *string `type:"string"`
}

// String returns the string representation
func (s TrunkAssociationForDescribeTrunkAssociationsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TrunkAssociationForDescribeTrunkAssociationsOutput) GoString() string {
	return s.String()
}

// SetBranchInterfaceId sets the BranchInterfaceId field's value.
func (s *TrunkAssociationForDescribeTrunkAssociationsOutput) SetBranchInterfaceId(v string) *TrunkAssociationForDescribeTrunkAssociationsOutput {
	s.BranchInterfaceId = &v
	return s
}

// SetSegmentationId sets the SegmentationId field's value.
func (s *TrunkAssociationForDescribeTrunkAssociationsOutput) SetSegmentationId(v int64) *TrunkAssociationForDescribeTrunkAssociationsOutput {
	s.SegmentationId = &v
	return s
}

// SetSegmentationType sets the SegmentationType field's value.
func (s *TrunkAssociationForDescribeTrunkAssociationsOutput) SetSegmentationType(v string) *TrunkAssociationForDescribeTrunkAssociationsOutput {
	s.SegmentationType = &v
	return s
}

// SetTrunkInterfaceId sets the TrunkInterfaceId field's value.
func (s *TrunkAssociationForDescribeTrunkAssociationsOutput) SetTrunkInterfaceId(v string) *TrunkAssociationForDescribeTrunkAssociationsOutput {
	s.TrunkInterfaceId = &v
	return s
}
