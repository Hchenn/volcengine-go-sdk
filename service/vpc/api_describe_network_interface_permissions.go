// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpc

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeNetworkInterfacePermissionsCommon = "DescribeNetworkInterfacePermissions"

// DescribeNetworkInterfacePermissionsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeNetworkInterfacePermissionsCommon operation. The "output" return
// value will be populated with the DescribeNetworkInterfacePermissionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeNetworkInterfacePermissionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeNetworkInterfacePermissionsCommon Send returns without error.
//
// See DescribeNetworkInterfacePermissionsCommon for more information on using the DescribeNetworkInterfacePermissionsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeNetworkInterfacePermissionsCommonRequest method.
//    req, resp := client.DescribeNetworkInterfacePermissionsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) DescribeNetworkInterfacePermissionsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeNetworkInterfacePermissionsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeNetworkInterfacePermissionsCommon API operation for VPC.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VPC's
// API operation DescribeNetworkInterfacePermissionsCommon for usage and error information.
func (c *VPC) DescribeNetworkInterfacePermissionsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeNetworkInterfacePermissionsCommonRequest(input)
	return out, req.Send()
}

// DescribeNetworkInterfacePermissionsCommonWithContext is the same as DescribeNetworkInterfacePermissionsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeNetworkInterfacePermissionsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) DescribeNetworkInterfacePermissionsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeNetworkInterfacePermissionsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeNetworkInterfacePermissions = "DescribeNetworkInterfacePermissions"

// DescribeNetworkInterfacePermissionsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeNetworkInterfacePermissions operation. The "output" return
// value will be populated with the DescribeNetworkInterfacePermissionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeNetworkInterfacePermissionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeNetworkInterfacePermissionsCommon Send returns without error.
//
// See DescribeNetworkInterfacePermissions for more information on using the DescribeNetworkInterfacePermissions
// API call, and error handling.
//
//    // Example sending a request using the DescribeNetworkInterfacePermissionsRequest method.
//    req, resp := client.DescribeNetworkInterfacePermissionsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) DescribeNetworkInterfacePermissionsRequest(input *DescribeNetworkInterfacePermissionsInput) (req *request.Request, output *DescribeNetworkInterfacePermissionsOutput) {
	op := &request.Operation{
		Name:       opDescribeNetworkInterfacePermissions,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeNetworkInterfacePermissionsInput{}
	}

	output = &DescribeNetworkInterfacePermissionsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeNetworkInterfacePermissions API operation for VPC.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VPC's
// API operation DescribeNetworkInterfacePermissions for usage and error information.
func (c *VPC) DescribeNetworkInterfacePermissions(input *DescribeNetworkInterfacePermissionsInput) (*DescribeNetworkInterfacePermissionsOutput, error) {
	req, out := c.DescribeNetworkInterfacePermissionsRequest(input)
	return out, req.Send()
}

// DescribeNetworkInterfacePermissionsWithContext is the same as DescribeNetworkInterfacePermissions with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeNetworkInterfacePermissions for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) DescribeNetworkInterfacePermissionsWithContext(ctx volcengine.Context, input *DescribeNetworkInterfacePermissionsInput, opts ...request.Option) (*DescribeNetworkInterfacePermissionsOutput, error) {
	req, out := c.DescribeNetworkInterfacePermissionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeNetworkInterfacePermissionsInput struct {
	_ struct{} `type:"structure"`

	NetworkInterfaceId *string `type:"string"`

	NetworkInterfacePermissionIds []*string `type:"list"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `max:"100" type:"integer"`
}

// String returns the string representation
func (s DescribeNetworkInterfacePermissionsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeNetworkInterfacePermissionsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeNetworkInterfacePermissionsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeNetworkInterfacePermissionsInput"}
	if s.PageSize != nil && *s.PageSize > 100 {
		invalidParams.Add(request.NewErrParamMaxValue("PageSize", 100))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetNetworkInterfaceId sets the NetworkInterfaceId field's value.
func (s *DescribeNetworkInterfacePermissionsInput) SetNetworkInterfaceId(v string) *DescribeNetworkInterfacePermissionsInput {
	s.NetworkInterfaceId = &v
	return s
}

// SetNetworkInterfacePermissionIds sets the NetworkInterfacePermissionIds field's value.
func (s *DescribeNetworkInterfacePermissionsInput) SetNetworkInterfacePermissionIds(v []*string) *DescribeNetworkInterfacePermissionsInput {
	s.NetworkInterfacePermissionIds = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeNetworkInterfacePermissionsInput) SetPageNumber(v int64) *DescribeNetworkInterfacePermissionsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeNetworkInterfacePermissionsInput) SetPageSize(v int64) *DescribeNetworkInterfacePermissionsInput {
	s.PageSize = &v
	return s
}

type DescribeNetworkInterfacePermissionsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	NetworkInterfacePermissions []*NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput `type:"list"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RequestId *string `type:"string"`

	TotalCount *int64 `type:"integer"`
}

// String returns the string representation
func (s DescribeNetworkInterfacePermissionsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeNetworkInterfacePermissionsOutput) GoString() string {
	return s.String()
}

// SetNetworkInterfacePermissions sets the NetworkInterfacePermissions field's value.
func (s *DescribeNetworkInterfacePermissionsOutput) SetNetworkInterfacePermissions(v []*NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput) *DescribeNetworkInterfacePermissionsOutput {
	s.NetworkInterfacePermissions = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeNetworkInterfacePermissionsOutput) SetPageNumber(v int64) *DescribeNetworkInterfacePermissionsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeNetworkInterfacePermissionsOutput) SetPageSize(v int64) *DescribeNetworkInterfacePermissionsOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeNetworkInterfacePermissionsOutput) SetRequestId(v string) *DescribeNetworkInterfacePermissionsOutput {
	s.RequestId = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeNetworkInterfacePermissionsOutput) SetTotalCount(v int64) *DescribeNetworkInterfacePermissionsOutput {
	s.TotalCount = &v
	return s
}

type NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput struct {
	_ struct{} `type:"structure"`

	AccountId *string `type:"string"`

	CreatedAt *string `type:"string"`

	NetworkInterfaceId *string `type:"string"`

	NetworkInterfacePermissionId *string `type:"string"`

	Permission *string `type:"string"`

	PermissionState *string `type:"string"`

	UpdatedAt *string `type:"string"`

	VolcAccountId *string `type:"string"`

	VolcService *string `type:"string"`
}

// String returns the string representation
func (s NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput) SetAccountId(v string) *NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput {
	s.AccountId = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput) SetCreatedAt(v string) *NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput {
	s.CreatedAt = &v
	return s
}

// SetNetworkInterfaceId sets the NetworkInterfaceId field's value.
func (s *NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput) SetNetworkInterfaceId(v string) *NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput {
	s.NetworkInterfaceId = &v
	return s
}

// SetNetworkInterfacePermissionId sets the NetworkInterfacePermissionId field's value.
func (s *NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput) SetNetworkInterfacePermissionId(v string) *NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput {
	s.NetworkInterfacePermissionId = &v
	return s
}

// SetPermission sets the Permission field's value.
func (s *NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput) SetPermission(v string) *NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput {
	s.Permission = &v
	return s
}

// SetPermissionState sets the PermissionState field's value.
func (s *NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput) SetPermissionState(v string) *NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput {
	s.PermissionState = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput) SetUpdatedAt(v string) *NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput {
	s.UpdatedAt = &v
	return s
}

// SetVolcAccountId sets the VolcAccountId field's value.
func (s *NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput) SetVolcAccountId(v string) *NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput {
	s.VolcAccountId = &v
	return s
}

// SetVolcService sets the VolcService field's value.
func (s *NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput) SetVolcService(v string) *NetworkInterfacePermissionForDescribeNetworkInterfacePermissionsOutput {
	s.VolcService = &v
	return s
}
