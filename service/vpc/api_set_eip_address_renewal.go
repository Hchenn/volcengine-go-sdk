// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpc

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opSetEipAddressRenewalCommon = "SetEipAddressRenewal"

// SetEipAddressRenewalCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the SetEipAddressRenewalCommon operation. The "output" return
// value will be populated with the SetEipAddressRenewalCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned SetEipAddressRenewalCommon Request to send the API call to the service.
// the "output" return value is not valid until after SetEipAddressRenewalCommon Send returns without error.
//
// See SetEipAddressRenewalCommon for more information on using the SetEipAddressRenewalCommon
// API call, and error handling.
//
//    // Example sending a request using the SetEipAddressRenewalCommonRequest method.
//    req, resp := client.SetEipAddressRenewalCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) SetEipAddressRenewalCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opSetEipAddressRenewalCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// SetEipAddressRenewalCommon API operation for VPC.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VPC's
// API operation SetEipAddressRenewalCommon for usage and error information.
func (c *VPC) SetEipAddressRenewalCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.SetEipAddressRenewalCommonRequest(input)
	return out, req.Send()
}

// SetEipAddressRenewalCommonWithContext is the same as SetEipAddressRenewalCommon with the addition of
// the ability to pass a context and additional request options.
//
// See SetEipAddressRenewalCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) SetEipAddressRenewalCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.SetEipAddressRenewalCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opSetEipAddressRenewal = "SetEipAddressRenewal"

// SetEipAddressRenewalRequest generates a "volcengine/request.Request" representing the
// client's request for the SetEipAddressRenewal operation. The "output" return
// value will be populated with the SetEipAddressRenewalCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned SetEipAddressRenewalCommon Request to send the API call to the service.
// the "output" return value is not valid until after SetEipAddressRenewalCommon Send returns without error.
//
// See SetEipAddressRenewal for more information on using the SetEipAddressRenewal
// API call, and error handling.
//
//    // Example sending a request using the SetEipAddressRenewalRequest method.
//    req, resp := client.SetEipAddressRenewalRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) SetEipAddressRenewalRequest(input *SetEipAddressRenewalInput) (req *request.Request, output *SetEipAddressRenewalOutput) {
	op := &request.Operation{
		Name:       opSetEipAddressRenewal,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &SetEipAddressRenewalInput{}
	}

	output = &SetEipAddressRenewalOutput{}
	req = c.newRequest(op, input, output)

	return
}

// SetEipAddressRenewal API operation for VPC.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VPC's
// API operation SetEipAddressRenewal for usage and error information.
func (c *VPC) SetEipAddressRenewal(input *SetEipAddressRenewalInput) (*SetEipAddressRenewalOutput, error) {
	req, out := c.SetEipAddressRenewalRequest(input)
	return out, req.Send()
}

// SetEipAddressRenewalWithContext is the same as SetEipAddressRenewal with the addition of
// the ability to pass a context and additional request options.
//
// See SetEipAddressRenewal for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) SetEipAddressRenewalWithContext(ctx volcengine.Context, input *SetEipAddressRenewalInput, opts ...request.Option) (*SetEipAddressRenewalOutput, error) {
	req, out := c.SetEipAddressRenewalRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type SetEipAddressRenewalInput struct {
	_ struct{} `type:"structure"`

	// AllocationId is a required field
	AllocationId *string `type:"string" required:"true"`

	RemainRenewTimes *int64 `type:"integer"`

	RenewPeriodTimes *int64 `type:"integer"`

	// RenewType is a required field
	RenewType *int64 `min:"1" max:"3" type:"integer" required:"true"`
}

// String returns the string representation
func (s SetEipAddressRenewalInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SetEipAddressRenewalInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *SetEipAddressRenewalInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "SetEipAddressRenewalInput"}
	if s.AllocationId == nil {
		invalidParams.Add(request.NewErrParamRequired("AllocationId"))
	}
	if s.RenewType == nil {
		invalidParams.Add(request.NewErrParamRequired("RenewType"))
	}
	if s.RenewType != nil && *s.RenewType < 1 {
		invalidParams.Add(request.NewErrParamMinValue("RenewType", 1))
	}
	if s.RenewType != nil && *s.RenewType > 3 {
		invalidParams.Add(request.NewErrParamMaxValue("RenewType", 3))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAllocationId sets the AllocationId field's value.
func (s *SetEipAddressRenewalInput) SetAllocationId(v string) *SetEipAddressRenewalInput {
	s.AllocationId = &v
	return s
}

// SetRemainRenewTimes sets the RemainRenewTimes field's value.
func (s *SetEipAddressRenewalInput) SetRemainRenewTimes(v int64) *SetEipAddressRenewalInput {
	s.RemainRenewTimes = &v
	return s
}

// SetRenewPeriodTimes sets the RenewPeriodTimes field's value.
func (s *SetEipAddressRenewalInput) SetRenewPeriodTimes(v int64) *SetEipAddressRenewalInput {
	s.RenewPeriodTimes = &v
	return s
}

// SetRenewType sets the RenewType field's value.
func (s *SetEipAddressRenewalInput) SetRenewType(v int64) *SetEipAddressRenewalInput {
	s.RenewType = &v
	return s
}

type SetEipAddressRenewalOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s SetEipAddressRenewalOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SetEipAddressRenewalOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *SetEipAddressRenewalOutput) SetRequestId(v string) *SetEipAddressRenewalOutput {
	s.RequestId = &v
	return s
}
