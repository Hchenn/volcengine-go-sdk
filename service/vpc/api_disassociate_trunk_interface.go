// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpc

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDisassociateTrunkInterfaceCommon = "DisassociateTrunkInterface"

// DisassociateTrunkInterfaceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DisassociateTrunkInterfaceCommon operation. The "output" return
// value will be populated with the DisassociateTrunkInterfaceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DisassociateTrunkInterfaceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DisassociateTrunkInterfaceCommon Send returns without error.
//
// See DisassociateTrunkInterfaceCommon for more information on using the DisassociateTrunkInterfaceCommon
// API call, and error handling.
//
//    // Example sending a request using the DisassociateTrunkInterfaceCommonRequest method.
//    req, resp := client.DisassociateTrunkInterfaceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) DisassociateTrunkInterfaceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDisassociateTrunkInterfaceCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DisassociateTrunkInterfaceCommon API operation for VPC.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VPC's
// API operation DisassociateTrunkInterfaceCommon for usage and error information.
func (c *VPC) DisassociateTrunkInterfaceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DisassociateTrunkInterfaceCommonRequest(input)
	return out, req.Send()
}

// DisassociateTrunkInterfaceCommonWithContext is the same as DisassociateTrunkInterfaceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DisassociateTrunkInterfaceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) DisassociateTrunkInterfaceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DisassociateTrunkInterfaceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDisassociateTrunkInterface = "DisassociateTrunkInterface"

// DisassociateTrunkInterfaceRequest generates a "volcengine/request.Request" representing the
// client's request for the DisassociateTrunkInterface operation. The "output" return
// value will be populated with the DisassociateTrunkInterfaceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DisassociateTrunkInterfaceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DisassociateTrunkInterfaceCommon Send returns without error.
//
// See DisassociateTrunkInterface for more information on using the DisassociateTrunkInterface
// API call, and error handling.
//
//    // Example sending a request using the DisassociateTrunkInterfaceRequest method.
//    req, resp := client.DisassociateTrunkInterfaceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) DisassociateTrunkInterfaceRequest(input *DisassociateTrunkInterfaceInput) (req *request.Request, output *DisassociateTrunkInterfaceOutput) {
	op := &request.Operation{
		Name:       opDisassociateTrunkInterface,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DisassociateTrunkInterfaceInput{}
	}

	output = &DisassociateTrunkInterfaceOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DisassociateTrunkInterface API operation for VPC.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VPC's
// API operation DisassociateTrunkInterface for usage and error information.
func (c *VPC) DisassociateTrunkInterface(input *DisassociateTrunkInterfaceInput) (*DisassociateTrunkInterfaceOutput, error) {
	req, out := c.DisassociateTrunkInterfaceRequest(input)
	return out, req.Send()
}

// DisassociateTrunkInterfaceWithContext is the same as DisassociateTrunkInterface with the addition of
// the ability to pass a context and additional request options.
//
// See DisassociateTrunkInterface for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) DisassociateTrunkInterfaceWithContext(ctx volcengine.Context, input *DisassociateTrunkInterfaceInput, opts ...request.Option) (*DisassociateTrunkInterfaceOutput, error) {
	req, out := c.DisassociateTrunkInterfaceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DisassociateTrunkInterfaceInput struct {
	_ struct{} `type:"structure"`

	// BranchInterfaceId is a required field
	BranchInterfaceId *string `type:"string" required:"true"`

	ClientToken *string `type:"string"`

	// TrunkInterfaceId is a required field
	TrunkInterfaceId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DisassociateTrunkInterfaceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DisassociateTrunkInterfaceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DisassociateTrunkInterfaceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DisassociateTrunkInterfaceInput"}
	if s.BranchInterfaceId == nil {
		invalidParams.Add(request.NewErrParamRequired("BranchInterfaceId"))
	}
	if s.TrunkInterfaceId == nil {
		invalidParams.Add(request.NewErrParamRequired("TrunkInterfaceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBranchInterfaceId sets the BranchInterfaceId field's value.
func (s *DisassociateTrunkInterfaceInput) SetBranchInterfaceId(v string) *DisassociateTrunkInterfaceInput {
	s.BranchInterfaceId = &v
	return s
}

// SetClientToken sets the ClientToken field's value.
func (s *DisassociateTrunkInterfaceInput) SetClientToken(v string) *DisassociateTrunkInterfaceInput {
	s.ClientToken = &v
	return s
}

// SetTrunkInterfaceId sets the TrunkInterfaceId field's value.
func (s *DisassociateTrunkInterfaceInput) SetTrunkInterfaceId(v string) *DisassociateTrunkInterfaceInput {
	s.TrunkInterfaceId = &v
	return s
}

type DisassociateTrunkInterfaceOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s DisassociateTrunkInterfaceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DisassociateTrunkInterfaceOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DisassociateTrunkInterfaceOutput) SetRequestId(v string) *DisassociateTrunkInterfaceOutput {
	s.RequestId = &v
	return s
}
