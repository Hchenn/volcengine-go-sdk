// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package advdefence20230308

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opBatchAddFwdRuleCommon = "BatchAddFwdRule"

// BatchAddFwdRuleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the BatchAddFwdRuleCommon operation. The "output" return
// value will be populated with the BatchAddFwdRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned BatchAddFwdRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after BatchAddFwdRuleCommon Send returns without error.
//
// See BatchAddFwdRuleCommon for more information on using the BatchAddFwdRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the BatchAddFwdRuleCommonRequest method.
//    req, resp := client.BatchAddFwdRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE20230308) BatchAddFwdRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opBatchAddFwdRuleCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// BatchAddFwdRuleCommon API operation for ADVDEFENCE20230308.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE20230308's
// API operation BatchAddFwdRuleCommon for usage and error information.
func (c *ADVDEFENCE20230308) BatchAddFwdRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.BatchAddFwdRuleCommonRequest(input)
	return out, req.Send()
}

// BatchAddFwdRuleCommonWithContext is the same as BatchAddFwdRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See BatchAddFwdRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE20230308) BatchAddFwdRuleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.BatchAddFwdRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opBatchAddFwdRule = "BatchAddFwdRule"

// BatchAddFwdRuleRequest generates a "volcengine/request.Request" representing the
// client's request for the BatchAddFwdRule operation. The "output" return
// value will be populated with the BatchAddFwdRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned BatchAddFwdRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after BatchAddFwdRuleCommon Send returns without error.
//
// See BatchAddFwdRule for more information on using the BatchAddFwdRule
// API call, and error handling.
//
//    // Example sending a request using the BatchAddFwdRuleRequest method.
//    req, resp := client.BatchAddFwdRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE20230308) BatchAddFwdRuleRequest(input *BatchAddFwdRuleInput) (req *request.Request, output *BatchAddFwdRuleOutput) {
	op := &request.Operation{
		Name:       opBatchAddFwdRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &BatchAddFwdRuleInput{}
	}

	output = &BatchAddFwdRuleOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// BatchAddFwdRule API operation for ADVDEFENCE20230308.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE20230308's
// API operation BatchAddFwdRule for usage and error information.
func (c *ADVDEFENCE20230308) BatchAddFwdRule(input *BatchAddFwdRuleInput) (*BatchAddFwdRuleOutput, error) {
	req, out := c.BatchAddFwdRuleRequest(input)
	return out, req.Send()
}

// BatchAddFwdRuleWithContext is the same as BatchAddFwdRule with the addition of
// the ability to pass a context and additional request options.
//
// See BatchAddFwdRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE20230308) BatchAddFwdRuleWithContext(ctx volcengine.Context, input *BatchAddFwdRuleInput, opts ...request.Option) (*BatchAddFwdRuleOutput, error) {
	req, out := c.BatchAddFwdRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AddRuleForBatchAddFwdRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FwdPort *int32 `type:"int32" json:",omitempty"`

	InstanceIp *string `type:"string" json:",omitempty"`

	Proto *string `type:"string" json:",omitempty"`

	SrcIpList []*string `type:"list" json:",omitempty"`

	SrcPort *int32 `type:"int32" json:",omitempty"`

	Timeout *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s AddRuleForBatchAddFwdRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddRuleForBatchAddFwdRuleInput) GoString() string {
	return s.String()
}

// SetFwdPort sets the FwdPort field's value.
func (s *AddRuleForBatchAddFwdRuleInput) SetFwdPort(v int32) *AddRuleForBatchAddFwdRuleInput {
	s.FwdPort = &v
	return s
}

// SetInstanceIp sets the InstanceIp field's value.
func (s *AddRuleForBatchAddFwdRuleInput) SetInstanceIp(v string) *AddRuleForBatchAddFwdRuleInput {
	s.InstanceIp = &v
	return s
}

// SetProto sets the Proto field's value.
func (s *AddRuleForBatchAddFwdRuleInput) SetProto(v string) *AddRuleForBatchAddFwdRuleInput {
	s.Proto = &v
	return s
}

// SetSrcIpList sets the SrcIpList field's value.
func (s *AddRuleForBatchAddFwdRuleInput) SetSrcIpList(v []*string) *AddRuleForBatchAddFwdRuleInput {
	s.SrcIpList = v
	return s
}

// SetSrcPort sets the SrcPort field's value.
func (s *AddRuleForBatchAddFwdRuleInput) SetSrcPort(v int32) *AddRuleForBatchAddFwdRuleInput {
	s.SrcPort = &v
	return s
}

// SetTimeout sets the Timeout field's value.
func (s *AddRuleForBatchAddFwdRuleInput) SetTimeout(v int32) *AddRuleForBatchAddFwdRuleInput {
	s.Timeout = &v
	return s
}

type BatchAddFwdRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AddRules []*AddRuleForBatchAddFwdRuleInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s BatchAddFwdRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BatchAddFwdRuleInput) GoString() string {
	return s.String()
}

// SetAddRules sets the AddRules field's value.
func (s *BatchAddFwdRuleInput) SetAddRules(v []*AddRuleForBatchAddFwdRuleInput) *BatchAddFwdRuleInput {
	s.AddRules = v
	return s
}

type BatchAddFwdRuleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Messages []*MessageForBatchAddFwdRuleOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s BatchAddFwdRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BatchAddFwdRuleOutput) GoString() string {
	return s.String()
}

// SetMessages sets the Messages field's value.
func (s *BatchAddFwdRuleOutput) SetMessages(v []*MessageForBatchAddFwdRuleOutput) *BatchAddFwdRuleOutput {
	s.Messages = v
	return s
}

type MessageForBatchAddFwdRuleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ErrMsgs []*string `type:"list" json:",omitempty"`

	FwdPort *int32 `type:"int32" json:",omitempty"`

	IsSucceed *int32 `type:"int32" json:",omitempty"`

	Proto *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s MessageForBatchAddFwdRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MessageForBatchAddFwdRuleOutput) GoString() string {
	return s.String()
}

// SetErrMsgs sets the ErrMsgs field's value.
func (s *MessageForBatchAddFwdRuleOutput) SetErrMsgs(v []*string) *MessageForBatchAddFwdRuleOutput {
	s.ErrMsgs = v
	return s
}

// SetFwdPort sets the FwdPort field's value.
func (s *MessageForBatchAddFwdRuleOutput) SetFwdPort(v int32) *MessageForBatchAddFwdRuleOutput {
	s.FwdPort = &v
	return s
}

// SetIsSucceed sets the IsSucceed field's value.
func (s *MessageForBatchAddFwdRuleOutput) SetIsSucceed(v int32) *MessageForBatchAddFwdRuleOutput {
	s.IsSucceed = &v
	return s
}

// SetProto sets the Proto field's value.
func (s *MessageForBatchAddFwdRuleOutput) SetProto(v string) *MessageForBatchAddFwdRuleOutput {
	s.Proto = &v
	return s
}
