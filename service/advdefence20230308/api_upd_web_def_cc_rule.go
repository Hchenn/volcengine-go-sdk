// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package advdefence20230308

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdWebDefCcRuleCommon = "UpdWebDefCcRule"

// UpdWebDefCcRuleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdWebDefCcRuleCommon operation. The "output" return
// value will be populated with the UpdWebDefCcRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdWebDefCcRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdWebDefCcRuleCommon Send returns without error.
//
// See UpdWebDefCcRuleCommon for more information on using the UpdWebDefCcRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdWebDefCcRuleCommonRequest method.
//    req, resp := client.UpdWebDefCcRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE20230308) UpdWebDefCcRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdWebDefCcRuleCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdWebDefCcRuleCommon API operation for ADVDEFENCE20230308.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE20230308's
// API operation UpdWebDefCcRuleCommon for usage and error information.
func (c *ADVDEFENCE20230308) UpdWebDefCcRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdWebDefCcRuleCommonRequest(input)
	return out, req.Send()
}

// UpdWebDefCcRuleCommonWithContext is the same as UpdWebDefCcRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdWebDefCcRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE20230308) UpdWebDefCcRuleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdWebDefCcRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdWebDefCcRule = "UpdWebDefCcRule"

// UpdWebDefCcRuleRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdWebDefCcRule operation. The "output" return
// value will be populated with the UpdWebDefCcRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdWebDefCcRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdWebDefCcRuleCommon Send returns without error.
//
// See UpdWebDefCcRule for more information on using the UpdWebDefCcRule
// API call, and error handling.
//
//    // Example sending a request using the UpdWebDefCcRuleRequest method.
//    req, resp := client.UpdWebDefCcRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE20230308) UpdWebDefCcRuleRequest(input *UpdWebDefCcRuleInput) (req *request.Request, output *UpdWebDefCcRuleOutput) {
	op := &request.Operation{
		Name:       opUpdWebDefCcRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdWebDefCcRuleInput{}
	}

	output = &UpdWebDefCcRuleOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdWebDefCcRule API operation for ADVDEFENCE20230308.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE20230308's
// API operation UpdWebDefCcRule for usage and error information.
func (c *ADVDEFENCE20230308) UpdWebDefCcRule(input *UpdWebDefCcRuleInput) (*UpdWebDefCcRuleOutput, error) {
	req, out := c.UpdWebDefCcRuleRequest(input)
	return out, req.Send()
}

// UpdWebDefCcRuleWithContext is the same as UpdWebDefCcRule with the addition of
// the ability to pass a context and additional request options.
//
// See UpdWebDefCcRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE20230308) UpdWebDefCcRuleWithContext(ctx volcengine.Context, input *UpdWebDefCcRuleInput, opts ...request.Option) (*UpdWebDefCcRuleOutput, error) {
	req, out := c.UpdWebDefCcRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AccurateGroupForUpdWebDefCcRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccurateGroupPriority *int32 `type:"int32" json:",omitempty"`

	AccurateRules []*AccurateRuleForUpdWebDefCcRuleInput `type:"list" json:",omitempty"`

	Id *int32 `type:"int32" json:",omitempty"`

	Logic *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s AccurateGroupForUpdWebDefCcRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AccurateGroupForUpdWebDefCcRuleInput) GoString() string {
	return s.String()
}

// SetAccurateGroupPriority sets the AccurateGroupPriority field's value.
func (s *AccurateGroupForUpdWebDefCcRuleInput) SetAccurateGroupPriority(v int32) *AccurateGroupForUpdWebDefCcRuleInput {
	s.AccurateGroupPriority = &v
	return s
}

// SetAccurateRules sets the AccurateRules field's value.
func (s *AccurateGroupForUpdWebDefCcRuleInput) SetAccurateRules(v []*AccurateRuleForUpdWebDefCcRuleInput) *AccurateGroupForUpdWebDefCcRuleInput {
	s.AccurateRules = v
	return s
}

// SetId sets the Id field's value.
func (s *AccurateGroupForUpdWebDefCcRuleInput) SetId(v int32) *AccurateGroupForUpdWebDefCcRuleInput {
	s.Id = &v
	return s
}

// SetLogic sets the Logic field's value.
func (s *AccurateGroupForUpdWebDefCcRuleInput) SetLogic(v int32) *AccurateGroupForUpdWebDefCcRuleInput {
	s.Logic = &v
	return s
}

type AccurateRuleForUpdWebDefCcRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	HttpObj *string `type:"string" json:",omitempty"`

	ObjType *int32 `type:"int32" json:",omitempty"`

	Opretar *int32 `type:"int32" json:",omitempty"`

	Property *int32 `type:"int32" json:",omitempty"`

	ValueString *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AccurateRuleForUpdWebDefCcRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AccurateRuleForUpdWebDefCcRuleInput) GoString() string {
	return s.String()
}

// SetHttpObj sets the HttpObj field's value.
func (s *AccurateRuleForUpdWebDefCcRuleInput) SetHttpObj(v string) *AccurateRuleForUpdWebDefCcRuleInput {
	s.HttpObj = &v
	return s
}

// SetObjType sets the ObjType field's value.
func (s *AccurateRuleForUpdWebDefCcRuleInput) SetObjType(v int32) *AccurateRuleForUpdWebDefCcRuleInput {
	s.ObjType = &v
	return s
}

// SetOpretar sets the Opretar field's value.
func (s *AccurateRuleForUpdWebDefCcRuleInput) SetOpretar(v int32) *AccurateRuleForUpdWebDefCcRuleInput {
	s.Opretar = &v
	return s
}

// SetProperty sets the Property field's value.
func (s *AccurateRuleForUpdWebDefCcRuleInput) SetProperty(v int32) *AccurateRuleForUpdWebDefCcRuleInput {
	s.Property = &v
	return s
}

// SetValueString sets the ValueString field's value.
func (s *AccurateRuleForUpdWebDefCcRuleInput) SetValueString(v string) *AccurateRuleForUpdWebDefCcRuleInput {
	s.ValueString = &v
	return s
}

type UpdWebDefCcRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccurateGroup *AccurateGroupForUpdWebDefCcRuleInput `type:"structure" json:",omitempty"`

	// CCType is a required field
	CCType *int32 `type:"int32" json:",omitempty" required:"true"`

	// CountTime is a required field
	CountTime *int32 `type:"int32" json:",omitempty" required:"true"`

	// DdosId is a required field
	DdosId *int32 `type:"int32" json:",omitempty" required:"true"`

	// EffectTime is a required field
	EffectTime *int32 `type:"int32" json:",omitempty" required:"true"`

	// Enable is a required field
	Enable *int32 `type:"int32" json:",omitempty" required:"true"`

	// Field is a required field
	Field *string `type:"string" json:",omitempty" required:"true"`

	// Host is a required field
	Host *string `type:"string" json:",omitempty" required:"true"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	// PathThreshold is a required field
	PathThreshold *int32 `type:"int32" json:",omitempty" required:"true"`

	// PrefixSwitch is a required field
	PrefixSwitch *int32 `type:"int32" json:",omitempty" required:"true"`

	// RulePriority is a required field
	RulePriority *int32 `type:"int32" json:",omitempty" required:"true"`

	// SingleThreshold is a required field
	SingleThreshold *int32 `type:"int32" json:",omitempty" required:"true"`

	// Url is a required field
	Url *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s UpdWebDefCcRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdWebDefCcRuleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdWebDefCcRuleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdWebDefCcRuleInput"}
	if s.CCType == nil {
		invalidParams.Add(request.NewErrParamRequired("CCType"))
	}
	if s.CountTime == nil {
		invalidParams.Add(request.NewErrParamRequired("CountTime"))
	}
	if s.DdosId == nil {
		invalidParams.Add(request.NewErrParamRequired("DdosId"))
	}
	if s.EffectTime == nil {
		invalidParams.Add(request.NewErrParamRequired("EffectTime"))
	}
	if s.Enable == nil {
		invalidParams.Add(request.NewErrParamRequired("Enable"))
	}
	if s.Field == nil {
		invalidParams.Add(request.NewErrParamRequired("Field"))
	}
	if s.Host == nil {
		invalidParams.Add(request.NewErrParamRequired("Host"))
	}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}
	if s.PathThreshold == nil {
		invalidParams.Add(request.NewErrParamRequired("PathThreshold"))
	}
	if s.PrefixSwitch == nil {
		invalidParams.Add(request.NewErrParamRequired("PrefixSwitch"))
	}
	if s.RulePriority == nil {
		invalidParams.Add(request.NewErrParamRequired("RulePriority"))
	}
	if s.SingleThreshold == nil {
		invalidParams.Add(request.NewErrParamRequired("SingleThreshold"))
	}
	if s.Url == nil {
		invalidParams.Add(request.NewErrParamRequired("Url"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAccurateGroup sets the AccurateGroup field's value.
func (s *UpdWebDefCcRuleInput) SetAccurateGroup(v *AccurateGroupForUpdWebDefCcRuleInput) *UpdWebDefCcRuleInput {
	s.AccurateGroup = v
	return s
}

// SetCCType sets the CCType field's value.
func (s *UpdWebDefCcRuleInput) SetCCType(v int32) *UpdWebDefCcRuleInput {
	s.CCType = &v
	return s
}

// SetCountTime sets the CountTime field's value.
func (s *UpdWebDefCcRuleInput) SetCountTime(v int32) *UpdWebDefCcRuleInput {
	s.CountTime = &v
	return s
}

// SetDdosId sets the DdosId field's value.
func (s *UpdWebDefCcRuleInput) SetDdosId(v int32) *UpdWebDefCcRuleInput {
	s.DdosId = &v
	return s
}

// SetEffectTime sets the EffectTime field's value.
func (s *UpdWebDefCcRuleInput) SetEffectTime(v int32) *UpdWebDefCcRuleInput {
	s.EffectTime = &v
	return s
}

// SetEnable sets the Enable field's value.
func (s *UpdWebDefCcRuleInput) SetEnable(v int32) *UpdWebDefCcRuleInput {
	s.Enable = &v
	return s
}

// SetField sets the Field field's value.
func (s *UpdWebDefCcRuleInput) SetField(v string) *UpdWebDefCcRuleInput {
	s.Field = &v
	return s
}

// SetHost sets the Host field's value.
func (s *UpdWebDefCcRuleInput) SetHost(v string) *UpdWebDefCcRuleInput {
	s.Host = &v
	return s
}

// SetName sets the Name field's value.
func (s *UpdWebDefCcRuleInput) SetName(v string) *UpdWebDefCcRuleInput {
	s.Name = &v
	return s
}

// SetPathThreshold sets the PathThreshold field's value.
func (s *UpdWebDefCcRuleInput) SetPathThreshold(v int32) *UpdWebDefCcRuleInput {
	s.PathThreshold = &v
	return s
}

// SetPrefixSwitch sets the PrefixSwitch field's value.
func (s *UpdWebDefCcRuleInput) SetPrefixSwitch(v int32) *UpdWebDefCcRuleInput {
	s.PrefixSwitch = &v
	return s
}

// SetRulePriority sets the RulePriority field's value.
func (s *UpdWebDefCcRuleInput) SetRulePriority(v int32) *UpdWebDefCcRuleInput {
	s.RulePriority = &v
	return s
}

// SetSingleThreshold sets the SingleThreshold field's value.
func (s *UpdWebDefCcRuleInput) SetSingleThreshold(v int32) *UpdWebDefCcRuleInput {
	s.SingleThreshold = &v
	return s
}

// SetUrl sets the Url field's value.
func (s *UpdWebDefCcRuleInput) SetUrl(v string) *UpdWebDefCcRuleInput {
	s.Url = &v
	return s
}

type UpdWebDefCcRuleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdWebDefCcRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdWebDefCcRuleOutput) GoString() string {
	return s.String()
}
