// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package advdefence20230308

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeAttackFlowCommon = "DescribeAttackFlow"

// DescribeAttackFlowCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeAttackFlowCommon operation. The "output" return
// value will be populated with the DescribeAttackFlowCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeAttackFlowCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeAttackFlowCommon Send returns without error.
//
// See DescribeAttackFlowCommon for more information on using the DescribeAttackFlowCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeAttackFlowCommonRequest method.
//    req, resp := client.DescribeAttackFlowCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE20230308) DescribeAttackFlowCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeAttackFlowCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeAttackFlowCommon API operation for ADVDEFENCE20230308.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE20230308's
// API operation DescribeAttackFlowCommon for usage and error information.
func (c *ADVDEFENCE20230308) DescribeAttackFlowCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeAttackFlowCommonRequest(input)
	return out, req.Send()
}

// DescribeAttackFlowCommonWithContext is the same as DescribeAttackFlowCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeAttackFlowCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE20230308) DescribeAttackFlowCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeAttackFlowCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeAttackFlow = "DescribeAttackFlow"

// DescribeAttackFlowRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeAttackFlow operation. The "output" return
// value will be populated with the DescribeAttackFlowCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeAttackFlowCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeAttackFlowCommon Send returns without error.
//
// See DescribeAttackFlow for more information on using the DescribeAttackFlow
// API call, and error handling.
//
//    // Example sending a request using the DescribeAttackFlowRequest method.
//    req, resp := client.DescribeAttackFlowRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE20230308) DescribeAttackFlowRequest(input *DescribeAttackFlowInput) (req *request.Request, output *DescribeAttackFlowOutput) {
	op := &request.Operation{
		Name:       opDescribeAttackFlow,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeAttackFlowInput{}
	}

	output = &DescribeAttackFlowOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeAttackFlow API operation for ADVDEFENCE20230308.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE20230308's
// API operation DescribeAttackFlow for usage and error information.
func (c *ADVDEFENCE20230308) DescribeAttackFlow(input *DescribeAttackFlowInput) (*DescribeAttackFlowOutput, error) {
	req, out := c.DescribeAttackFlowRequest(input)
	return out, req.Send()
}

// DescribeAttackFlowWithContext is the same as DescribeAttackFlow with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeAttackFlow for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE20230308) DescribeAttackFlowWithContext(ctx volcengine.Context, input *DescribeAttackFlowInput, opts ...request.Option) (*DescribeAttackFlowOutput, error) {
	req, out := c.DescribeAttackFlowRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeAttackFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// BeginTime is a required field
	BeginTime *int32 `type:"int32" json:",omitempty" required:"true"`

	// EndTime is a required field
	EndTime *int32 `type:"int32" json:",omitempty" required:"true"`

	InstanceIps []*string `type:"list" json:",omitempty"`

	Tab *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeAttackFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAttackFlowInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeAttackFlowInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeAttackFlowInput"}
	if s.BeginTime == nil {
		invalidParams.Add(request.NewErrParamRequired("BeginTime"))
	}
	if s.EndTime == nil {
		invalidParams.Add(request.NewErrParamRequired("EndTime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBeginTime sets the BeginTime field's value.
func (s *DescribeAttackFlowInput) SetBeginTime(v int32) *DescribeAttackFlowInput {
	s.BeginTime = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DescribeAttackFlowInput) SetEndTime(v int32) *DescribeAttackFlowInput {
	s.EndTime = &v
	return s
}

// SetInstanceIps sets the InstanceIps field's value.
func (s *DescribeAttackFlowInput) SetInstanceIps(v []*string) *DescribeAttackFlowInput {
	s.InstanceIps = v
	return s
}

// SetTab sets the Tab field's value.
func (s *DescribeAttackFlowInput) SetTab(v string) *DescribeAttackFlowInput {
	s.Tab = &v
	return s
}

type DescribeAttackFlowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	InstanceResult []*InstanceResultForDescribeAttackFlowOutput `type:"list" json:",omitempty"`

	OverallResult *OverallResultForDescribeAttackFlowOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DescribeAttackFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAttackFlowOutput) GoString() string {
	return s.String()
}

// SetInstanceResult sets the InstanceResult field's value.
func (s *DescribeAttackFlowOutput) SetInstanceResult(v []*InstanceResultForDescribeAttackFlowOutput) *DescribeAttackFlowOutput {
	s.InstanceResult = v
	return s
}

// SetOverallResult sets the OverallResult field's value.
func (s *DescribeAttackFlowOutput) SetOverallResult(v *OverallResultForDescribeAttackFlowOutput) *DescribeAttackFlowOutput {
	s.OverallResult = v
	return s
}

type DropKBpsFlowForDescribeAttackFlowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Ip *string `type:"string" json:",omitempty"`

	Timestamp *int32 `type:"int32" json:",omitempty"`

	Value *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DropKBpsFlowForDescribeAttackFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DropKBpsFlowForDescribeAttackFlowOutput) GoString() string {
	return s.String()
}

// SetIp sets the Ip field's value.
func (s *DropKBpsFlowForDescribeAttackFlowOutput) SetIp(v string) *DropKBpsFlowForDescribeAttackFlowOutput {
	s.Ip = &v
	return s
}

// SetTimestamp sets the Timestamp field's value.
func (s *DropKBpsFlowForDescribeAttackFlowOutput) SetTimestamp(v int32) *DropKBpsFlowForDescribeAttackFlowOutput {
	s.Timestamp = &v
	return s
}

// SetValue sets the Value field's value.
func (s *DropKBpsFlowForDescribeAttackFlowOutput) SetValue(v int32) *DropKBpsFlowForDescribeAttackFlowOutput {
	s.Value = &v
	return s
}

type DropPktsFlowForDescribeAttackFlowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Ip *string `type:"string" json:",omitempty"`

	Timestamp *int32 `type:"int32" json:",omitempty"`

	Value *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DropPktsFlowForDescribeAttackFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DropPktsFlowForDescribeAttackFlowOutput) GoString() string {
	return s.String()
}

// SetIp sets the Ip field's value.
func (s *DropPktsFlowForDescribeAttackFlowOutput) SetIp(v string) *DropPktsFlowForDescribeAttackFlowOutput {
	s.Ip = &v
	return s
}

// SetTimestamp sets the Timestamp field's value.
func (s *DropPktsFlowForDescribeAttackFlowOutput) SetTimestamp(v int32) *DropPktsFlowForDescribeAttackFlowOutput {
	s.Timestamp = &v
	return s
}

// SetValue sets the Value field's value.
func (s *DropPktsFlowForDescribeAttackFlowOutput) SetValue(v int32) *DropPktsFlowForDescribeAttackFlowOutput {
	s.Value = &v
	return s
}

type InKBpsFlowForDescribeAttackFlowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Ip *string `type:"string" json:",omitempty"`

	Timestamp *int32 `type:"int32" json:",omitempty"`

	Value *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s InKBpsFlowForDescribeAttackFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InKBpsFlowForDescribeAttackFlowOutput) GoString() string {
	return s.String()
}

// SetIp sets the Ip field's value.
func (s *InKBpsFlowForDescribeAttackFlowOutput) SetIp(v string) *InKBpsFlowForDescribeAttackFlowOutput {
	s.Ip = &v
	return s
}

// SetTimestamp sets the Timestamp field's value.
func (s *InKBpsFlowForDescribeAttackFlowOutput) SetTimestamp(v int32) *InKBpsFlowForDescribeAttackFlowOutput {
	s.Timestamp = &v
	return s
}

// SetValue sets the Value field's value.
func (s *InKBpsFlowForDescribeAttackFlowOutput) SetValue(v int32) *InKBpsFlowForDescribeAttackFlowOutput {
	s.Value = &v
	return s
}

type InPktsFlowForDescribeAttackFlowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Ip *string `type:"string" json:",omitempty"`

	Timestamp *int32 `type:"int32" json:",omitempty"`

	Value *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s InPktsFlowForDescribeAttackFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InPktsFlowForDescribeAttackFlowOutput) GoString() string {
	return s.String()
}

// SetIp sets the Ip field's value.
func (s *InPktsFlowForDescribeAttackFlowOutput) SetIp(v string) *InPktsFlowForDescribeAttackFlowOutput {
	s.Ip = &v
	return s
}

// SetTimestamp sets the Timestamp field's value.
func (s *InPktsFlowForDescribeAttackFlowOutput) SetTimestamp(v int32) *InPktsFlowForDescribeAttackFlowOutput {
	s.Timestamp = &v
	return s
}

// SetValue sets the Value field's value.
func (s *InPktsFlowForDescribeAttackFlowOutput) SetValue(v int32) *InPktsFlowForDescribeAttackFlowOutput {
	s.Value = &v
	return s
}

type InstanceResultForDescribeAttackFlowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Val *ValForDescribeAttackFlowOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s InstanceResultForDescribeAttackFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceResultForDescribeAttackFlowOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *InstanceResultForDescribeAttackFlowOutput) SetKey(v string) *InstanceResultForDescribeAttackFlowOutput {
	s.Key = &v
	return s
}

// SetVal sets the Val field's value.
func (s *InstanceResultForDescribeAttackFlowOutput) SetVal(v *ValForDescribeAttackFlowOutput) *InstanceResultForDescribeAttackFlowOutput {
	s.Val = v
	return s
}

type OverallResultForDescribeAttackFlowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DropKBpsFlow []*DropKBpsFlowForDescribeAttackFlowOutput `type:"list" json:",omitempty"`

	DropPktsFlow []*DropPktsFlowForDescribeAttackFlowOutput `type:"list" json:",omitempty"`

	InKBpsFlow []*InKBpsFlowForDescribeAttackFlowOutput `type:"list" json:",omitempty"`

	InPktsFlow []*InPktsFlowForDescribeAttackFlowOutput `type:"list" json:",omitempty"`

	PeakDropKBps *int32 `type:"int32" json:",omitempty"`

	PeakDropPps *int32 `type:"int32" json:",omitempty"`

	PeakInKBps *int32 `type:"int32" json:",omitempty"`

	PeakInPps *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s OverallResultForDescribeAttackFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OverallResultForDescribeAttackFlowOutput) GoString() string {
	return s.String()
}

// SetDropKBpsFlow sets the DropKBpsFlow field's value.
func (s *OverallResultForDescribeAttackFlowOutput) SetDropKBpsFlow(v []*DropKBpsFlowForDescribeAttackFlowOutput) *OverallResultForDescribeAttackFlowOutput {
	s.DropKBpsFlow = v
	return s
}

// SetDropPktsFlow sets the DropPktsFlow field's value.
func (s *OverallResultForDescribeAttackFlowOutput) SetDropPktsFlow(v []*DropPktsFlowForDescribeAttackFlowOutput) *OverallResultForDescribeAttackFlowOutput {
	s.DropPktsFlow = v
	return s
}

// SetInKBpsFlow sets the InKBpsFlow field's value.
func (s *OverallResultForDescribeAttackFlowOutput) SetInKBpsFlow(v []*InKBpsFlowForDescribeAttackFlowOutput) *OverallResultForDescribeAttackFlowOutput {
	s.InKBpsFlow = v
	return s
}

// SetInPktsFlow sets the InPktsFlow field's value.
func (s *OverallResultForDescribeAttackFlowOutput) SetInPktsFlow(v []*InPktsFlowForDescribeAttackFlowOutput) *OverallResultForDescribeAttackFlowOutput {
	s.InPktsFlow = v
	return s
}

// SetPeakDropKBps sets the PeakDropKBps field's value.
func (s *OverallResultForDescribeAttackFlowOutput) SetPeakDropKBps(v int32) *OverallResultForDescribeAttackFlowOutput {
	s.PeakDropKBps = &v
	return s
}

// SetPeakDropPps sets the PeakDropPps field's value.
func (s *OverallResultForDescribeAttackFlowOutput) SetPeakDropPps(v int32) *OverallResultForDescribeAttackFlowOutput {
	s.PeakDropPps = &v
	return s
}

// SetPeakInKBps sets the PeakInKBps field's value.
func (s *OverallResultForDescribeAttackFlowOutput) SetPeakInKBps(v int32) *OverallResultForDescribeAttackFlowOutput {
	s.PeakInKBps = &v
	return s
}

// SetPeakInPps sets the PeakInPps field's value.
func (s *OverallResultForDescribeAttackFlowOutput) SetPeakInPps(v int32) *OverallResultForDescribeAttackFlowOutput {
	s.PeakInPps = &v
	return s
}

type ValForDescribeAttackFlowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DropKBpsFlow []*DropKBpsFlowForDescribeAttackFlowOutput `type:"list" json:",omitempty"`

	DropPktsFlow []*DropPktsFlowForDescribeAttackFlowOutput `type:"list" json:",omitempty"`

	InKBpsFlow []*InKBpsFlowForDescribeAttackFlowOutput `type:"list" json:",omitempty"`

	InPktsFlow []*InPktsFlowForDescribeAttackFlowOutput `type:"list" json:",omitempty"`

	PeakDropKBps *int32 `type:"int32" json:",omitempty"`

	PeakDropPps *int32 `type:"int32" json:",omitempty"`

	PeakInKBps *int32 `type:"int32" json:",omitempty"`

	PeakInPps *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ValForDescribeAttackFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ValForDescribeAttackFlowOutput) GoString() string {
	return s.String()
}

// SetDropKBpsFlow sets the DropKBpsFlow field's value.
func (s *ValForDescribeAttackFlowOutput) SetDropKBpsFlow(v []*DropKBpsFlowForDescribeAttackFlowOutput) *ValForDescribeAttackFlowOutput {
	s.DropKBpsFlow = v
	return s
}

// SetDropPktsFlow sets the DropPktsFlow field's value.
func (s *ValForDescribeAttackFlowOutput) SetDropPktsFlow(v []*DropPktsFlowForDescribeAttackFlowOutput) *ValForDescribeAttackFlowOutput {
	s.DropPktsFlow = v
	return s
}

// SetInKBpsFlow sets the InKBpsFlow field's value.
func (s *ValForDescribeAttackFlowOutput) SetInKBpsFlow(v []*InKBpsFlowForDescribeAttackFlowOutput) *ValForDescribeAttackFlowOutput {
	s.InKBpsFlow = v
	return s
}

// SetInPktsFlow sets the InPktsFlow field's value.
func (s *ValForDescribeAttackFlowOutput) SetInPktsFlow(v []*InPktsFlowForDescribeAttackFlowOutput) *ValForDescribeAttackFlowOutput {
	s.InPktsFlow = v
	return s
}

// SetPeakDropKBps sets the PeakDropKBps field's value.
func (s *ValForDescribeAttackFlowOutput) SetPeakDropKBps(v int32) *ValForDescribeAttackFlowOutput {
	s.PeakDropKBps = &v
	return s
}

// SetPeakDropPps sets the PeakDropPps field's value.
func (s *ValForDescribeAttackFlowOutput) SetPeakDropPps(v int32) *ValForDescribeAttackFlowOutput {
	s.PeakDropPps = &v
	return s
}

// SetPeakInKBps sets the PeakInKBps field's value.
func (s *ValForDescribeAttackFlowOutput) SetPeakInKBps(v int32) *ValForDescribeAttackFlowOutput {
	s.PeakInKBps = &v
	return s
}

// SetPeakInPps sets the PeakInPps field's value.
func (s *ValForDescribeAttackFlowOutput) SetPeakInPps(v int32) *ValForDescribeAttackFlowOutput {
	s.PeakInPps = &v
	return s
}
