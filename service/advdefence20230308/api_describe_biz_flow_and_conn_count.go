// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package advdefence20230308

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeBizFlowAndConnCountCommon = "DescribeBizFlowAndConnCount"

// DescribeBizFlowAndConnCountCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeBizFlowAndConnCountCommon operation. The "output" return
// value will be populated with the DescribeBizFlowAndConnCountCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeBizFlowAndConnCountCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeBizFlowAndConnCountCommon Send returns without error.
//
// See DescribeBizFlowAndConnCountCommon for more information on using the DescribeBizFlowAndConnCountCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeBizFlowAndConnCountCommonRequest method.
//    req, resp := client.DescribeBizFlowAndConnCountCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE20230308) DescribeBizFlowAndConnCountCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeBizFlowAndConnCountCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeBizFlowAndConnCountCommon API operation for ADVDEFENCE20230308.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE20230308's
// API operation DescribeBizFlowAndConnCountCommon for usage and error information.
func (c *ADVDEFENCE20230308) DescribeBizFlowAndConnCountCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeBizFlowAndConnCountCommonRequest(input)
	return out, req.Send()
}

// DescribeBizFlowAndConnCountCommonWithContext is the same as DescribeBizFlowAndConnCountCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeBizFlowAndConnCountCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE20230308) DescribeBizFlowAndConnCountCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeBizFlowAndConnCountCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeBizFlowAndConnCount = "DescribeBizFlowAndConnCount"

// DescribeBizFlowAndConnCountRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeBizFlowAndConnCount operation. The "output" return
// value will be populated with the DescribeBizFlowAndConnCountCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeBizFlowAndConnCountCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeBizFlowAndConnCountCommon Send returns without error.
//
// See DescribeBizFlowAndConnCount for more information on using the DescribeBizFlowAndConnCount
// API call, and error handling.
//
//    // Example sending a request using the DescribeBizFlowAndConnCountRequest method.
//    req, resp := client.DescribeBizFlowAndConnCountRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE20230308) DescribeBizFlowAndConnCountRequest(input *DescribeBizFlowAndConnCountInput) (req *request.Request, output *DescribeBizFlowAndConnCountOutput) {
	op := &request.Operation{
		Name:       opDescribeBizFlowAndConnCount,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeBizFlowAndConnCountInput{}
	}

	output = &DescribeBizFlowAndConnCountOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeBizFlowAndConnCount API operation for ADVDEFENCE20230308.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE20230308's
// API operation DescribeBizFlowAndConnCount for usage and error information.
func (c *ADVDEFENCE20230308) DescribeBizFlowAndConnCount(input *DescribeBizFlowAndConnCountInput) (*DescribeBizFlowAndConnCountOutput, error) {
	req, out := c.DescribeBizFlowAndConnCountRequest(input)
	return out, req.Send()
}

// DescribeBizFlowAndConnCountWithContext is the same as DescribeBizFlowAndConnCount with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeBizFlowAndConnCount for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE20230308) DescribeBizFlowAndConnCountWithContext(ctx volcengine.Context, input *DescribeBizFlowAndConnCountInput, opts ...request.Option) (*DescribeBizFlowAndConnCountOutput, error) {
	req, out := c.DescribeBizFlowAndConnCountRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AvgFlowForDescribeBizFlowAndConnCountOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Timestamp *int32 `type:"int32" json:",omitempty"`

	Value *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s AvgFlowForDescribeBizFlowAndConnCountOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AvgFlowForDescribeBizFlowAndConnCountOutput) GoString() string {
	return s.String()
}

// SetTimestamp sets the Timestamp field's value.
func (s *AvgFlowForDescribeBizFlowAndConnCountOutput) SetTimestamp(v int32) *AvgFlowForDescribeBizFlowAndConnCountOutput {
	s.Timestamp = &v
	return s
}

// SetValue sets the Value field's value.
func (s *AvgFlowForDescribeBizFlowAndConnCountOutput) SetValue(v int32) *AvgFlowForDescribeBizFlowAndConnCountOutput {
	s.Value = &v
	return s
}

type BizInKbpsFlowForDescribeBizFlowAndConnCountOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AvgFlows []*AvgFlowForDescribeBizFlowAndConnCountOutput `type:"list" json:",omitempty"`

	MaxAvgValue *int32 `type:"int32" json:",omitempty"`

	PeakFlows []*PeakFlowForDescribeBizFlowAndConnCountOutput `type:"list" json:",omitempty"`

	PeakValue *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s BizInKbpsFlowForDescribeBizFlowAndConnCountOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BizInKbpsFlowForDescribeBizFlowAndConnCountOutput) GoString() string {
	return s.String()
}

// SetAvgFlows sets the AvgFlows field's value.
func (s *BizInKbpsFlowForDescribeBizFlowAndConnCountOutput) SetAvgFlows(v []*AvgFlowForDescribeBizFlowAndConnCountOutput) *BizInKbpsFlowForDescribeBizFlowAndConnCountOutput {
	s.AvgFlows = v
	return s
}

// SetMaxAvgValue sets the MaxAvgValue field's value.
func (s *BizInKbpsFlowForDescribeBizFlowAndConnCountOutput) SetMaxAvgValue(v int32) *BizInKbpsFlowForDescribeBizFlowAndConnCountOutput {
	s.MaxAvgValue = &v
	return s
}

// SetPeakFlows sets the PeakFlows field's value.
func (s *BizInKbpsFlowForDescribeBizFlowAndConnCountOutput) SetPeakFlows(v []*PeakFlowForDescribeBizFlowAndConnCountOutput) *BizInKbpsFlowForDescribeBizFlowAndConnCountOutput {
	s.PeakFlows = v
	return s
}

// SetPeakValue sets the PeakValue field's value.
func (s *BizInKbpsFlowForDescribeBizFlowAndConnCountOutput) SetPeakValue(v int32) *BizInKbpsFlowForDescribeBizFlowAndConnCountOutput {
	s.PeakValue = &v
	return s
}

type BizInPpsFlowForDescribeBizFlowAndConnCountOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AvgFlows []*AvgFlowForDescribeBizFlowAndConnCountOutput `type:"list" json:",omitempty"`

	MaxAvgValue *int32 `type:"int32" json:",omitempty"`

	PeakFlows []*PeakFlowForDescribeBizFlowAndConnCountOutput `type:"list" json:",omitempty"`

	PeakValue *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s BizInPpsFlowForDescribeBizFlowAndConnCountOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BizInPpsFlowForDescribeBizFlowAndConnCountOutput) GoString() string {
	return s.String()
}

// SetAvgFlows sets the AvgFlows field's value.
func (s *BizInPpsFlowForDescribeBizFlowAndConnCountOutput) SetAvgFlows(v []*AvgFlowForDescribeBizFlowAndConnCountOutput) *BizInPpsFlowForDescribeBizFlowAndConnCountOutput {
	s.AvgFlows = v
	return s
}

// SetMaxAvgValue sets the MaxAvgValue field's value.
func (s *BizInPpsFlowForDescribeBizFlowAndConnCountOutput) SetMaxAvgValue(v int32) *BizInPpsFlowForDescribeBizFlowAndConnCountOutput {
	s.MaxAvgValue = &v
	return s
}

// SetPeakFlows sets the PeakFlows field's value.
func (s *BizInPpsFlowForDescribeBizFlowAndConnCountOutput) SetPeakFlows(v []*PeakFlowForDescribeBizFlowAndConnCountOutput) *BizInPpsFlowForDescribeBizFlowAndConnCountOutput {
	s.PeakFlows = v
	return s
}

// SetPeakValue sets the PeakValue field's value.
func (s *BizInPpsFlowForDescribeBizFlowAndConnCountOutput) SetPeakValue(v int32) *BizInPpsFlowForDescribeBizFlowAndConnCountOutput {
	s.PeakValue = &v
	return s
}

type BizOutKbpsFlowForDescribeBizFlowAndConnCountOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AvgFlows []*AvgFlowForDescribeBizFlowAndConnCountOutput `type:"list" json:",omitempty"`

	MaxAvgValue *int32 `type:"int32" json:",omitempty"`

	PeakFlows []*PeakFlowForDescribeBizFlowAndConnCountOutput `type:"list" json:",omitempty"`

	PeakValue *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s BizOutKbpsFlowForDescribeBizFlowAndConnCountOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BizOutKbpsFlowForDescribeBizFlowAndConnCountOutput) GoString() string {
	return s.String()
}

// SetAvgFlows sets the AvgFlows field's value.
func (s *BizOutKbpsFlowForDescribeBizFlowAndConnCountOutput) SetAvgFlows(v []*AvgFlowForDescribeBizFlowAndConnCountOutput) *BizOutKbpsFlowForDescribeBizFlowAndConnCountOutput {
	s.AvgFlows = v
	return s
}

// SetMaxAvgValue sets the MaxAvgValue field's value.
func (s *BizOutKbpsFlowForDescribeBizFlowAndConnCountOutput) SetMaxAvgValue(v int32) *BizOutKbpsFlowForDescribeBizFlowAndConnCountOutput {
	s.MaxAvgValue = &v
	return s
}

// SetPeakFlows sets the PeakFlows field's value.
func (s *BizOutKbpsFlowForDescribeBizFlowAndConnCountOutput) SetPeakFlows(v []*PeakFlowForDescribeBizFlowAndConnCountOutput) *BizOutKbpsFlowForDescribeBizFlowAndConnCountOutput {
	s.PeakFlows = v
	return s
}

// SetPeakValue sets the PeakValue field's value.
func (s *BizOutKbpsFlowForDescribeBizFlowAndConnCountOutput) SetPeakValue(v int32) *BizOutKbpsFlowForDescribeBizFlowAndConnCountOutput {
	s.PeakValue = &v
	return s
}

type BizOutPpsFlowForDescribeBizFlowAndConnCountOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AvgFlows []*AvgFlowForDescribeBizFlowAndConnCountOutput `type:"list" json:",omitempty"`

	MaxAvgValue *int32 `type:"int32" json:",omitempty"`

	PeakFlows []*PeakFlowForDescribeBizFlowAndConnCountOutput `type:"list" json:",omitempty"`

	PeakValue *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s BizOutPpsFlowForDescribeBizFlowAndConnCountOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BizOutPpsFlowForDescribeBizFlowAndConnCountOutput) GoString() string {
	return s.String()
}

// SetAvgFlows sets the AvgFlows field's value.
func (s *BizOutPpsFlowForDescribeBizFlowAndConnCountOutput) SetAvgFlows(v []*AvgFlowForDescribeBizFlowAndConnCountOutput) *BizOutPpsFlowForDescribeBizFlowAndConnCountOutput {
	s.AvgFlows = v
	return s
}

// SetMaxAvgValue sets the MaxAvgValue field's value.
func (s *BizOutPpsFlowForDescribeBizFlowAndConnCountOutput) SetMaxAvgValue(v int32) *BizOutPpsFlowForDescribeBizFlowAndConnCountOutput {
	s.MaxAvgValue = &v
	return s
}

// SetPeakFlows sets the PeakFlows field's value.
func (s *BizOutPpsFlowForDescribeBizFlowAndConnCountOutput) SetPeakFlows(v []*PeakFlowForDescribeBizFlowAndConnCountOutput) *BizOutPpsFlowForDescribeBizFlowAndConnCountOutput {
	s.PeakFlows = v
	return s
}

// SetPeakValue sets the PeakValue field's value.
func (s *BizOutPpsFlowForDescribeBizFlowAndConnCountOutput) SetPeakValue(v int32) *BizOutPpsFlowForDescribeBizFlowAndConnCountOutput {
	s.PeakValue = &v
	return s
}

type ConcurrConnFlowForDescribeBizFlowAndConnCountOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AvgFlows []*AvgFlowForDescribeBizFlowAndConnCountOutput `type:"list" json:",omitempty"`

	MaxAvgValue *int32 `type:"int32" json:",omitempty"`

	PeakFlows []*PeakFlowForDescribeBizFlowAndConnCountOutput `type:"list" json:",omitempty"`

	PeakValue *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ConcurrConnFlowForDescribeBizFlowAndConnCountOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConcurrConnFlowForDescribeBizFlowAndConnCountOutput) GoString() string {
	return s.String()
}

// SetAvgFlows sets the AvgFlows field's value.
func (s *ConcurrConnFlowForDescribeBizFlowAndConnCountOutput) SetAvgFlows(v []*AvgFlowForDescribeBizFlowAndConnCountOutput) *ConcurrConnFlowForDescribeBizFlowAndConnCountOutput {
	s.AvgFlows = v
	return s
}

// SetMaxAvgValue sets the MaxAvgValue field's value.
func (s *ConcurrConnFlowForDescribeBizFlowAndConnCountOutput) SetMaxAvgValue(v int32) *ConcurrConnFlowForDescribeBizFlowAndConnCountOutput {
	s.MaxAvgValue = &v
	return s
}

// SetPeakFlows sets the PeakFlows field's value.
func (s *ConcurrConnFlowForDescribeBizFlowAndConnCountOutput) SetPeakFlows(v []*PeakFlowForDescribeBizFlowAndConnCountOutput) *ConcurrConnFlowForDescribeBizFlowAndConnCountOutput {
	s.PeakFlows = v
	return s
}

// SetPeakValue sets the PeakValue field's value.
func (s *ConcurrConnFlowForDescribeBizFlowAndConnCountOutput) SetPeakValue(v int32) *ConcurrConnFlowForDescribeBizFlowAndConnCountOutput {
	s.PeakValue = &v
	return s
}

type DescribeBizFlowAndConnCountInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// BeginTime is a required field
	BeginTime *int32 `type:"int32" json:",omitempty" required:"true"`

	// EndTime is a required field
	EndTime *int32 `type:"int32" json:",omitempty" required:"true"`

	InstanceIps []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeBizFlowAndConnCountInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeBizFlowAndConnCountInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeBizFlowAndConnCountInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeBizFlowAndConnCountInput"}
	if s.BeginTime == nil {
		invalidParams.Add(request.NewErrParamRequired("BeginTime"))
	}
	if s.EndTime == nil {
		invalidParams.Add(request.NewErrParamRequired("EndTime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBeginTime sets the BeginTime field's value.
func (s *DescribeBizFlowAndConnCountInput) SetBeginTime(v int32) *DescribeBizFlowAndConnCountInput {
	s.BeginTime = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DescribeBizFlowAndConnCountInput) SetEndTime(v int32) *DescribeBizFlowAndConnCountInput {
	s.EndTime = &v
	return s
}

// SetInstanceIps sets the InstanceIps field's value.
func (s *DescribeBizFlowAndConnCountInput) SetInstanceIps(v []*string) *DescribeBizFlowAndConnCountInput {
	s.InstanceIps = v
	return s
}

type DescribeBizFlowAndConnCountOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	BizInKbpsFlow *BizInKbpsFlowForDescribeBizFlowAndConnCountOutput `type:"structure" json:",omitempty"`

	BizInPpsFlow *BizInPpsFlowForDescribeBizFlowAndConnCountOutput `type:"structure" json:",omitempty"`

	BizOutKbpsFlow *BizOutKbpsFlowForDescribeBizFlowAndConnCountOutput `type:"structure" json:",omitempty"`

	BizOutPpsFlow *BizOutPpsFlowForDescribeBizFlowAndConnCountOutput `type:"structure" json:",omitempty"`

	ConcurrConnFlow *ConcurrConnFlowForDescribeBizFlowAndConnCountOutput `type:"structure" json:",omitempty"`

	NewConnFlow *NewConnFlowForDescribeBizFlowAndConnCountOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DescribeBizFlowAndConnCountOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeBizFlowAndConnCountOutput) GoString() string {
	return s.String()
}

// SetBizInKbpsFlow sets the BizInKbpsFlow field's value.
func (s *DescribeBizFlowAndConnCountOutput) SetBizInKbpsFlow(v *BizInKbpsFlowForDescribeBizFlowAndConnCountOutput) *DescribeBizFlowAndConnCountOutput {
	s.BizInKbpsFlow = v
	return s
}

// SetBizInPpsFlow sets the BizInPpsFlow field's value.
func (s *DescribeBizFlowAndConnCountOutput) SetBizInPpsFlow(v *BizInPpsFlowForDescribeBizFlowAndConnCountOutput) *DescribeBizFlowAndConnCountOutput {
	s.BizInPpsFlow = v
	return s
}

// SetBizOutKbpsFlow sets the BizOutKbpsFlow field's value.
func (s *DescribeBizFlowAndConnCountOutput) SetBizOutKbpsFlow(v *BizOutKbpsFlowForDescribeBizFlowAndConnCountOutput) *DescribeBizFlowAndConnCountOutput {
	s.BizOutKbpsFlow = v
	return s
}

// SetBizOutPpsFlow sets the BizOutPpsFlow field's value.
func (s *DescribeBizFlowAndConnCountOutput) SetBizOutPpsFlow(v *BizOutPpsFlowForDescribeBizFlowAndConnCountOutput) *DescribeBizFlowAndConnCountOutput {
	s.BizOutPpsFlow = v
	return s
}

// SetConcurrConnFlow sets the ConcurrConnFlow field's value.
func (s *DescribeBizFlowAndConnCountOutput) SetConcurrConnFlow(v *ConcurrConnFlowForDescribeBizFlowAndConnCountOutput) *DescribeBizFlowAndConnCountOutput {
	s.ConcurrConnFlow = v
	return s
}

// SetNewConnFlow sets the NewConnFlow field's value.
func (s *DescribeBizFlowAndConnCountOutput) SetNewConnFlow(v *NewConnFlowForDescribeBizFlowAndConnCountOutput) *DescribeBizFlowAndConnCountOutput {
	s.NewConnFlow = v
	return s
}

type NewConnFlowForDescribeBizFlowAndConnCountOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AvgFlows []*AvgFlowForDescribeBizFlowAndConnCountOutput `type:"list" json:",omitempty"`

	MaxAvgValue *int32 `type:"int32" json:",omitempty"`

	PeakFlows []*PeakFlowForDescribeBizFlowAndConnCountOutput `type:"list" json:",omitempty"`

	PeakValue *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s NewConnFlowForDescribeBizFlowAndConnCountOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NewConnFlowForDescribeBizFlowAndConnCountOutput) GoString() string {
	return s.String()
}

// SetAvgFlows sets the AvgFlows field's value.
func (s *NewConnFlowForDescribeBizFlowAndConnCountOutput) SetAvgFlows(v []*AvgFlowForDescribeBizFlowAndConnCountOutput) *NewConnFlowForDescribeBizFlowAndConnCountOutput {
	s.AvgFlows = v
	return s
}

// SetMaxAvgValue sets the MaxAvgValue field's value.
func (s *NewConnFlowForDescribeBizFlowAndConnCountOutput) SetMaxAvgValue(v int32) *NewConnFlowForDescribeBizFlowAndConnCountOutput {
	s.MaxAvgValue = &v
	return s
}

// SetPeakFlows sets the PeakFlows field's value.
func (s *NewConnFlowForDescribeBizFlowAndConnCountOutput) SetPeakFlows(v []*PeakFlowForDescribeBizFlowAndConnCountOutput) *NewConnFlowForDescribeBizFlowAndConnCountOutput {
	s.PeakFlows = v
	return s
}

// SetPeakValue sets the PeakValue field's value.
func (s *NewConnFlowForDescribeBizFlowAndConnCountOutput) SetPeakValue(v int32) *NewConnFlowForDescribeBizFlowAndConnCountOutput {
	s.PeakValue = &v
	return s
}

type PeakFlowForDescribeBizFlowAndConnCountOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Timestamp *int32 `type:"int32" json:",omitempty"`

	Value *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s PeakFlowForDescribeBizFlowAndConnCountOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PeakFlowForDescribeBizFlowAndConnCountOutput) GoString() string {
	return s.String()
}

// SetTimestamp sets the Timestamp field's value.
func (s *PeakFlowForDescribeBizFlowAndConnCountOutput) SetTimestamp(v int32) *PeakFlowForDescribeBizFlowAndConnCountOutput {
	s.Timestamp = &v
	return s
}

// SetValue sets the Value field's value.
func (s *PeakFlowForDescribeBizFlowAndConnCountOutput) SetValue(v int32) *PeakFlowForDescribeBizFlowAndConnCountOutput {
	s.Value = &v
	return s
}
