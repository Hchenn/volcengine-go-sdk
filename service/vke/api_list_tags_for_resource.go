// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vke

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListTagsForResourceCommon = "ListTagsForResource"

// ListTagsForResourceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListTagsForResourceCommon operation. The "output" return
// value will be populated with the ListTagsForResourceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListTagsForResourceCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListTagsForResourceCommon Send returns without error.
//
// See ListTagsForResourceCommon for more information on using the ListTagsForResourceCommon
// API call, and error handling.
//
//    // Example sending a request using the ListTagsForResourceCommonRequest method.
//    req, resp := client.ListTagsForResourceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VKE) ListTagsForResourceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListTagsForResourceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListTagsForResourceCommon API operation for VKE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VKE's
// API operation ListTagsForResourceCommon for usage and error information.
func (c *VKE) ListTagsForResourceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListTagsForResourceCommonRequest(input)
	return out, req.Send()
}

// ListTagsForResourceCommonWithContext is the same as ListTagsForResourceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListTagsForResourceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VKE) ListTagsForResourceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListTagsForResourceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListTagsForResource = "ListTagsForResource"

// ListTagsForResourceRequest generates a "volcengine/request.Request" representing the
// client's request for the ListTagsForResource operation. The "output" return
// value will be populated with the ListTagsForResourceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListTagsForResourceCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListTagsForResourceCommon Send returns without error.
//
// See ListTagsForResource for more information on using the ListTagsForResource
// API call, and error handling.
//
//    // Example sending a request using the ListTagsForResourceRequest method.
//    req, resp := client.ListTagsForResourceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VKE) ListTagsForResourceRequest(input *ListTagsForResourceInput) (req *request.Request, output *ListTagsForResourceOutput) {
	op := &request.Operation{
		Name:       opListTagsForResource,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListTagsForResourceInput{}
	}

	output = &ListTagsForResourceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListTagsForResource API operation for VKE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VKE's
// API operation ListTagsForResource for usage and error information.
func (c *VKE) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {
	req, out := c.ListTagsForResourceRequest(input)
	return out, req.Send()
}

// ListTagsForResourceWithContext is the same as ListTagsForResource with the addition of
// the ability to pass a context and additional request options.
//
// See ListTagsForResource for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VKE) ListTagsForResourceWithContext(ctx volcengine.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {
	req, out := c.ListTagsForResourceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListTagsForResourceInput struct {
	_ struct{} `type:"structure"`

	MaxResults *int32 `type:"int32"`

	NextToken *string `type:"string"`

	ResourceIds []*string `type:"list"`

	ResourceType *string `type:"string" enum:"EnumOfResourceTypeForListTagsForResourceInput"`

	TagFilters []*TagFilterForListTagsForResourceInput `type:"list"`

	Type *string `type:"string" enum:"EnumOfTypeForListTagsForResourceInput"`
}

// String returns the string representation
func (s ListTagsForResourceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTagsForResourceInput) GoString() string {
	return s.String()
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListTagsForResourceInput) SetMaxResults(v int32) *ListTagsForResourceInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListTagsForResourceInput) SetNextToken(v string) *ListTagsForResourceInput {
	s.NextToken = &v
	return s
}

// SetResourceIds sets the ResourceIds field's value.
func (s *ListTagsForResourceInput) SetResourceIds(v []*string) *ListTagsForResourceInput {
	s.ResourceIds = v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *ListTagsForResourceInput) SetResourceType(v string) *ListTagsForResourceInput {
	s.ResourceType = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *ListTagsForResourceInput) SetTagFilters(v []*TagFilterForListTagsForResourceInput) *ListTagsForResourceInput {
	s.TagFilters = v
	return s
}

// SetType sets the Type field's value.
func (s *ListTagsForResourceInput) SetType(v string) *ListTagsForResourceInput {
	s.Type = &v
	return s
}

type ListTagsForResourceOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	NextToken *string `type:"string"`

	ResourceTags []*ResourceTagForListTagsForResourceOutput `type:"list"`
}

// String returns the string representation
func (s ListTagsForResourceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTagsForResourceOutput) GoString() string {
	return s.String()
}

// SetNextToken sets the NextToken field's value.
func (s *ListTagsForResourceOutput) SetNextToken(v string) *ListTagsForResourceOutput {
	s.NextToken = &v
	return s
}

// SetResourceTags sets the ResourceTags field's value.
func (s *ListTagsForResourceOutput) SetResourceTags(v []*ResourceTagForListTagsForResourceOutput) *ListTagsForResourceOutput {
	s.ResourceTags = v
	return s
}

type ResourceTagForListTagsForResourceOutput struct {
	_ struct{} `type:"structure"`

	ResourceId *string `type:"string"`

	ResourceType *string `type:"string"`

	TagKey *string `type:"string"`

	TagValue *string `type:"string"`

	Type *string `type:"string"`
}

// String returns the string representation
func (s ResourceTagForListTagsForResourceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceTagForListTagsForResourceOutput) GoString() string {
	return s.String()
}

// SetResourceId sets the ResourceId field's value.
func (s *ResourceTagForListTagsForResourceOutput) SetResourceId(v string) *ResourceTagForListTagsForResourceOutput {
	s.ResourceId = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *ResourceTagForListTagsForResourceOutput) SetResourceType(v string) *ResourceTagForListTagsForResourceOutput {
	s.ResourceType = &v
	return s
}

// SetTagKey sets the TagKey field's value.
func (s *ResourceTagForListTagsForResourceOutput) SetTagKey(v string) *ResourceTagForListTagsForResourceOutput {
	s.TagKey = &v
	return s
}

// SetTagValue sets the TagValue field's value.
func (s *ResourceTagForListTagsForResourceOutput) SetTagValue(v string) *ResourceTagForListTagsForResourceOutput {
	s.TagValue = &v
	return s
}

// SetType sets the Type field's value.
func (s *ResourceTagForListTagsForResourceOutput) SetType(v string) *ResourceTagForListTagsForResourceOutput {
	s.Type = &v
	return s
}

type TagFilterForListTagsForResourceInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s TagFilterForListTagsForResourceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForListTagsForResourceInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForListTagsForResourceInput) SetKey(v string) *TagFilterForListTagsForResourceInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagFilterForListTagsForResourceInput) SetValues(v []*string) *TagFilterForListTagsForResourceInput {
	s.Values = v
	return s
}

const (
	// EnumOfResourceTypeForListTagsForResourceInputCluster is a EnumOfResourceTypeForListTagsForResourceInput enum value
	EnumOfResourceTypeForListTagsForResourceInputCluster = "Cluster"

	// EnumOfResourceTypeForListTagsForResourceInputNodePool is a EnumOfResourceTypeForListTagsForResourceInput enum value
	EnumOfResourceTypeForListTagsForResourceInputNodePool = "NodePool"
)

const (
	// EnumOfTypeForListTagsForResourceInputCustom is a EnumOfTypeForListTagsForResourceInput enum value
	EnumOfTypeForListTagsForResourceInputCustom = "Custom"

	// EnumOfTypeForListTagsForResourceInputSystem is a EnumOfTypeForListTagsForResourceInput enum value
	EnumOfTypeForListTagsForResourceInputSystem = "System"
)
