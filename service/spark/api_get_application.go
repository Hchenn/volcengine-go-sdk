// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package spark

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetApplicationCommon = "getApplication"

// GetApplicationCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetApplicationCommon operation. The "output" return
// value will be populated with the GetApplicationCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetApplicationCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetApplicationCommon Send returns without error.
//
// See GetApplicationCommon for more information on using the GetApplicationCommon
// API call, and error handling.
//
//    // Example sending a request using the GetApplicationCommonRequest method.
//    req, resp := client.GetApplicationCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPARK) GetApplicationCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetApplicationCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetApplicationCommon API operation for SPARK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPARK's
// API operation GetApplicationCommon for usage and error information.
func (c *SPARK) GetApplicationCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetApplicationCommonRequest(input)
	return out, req.Send()
}

// GetApplicationCommonWithContext is the same as GetApplicationCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetApplicationCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPARK) GetApplicationCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetApplicationCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetApplication = "getApplication"

// GetApplicationRequest generates a "volcengine/request.Request" representing the
// client's request for the GetApplication operation. The "output" return
// value will be populated with the GetApplicationCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetApplicationCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetApplicationCommon Send returns without error.
//
// See GetApplication for more information on using the GetApplication
// API call, and error handling.
//
//    // Example sending a request using the GetApplicationRequest method.
//    req, resp := client.GetApplicationRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPARK) GetApplicationRequest(input *GetApplicationInput) (req *request.Request, output *GetApplicationOutput) {
	op := &request.Operation{
		Name:       opGetApplication,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetApplicationInput{}
	}

	output = &GetApplicationOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetApplication API operation for SPARK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPARK's
// API operation GetApplication for usage and error information.
func (c *SPARK) GetApplication(input *GetApplicationInput) (*GetApplicationOutput, error) {
	req, out := c.GetApplicationRequest(input)
	return out, req.Send()
}

// GetApplicationWithContext is the same as GetApplication with the addition of
// the ability to pass a context and additional request options.
//
// See GetApplication for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPARK) GetApplicationWithContext(ctx volcengine.Context, input *GetApplicationInput, opts ...request.Option) (*GetApplicationOutput, error) {
	req, out := c.GetApplicationRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DependencyForgetApplicationOutput struct {
	_ struct{} `type:"structure"`

	Archives []*string `type:"list"`

	Files []*string `type:"list"`

	Jars []*string `type:"list"`

	PyFiles []*string `type:"list"`
}

// String returns the string representation
func (s DependencyForgetApplicationOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DependencyForgetApplicationOutput) GoString() string {
	return s.String()
}

// SetArchives sets the Archives field's value.
func (s *DependencyForgetApplicationOutput) SetArchives(v []*string) *DependencyForgetApplicationOutput {
	s.Archives = v
	return s
}

// SetFiles sets the Files field's value.
func (s *DependencyForgetApplicationOutput) SetFiles(v []*string) *DependencyForgetApplicationOutput {
	s.Files = v
	return s
}

// SetJars sets the Jars field's value.
func (s *DependencyForgetApplicationOutput) SetJars(v []*string) *DependencyForgetApplicationOutput {
	s.Jars = v
	return s
}

// SetPyFiles sets the PyFiles field's value.
func (s *DependencyForgetApplicationOutput) SetPyFiles(v []*string) *DependencyForgetApplicationOutput {
	s.PyFiles = v
	return s
}

type DeployRequestForgetApplicationOutput struct {
	_ struct{} `type:"structure"`

	Priority *string `type:"string"`

	ResourcePoolTrn *string `type:"string"`

	SchedulePolicy *string `type:"string"`

	ScheduleTimeout *string `type:"string"`
}

// String returns the string representation
func (s DeployRequestForgetApplicationOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeployRequestForgetApplicationOutput) GoString() string {
	return s.String()
}

// SetPriority sets the Priority field's value.
func (s *DeployRequestForgetApplicationOutput) SetPriority(v string) *DeployRequestForgetApplicationOutput {
	s.Priority = &v
	return s
}

// SetResourcePoolTrn sets the ResourcePoolTrn field's value.
func (s *DeployRequestForgetApplicationOutput) SetResourcePoolTrn(v string) *DeployRequestForgetApplicationOutput {
	s.ResourcePoolTrn = &v
	return s
}

// SetSchedulePolicy sets the SchedulePolicy field's value.
func (s *DeployRequestForgetApplicationOutput) SetSchedulePolicy(v string) *DeployRequestForgetApplicationOutput {
	s.SchedulePolicy = &v
	return s
}

// SetScheduleTimeout sets the ScheduleTimeout field's value.
func (s *DeployRequestForgetApplicationOutput) SetScheduleTimeout(v string) *DeployRequestForgetApplicationOutput {
	s.ScheduleTimeout = &v
	return s
}

type GetApplicationInput struct {
	_ struct{} `type:"structure"`

	ApplicationName *string `type:"string"`

	ApplicationTrn *int64 `type:"int64"`

	PageNum *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	ProjectId *string `type:"string"`

	SortFiled *string `type:"string"`

	SortOrder *string `type:"string"`

	State *string `type:"string" enum:"EnumOfStateForgetApplicationInput"`
}

// String returns the string representation
func (s GetApplicationInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetApplicationInput) GoString() string {
	return s.String()
}

// SetApplicationName sets the ApplicationName field's value.
func (s *GetApplicationInput) SetApplicationName(v string) *GetApplicationInput {
	s.ApplicationName = &v
	return s
}

// SetApplicationTrn sets the ApplicationTrn field's value.
func (s *GetApplicationInput) SetApplicationTrn(v int64) *GetApplicationInput {
	s.ApplicationTrn = &v
	return s
}

// SetPageNum sets the PageNum field's value.
func (s *GetApplicationInput) SetPageNum(v int32) *GetApplicationInput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *GetApplicationInput) SetPageSize(v int32) *GetApplicationInput {
	s.PageSize = &v
	return s
}

// SetProjectId sets the ProjectId field's value.
func (s *GetApplicationInput) SetProjectId(v string) *GetApplicationInput {
	s.ProjectId = &v
	return s
}

// SetSortFiled sets the SortFiled field's value.
func (s *GetApplicationInput) SetSortFiled(v string) *GetApplicationInput {
	s.SortFiled = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *GetApplicationInput) SetSortOrder(v string) *GetApplicationInput {
	s.SortOrder = &v
	return s
}

// SetState sets the State field's value.
func (s *GetApplicationInput) SetState(v string) *GetApplicationInput {
	s.State = &v
	return s
}

type GetApplicationOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Current *string `type:"string"`

	PageSize *string `type:"string"`

	Records []*RecordForgetApplicationOutput `type:"list"`

	Total *string `type:"string"`
}

// String returns the string representation
func (s GetApplicationOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetApplicationOutput) GoString() string {
	return s.String()
}

// SetCurrent sets the Current field's value.
func (s *GetApplicationOutput) SetCurrent(v string) *GetApplicationOutput {
	s.Current = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *GetApplicationOutput) SetPageSize(v string) *GetApplicationOutput {
	s.PageSize = &v
	return s
}

// SetRecords sets the Records field's value.
func (s *GetApplicationOutput) SetRecords(v []*RecordForgetApplicationOutput) *GetApplicationOutput {
	s.Records = v
	return s
}

// SetTotal sets the Total field's value.
func (s *GetApplicationOutput) SetTotal(v string) *GetApplicationOutput {
	s.Total = &v
	return s
}

type RecordForgetApplicationOutput struct {
	_ struct{} `type:"structure"`

	Alert *bool `type:"boolean"`

	ApplicationName *string `type:"string"`

	ApplicationTrn *string `type:"string"`

	ApplicationType *string `type:"string"`

	Args *string `type:"string"`

	Conf map[string]*string `type:"map"`

	Dependency *DependencyForgetApplicationOutput `type:"structure"`

	DeployRequest *DeployRequestForgetApplicationOutput `type:"structure"`

	EngineVersion *string `type:"string"`

	Image *string `type:"string"`

	IsLatestVersion *bool `type:"boolean"`

	Jar *string `type:"string"`

	LatestVersion *string `type:"string"`

	MainClass *string `type:"string"`

	ProjectId *string `type:"string"`

	RestUrl *string `type:"string"`

	SqlText *string `type:"string"`

	State *string `type:"string"`

	UserId *string `type:"string"`

	VersionName *string `type:"string"`
}

// String returns the string representation
func (s RecordForgetApplicationOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RecordForgetApplicationOutput) GoString() string {
	return s.String()
}

// SetAlert sets the Alert field's value.
func (s *RecordForgetApplicationOutput) SetAlert(v bool) *RecordForgetApplicationOutput {
	s.Alert = &v
	return s
}

// SetApplicationName sets the ApplicationName field's value.
func (s *RecordForgetApplicationOutput) SetApplicationName(v string) *RecordForgetApplicationOutput {
	s.ApplicationName = &v
	return s
}

// SetApplicationTrn sets the ApplicationTrn field's value.
func (s *RecordForgetApplicationOutput) SetApplicationTrn(v string) *RecordForgetApplicationOutput {
	s.ApplicationTrn = &v
	return s
}

// SetApplicationType sets the ApplicationType field's value.
func (s *RecordForgetApplicationOutput) SetApplicationType(v string) *RecordForgetApplicationOutput {
	s.ApplicationType = &v
	return s
}

// SetArgs sets the Args field's value.
func (s *RecordForgetApplicationOutput) SetArgs(v string) *RecordForgetApplicationOutput {
	s.Args = &v
	return s
}

// SetConf sets the Conf field's value.
func (s *RecordForgetApplicationOutput) SetConf(v map[string]*string) *RecordForgetApplicationOutput {
	s.Conf = v
	return s
}

// SetDependency sets the Dependency field's value.
func (s *RecordForgetApplicationOutput) SetDependency(v *DependencyForgetApplicationOutput) *RecordForgetApplicationOutput {
	s.Dependency = v
	return s
}

// SetDeployRequest sets the DeployRequest field's value.
func (s *RecordForgetApplicationOutput) SetDeployRequest(v *DeployRequestForgetApplicationOutput) *RecordForgetApplicationOutput {
	s.DeployRequest = v
	return s
}

// SetEngineVersion sets the EngineVersion field's value.
func (s *RecordForgetApplicationOutput) SetEngineVersion(v string) *RecordForgetApplicationOutput {
	s.EngineVersion = &v
	return s
}

// SetImage sets the Image field's value.
func (s *RecordForgetApplicationOutput) SetImage(v string) *RecordForgetApplicationOutput {
	s.Image = &v
	return s
}

// SetIsLatestVersion sets the IsLatestVersion field's value.
func (s *RecordForgetApplicationOutput) SetIsLatestVersion(v bool) *RecordForgetApplicationOutput {
	s.IsLatestVersion = &v
	return s
}

// SetJar sets the Jar field's value.
func (s *RecordForgetApplicationOutput) SetJar(v string) *RecordForgetApplicationOutput {
	s.Jar = &v
	return s
}

// SetLatestVersion sets the LatestVersion field's value.
func (s *RecordForgetApplicationOutput) SetLatestVersion(v string) *RecordForgetApplicationOutput {
	s.LatestVersion = &v
	return s
}

// SetMainClass sets the MainClass field's value.
func (s *RecordForgetApplicationOutput) SetMainClass(v string) *RecordForgetApplicationOutput {
	s.MainClass = &v
	return s
}

// SetProjectId sets the ProjectId field's value.
func (s *RecordForgetApplicationOutput) SetProjectId(v string) *RecordForgetApplicationOutput {
	s.ProjectId = &v
	return s
}

// SetRestUrl sets the RestUrl field's value.
func (s *RecordForgetApplicationOutput) SetRestUrl(v string) *RecordForgetApplicationOutput {
	s.RestUrl = &v
	return s
}

// SetSqlText sets the SqlText field's value.
func (s *RecordForgetApplicationOutput) SetSqlText(v string) *RecordForgetApplicationOutput {
	s.SqlText = &v
	return s
}

// SetState sets the State field's value.
func (s *RecordForgetApplicationOutput) SetState(v string) *RecordForgetApplicationOutput {
	s.State = &v
	return s
}

// SetUserId sets the UserId field's value.
func (s *RecordForgetApplicationOutput) SetUserId(v string) *RecordForgetApplicationOutput {
	s.UserId = &v
	return s
}

// SetVersionName sets the VersionName field's value.
func (s *RecordForgetApplicationOutput) SetVersionName(v string) *RecordForgetApplicationOutput {
	s.VersionName = &v
	return s
}

const (
	// EnumOfStateForgetApplicationInputDeployed is a EnumOfStateForgetApplicationInput enum value
	EnumOfStateForgetApplicationInputDeployed = "DEPLOYED"

	// EnumOfStateForgetApplicationInputCreated is a EnumOfStateForgetApplicationInput enum value
	EnumOfStateForgetApplicationInputCreated = "CREATED"

	// EnumOfStateForgetApplicationInputStarting is a EnumOfStateForgetApplicationInput enum value
	EnumOfStateForgetApplicationInputStarting = "STARTING"

	// EnumOfStateForgetApplicationInputRunning is a EnumOfStateForgetApplicationInput enum value
	EnumOfStateForgetApplicationInputRunning = "RUNNING"

	// EnumOfStateForgetApplicationInputFailed is a EnumOfStateForgetApplicationInput enum value
	EnumOfStateForgetApplicationInputFailed = "FAILED"

	// EnumOfStateForgetApplicationInputCancelling is a EnumOfStateForgetApplicationInput enum value
	EnumOfStateForgetApplicationInputCancelling = "CANCELLING"

	// EnumOfStateForgetApplicationInputSucceeded is a EnumOfStateForgetApplicationInput enum value
	EnumOfStateForgetApplicationInputSucceeded = "SUCCEEDED"

	// EnumOfStateForgetApplicationInputStopped is a EnumOfStateForgetApplicationInput enum value
	EnumOfStateForgetApplicationInputStopped = "STOPPED"

	// EnumOfStateForgetApplicationInputUnknown is a EnumOfStateForgetApplicationInput enum value
	EnumOfStateForgetApplicationInputUnknown = "UNKNOWN"
)
