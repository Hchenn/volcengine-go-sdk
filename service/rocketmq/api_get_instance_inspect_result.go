// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rocketmq

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetInstanceInspectResultCommon = "GetInstanceInspectResult"

// GetInstanceInspectResultCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetInstanceInspectResultCommon operation. The "output" return
// value will be populated with the GetInstanceInspectResultCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetInstanceInspectResultCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetInstanceInspectResultCommon Send returns without error.
//
// See GetInstanceInspectResultCommon for more information on using the GetInstanceInspectResultCommon
// API call, and error handling.
//
//    // Example sending a request using the GetInstanceInspectResultCommonRequest method.
//    req, resp := client.GetInstanceInspectResultCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ROCKETMQ) GetInstanceInspectResultCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetInstanceInspectResultCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetInstanceInspectResultCommon API operation for ROCKETMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ROCKETMQ's
// API operation GetInstanceInspectResultCommon for usage and error information.
func (c *ROCKETMQ) GetInstanceInspectResultCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetInstanceInspectResultCommonRequest(input)
	return out, req.Send()
}

// GetInstanceInspectResultCommonWithContext is the same as GetInstanceInspectResultCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetInstanceInspectResultCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ROCKETMQ) GetInstanceInspectResultCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetInstanceInspectResultCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetInstanceInspectResult = "GetInstanceInspectResult"

// GetInstanceInspectResultRequest generates a "volcengine/request.Request" representing the
// client's request for the GetInstanceInspectResult operation. The "output" return
// value will be populated with the GetInstanceInspectResultCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetInstanceInspectResultCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetInstanceInspectResultCommon Send returns without error.
//
// See GetInstanceInspectResult for more information on using the GetInstanceInspectResult
// API call, and error handling.
//
//    // Example sending a request using the GetInstanceInspectResultRequest method.
//    req, resp := client.GetInstanceInspectResultRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ROCKETMQ) GetInstanceInspectResultRequest(input *GetInstanceInspectResultInput) (req *request.Request, output *GetInstanceInspectResultOutput) {
	op := &request.Operation{
		Name:       opGetInstanceInspectResult,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetInstanceInspectResultInput{}
	}

	output = &GetInstanceInspectResultOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetInstanceInspectResult API operation for ROCKETMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ROCKETMQ's
// API operation GetInstanceInspectResult for usage and error information.
func (c *ROCKETMQ) GetInstanceInspectResult(input *GetInstanceInspectResultInput) (*GetInstanceInspectResultOutput, error) {
	req, out := c.GetInstanceInspectResultRequest(input)
	return out, req.Send()
}

// GetInstanceInspectResultWithContext is the same as GetInstanceInspectResult with the addition of
// the ability to pass a context and additional request options.
//
// See GetInstanceInspectResult for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ROCKETMQ) GetInstanceInspectResultWithContext(ctx volcengine.Context, input *GetInstanceInspectResultInput, opts ...request.Option) (*GetInstanceInspectResultOutput, error) {
	req, out := c.GetInstanceInspectResultRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetInstanceInspectResultInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	// PageNumber is a required field
	PageNumber *int32 `type:"int32" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int32 `type:"int32" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetInstanceInspectResultInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetInstanceInspectResultInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetInstanceInspectResultInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetInstanceInspectResultInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *GetInstanceInspectResultInput) SetInstanceId(v string) *GetInstanceInspectResultInput {
	s.InstanceId = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *GetInstanceInspectResultInput) SetPageNumber(v int32) *GetInstanceInspectResultInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *GetInstanceInspectResultInput) SetPageSize(v int32) *GetInstanceInspectResultInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *GetInstanceInspectResultInput) SetSortBy(v string) *GetInstanceInspectResultInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *GetInstanceInspectResultInput) SetSortOrder(v string) *GetInstanceInspectResultInput {
	s.SortOrder = &v
	return s
}

type GetInstanceInspectResultOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	InstanceId *string `type:"string" json:",omitempty"`

	Results []*ResultForGetInstanceInspectResultOutput `type:"list" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s GetInstanceInspectResultOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetInstanceInspectResultOutput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *GetInstanceInspectResultOutput) SetInstanceId(v string) *GetInstanceInspectResultOutput {
	s.InstanceId = &v
	return s
}

// SetResults sets the Results field's value.
func (s *GetInstanceInspectResultOutput) SetResults(v []*ResultForGetInstanceInspectResultOutput) *GetInstanceInspectResultOutput {
	s.Results = v
	return s
}

// SetTotal sets the Total field's value.
func (s *GetInstanceInspectResultOutput) SetTotal(v int32) *GetInstanceInspectResultOutput {
	s.Total = &v
	return s
}

type ResultForGetInstanceInspectResultOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Describe *string `type:"string" json:",omitempty"`

	InspectName *string `type:"string" json:",omitempty"`

	Level *string `type:"string" json:",omitempty"`

	Resource []*string `type:"list" json:",omitempty"`

	ResultId *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	Suggestion []*string `type:"list" json:",omitempty"`

	TimeStamp *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ResultForGetInstanceInspectResultOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResultForGetInstanceInspectResultOutput) GoString() string {
	return s.String()
}

// SetDescribe sets the Describe field's value.
func (s *ResultForGetInstanceInspectResultOutput) SetDescribe(v string) *ResultForGetInstanceInspectResultOutput {
	s.Describe = &v
	return s
}

// SetInspectName sets the InspectName field's value.
func (s *ResultForGetInstanceInspectResultOutput) SetInspectName(v string) *ResultForGetInstanceInspectResultOutput {
	s.InspectName = &v
	return s
}

// SetLevel sets the Level field's value.
func (s *ResultForGetInstanceInspectResultOutput) SetLevel(v string) *ResultForGetInstanceInspectResultOutput {
	s.Level = &v
	return s
}

// SetResource sets the Resource field's value.
func (s *ResultForGetInstanceInspectResultOutput) SetResource(v []*string) *ResultForGetInstanceInspectResultOutput {
	s.Resource = v
	return s
}

// SetResultId sets the ResultId field's value.
func (s *ResultForGetInstanceInspectResultOutput) SetResultId(v string) *ResultForGetInstanceInspectResultOutput {
	s.ResultId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ResultForGetInstanceInspectResultOutput) SetStatus(v string) *ResultForGetInstanceInspectResultOutput {
	s.Status = &v
	return s
}

// SetSuggestion sets the Suggestion field's value.
func (s *ResultForGetInstanceInspectResultOutput) SetSuggestion(v []*string) *ResultForGetInstanceInspectResultOutput {
	s.Suggestion = v
	return s
}

// SetTimeStamp sets the TimeStamp field's value.
func (s *ResultForGetInstanceInspectResultOutput) SetTimeStamp(v string) *ResultForGetInstanceInspectResultOutput {
	s.TimeStamp = &v
	return s
}

// SetType sets the Type field's value.
func (s *ResultForGetInstanceInspectResultOutput) SetType(v string) *ResultForGetInstanceInspectResultOutput {
	s.Type = &v
	return s
}
