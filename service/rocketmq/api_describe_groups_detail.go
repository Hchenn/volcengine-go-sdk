// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rocketmq

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeGroupsDetailCommon = "DescribeGroupsDetail"

// DescribeGroupsDetailCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeGroupsDetailCommon operation. The "output" return
// value will be populated with the DescribeGroupsDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeGroupsDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeGroupsDetailCommon Send returns without error.
//
// See DescribeGroupsDetailCommon for more information on using the DescribeGroupsDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeGroupsDetailCommonRequest method.
//    req, resp := client.DescribeGroupsDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ROCKETMQ) DescribeGroupsDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeGroupsDetailCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeGroupsDetailCommon API operation for ROCKETMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ROCKETMQ's
// API operation DescribeGroupsDetailCommon for usage and error information.
func (c *ROCKETMQ) DescribeGroupsDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeGroupsDetailCommonRequest(input)
	return out, req.Send()
}

// DescribeGroupsDetailCommonWithContext is the same as DescribeGroupsDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeGroupsDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ROCKETMQ) DescribeGroupsDetailCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeGroupsDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeGroupsDetail = "DescribeGroupsDetail"

// DescribeGroupsDetailRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeGroupsDetail operation. The "output" return
// value will be populated with the DescribeGroupsDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeGroupsDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeGroupsDetailCommon Send returns without error.
//
// See DescribeGroupsDetail for more information on using the DescribeGroupsDetail
// API call, and error handling.
//
//    // Example sending a request using the DescribeGroupsDetailRequest method.
//    req, resp := client.DescribeGroupsDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ROCKETMQ) DescribeGroupsDetailRequest(input *DescribeGroupsDetailInput) (req *request.Request, output *DescribeGroupsDetailOutput) {
	op := &request.Operation{
		Name:       opDescribeGroupsDetail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeGroupsDetailInput{}
	}

	output = &DescribeGroupsDetailOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeGroupsDetail API operation for ROCKETMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ROCKETMQ's
// API operation DescribeGroupsDetail for usage and error information.
func (c *ROCKETMQ) DescribeGroupsDetail(input *DescribeGroupsDetailInput) (*DescribeGroupsDetailOutput, error) {
	req, out := c.DescribeGroupsDetailRequest(input)
	return out, req.Send()
}

// DescribeGroupsDetailWithContext is the same as DescribeGroupsDetail with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeGroupsDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ROCKETMQ) DescribeGroupsDetailWithContext(ctx volcengine.Context, input *DescribeGroupsDetailInput, opts ...request.Option) (*DescribeGroupsDetailOutput, error) {
	req, out := c.DescribeGroupsDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeGroupsDetailInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// GroupId is a required field
	GroupId *string `type:"string" json:",omitempty" required:"true"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeGroupsDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeGroupsDetailInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeGroupsDetailInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeGroupsDetailInput"}
	if s.GroupId == nil {
		invalidParams.Add(request.NewErrParamRequired("GroupId"))
	}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetGroupId sets the GroupId field's value.
func (s *DescribeGroupsDetailInput) SetGroupId(v string) *DescribeGroupsDetailInput {
	s.GroupId = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeGroupsDetailInput) SetInstanceId(v string) *DescribeGroupsDetailInput {
	s.InstanceId = &v
	return s
}

type DescribeGroupsDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	CreateTime *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	GroupId *string `type:"string" json:",omitempty"`

	GroupType *string `type:"string" json:",omitempty"`

	IsSubSame *bool `type:"boolean" json:",omitempty"`

	MessageDelayTime *string `type:"string" json:",omitempty"`

	MessageModel *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	TotalConsumedRate *string `type:"string" json:",omitempty"`

	TotalDiff *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeGroupsDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeGroupsDetailOutput) GoString() string {
	return s.String()
}

// SetCreateTime sets the CreateTime field's value.
func (s *DescribeGroupsDetailOutput) SetCreateTime(v string) *DescribeGroupsDetailOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DescribeGroupsDetailOutput) SetDescription(v string) *DescribeGroupsDetailOutput {
	s.Description = &v
	return s
}

// SetGroupId sets the GroupId field's value.
func (s *DescribeGroupsDetailOutput) SetGroupId(v string) *DescribeGroupsDetailOutput {
	s.GroupId = &v
	return s
}

// SetGroupType sets the GroupType field's value.
func (s *DescribeGroupsDetailOutput) SetGroupType(v string) *DescribeGroupsDetailOutput {
	s.GroupType = &v
	return s
}

// SetIsSubSame sets the IsSubSame field's value.
func (s *DescribeGroupsDetailOutput) SetIsSubSame(v bool) *DescribeGroupsDetailOutput {
	s.IsSubSame = &v
	return s
}

// SetMessageDelayTime sets the MessageDelayTime field's value.
func (s *DescribeGroupsDetailOutput) SetMessageDelayTime(v string) *DescribeGroupsDetailOutput {
	s.MessageDelayTime = &v
	return s
}

// SetMessageModel sets the MessageModel field's value.
func (s *DescribeGroupsDetailOutput) SetMessageModel(v string) *DescribeGroupsDetailOutput {
	s.MessageModel = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeGroupsDetailOutput) SetStatus(v string) *DescribeGroupsDetailOutput {
	s.Status = &v
	return s
}

// SetTotalConsumedRate sets the TotalConsumedRate field's value.
func (s *DescribeGroupsDetailOutput) SetTotalConsumedRate(v string) *DescribeGroupsDetailOutput {
	s.TotalConsumedRate = &v
	return s
}

// SetTotalDiff sets the TotalDiff field's value.
func (s *DescribeGroupsDetailOutput) SetTotalDiff(v int32) *DescribeGroupsDetailOutput {
	s.TotalDiff = &v
	return s
}
