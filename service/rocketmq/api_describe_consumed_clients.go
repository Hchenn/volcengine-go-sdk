// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rocketmq

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeConsumedClientsCommon = "DescribeConsumedClients"

// DescribeConsumedClientsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeConsumedClientsCommon operation. The "output" return
// value will be populated with the DescribeConsumedClientsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeConsumedClientsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeConsumedClientsCommon Send returns without error.
//
// See DescribeConsumedClientsCommon for more information on using the DescribeConsumedClientsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeConsumedClientsCommonRequest method.
//    req, resp := client.DescribeConsumedClientsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ROCKETMQ) DescribeConsumedClientsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeConsumedClientsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeConsumedClientsCommon API operation for ROCKETMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ROCKETMQ's
// API operation DescribeConsumedClientsCommon for usage and error information.
func (c *ROCKETMQ) DescribeConsumedClientsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeConsumedClientsCommonRequest(input)
	return out, req.Send()
}

// DescribeConsumedClientsCommonWithContext is the same as DescribeConsumedClientsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeConsumedClientsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ROCKETMQ) DescribeConsumedClientsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeConsumedClientsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeConsumedClients = "DescribeConsumedClients"

// DescribeConsumedClientsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeConsumedClients operation. The "output" return
// value will be populated with the DescribeConsumedClientsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeConsumedClientsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeConsumedClientsCommon Send returns without error.
//
// See DescribeConsumedClients for more information on using the DescribeConsumedClients
// API call, and error handling.
//
//    // Example sending a request using the DescribeConsumedClientsRequest method.
//    req, resp := client.DescribeConsumedClientsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ROCKETMQ) DescribeConsumedClientsRequest(input *DescribeConsumedClientsInput) (req *request.Request, output *DescribeConsumedClientsOutput) {
	op := &request.Operation{
		Name:       opDescribeConsumedClients,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeConsumedClientsInput{}
	}

	output = &DescribeConsumedClientsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeConsumedClients API operation for ROCKETMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ROCKETMQ's
// API operation DescribeConsumedClients for usage and error information.
func (c *ROCKETMQ) DescribeConsumedClients(input *DescribeConsumedClientsInput) (*DescribeConsumedClientsOutput, error) {
	req, out := c.DescribeConsumedClientsRequest(input)
	return out, req.Send()
}

// DescribeConsumedClientsWithContext is the same as DescribeConsumedClients with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeConsumedClients for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ROCKETMQ) DescribeConsumedClientsWithContext(ctx volcengine.Context, input *DescribeConsumedClientsInput, opts ...request.Option) (*DescribeConsumedClientsOutput, error) {
	req, out := c.DescribeConsumedClientsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConsumedClientsInfoForDescribeConsumedClientsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClientAddress *string `type:"string" json:",omitempty"`

	ClientId *string `type:"string" json:",omitempty"`

	Diff *int64 `type:"int64" json:",omitempty"`

	Language *string `type:"string" json:",omitempty"`

	Version *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ConsumedClientsInfoForDescribeConsumedClientsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConsumedClientsInfoForDescribeConsumedClientsOutput) GoString() string {
	return s.String()
}

// SetClientAddress sets the ClientAddress field's value.
func (s *ConsumedClientsInfoForDescribeConsumedClientsOutput) SetClientAddress(v string) *ConsumedClientsInfoForDescribeConsumedClientsOutput {
	s.ClientAddress = &v
	return s
}

// SetClientId sets the ClientId field's value.
func (s *ConsumedClientsInfoForDescribeConsumedClientsOutput) SetClientId(v string) *ConsumedClientsInfoForDescribeConsumedClientsOutput {
	s.ClientId = &v
	return s
}

// SetDiff sets the Diff field's value.
func (s *ConsumedClientsInfoForDescribeConsumedClientsOutput) SetDiff(v int64) *ConsumedClientsInfoForDescribeConsumedClientsOutput {
	s.Diff = &v
	return s
}

// SetLanguage sets the Language field's value.
func (s *ConsumedClientsInfoForDescribeConsumedClientsOutput) SetLanguage(v string) *ConsumedClientsInfoForDescribeConsumedClientsOutput {
	s.Language = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *ConsumedClientsInfoForDescribeConsumedClientsOutput) SetVersion(v string) *ConsumedClientsInfoForDescribeConsumedClientsOutput {
	s.Version = &v
	return s
}

type DescribeConsumedClientsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// GroupId is a required field
	GroupId *string `type:"string" json:",omitempty" required:"true"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	// PageNumber is a required field
	PageNumber *int32 `type:"int32" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int32 `type:"int32" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeConsumedClientsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeConsumedClientsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeConsumedClientsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeConsumedClientsInput"}
	if s.GroupId == nil {
		invalidParams.Add(request.NewErrParamRequired("GroupId"))
	}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetGroupId sets the GroupId field's value.
func (s *DescribeConsumedClientsInput) SetGroupId(v string) *DescribeConsumedClientsInput {
	s.GroupId = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeConsumedClientsInput) SetInstanceId(v string) *DescribeConsumedClientsInput {
	s.InstanceId = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeConsumedClientsInput) SetPageNumber(v int32) *DescribeConsumedClientsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeConsumedClientsInput) SetPageSize(v int32) *DescribeConsumedClientsInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *DescribeConsumedClientsInput) SetSortBy(v string) *DescribeConsumedClientsInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *DescribeConsumedClientsInput) SetSortOrder(v string) *DescribeConsumedClientsInput {
	s.SortOrder = &v
	return s
}

type DescribeConsumedClientsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ConnectionCount *int32 `type:"int32" json:",omitempty"`

	ConsumedClientsInfo []*ConsumedClientsInfoForDescribeConsumedClientsOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeConsumedClientsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeConsumedClientsOutput) GoString() string {
	return s.String()
}

// SetConnectionCount sets the ConnectionCount field's value.
func (s *DescribeConsumedClientsOutput) SetConnectionCount(v int32) *DescribeConsumedClientsOutput {
	s.ConnectionCount = &v
	return s
}

// SetConsumedClientsInfo sets the ConsumedClientsInfo field's value.
func (s *DescribeConsumedClientsOutput) SetConsumedClientsInfo(v []*ConsumedClientsInfoForDescribeConsumedClientsOutput) *DescribeConsumedClientsOutput {
	s.ConsumedClientsInfo = v
	return s
}
