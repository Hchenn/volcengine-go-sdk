// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rocketmq

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeInstancesCommon = "DescribeInstances"

// DescribeInstancesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeInstancesCommon operation. The "output" return
// value will be populated with the DescribeInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeInstancesCommon Send returns without error.
//
// See DescribeInstancesCommon for more information on using the DescribeInstancesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeInstancesCommonRequest method.
//    req, resp := client.DescribeInstancesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ROCKETMQ) DescribeInstancesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeInstancesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeInstancesCommon API operation for ROCKETMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ROCKETMQ's
// API operation DescribeInstancesCommon for usage and error information.
func (c *ROCKETMQ) DescribeInstancesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeInstancesCommonRequest(input)
	return out, req.Send()
}

// DescribeInstancesCommonWithContext is the same as DescribeInstancesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeInstancesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ROCKETMQ) DescribeInstancesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeInstancesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeInstances = "DescribeInstances"

// DescribeInstancesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeInstances operation. The "output" return
// value will be populated with the DescribeInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeInstancesCommon Send returns without error.
//
// See DescribeInstances for more information on using the DescribeInstances
// API call, and error handling.
//
//    // Example sending a request using the DescribeInstancesRequest method.
//    req, resp := client.DescribeInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ROCKETMQ) DescribeInstancesRequest(input *DescribeInstancesInput) (req *request.Request, output *DescribeInstancesOutput) {
	op := &request.Operation{
		Name:       opDescribeInstances,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeInstancesInput{}
	}

	output = &DescribeInstancesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeInstances API operation for ROCKETMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ROCKETMQ's
// API operation DescribeInstances for usage and error information.
func (c *ROCKETMQ) DescribeInstances(input *DescribeInstancesInput) (*DescribeInstancesOutput, error) {
	req, out := c.DescribeInstancesRequest(input)
	return out, req.Send()
}

// DescribeInstancesWithContext is the same as DescribeInstances with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ROCKETMQ) DescribeInstancesWithContext(ctx volcengine.Context, input *DescribeInstancesInput, opts ...request.Option) (*DescribeInstancesOutput, error) {
	req, out := c.DescribeInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ChargeDetailForDescribeInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AutoRenew *bool `type:"boolean" json:",omitempty"`

	ChargeExpireTime *string `type:"string" json:",omitempty"`

	ChargeStartTime *string `type:"string" json:",omitempty"`

	ChargeStatus *string `type:"string" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty"`

	OverdueReclaimTime *string `type:"string" json:",omitempty"`

	OverdueTime *string `type:"string" json:",omitempty"`

	PeriodUnit *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ChargeDetailForDescribeInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ChargeDetailForDescribeInstancesOutput) GoString() string {
	return s.String()
}

// SetAutoRenew sets the AutoRenew field's value.
func (s *ChargeDetailForDescribeInstancesOutput) SetAutoRenew(v bool) *ChargeDetailForDescribeInstancesOutput {
	s.AutoRenew = &v
	return s
}

// SetChargeExpireTime sets the ChargeExpireTime field's value.
func (s *ChargeDetailForDescribeInstancesOutput) SetChargeExpireTime(v string) *ChargeDetailForDescribeInstancesOutput {
	s.ChargeExpireTime = &v
	return s
}

// SetChargeStartTime sets the ChargeStartTime field's value.
func (s *ChargeDetailForDescribeInstancesOutput) SetChargeStartTime(v string) *ChargeDetailForDescribeInstancesOutput {
	s.ChargeStartTime = &v
	return s
}

// SetChargeStatus sets the ChargeStatus field's value.
func (s *ChargeDetailForDescribeInstancesOutput) SetChargeStatus(v string) *ChargeDetailForDescribeInstancesOutput {
	s.ChargeStatus = &v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *ChargeDetailForDescribeInstancesOutput) SetChargeType(v string) *ChargeDetailForDescribeInstancesOutput {
	s.ChargeType = &v
	return s
}

// SetOverdueReclaimTime sets the OverdueReclaimTime field's value.
func (s *ChargeDetailForDescribeInstancesOutput) SetOverdueReclaimTime(v string) *ChargeDetailForDescribeInstancesOutput {
	s.OverdueReclaimTime = &v
	return s
}

// SetOverdueTime sets the OverdueTime field's value.
func (s *ChargeDetailForDescribeInstancesOutput) SetOverdueTime(v string) *ChargeDetailForDescribeInstancesOutput {
	s.OverdueTime = &v
	return s
}

// SetPeriodUnit sets the PeriodUnit field's value.
func (s *ChargeDetailForDescribeInstancesOutput) SetPeriodUnit(v string) *ChargeDetailForDescribeInstancesOutput {
	s.PeriodUnit = &v
	return s
}

type DescribeInstancesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	InstanceStatus *string `type:"string" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int32 `type:"int32" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int32 `type:"int32" json:",omitempty" required:"true"`

	ProjectName *string `type:"string" json:",omitempty"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`

	Spec *string `type:"string" json:",omitempty"`

	Tags map[string][]*string `type:"map" json:",omitempty"`

	Version *string `type:"string" json:",omitempty"`

	VpcId *string `type:"string" json:",omitempty"`

	ZoneId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeInstancesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstancesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeInstancesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeInstancesInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetChargeType sets the ChargeType field's value.
func (s *DescribeInstancesInput) SetChargeType(v string) *DescribeInstancesInput {
	s.ChargeType = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeInstancesInput) SetInstanceId(v string) *DescribeInstancesInput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *DescribeInstancesInput) SetInstanceName(v string) *DescribeInstancesInput {
	s.InstanceName = &v
	return s
}

// SetInstanceStatus sets the InstanceStatus field's value.
func (s *DescribeInstancesInput) SetInstanceStatus(v string) *DescribeInstancesInput {
	s.InstanceStatus = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeInstancesInput) SetPageNumber(v int32) *DescribeInstancesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeInstancesInput) SetPageSize(v int32) *DescribeInstancesInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeInstancesInput) SetProjectName(v string) *DescribeInstancesInput {
	s.ProjectName = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *DescribeInstancesInput) SetSortBy(v string) *DescribeInstancesInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *DescribeInstancesInput) SetSortOrder(v string) *DescribeInstancesInput {
	s.SortOrder = &v
	return s
}

// SetSpec sets the Spec field's value.
func (s *DescribeInstancesInput) SetSpec(v string) *DescribeInstancesInput {
	s.Spec = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *DescribeInstancesInput) SetTags(v map[string][]*string) *DescribeInstancesInput {
	s.Tags = v
	return s
}

// SetVersion sets the Version field's value.
func (s *DescribeInstancesInput) SetVersion(v string) *DescribeInstancesInput {
	s.Version = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *DescribeInstancesInput) SetVpcId(v string) *DescribeInstancesInput {
	s.VpcId = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *DescribeInstancesInput) SetZoneId(v string) *DescribeInstancesInput {
	s.ZoneId = &v
	return s
}

type DescribeInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	InstancesInfo []*InstancesInfoForDescribeInstancesOutput `type:"list" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstancesOutput) GoString() string {
	return s.String()
}

// SetInstancesInfo sets the InstancesInfo field's value.
func (s *DescribeInstancesOutput) SetInstancesInfo(v []*InstancesInfoForDescribeInstancesOutput) *DescribeInstancesOutput {
	s.InstancesInfo = v
	return s
}

// SetTotal sets the Total field's value.
func (s *DescribeInstancesOutput) SetTotal(v int32) *DescribeInstancesOutput {
	s.Total = &v
	return s
}

type InstancesInfoForDescribeInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountId *string `type:"string" json:",omitempty"`

	ApplyPrivateDNSToPublic *bool `type:"boolean" json:",omitempty"`

	AvailableQueueNumber *int32 `type:"int32" json:",omitempty"`

	ChargeDetail *ChargeDetailForDescribeInstancesOutput `type:"structure" json:",omitempty"`

	ComputeSpec *string `type:"string" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	EipId *string `type:"string" json:",omitempty"`

	EnableSSL *bool `type:"boolean" json:",omitempty"`

	FileReservedTime *int32 `type:"int32" json:",omitempty"`

	InstanceDescription *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	InstanceStatus *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	RegionId *string `type:"string" json:",omitempty"`

	SSLMode *string `type:"string" json:",omitempty"`

	StorageSpace *int32 `type:"int32" json:",omitempty"`

	SubnetId *string `type:"string" json:",omitempty"`

	Tags map[string]*string `type:"map" json:",omitempty"`

	UsedGroupNumber *int32 `type:"int32" json:",omitempty"`

	UsedQueueNumber *int32 `type:"int32" json:",omitempty"`

	UsedStorageSpace *int32 `type:"int32" json:",omitempty"`

	UsedTopicNumber *int32 `type:"int32" json:",omitempty"`

	Version *string `type:"string" json:",omitempty"`

	VpcId *string `type:"string" json:",omitempty"`

	ZoneId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s InstancesInfoForDescribeInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InstancesInfoForDescribeInstancesOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetAccountId(v string) *InstancesInfoForDescribeInstancesOutput {
	s.AccountId = &v
	return s
}

// SetApplyPrivateDNSToPublic sets the ApplyPrivateDNSToPublic field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetApplyPrivateDNSToPublic(v bool) *InstancesInfoForDescribeInstancesOutput {
	s.ApplyPrivateDNSToPublic = &v
	return s
}

// SetAvailableQueueNumber sets the AvailableQueueNumber field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetAvailableQueueNumber(v int32) *InstancesInfoForDescribeInstancesOutput {
	s.AvailableQueueNumber = &v
	return s
}

// SetChargeDetail sets the ChargeDetail field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetChargeDetail(v *ChargeDetailForDescribeInstancesOutput) *InstancesInfoForDescribeInstancesOutput {
	s.ChargeDetail = v
	return s
}

// SetComputeSpec sets the ComputeSpec field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetComputeSpec(v string) *InstancesInfoForDescribeInstancesOutput {
	s.ComputeSpec = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetCreateTime(v string) *InstancesInfoForDescribeInstancesOutput {
	s.CreateTime = &v
	return s
}

// SetEipId sets the EipId field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetEipId(v string) *InstancesInfoForDescribeInstancesOutput {
	s.EipId = &v
	return s
}

// SetEnableSSL sets the EnableSSL field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetEnableSSL(v bool) *InstancesInfoForDescribeInstancesOutput {
	s.EnableSSL = &v
	return s
}

// SetFileReservedTime sets the FileReservedTime field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetFileReservedTime(v int32) *InstancesInfoForDescribeInstancesOutput {
	s.FileReservedTime = &v
	return s
}

// SetInstanceDescription sets the InstanceDescription field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetInstanceDescription(v string) *InstancesInfoForDescribeInstancesOutput {
	s.InstanceDescription = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetInstanceId(v string) *InstancesInfoForDescribeInstancesOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetInstanceName(v string) *InstancesInfoForDescribeInstancesOutput {
	s.InstanceName = &v
	return s
}

// SetInstanceStatus sets the InstanceStatus field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetInstanceStatus(v string) *InstancesInfoForDescribeInstancesOutput {
	s.InstanceStatus = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetProjectName(v string) *InstancesInfoForDescribeInstancesOutput {
	s.ProjectName = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetRegionId(v string) *InstancesInfoForDescribeInstancesOutput {
	s.RegionId = &v
	return s
}

// SetSSLMode sets the SSLMode field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetSSLMode(v string) *InstancesInfoForDescribeInstancesOutput {
	s.SSLMode = &v
	return s
}

// SetStorageSpace sets the StorageSpace field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetStorageSpace(v int32) *InstancesInfoForDescribeInstancesOutput {
	s.StorageSpace = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetSubnetId(v string) *InstancesInfoForDescribeInstancesOutput {
	s.SubnetId = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetTags(v map[string]*string) *InstancesInfoForDescribeInstancesOutput {
	s.Tags = v
	return s
}

// SetUsedGroupNumber sets the UsedGroupNumber field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetUsedGroupNumber(v int32) *InstancesInfoForDescribeInstancesOutput {
	s.UsedGroupNumber = &v
	return s
}

// SetUsedQueueNumber sets the UsedQueueNumber field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetUsedQueueNumber(v int32) *InstancesInfoForDescribeInstancesOutput {
	s.UsedQueueNumber = &v
	return s
}

// SetUsedStorageSpace sets the UsedStorageSpace field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetUsedStorageSpace(v int32) *InstancesInfoForDescribeInstancesOutput {
	s.UsedStorageSpace = &v
	return s
}

// SetUsedTopicNumber sets the UsedTopicNumber field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetUsedTopicNumber(v int32) *InstancesInfoForDescribeInstancesOutput {
	s.UsedTopicNumber = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetVersion(v string) *InstancesInfoForDescribeInstancesOutput {
	s.Version = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetVpcId(v string) *InstancesInfoForDescribeInstancesOutput {
	s.VpcId = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *InstancesInfoForDescribeInstancesOutput) SetZoneId(v string) *InstancesInfoForDescribeInstancesOutput {
	s.ZoneId = &v
	return s
}
