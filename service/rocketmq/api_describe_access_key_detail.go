// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rocketmq

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeAccessKeyDetailCommon = "DescribeAccessKeyDetail"

// DescribeAccessKeyDetailCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeAccessKeyDetailCommon operation. The "output" return
// value will be populated with the DescribeAccessKeyDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeAccessKeyDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeAccessKeyDetailCommon Send returns without error.
//
// See DescribeAccessKeyDetailCommon for more information on using the DescribeAccessKeyDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeAccessKeyDetailCommonRequest method.
//    req, resp := client.DescribeAccessKeyDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ROCKETMQ) DescribeAccessKeyDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeAccessKeyDetailCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeAccessKeyDetailCommon API operation for ROCKETMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ROCKETMQ's
// API operation DescribeAccessKeyDetailCommon for usage and error information.
func (c *ROCKETMQ) DescribeAccessKeyDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeAccessKeyDetailCommonRequest(input)
	return out, req.Send()
}

// DescribeAccessKeyDetailCommonWithContext is the same as DescribeAccessKeyDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeAccessKeyDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ROCKETMQ) DescribeAccessKeyDetailCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeAccessKeyDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeAccessKeyDetail = "DescribeAccessKeyDetail"

// DescribeAccessKeyDetailRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeAccessKeyDetail operation. The "output" return
// value will be populated with the DescribeAccessKeyDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeAccessKeyDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeAccessKeyDetailCommon Send returns without error.
//
// See DescribeAccessKeyDetail for more information on using the DescribeAccessKeyDetail
// API call, and error handling.
//
//    // Example sending a request using the DescribeAccessKeyDetailRequest method.
//    req, resp := client.DescribeAccessKeyDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ROCKETMQ) DescribeAccessKeyDetailRequest(input *DescribeAccessKeyDetailInput) (req *request.Request, output *DescribeAccessKeyDetailOutput) {
	op := &request.Operation{
		Name:       opDescribeAccessKeyDetail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeAccessKeyDetailInput{}
	}

	output = &DescribeAccessKeyDetailOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeAccessKeyDetail API operation for ROCKETMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ROCKETMQ's
// API operation DescribeAccessKeyDetail for usage and error information.
func (c *ROCKETMQ) DescribeAccessKeyDetail(input *DescribeAccessKeyDetailInput) (*DescribeAccessKeyDetailOutput, error) {
	req, out := c.DescribeAccessKeyDetailRequest(input)
	return out, req.Send()
}

// DescribeAccessKeyDetailWithContext is the same as DescribeAccessKeyDetail with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeAccessKeyDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ROCKETMQ) DescribeAccessKeyDetailWithContext(ctx volcengine.Context, input *DescribeAccessKeyDetailInput, opts ...request.Option) (*DescribeAccessKeyDetailOutput, error) {
	req, out := c.DescribeAccessKeyDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeAccessKeyDetailInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// AccessKey is a required field
	AccessKey *string `type:"string" json:",omitempty" required:"true"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeAccessKeyDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAccessKeyDetailInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeAccessKeyDetailInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeAccessKeyDetailInput"}
	if s.AccessKey == nil {
		invalidParams.Add(request.NewErrParamRequired("AccessKey"))
	}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAccessKey sets the AccessKey field's value.
func (s *DescribeAccessKeyDetailInput) SetAccessKey(v string) *DescribeAccessKeyDetailInput {
	s.AccessKey = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeAccessKeyDetailInput) SetInstanceId(v string) *DescribeAccessKeyDetailInput {
	s.InstanceId = &v
	return s
}

type DescribeAccessKeyDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AccessKey *string `type:"string" json:",omitempty"`

	AllAuthority *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	TopicPermissions []*TopicPermissionForDescribeAccessKeyDetailOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeAccessKeyDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAccessKeyDetailOutput) GoString() string {
	return s.String()
}

// SetAccessKey sets the AccessKey field's value.
func (s *DescribeAccessKeyDetailOutput) SetAccessKey(v string) *DescribeAccessKeyDetailOutput {
	s.AccessKey = &v
	return s
}

// SetAllAuthority sets the AllAuthority field's value.
func (s *DescribeAccessKeyDetailOutput) SetAllAuthority(v string) *DescribeAccessKeyDetailOutput {
	s.AllAuthority = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DescribeAccessKeyDetailOutput) SetDescription(v string) *DescribeAccessKeyDetailOutput {
	s.Description = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeAccessKeyDetailOutput) SetInstanceId(v string) *DescribeAccessKeyDetailOutput {
	s.InstanceId = &v
	return s
}

// SetTopicPermissions sets the TopicPermissions field's value.
func (s *DescribeAccessKeyDetailOutput) SetTopicPermissions(v []*TopicPermissionForDescribeAccessKeyDetailOutput) *DescribeAccessKeyDetailOutput {
	s.TopicPermissions = v
	return s
}

type TopicPermissionForDescribeAccessKeyDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Permission *string `type:"string" json:",omitempty"`

	TopicName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TopicPermissionForDescribeAccessKeyDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TopicPermissionForDescribeAccessKeyDetailOutput) GoString() string {
	return s.String()
}

// SetPermission sets the Permission field's value.
func (s *TopicPermissionForDescribeAccessKeyDetailOutput) SetPermission(v string) *TopicPermissionForDescribeAccessKeyDetailOutput {
	s.Permission = &v
	return s
}

// SetTopicName sets the TopicName field's value.
func (s *TopicPermissionForDescribeAccessKeyDetailOutput) SetTopicName(v string) *TopicPermissionForDescribeAccessKeyDetailOutput {
	s.TopicName = &v
	return s
}
