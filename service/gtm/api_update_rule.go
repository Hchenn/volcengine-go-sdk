// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package gtm

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateRuleCommon = "UpdateRule"

// UpdateRuleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateRuleCommon operation. The "output" return
// value will be populated with the UpdateRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateRuleCommon Send returns without error.
//
// See UpdateRuleCommon for more information on using the UpdateRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateRuleCommonRequest method.
//    req, resp := client.UpdateRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GTM) UpdateRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateRuleCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateRuleCommon API operation for GTM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GTM's
// API operation UpdateRuleCommon for usage and error information.
func (c *GTM) UpdateRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateRuleCommonRequest(input)
	return out, req.Send()
}

// UpdateRuleCommonWithContext is the same as UpdateRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GTM) UpdateRuleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateRule = "UpdateRule"

// UpdateRuleRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateRule operation. The "output" return
// value will be populated with the UpdateRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateRuleCommon Send returns without error.
//
// See UpdateRule for more information on using the UpdateRule
// API call, and error handling.
//
//    // Example sending a request using the UpdateRuleRequest method.
//    req, resp := client.UpdateRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GTM) UpdateRuleRequest(input *UpdateRuleInput) (req *request.Request, output *UpdateRuleOutput) {
	op := &request.Operation{
		Name:       opUpdateRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateRuleInput{}
	}

	output = &UpdateRuleOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateRule API operation for GTM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GTM's
// API operation UpdateRule for usage and error information.
func (c *GTM) UpdateRule(input *UpdateRuleInput) (*UpdateRuleOutput, error) {
	req, out := c.UpdateRuleRequest(input)
	return out, req.Send()
}

// UpdateRuleWithContext is the same as UpdateRule with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GTM) UpdateRuleWithContext(ctx volcengine.Context, input *UpdateRuleInput, opts ...request.Option) (*UpdateRuleOutput, error) {
	req, out := c.UpdateRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type HttpHeaderForUpdateRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s HttpHeaderForUpdateRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HttpHeaderForUpdateRuleInput) GoString() string {
	return s.String()
}

type HttpUsabilityCodeForUpdateRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Codes []*int32 `type:"list" json:",omitempty"`

	Operator *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s HttpUsabilityCodeForUpdateRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HttpUsabilityCodeForUpdateRuleInput) GoString() string {
	return s.String()
}

// SetCodes sets the Codes field's value.
func (s *HttpUsabilityCodeForUpdateRuleInput) SetCodes(v []*int32) *HttpUsabilityCodeForUpdateRuleInput {
	s.Codes = v
	return s
}

// SetOperator sets the Operator field's value.
func (s *HttpUsabilityCodeForUpdateRuleInput) SetOperator(v string) *HttpUsabilityCodeForUpdateRuleInput {
	s.Operator = &v
	return s
}

type PoolForUpdateRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	PoolId *string `type:"string" json:",omitempty"`

	Weight *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s PoolForUpdateRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PoolForUpdateRuleInput) GoString() string {
	return s.String()
}

// SetPoolId sets the PoolId field's value.
func (s *PoolForUpdateRuleInput) SetPoolId(v string) *PoolForUpdateRuleInput {
	s.PoolId = &v
	return s
}

// SetWeight sets the Weight field's value.
func (s *PoolForUpdateRuleInput) SetWeight(v int32) *PoolForUpdateRuleInput {
	s.Weight = &v
	return s
}

type PoolSetForUpdateRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ActiveAddrCount *int32 `type:"int32" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Pools []*PoolForUpdateRuleInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s PoolSetForUpdateRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PoolSetForUpdateRuleInput) GoString() string {
	return s.String()
}

// SetActiveAddrCount sets the ActiveAddrCount field's value.
func (s *PoolSetForUpdateRuleInput) SetActiveAddrCount(v int32) *PoolSetForUpdateRuleInput {
	s.ActiveAddrCount = &v
	return s
}

// SetName sets the Name field's value.
func (s *PoolSetForUpdateRuleInput) SetName(v string) *PoolSetForUpdateRuleInput {
	s.Name = &v
	return s
}

// SetPools sets the Pools field's value.
func (s *PoolSetForUpdateRuleInput) SetPools(v []*PoolForUpdateRuleInput) *PoolSetForUpdateRuleInput {
	s.Pools = v
	return s
}

type ProbeForUpdateRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AdvisedNodeCount *int32 `type:"int32" json:",omitempty"`

	Disable *bool `type:"boolean" json:",omitempty"`

	FailedCount *int32 `type:"int32" json:",omitempty"`

	Host *string `type:"string" json:",omitempty"`

	HttpHeader *HttpHeaderForUpdateRuleInput `type:"structure" json:",omitempty"`

	HttpMethod *string `type:"string" json:",omitempty"`

	HttpUsabilityCodes []*HttpUsabilityCodeForUpdateRuleInput `type:"list" json:",omitempty"`

	Interval *int32 `type:"int32" json:",omitempty"`

	IsManualNodes *bool `type:"boolean" json:",omitempty"`

	Nodes []*string `type:"list" json:",omitempty"`

	PingCount *int32 `type:"int32" json:",omitempty"`

	PingLossPercent *int32 `type:"int32" json:",omitempty"`

	Port *int32 `type:"int32" json:",omitempty"`

	Protocol *string `type:"string" json:",omitempty"`

	Timeout *int32 `type:"int32" json:",omitempty"`

	Url *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ProbeForUpdateRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProbeForUpdateRuleInput) GoString() string {
	return s.String()
}

// SetAdvisedNodeCount sets the AdvisedNodeCount field's value.
func (s *ProbeForUpdateRuleInput) SetAdvisedNodeCount(v int32) *ProbeForUpdateRuleInput {
	s.AdvisedNodeCount = &v
	return s
}

// SetDisable sets the Disable field's value.
func (s *ProbeForUpdateRuleInput) SetDisable(v bool) *ProbeForUpdateRuleInput {
	s.Disable = &v
	return s
}

// SetFailedCount sets the FailedCount field's value.
func (s *ProbeForUpdateRuleInput) SetFailedCount(v int32) *ProbeForUpdateRuleInput {
	s.FailedCount = &v
	return s
}

// SetHost sets the Host field's value.
func (s *ProbeForUpdateRuleInput) SetHost(v string) *ProbeForUpdateRuleInput {
	s.Host = &v
	return s
}

// SetHttpHeader sets the HttpHeader field's value.
func (s *ProbeForUpdateRuleInput) SetHttpHeader(v *HttpHeaderForUpdateRuleInput) *ProbeForUpdateRuleInput {
	s.HttpHeader = v
	return s
}

// SetHttpMethod sets the HttpMethod field's value.
func (s *ProbeForUpdateRuleInput) SetHttpMethod(v string) *ProbeForUpdateRuleInput {
	s.HttpMethod = &v
	return s
}

// SetHttpUsabilityCodes sets the HttpUsabilityCodes field's value.
func (s *ProbeForUpdateRuleInput) SetHttpUsabilityCodes(v []*HttpUsabilityCodeForUpdateRuleInput) *ProbeForUpdateRuleInput {
	s.HttpUsabilityCodes = v
	return s
}

// SetInterval sets the Interval field's value.
func (s *ProbeForUpdateRuleInput) SetInterval(v int32) *ProbeForUpdateRuleInput {
	s.Interval = &v
	return s
}

// SetIsManualNodes sets the IsManualNodes field's value.
func (s *ProbeForUpdateRuleInput) SetIsManualNodes(v bool) *ProbeForUpdateRuleInput {
	s.IsManualNodes = &v
	return s
}

// SetNodes sets the Nodes field's value.
func (s *ProbeForUpdateRuleInput) SetNodes(v []*string) *ProbeForUpdateRuleInput {
	s.Nodes = v
	return s
}

// SetPingCount sets the PingCount field's value.
func (s *ProbeForUpdateRuleInput) SetPingCount(v int32) *ProbeForUpdateRuleInput {
	s.PingCount = &v
	return s
}

// SetPingLossPercent sets the PingLossPercent field's value.
func (s *ProbeForUpdateRuleInput) SetPingLossPercent(v int32) *ProbeForUpdateRuleInput {
	s.PingLossPercent = &v
	return s
}

// SetPort sets the Port field's value.
func (s *ProbeForUpdateRuleInput) SetPort(v int32) *ProbeForUpdateRuleInput {
	s.Port = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *ProbeForUpdateRuleInput) SetProtocol(v string) *ProbeForUpdateRuleInput {
	s.Protocol = &v
	return s
}

// SetTimeout sets the Timeout field's value.
func (s *ProbeForUpdateRuleInput) SetTimeout(v int32) *ProbeForUpdateRuleInput {
	s.Timeout = &v
	return s
}

// SetUrl sets the Url field's value.
func (s *ProbeForUpdateRuleInput) SetUrl(v string) *ProbeForUpdateRuleInput {
	s.Url = &v
	return s
}

type RuleForUpdateRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Disable *bool `type:"boolean" json:",omitempty"`

	EffectivePoolSetIndex *int32 `type:"int32" json:",omitempty"`

	Line *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	PoolSetMode *string `type:"string" json:",omitempty"`

	PoolSets []*PoolSetForUpdateRuleInput `type:"list" json:",omitempty"`

	Probe *ProbeForUpdateRuleInput `type:"structure" json:",omitempty"`

	ProbeMode *string `type:"string" json:",omitempty"`

	Remark *string `type:"string" json:",omitempty"`

	Weight *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s RuleForUpdateRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RuleForUpdateRuleInput) GoString() string {
	return s.String()
}

// SetDisable sets the Disable field's value.
func (s *RuleForUpdateRuleInput) SetDisable(v bool) *RuleForUpdateRuleInput {
	s.Disable = &v
	return s
}

// SetEffectivePoolSetIndex sets the EffectivePoolSetIndex field's value.
func (s *RuleForUpdateRuleInput) SetEffectivePoolSetIndex(v int32) *RuleForUpdateRuleInput {
	s.EffectivePoolSetIndex = &v
	return s
}

// SetLine sets the Line field's value.
func (s *RuleForUpdateRuleInput) SetLine(v string) *RuleForUpdateRuleInput {
	s.Line = &v
	return s
}

// SetName sets the Name field's value.
func (s *RuleForUpdateRuleInput) SetName(v string) *RuleForUpdateRuleInput {
	s.Name = &v
	return s
}

// SetPoolSetMode sets the PoolSetMode field's value.
func (s *RuleForUpdateRuleInput) SetPoolSetMode(v string) *RuleForUpdateRuleInput {
	s.PoolSetMode = &v
	return s
}

// SetPoolSets sets the PoolSets field's value.
func (s *RuleForUpdateRuleInput) SetPoolSets(v []*PoolSetForUpdateRuleInput) *RuleForUpdateRuleInput {
	s.PoolSets = v
	return s
}

// SetProbe sets the Probe field's value.
func (s *RuleForUpdateRuleInput) SetProbe(v *ProbeForUpdateRuleInput) *RuleForUpdateRuleInput {
	s.Probe = v
	return s
}

// SetProbeMode sets the ProbeMode field's value.
func (s *RuleForUpdateRuleInput) SetProbeMode(v string) *RuleForUpdateRuleInput {
	s.ProbeMode = &v
	return s
}

// SetRemark sets the Remark field's value.
func (s *RuleForUpdateRuleInput) SetRemark(v string) *RuleForUpdateRuleInput {
	s.Remark = &v
	return s
}

// SetWeight sets the Weight field's value.
func (s *RuleForUpdateRuleInput) SetWeight(v int32) *RuleForUpdateRuleInput {
	s.Weight = &v
	return s
}

type UpdateRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// GtmId is a required field
	GtmId *string `type:"string" json:",omitempty" required:"true"`

	// PolicyType is a required field
	PolicyType *string `type:"string" json:",omitempty" required:"true"`

	Rule *RuleForUpdateRuleInput `type:"structure" json:",omitempty"`

	// RuleId is a required field
	RuleId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s UpdateRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateRuleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateRuleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateRuleInput"}
	if s.GtmId == nil {
		invalidParams.Add(request.NewErrParamRequired("GtmId"))
	}
	if s.PolicyType == nil {
		invalidParams.Add(request.NewErrParamRequired("PolicyType"))
	}
	if s.RuleId == nil {
		invalidParams.Add(request.NewErrParamRequired("RuleId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetGtmId sets the GtmId field's value.
func (s *UpdateRuleInput) SetGtmId(v string) *UpdateRuleInput {
	s.GtmId = &v
	return s
}

// SetPolicyType sets the PolicyType field's value.
func (s *UpdateRuleInput) SetPolicyType(v string) *UpdateRuleInput {
	s.PolicyType = &v
	return s
}

// SetRule sets the Rule field's value.
func (s *UpdateRuleInput) SetRule(v *RuleForUpdateRuleInput) *UpdateRuleInput {
	s.Rule = v
	return s
}

// SetRuleId sets the RuleId field's value.
func (s *UpdateRuleInput) SetRuleId(v string) *UpdateRuleInput {
	s.RuleId = &v
	return s
}

type UpdateRuleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateRuleOutput) GoString() string {
	return s.String()
}
