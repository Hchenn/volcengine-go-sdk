// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package gtm

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetGtmCommon = "GetGtm"

// GetGtmCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetGtmCommon operation. The "output" return
// value will be populated with the GetGtmCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetGtmCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetGtmCommon Send returns without error.
//
// See GetGtmCommon for more information on using the GetGtmCommon
// API call, and error handling.
//
//    // Example sending a request using the GetGtmCommonRequest method.
//    req, resp := client.GetGtmCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GTM) GetGtmCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetGtmCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetGtmCommon API operation for GTM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GTM's
// API operation GetGtmCommon for usage and error information.
func (c *GTM) GetGtmCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetGtmCommonRequest(input)
	return out, req.Send()
}

// GetGtmCommonWithContext is the same as GetGtmCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetGtmCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GTM) GetGtmCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetGtmCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetGtm = "GetGtm"

// GetGtmRequest generates a "volcengine/request.Request" representing the
// client's request for the GetGtm operation. The "output" return
// value will be populated with the GetGtmCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetGtmCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetGtmCommon Send returns without error.
//
// See GetGtm for more information on using the GetGtm
// API call, and error handling.
//
//    // Example sending a request using the GetGtmRequest method.
//    req, resp := client.GetGtmRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GTM) GetGtmRequest(input *GetGtmInput) (req *request.Request, output *GetGtmOutput) {
	op := &request.Operation{
		Name:       opGetGtm,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetGtmInput{}
	}

	output = &GetGtmOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetGtm API operation for GTM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GTM's
// API operation GetGtm for usage and error information.
func (c *GTM) GetGtm(input *GetGtmInput) (*GetGtmOutput, error) {
	req, out := c.GetGtmRequest(input)
	return out, req.Send()
}

// GetGtmWithContext is the same as GetGtm with the addition of
// the ability to pass a context and additional request options.
//
// See GetGtm for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GTM) GetGtmWithContext(ctx volcengine.Context, input *GetGtmInput, opts ...request.Option) (*GetGtmOutput, error) {
	req, out := c.GetGtmRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetGtmInput struct {
	_ struct{} `type:"structure"`

	// GtmId is a required field
	GtmId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s GetGtmInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetGtmInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetGtmInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetGtmInput"}
	if s.GtmId == nil {
		invalidParams.Add(request.NewErrParamRequired("GtmId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetGtmId sets the GtmId field's value.
func (s *GetGtmInput) SetGtmId(v string) *GetGtmInput {
	s.GtmId = &v
	return s
}

type GetGtmOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	AccessMode *string `type:"string"`

	AddressType *string `type:"string"`

	AlarmId *string `type:"string"`

	Cname *string `type:"string"`

	CreateTime *string `type:"string"`

	CreatedTime *string `type:"string"`

	Domain *string `type:"string"`

	GtmId *string `type:"string"`

	LastOperator *string `type:"string"`

	Owner *string `type:"string"`

	PolicyType *string `type:"string"`

	ProjectName *string `type:"string"`

	Remark *string `type:"string"`

	SpecName *string `type:"string"`

	State *string `type:"string"`

	Ttl *int32 `type:"int32"`

	UpdateTime *string `type:"string"`

	UpdatedTime *string `type:"string"`

	ZoneType *string `type:"string"`
}

// String returns the string representation
func (s GetGtmOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetGtmOutput) GoString() string {
	return s.String()
}

// SetAccessMode sets the AccessMode field's value.
func (s *GetGtmOutput) SetAccessMode(v string) *GetGtmOutput {
	s.AccessMode = &v
	return s
}

// SetAddressType sets the AddressType field's value.
func (s *GetGtmOutput) SetAddressType(v string) *GetGtmOutput {
	s.AddressType = &v
	return s
}

// SetAlarmId sets the AlarmId field's value.
func (s *GetGtmOutput) SetAlarmId(v string) *GetGtmOutput {
	s.AlarmId = &v
	return s
}

// SetCname sets the Cname field's value.
func (s *GetGtmOutput) SetCname(v string) *GetGtmOutput {
	s.Cname = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *GetGtmOutput) SetCreateTime(v string) *GetGtmOutput {
	s.CreateTime = &v
	return s
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *GetGtmOutput) SetCreatedTime(v string) *GetGtmOutput {
	s.CreatedTime = &v
	return s
}

// SetDomain sets the Domain field's value.
func (s *GetGtmOutput) SetDomain(v string) *GetGtmOutput {
	s.Domain = &v
	return s
}

// SetGtmId sets the GtmId field's value.
func (s *GetGtmOutput) SetGtmId(v string) *GetGtmOutput {
	s.GtmId = &v
	return s
}

// SetLastOperator sets the LastOperator field's value.
func (s *GetGtmOutput) SetLastOperator(v string) *GetGtmOutput {
	s.LastOperator = &v
	return s
}

// SetOwner sets the Owner field's value.
func (s *GetGtmOutput) SetOwner(v string) *GetGtmOutput {
	s.Owner = &v
	return s
}

// SetPolicyType sets the PolicyType field's value.
func (s *GetGtmOutput) SetPolicyType(v string) *GetGtmOutput {
	s.PolicyType = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *GetGtmOutput) SetProjectName(v string) *GetGtmOutput {
	s.ProjectName = &v
	return s
}

// SetRemark sets the Remark field's value.
func (s *GetGtmOutput) SetRemark(v string) *GetGtmOutput {
	s.Remark = &v
	return s
}

// SetSpecName sets the SpecName field's value.
func (s *GetGtmOutput) SetSpecName(v string) *GetGtmOutput {
	s.SpecName = &v
	return s
}

// SetState sets the State field's value.
func (s *GetGtmOutput) SetState(v string) *GetGtmOutput {
	s.State = &v
	return s
}

// SetTtl sets the Ttl field's value.
func (s *GetGtmOutput) SetTtl(v int32) *GetGtmOutput {
	s.Ttl = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *GetGtmOutput) SetUpdateTime(v string) *GetGtmOutput {
	s.UpdateTime = &v
	return s
}

// SetUpdatedTime sets the UpdatedTime field's value.
func (s *GetGtmOutput) SetUpdatedTime(v string) *GetGtmOutput {
	s.UpdatedTime = &v
	return s
}

// SetZoneType sets the ZoneType field's value.
func (s *GetGtmOutput) SetZoneType(v string) *GetGtmOutput {
	s.ZoneType = &v
	return s
}
