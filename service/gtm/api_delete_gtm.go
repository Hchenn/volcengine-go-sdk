// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package gtm

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteGtmCommon = "DeleteGtm"

// DeleteGtmCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteGtmCommon operation. The "output" return
// value will be populated with the DeleteGtmCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteGtmCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteGtmCommon Send returns without error.
//
// See DeleteGtmCommon for more information on using the DeleteGtmCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteGtmCommonRequest method.
//    req, resp := client.DeleteGtmCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GTM) DeleteGtmCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteGtmCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteGtmCommon API operation for GTM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GTM's
// API operation DeleteGtmCommon for usage and error information.
func (c *GTM) DeleteGtmCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteGtmCommonRequest(input)
	return out, req.Send()
}

// DeleteGtmCommonWithContext is the same as DeleteGtmCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteGtmCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GTM) DeleteGtmCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteGtmCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteGtm = "DeleteGtm"

// DeleteGtmRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteGtm operation. The "output" return
// value will be populated with the DeleteGtmCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteGtmCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteGtmCommon Send returns without error.
//
// See DeleteGtm for more information on using the DeleteGtm
// API call, and error handling.
//
//    // Example sending a request using the DeleteGtmRequest method.
//    req, resp := client.DeleteGtmRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GTM) DeleteGtmRequest(input *DeleteGtmInput) (req *request.Request, output *DeleteGtmOutput) {
	op := &request.Operation{
		Name:       opDeleteGtm,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteGtmInput{}
	}

	output = &DeleteGtmOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteGtm API operation for GTM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GTM's
// API operation DeleteGtm for usage and error information.
func (c *GTM) DeleteGtm(input *DeleteGtmInput) (*DeleteGtmOutput, error) {
	req, out := c.DeleteGtmRequest(input)
	return out, req.Send()
}

// DeleteGtmWithContext is the same as DeleteGtm with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteGtm for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GTM) DeleteGtmWithContext(ctx volcengine.Context, input *DeleteGtmInput, opts ...request.Option) (*DeleteGtmOutput, error) {
	req, out := c.DeleteGtmRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteGtmInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// GtmId is a required field
	GtmId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DeleteGtmInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteGtmInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteGtmInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteGtmInput"}
	if s.GtmId == nil {
		invalidParams.Add(request.NewErrParamRequired("GtmId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetGtmId sets the GtmId field's value.
func (s *DeleteGtmInput) SetGtmId(v string) *DeleteGtmInput {
	s.GtmId = &v
	return s
}

type DeleteGtmOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteGtmOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteGtmOutput) GoString() string {
	return s.String()
}
