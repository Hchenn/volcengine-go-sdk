// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package gtm

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateRuleCommon = "CreateRule"

// CreateRuleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateRuleCommon operation. The "output" return
// value will be populated with the CreateRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateRuleCommon Send returns without error.
//
// See CreateRuleCommon for more information on using the CreateRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateRuleCommonRequest method.
//    req, resp := client.CreateRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GTM) CreateRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateRuleCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateRuleCommon API operation for GTM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GTM's
// API operation CreateRuleCommon for usage and error information.
func (c *GTM) CreateRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateRuleCommonRequest(input)
	return out, req.Send()
}

// CreateRuleCommonWithContext is the same as CreateRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GTM) CreateRuleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateRule = "CreateRule"

// CreateRuleRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateRule operation. The "output" return
// value will be populated with the CreateRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateRuleCommon Send returns without error.
//
// See CreateRule for more information on using the CreateRule
// API call, and error handling.
//
//    // Example sending a request using the CreateRuleRequest method.
//    req, resp := client.CreateRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GTM) CreateRuleRequest(input *CreateRuleInput) (req *request.Request, output *CreateRuleOutput) {
	op := &request.Operation{
		Name:       opCreateRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateRuleInput{}
	}

	output = &CreateRuleOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateRule API operation for GTM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GTM's
// API operation CreateRule for usage and error information.
func (c *GTM) CreateRule(input *CreateRuleInput) (*CreateRuleOutput, error) {
	req, out := c.CreateRuleRequest(input)
	return out, req.Send()
}

// CreateRuleWithContext is the same as CreateRule with the addition of
// the ability to pass a context and additional request options.
//
// See CreateRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GTM) CreateRuleWithContext(ctx volcengine.Context, input *CreateRuleInput, opts ...request.Option) (*CreateRuleOutput, error) {
	req, out := c.CreateRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// GtmId is a required field
	GtmId *string `type:"string" json:",omitempty" required:"true"`

	// PolicyType is a required field
	PolicyType *string `type:"string" json:",omitempty" required:"true"`

	Rule *RuleForCreateRuleInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s CreateRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateRuleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateRuleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateRuleInput"}
	if s.GtmId == nil {
		invalidParams.Add(request.NewErrParamRequired("GtmId"))
	}
	if s.PolicyType == nil {
		invalidParams.Add(request.NewErrParamRequired("PolicyType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetGtmId sets the GtmId field's value.
func (s *CreateRuleInput) SetGtmId(v string) *CreateRuleInput {
	s.GtmId = &v
	return s
}

// SetPolicyType sets the PolicyType field's value.
func (s *CreateRuleInput) SetPolicyType(v string) *CreateRuleInput {
	s.PolicyType = &v
	return s
}

// SetRule sets the Rule field's value.
func (s *CreateRuleInput) SetRule(v *RuleForCreateRuleInput) *CreateRuleInput {
	s.Rule = v
	return s
}

type CreateRuleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	RuleId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateRuleOutput) GoString() string {
	return s.String()
}

// SetRuleId sets the RuleId field's value.
func (s *CreateRuleOutput) SetRuleId(v string) *CreateRuleOutput {
	s.RuleId = &v
	return s
}

type HttpHeaderForCreateRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s HttpHeaderForCreateRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HttpHeaderForCreateRuleInput) GoString() string {
	return s.String()
}

type HttpUsabilityCodeForCreateRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Codes []*int32 `type:"list" json:",omitempty"`

	Operator *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s HttpUsabilityCodeForCreateRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HttpUsabilityCodeForCreateRuleInput) GoString() string {
	return s.String()
}

// SetCodes sets the Codes field's value.
func (s *HttpUsabilityCodeForCreateRuleInput) SetCodes(v []*int32) *HttpUsabilityCodeForCreateRuleInput {
	s.Codes = v
	return s
}

// SetOperator sets the Operator field's value.
func (s *HttpUsabilityCodeForCreateRuleInput) SetOperator(v string) *HttpUsabilityCodeForCreateRuleInput {
	s.Operator = &v
	return s
}

type PoolForCreateRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	PoolId *string `type:"string" json:",omitempty"`

	Weight *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s PoolForCreateRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PoolForCreateRuleInput) GoString() string {
	return s.String()
}

// SetPoolId sets the PoolId field's value.
func (s *PoolForCreateRuleInput) SetPoolId(v string) *PoolForCreateRuleInput {
	s.PoolId = &v
	return s
}

// SetWeight sets the Weight field's value.
func (s *PoolForCreateRuleInput) SetWeight(v int32) *PoolForCreateRuleInput {
	s.Weight = &v
	return s
}

type PoolSetForCreateRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ActiveAddrCount *int32 `type:"int32" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Pools []*PoolForCreateRuleInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s PoolSetForCreateRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PoolSetForCreateRuleInput) GoString() string {
	return s.String()
}

// SetActiveAddrCount sets the ActiveAddrCount field's value.
func (s *PoolSetForCreateRuleInput) SetActiveAddrCount(v int32) *PoolSetForCreateRuleInput {
	s.ActiveAddrCount = &v
	return s
}

// SetName sets the Name field's value.
func (s *PoolSetForCreateRuleInput) SetName(v string) *PoolSetForCreateRuleInput {
	s.Name = &v
	return s
}

// SetPools sets the Pools field's value.
func (s *PoolSetForCreateRuleInput) SetPools(v []*PoolForCreateRuleInput) *PoolSetForCreateRuleInput {
	s.Pools = v
	return s
}

type ProbeForCreateRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AdvisedNodeCount *int32 `type:"int32" json:",omitempty"`

	Disable *bool `type:"boolean" json:",omitempty"`

	FailedCount *int32 `type:"int32" json:",omitempty"`

	Host *string `type:"string" json:",omitempty"`

	HttpHeader *HttpHeaderForCreateRuleInput `type:"structure" json:",omitempty"`

	HttpMethod *string `type:"string" json:",omitempty"`

	HttpUsabilityCodes []*HttpUsabilityCodeForCreateRuleInput `type:"list" json:",omitempty"`

	Interval *int32 `type:"int32" json:",omitempty"`

	IsManualNodes *bool `type:"boolean" json:",omitempty"`

	Nodes []*string `type:"list" json:",omitempty"`

	PingCount *int32 `type:"int32" json:",omitempty"`

	PingLossPercent *int32 `type:"int32" json:",omitempty"`

	Port *int32 `type:"int32" json:",omitempty"`

	Protocol *string `type:"string" json:",omitempty"`

	Timeout *int32 `type:"int32" json:",omitempty"`

	Url *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ProbeForCreateRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProbeForCreateRuleInput) GoString() string {
	return s.String()
}

// SetAdvisedNodeCount sets the AdvisedNodeCount field's value.
func (s *ProbeForCreateRuleInput) SetAdvisedNodeCount(v int32) *ProbeForCreateRuleInput {
	s.AdvisedNodeCount = &v
	return s
}

// SetDisable sets the Disable field's value.
func (s *ProbeForCreateRuleInput) SetDisable(v bool) *ProbeForCreateRuleInput {
	s.Disable = &v
	return s
}

// SetFailedCount sets the FailedCount field's value.
func (s *ProbeForCreateRuleInput) SetFailedCount(v int32) *ProbeForCreateRuleInput {
	s.FailedCount = &v
	return s
}

// SetHost sets the Host field's value.
func (s *ProbeForCreateRuleInput) SetHost(v string) *ProbeForCreateRuleInput {
	s.Host = &v
	return s
}

// SetHttpHeader sets the HttpHeader field's value.
func (s *ProbeForCreateRuleInput) SetHttpHeader(v *HttpHeaderForCreateRuleInput) *ProbeForCreateRuleInput {
	s.HttpHeader = v
	return s
}

// SetHttpMethod sets the HttpMethod field's value.
func (s *ProbeForCreateRuleInput) SetHttpMethod(v string) *ProbeForCreateRuleInput {
	s.HttpMethod = &v
	return s
}

// SetHttpUsabilityCodes sets the HttpUsabilityCodes field's value.
func (s *ProbeForCreateRuleInput) SetHttpUsabilityCodes(v []*HttpUsabilityCodeForCreateRuleInput) *ProbeForCreateRuleInput {
	s.HttpUsabilityCodes = v
	return s
}

// SetInterval sets the Interval field's value.
func (s *ProbeForCreateRuleInput) SetInterval(v int32) *ProbeForCreateRuleInput {
	s.Interval = &v
	return s
}

// SetIsManualNodes sets the IsManualNodes field's value.
func (s *ProbeForCreateRuleInput) SetIsManualNodes(v bool) *ProbeForCreateRuleInput {
	s.IsManualNodes = &v
	return s
}

// SetNodes sets the Nodes field's value.
func (s *ProbeForCreateRuleInput) SetNodes(v []*string) *ProbeForCreateRuleInput {
	s.Nodes = v
	return s
}

// SetPingCount sets the PingCount field's value.
func (s *ProbeForCreateRuleInput) SetPingCount(v int32) *ProbeForCreateRuleInput {
	s.PingCount = &v
	return s
}

// SetPingLossPercent sets the PingLossPercent field's value.
func (s *ProbeForCreateRuleInput) SetPingLossPercent(v int32) *ProbeForCreateRuleInput {
	s.PingLossPercent = &v
	return s
}

// SetPort sets the Port field's value.
func (s *ProbeForCreateRuleInput) SetPort(v int32) *ProbeForCreateRuleInput {
	s.Port = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *ProbeForCreateRuleInput) SetProtocol(v string) *ProbeForCreateRuleInput {
	s.Protocol = &v
	return s
}

// SetTimeout sets the Timeout field's value.
func (s *ProbeForCreateRuleInput) SetTimeout(v int32) *ProbeForCreateRuleInput {
	s.Timeout = &v
	return s
}

// SetUrl sets the Url field's value.
func (s *ProbeForCreateRuleInput) SetUrl(v string) *ProbeForCreateRuleInput {
	s.Url = &v
	return s
}

type RuleForCreateRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Disable *bool `type:"boolean" json:",omitempty"`

	EffectivePoolSetIndex *int32 `type:"int32" json:",omitempty"`

	Line *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	PoolSetMode *string `type:"string" json:",omitempty"`

	PoolSets []*PoolSetForCreateRuleInput `type:"list" json:",omitempty"`

	Probe *ProbeForCreateRuleInput `type:"structure" json:",omitempty"`

	ProbeMode *string `type:"string" json:",omitempty"`

	Remark *string `type:"string" json:",omitempty"`

	Weight *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s RuleForCreateRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RuleForCreateRuleInput) GoString() string {
	return s.String()
}

// SetDisable sets the Disable field's value.
func (s *RuleForCreateRuleInput) SetDisable(v bool) *RuleForCreateRuleInput {
	s.Disable = &v
	return s
}

// SetEffectivePoolSetIndex sets the EffectivePoolSetIndex field's value.
func (s *RuleForCreateRuleInput) SetEffectivePoolSetIndex(v int32) *RuleForCreateRuleInput {
	s.EffectivePoolSetIndex = &v
	return s
}

// SetLine sets the Line field's value.
func (s *RuleForCreateRuleInput) SetLine(v string) *RuleForCreateRuleInput {
	s.Line = &v
	return s
}

// SetName sets the Name field's value.
func (s *RuleForCreateRuleInput) SetName(v string) *RuleForCreateRuleInput {
	s.Name = &v
	return s
}

// SetPoolSetMode sets the PoolSetMode field's value.
func (s *RuleForCreateRuleInput) SetPoolSetMode(v string) *RuleForCreateRuleInput {
	s.PoolSetMode = &v
	return s
}

// SetPoolSets sets the PoolSets field's value.
func (s *RuleForCreateRuleInput) SetPoolSets(v []*PoolSetForCreateRuleInput) *RuleForCreateRuleInput {
	s.PoolSets = v
	return s
}

// SetProbe sets the Probe field's value.
func (s *RuleForCreateRuleInput) SetProbe(v *ProbeForCreateRuleInput) *RuleForCreateRuleInput {
	s.Probe = v
	return s
}

// SetProbeMode sets the ProbeMode field's value.
func (s *RuleForCreateRuleInput) SetProbeMode(v string) *RuleForCreateRuleInput {
	s.ProbeMode = &v
	return s
}

// SetRemark sets the Remark field's value.
func (s *RuleForCreateRuleInput) SetRemark(v string) *RuleForCreateRuleInput {
	s.Remark = &v
	return s
}

// SetWeight sets the Weight field's value.
func (s *RuleForCreateRuleInput) SetWeight(v int32) *RuleForCreateRuleInput {
	s.Weight = &v
	return s
}
