// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package iam

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opChangeSecureContactInfoCommon = "ChangeSecureContactInfo"

// ChangeSecureContactInfoCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ChangeSecureContactInfoCommon operation. The "output" return
// value will be populated with the ChangeSecureContactInfoCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ChangeSecureContactInfoCommon Request to send the API call to the service.
// the "output" return value is not valid until after ChangeSecureContactInfoCommon Send returns without error.
//
// See ChangeSecureContactInfoCommon for more information on using the ChangeSecureContactInfoCommon
// API call, and error handling.
//
//    // Example sending a request using the ChangeSecureContactInfoCommonRequest method.
//    req, resp := client.ChangeSecureContactInfoCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *IAM) ChangeSecureContactInfoCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opChangeSecureContactInfoCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ChangeSecureContactInfoCommon API operation for IAM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for IAM's
// API operation ChangeSecureContactInfoCommon for usage and error information.
func (c *IAM) ChangeSecureContactInfoCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ChangeSecureContactInfoCommonRequest(input)
	return out, req.Send()
}

// ChangeSecureContactInfoCommonWithContext is the same as ChangeSecureContactInfoCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ChangeSecureContactInfoCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *IAM) ChangeSecureContactInfoCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ChangeSecureContactInfoCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opChangeSecureContactInfo = "ChangeSecureContactInfo"

// ChangeSecureContactInfoRequest generates a "volcengine/request.Request" representing the
// client's request for the ChangeSecureContactInfo operation. The "output" return
// value will be populated with the ChangeSecureContactInfoCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ChangeSecureContactInfoCommon Request to send the API call to the service.
// the "output" return value is not valid until after ChangeSecureContactInfoCommon Send returns without error.
//
// See ChangeSecureContactInfo for more information on using the ChangeSecureContactInfo
// API call, and error handling.
//
//    // Example sending a request using the ChangeSecureContactInfoRequest method.
//    req, resp := client.ChangeSecureContactInfoRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *IAM) ChangeSecureContactInfoRequest(input *ChangeSecureContactInfoInput) (req *request.Request, output *ChangeSecureContactInfoOutput) {
	op := &request.Operation{
		Name:       opChangeSecureContactInfo,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ChangeSecureContactInfoInput{}
	}

	output = &ChangeSecureContactInfoOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ChangeSecureContactInfo API operation for IAM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for IAM's
// API operation ChangeSecureContactInfo for usage and error information.
func (c *IAM) ChangeSecureContactInfo(input *ChangeSecureContactInfoInput) (*ChangeSecureContactInfoOutput, error) {
	req, out := c.ChangeSecureContactInfoRequest(input)
	return out, req.Send()
}

// ChangeSecureContactInfoWithContext is the same as ChangeSecureContactInfo with the addition of
// the ability to pass a context and additional request options.
//
// See ChangeSecureContactInfo for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *IAM) ChangeSecureContactInfoWithContext(ctx volcengine.Context, input *ChangeSecureContactInfoInput, opts ...request.Option) (*ChangeSecureContactInfoOutput, error) {
	req, out := c.ChangeSecureContactInfoRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ChangeSecureContactInfoInput struct {
	_ struct{} `type:"structure"`

	// Code is a required field
	Code *string `type:"string" required:"true"`

	NewEmail *string `type:"string"`

	NewMobilePhone *string `type:"string"`
}

// String returns the string representation
func (s ChangeSecureContactInfoInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ChangeSecureContactInfoInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ChangeSecureContactInfoInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ChangeSecureContactInfoInput"}
	if s.Code == nil {
		invalidParams.Add(request.NewErrParamRequired("Code"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCode sets the Code field's value.
func (s *ChangeSecureContactInfoInput) SetCode(v string) *ChangeSecureContactInfoInput {
	s.Code = &v
	return s
}

// SetNewEmail sets the NewEmail field's value.
func (s *ChangeSecureContactInfoInput) SetNewEmail(v string) *ChangeSecureContactInfoInput {
	s.NewEmail = &v
	return s
}

// SetNewMobilePhone sets the NewMobilePhone field's value.
func (s *ChangeSecureContactInfoInput) SetNewMobilePhone(v string) *ChangeSecureContactInfoInput {
	s.NewMobilePhone = &v
	return s
}

type ChangeSecureContactInfoOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ChangeSecureContactInfoOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ChangeSecureContactInfoOutput) GoString() string {
	return s.String()
}
