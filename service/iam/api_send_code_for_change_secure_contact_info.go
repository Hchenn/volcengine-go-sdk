// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package iam

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opSendCodeForChangeSecureContactInfoCommon = "SendCodeForChangeSecureContactInfo"

// SendCodeForChangeSecureContactInfoCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the SendCodeForChangeSecureContactInfoCommon operation. The "output" return
// value will be populated with the SendCodeForChangeSecureContactInfoCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned SendCodeForChangeSecureContactInfoCommon Request to send the API call to the service.
// the "output" return value is not valid until after SendCodeForChangeSecureContactInfoCommon Send returns without error.
//
// See SendCodeForChangeSecureContactInfoCommon for more information on using the SendCodeForChangeSecureContactInfoCommon
// API call, and error handling.
//
//    // Example sending a request using the SendCodeForChangeSecureContactInfoCommonRequest method.
//    req, resp := client.SendCodeForChangeSecureContactInfoCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *IAM) SendCodeForChangeSecureContactInfoCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opSendCodeForChangeSecureContactInfoCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// SendCodeForChangeSecureContactInfoCommon API operation for IAM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for IAM's
// API operation SendCodeForChangeSecureContactInfoCommon for usage and error information.
func (c *IAM) SendCodeForChangeSecureContactInfoCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.SendCodeForChangeSecureContactInfoCommonRequest(input)
	return out, req.Send()
}

// SendCodeForChangeSecureContactInfoCommonWithContext is the same as SendCodeForChangeSecureContactInfoCommon with the addition of
// the ability to pass a context and additional request options.
//
// See SendCodeForChangeSecureContactInfoCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *IAM) SendCodeForChangeSecureContactInfoCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.SendCodeForChangeSecureContactInfoCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opSendCodeForChangeSecureContactInfo = "SendCodeForChangeSecureContactInfo"

// SendCodeForChangeSecureContactInfoRequest generates a "volcengine/request.Request" representing the
// client's request for the SendCodeForChangeSecureContactInfo operation. The "output" return
// value will be populated with the SendCodeForChangeSecureContactInfoCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned SendCodeForChangeSecureContactInfoCommon Request to send the API call to the service.
// the "output" return value is not valid until after SendCodeForChangeSecureContactInfoCommon Send returns without error.
//
// See SendCodeForChangeSecureContactInfo for more information on using the SendCodeForChangeSecureContactInfo
// API call, and error handling.
//
//    // Example sending a request using the SendCodeForChangeSecureContactInfoRequest method.
//    req, resp := client.SendCodeForChangeSecureContactInfoRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *IAM) SendCodeForChangeSecureContactInfoRequest(input *SendCodeForChangeSecureContactInfoInput) (req *request.Request, output *SendCodeForChangeSecureContactInfoOutput) {
	op := &request.Operation{
		Name:       opSendCodeForChangeSecureContactInfo,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &SendCodeForChangeSecureContactInfoInput{}
	}

	output = &SendCodeForChangeSecureContactInfoOutput{}
	req = c.newRequest(op, input, output)

	return
}

// SendCodeForChangeSecureContactInfo API operation for IAM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for IAM's
// API operation SendCodeForChangeSecureContactInfo for usage and error information.
func (c *IAM) SendCodeForChangeSecureContactInfo(input *SendCodeForChangeSecureContactInfoInput) (*SendCodeForChangeSecureContactInfoOutput, error) {
	req, out := c.SendCodeForChangeSecureContactInfoRequest(input)
	return out, req.Send()
}

// SendCodeForChangeSecureContactInfoWithContext is the same as SendCodeForChangeSecureContactInfo with the addition of
// the ability to pass a context and additional request options.
//
// See SendCodeForChangeSecureContactInfo for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *IAM) SendCodeForChangeSecureContactInfoWithContext(ctx volcengine.Context, input *SendCodeForChangeSecureContactInfoInput, opts ...request.Option) (*SendCodeForChangeSecureContactInfoOutput, error) {
	req, out := c.SendCodeForChangeSecureContactInfoRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type SendCodeForChangeSecureContactInfoInput struct {
	_ struct{} `type:"structure"`

	NewEmail *string `type:"string"`

	NewMobilePhone *string `type:"string"`
}

// String returns the string representation
func (s SendCodeForChangeSecureContactInfoInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SendCodeForChangeSecureContactInfoInput) GoString() string {
	return s.String()
}

// SetNewEmail sets the NewEmail field's value.
func (s *SendCodeForChangeSecureContactInfoInput) SetNewEmail(v string) *SendCodeForChangeSecureContactInfoInput {
	s.NewEmail = &v
	return s
}

// SetNewMobilePhone sets the NewMobilePhone field's value.
func (s *SendCodeForChangeSecureContactInfoInput) SetNewMobilePhone(v string) *SendCodeForChangeSecureContactInfoInput {
	s.NewMobilePhone = &v
	return s
}

type SendCodeForChangeSecureContactInfoOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s SendCodeForChangeSecureContactInfoOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SendCodeForChangeSecureContactInfoOutput) GoString() string {
	return s.String()
}
