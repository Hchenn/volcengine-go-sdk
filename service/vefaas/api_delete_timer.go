// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vefaas

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteTimerCommon = "DeleteTimer"

// DeleteTimerCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteTimerCommon operation. The "output" return
// value will be populated with the DeleteTimerCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteTimerCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteTimerCommon Send returns without error.
//
// See DeleteTimerCommon for more information on using the DeleteTimerCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteTimerCommonRequest method.
//    req, resp := client.DeleteTimerCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) DeleteTimerCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteTimerCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteTimerCommon API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation DeleteTimerCommon for usage and error information.
func (c *VEFAAS) DeleteTimerCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteTimerCommonRequest(input)
	return out, req.Send()
}

// DeleteTimerCommonWithContext is the same as DeleteTimerCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteTimerCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) DeleteTimerCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteTimerCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteTimer = "DeleteTimer"

// DeleteTimerRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteTimer operation. The "output" return
// value will be populated with the DeleteTimerCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteTimerCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteTimerCommon Send returns without error.
//
// See DeleteTimer for more information on using the DeleteTimer
// API call, and error handling.
//
//    // Example sending a request using the DeleteTimerRequest method.
//    req, resp := client.DeleteTimerRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) DeleteTimerRequest(input *DeleteTimerInput) (req *request.Request, output *DeleteTimerOutput) {
	op := &request.Operation{
		Name:       opDeleteTimer,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteTimerInput{}
	}

	output = &DeleteTimerOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteTimer API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation DeleteTimer for usage and error information.
func (c *VEFAAS) DeleteTimer(input *DeleteTimerInput) (*DeleteTimerOutput, error) {
	req, out := c.DeleteTimerRequest(input)
	return out, req.Send()
}

// DeleteTimerWithContext is the same as DeleteTimer with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteTimer for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) DeleteTimerWithContext(ctx volcengine.Context, input *DeleteTimerInput, opts ...request.Option) (*DeleteTimerOutput, error) {
	req, out := c.DeleteTimerRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteTimerInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// FunctionId is a required field
	FunctionId *string `type:"string" json:",omitempty" required:"true"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`

	TopParam *TopParamForDeleteTimerInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DeleteTimerInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteTimerInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteTimerInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteTimerInput"}
	if s.FunctionId == nil {
		invalidParams.Add(request.NewErrParamRequired("FunctionId"))
	}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFunctionId sets the FunctionId field's value.
func (s *DeleteTimerInput) SetFunctionId(v string) *DeleteTimerInput {
	s.FunctionId = &v
	return s
}

// SetId sets the Id field's value.
func (s *DeleteTimerInput) SetId(v string) *DeleteTimerInput {
	s.Id = &v
	return s
}

// SetTopParam sets the TopParam field's value.
func (s *DeleteTimerInput) SetTopParam(v *TopParamForDeleteTimerInput) *DeleteTimerInput {
	s.TopParam = v
	return s
}

type DeleteTimerOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteTimerOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteTimerOutput) GoString() string {
	return s.String()
}

type TopParamForDeleteTimerInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountId *int64 `type:"int64" json:",omitempty"`

	DestService *string `type:"string" json:",omitempty"`

	IsInternal *string `type:"string" json:",omitempty"`

	Psm *string `type:"string" json:",omitempty"`

	RealIp *string `type:"string" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`

	RequestId *string `type:"string" json:",omitempty"`

	RoleId *int64 `type:"int64" json:",omitempty"`

	Site *string `type:"string" json:",omitempty"`

	SourceService *string `type:"string" json:",omitempty"`

	UserAgent *string `type:"string" json:",omitempty"`

	UserId *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s TopParamForDeleteTimerInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TopParamForDeleteTimerInput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *TopParamForDeleteTimerInput) SetAccountId(v int64) *TopParamForDeleteTimerInput {
	s.AccountId = &v
	return s
}

// SetDestService sets the DestService field's value.
func (s *TopParamForDeleteTimerInput) SetDestService(v string) *TopParamForDeleteTimerInput {
	s.DestService = &v
	return s
}

// SetIsInternal sets the IsInternal field's value.
func (s *TopParamForDeleteTimerInput) SetIsInternal(v string) *TopParamForDeleteTimerInput {
	s.IsInternal = &v
	return s
}

// SetPsm sets the Psm field's value.
func (s *TopParamForDeleteTimerInput) SetPsm(v string) *TopParamForDeleteTimerInput {
	s.Psm = &v
	return s
}

// SetRealIp sets the RealIp field's value.
func (s *TopParamForDeleteTimerInput) SetRealIp(v string) *TopParamForDeleteTimerInput {
	s.RealIp = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *TopParamForDeleteTimerInput) SetRegion(v string) *TopParamForDeleteTimerInput {
	s.Region = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *TopParamForDeleteTimerInput) SetRequestId(v string) *TopParamForDeleteTimerInput {
	s.RequestId = &v
	return s
}

// SetRoleId sets the RoleId field's value.
func (s *TopParamForDeleteTimerInput) SetRoleId(v int64) *TopParamForDeleteTimerInput {
	s.RoleId = &v
	return s
}

// SetSite sets the Site field's value.
func (s *TopParamForDeleteTimerInput) SetSite(v string) *TopParamForDeleteTimerInput {
	s.Site = &v
	return s
}

// SetSourceService sets the SourceService field's value.
func (s *TopParamForDeleteTimerInput) SetSourceService(v string) *TopParamForDeleteTimerInput {
	s.SourceService = &v
	return s
}

// SetUserAgent sets the UserAgent field's value.
func (s *TopParamForDeleteTimerInput) SetUserAgent(v string) *TopParamForDeleteTimerInput {
	s.UserAgent = &v
	return s
}

// SetUserId sets the UserId field's value.
func (s *TopParamForDeleteTimerInput) SetUserId(v int64) *TopParamForDeleteTimerInput {
	s.UserId = &v
	return s
}
