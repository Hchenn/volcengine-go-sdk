// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vefaas

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateFunctionCommon = "UpdateFunction"

// UpdateFunctionCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateFunctionCommon operation. The "output" return
// value will be populated with the UpdateFunctionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateFunctionCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateFunctionCommon Send returns without error.
//
// See UpdateFunctionCommon for more information on using the UpdateFunctionCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateFunctionCommonRequest method.
//    req, resp := client.UpdateFunctionCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) UpdateFunctionCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateFunctionCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateFunctionCommon API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation UpdateFunctionCommon for usage and error information.
func (c *VEFAAS) UpdateFunctionCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateFunctionCommonRequest(input)
	return out, req.Send()
}

// UpdateFunctionCommonWithContext is the same as UpdateFunctionCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateFunctionCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) UpdateFunctionCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateFunctionCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateFunction = "UpdateFunction"

// UpdateFunctionRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateFunction operation. The "output" return
// value will be populated with the UpdateFunctionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateFunctionCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateFunctionCommon Send returns without error.
//
// See UpdateFunction for more information on using the UpdateFunction
// API call, and error handling.
//
//    // Example sending a request using the UpdateFunctionRequest method.
//    req, resp := client.UpdateFunctionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) UpdateFunctionRequest(input *UpdateFunctionInput) (req *request.Request, output *UpdateFunctionOutput) {
	op := &request.Operation{
		Name:       opUpdateFunction,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateFunctionInput{}
	}

	output = &UpdateFunctionOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateFunction API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation UpdateFunction for usage and error information.
func (c *VEFAAS) UpdateFunction(input *UpdateFunctionInput) (*UpdateFunctionOutput, error) {
	req, out := c.UpdateFunctionRequest(input)
	return out, req.Send()
}

// UpdateFunctionWithContext is the same as UpdateFunction with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateFunction for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) UpdateFunctionWithContext(ctx volcengine.Context, input *UpdateFunctionInput, opts ...request.Option) (*UpdateFunctionOutput, error) {
	req, out := c.UpdateFunctionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CredentialsForUpdateFunctionInput struct {
	_ struct{} `type:"structure"`

	AccessKeyId *string `type:"string"`

	SecretAccessKey *string `type:"string"`
}

// String returns the string representation
func (s CredentialsForUpdateFunctionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CredentialsForUpdateFunctionInput) GoString() string {
	return s.String()
}

// SetAccessKeyId sets the AccessKeyId field's value.
func (s *CredentialsForUpdateFunctionInput) SetAccessKeyId(v string) *CredentialsForUpdateFunctionInput {
	s.AccessKeyId = &v
	return s
}

// SetSecretAccessKey sets the SecretAccessKey field's value.
func (s *CredentialsForUpdateFunctionInput) SetSecretAccessKey(v string) *CredentialsForUpdateFunctionInput {
	s.SecretAccessKey = &v
	return s
}

type CredentialsForUpdateFunctionOutput struct {
	_ struct{} `type:"structure"`

	AccessKeyId *string `type:"string"`

	SecretAccessKey *string `type:"string"`
}

// String returns the string representation
func (s CredentialsForUpdateFunctionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CredentialsForUpdateFunctionOutput) GoString() string {
	return s.String()
}

// SetAccessKeyId sets the AccessKeyId field's value.
func (s *CredentialsForUpdateFunctionOutput) SetAccessKeyId(v string) *CredentialsForUpdateFunctionOutput {
	s.AccessKeyId = &v
	return s
}

// SetSecretAccessKey sets the SecretAccessKey field's value.
func (s *CredentialsForUpdateFunctionOutput) SetSecretAccessKey(v string) *CredentialsForUpdateFunctionOutput {
	s.SecretAccessKey = &v
	return s
}

type EnvForUpdateFunctionInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s EnvForUpdateFunctionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EnvForUpdateFunctionInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *EnvForUpdateFunctionInput) SetKey(v string) *EnvForUpdateFunctionInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *EnvForUpdateFunctionInput) SetValue(v string) *EnvForUpdateFunctionInput {
	s.Value = &v
	return s
}

type EnvForUpdateFunctionOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s EnvForUpdateFunctionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EnvForUpdateFunctionOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *EnvForUpdateFunctionOutput) SetKey(v string) *EnvForUpdateFunctionOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *EnvForUpdateFunctionOutput) SetValue(v string) *EnvForUpdateFunctionOutput {
	s.Value = &v
	return s
}

type MountPointForUpdateFunctionInput struct {
	_ struct{} `type:"structure"`

	BucketName *string `type:"string"`

	BucketPath *string `type:"string"`

	Endpoint *string `type:"string"`

	LocalMountPath *string `type:"string"`

	ReadOnly *bool `type:"boolean"`
}

// String returns the string representation
func (s MountPointForUpdateFunctionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MountPointForUpdateFunctionInput) GoString() string {
	return s.String()
}

// SetBucketName sets the BucketName field's value.
func (s *MountPointForUpdateFunctionInput) SetBucketName(v string) *MountPointForUpdateFunctionInput {
	s.BucketName = &v
	return s
}

// SetBucketPath sets the BucketPath field's value.
func (s *MountPointForUpdateFunctionInput) SetBucketPath(v string) *MountPointForUpdateFunctionInput {
	s.BucketPath = &v
	return s
}

// SetEndpoint sets the Endpoint field's value.
func (s *MountPointForUpdateFunctionInput) SetEndpoint(v string) *MountPointForUpdateFunctionInput {
	s.Endpoint = &v
	return s
}

// SetLocalMountPath sets the LocalMountPath field's value.
func (s *MountPointForUpdateFunctionInput) SetLocalMountPath(v string) *MountPointForUpdateFunctionInput {
	s.LocalMountPath = &v
	return s
}

// SetReadOnly sets the ReadOnly field's value.
func (s *MountPointForUpdateFunctionInput) SetReadOnly(v bool) *MountPointForUpdateFunctionInput {
	s.ReadOnly = &v
	return s
}

type MountPointForUpdateFunctionOutput struct {
	_ struct{} `type:"structure"`

	BucketName *string `type:"string"`

	BucketPath *string `type:"string"`

	Endpoint *string `type:"string"`

	LocalMountPath *string `type:"string"`

	ReadOnly *bool `type:"boolean"`
}

// String returns the string representation
func (s MountPointForUpdateFunctionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MountPointForUpdateFunctionOutput) GoString() string {
	return s.String()
}

// SetBucketName sets the BucketName field's value.
func (s *MountPointForUpdateFunctionOutput) SetBucketName(v string) *MountPointForUpdateFunctionOutput {
	s.BucketName = &v
	return s
}

// SetBucketPath sets the BucketPath field's value.
func (s *MountPointForUpdateFunctionOutput) SetBucketPath(v string) *MountPointForUpdateFunctionOutput {
	s.BucketPath = &v
	return s
}

// SetEndpoint sets the Endpoint field's value.
func (s *MountPointForUpdateFunctionOutput) SetEndpoint(v string) *MountPointForUpdateFunctionOutput {
	s.Endpoint = &v
	return s
}

// SetLocalMountPath sets the LocalMountPath field's value.
func (s *MountPointForUpdateFunctionOutput) SetLocalMountPath(v string) *MountPointForUpdateFunctionOutput {
	s.LocalMountPath = &v
	return s
}

// SetReadOnly sets the ReadOnly field's value.
func (s *MountPointForUpdateFunctionOutput) SetReadOnly(v bool) *MountPointForUpdateFunctionOutput {
	s.ReadOnly = &v
	return s
}

type NasConfigForUpdateFunctionInput struct {
	_ struct{} `type:"structure"`

	FileSystemId *string `type:"string"`

	Gid *int64 `type:"int64"`

	LocalMountPath *string `type:"string"`

	MountPointId *string `type:"string"`

	RemotePath *string `type:"string"`

	Uid *int64 `type:"int64"`
}

// String returns the string representation
func (s NasConfigForUpdateFunctionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NasConfigForUpdateFunctionInput) GoString() string {
	return s.String()
}

// SetFileSystemId sets the FileSystemId field's value.
func (s *NasConfigForUpdateFunctionInput) SetFileSystemId(v string) *NasConfigForUpdateFunctionInput {
	s.FileSystemId = &v
	return s
}

// SetGid sets the Gid field's value.
func (s *NasConfigForUpdateFunctionInput) SetGid(v int64) *NasConfigForUpdateFunctionInput {
	s.Gid = &v
	return s
}

// SetLocalMountPath sets the LocalMountPath field's value.
func (s *NasConfigForUpdateFunctionInput) SetLocalMountPath(v string) *NasConfigForUpdateFunctionInput {
	s.LocalMountPath = &v
	return s
}

// SetMountPointId sets the MountPointId field's value.
func (s *NasConfigForUpdateFunctionInput) SetMountPointId(v string) *NasConfigForUpdateFunctionInput {
	s.MountPointId = &v
	return s
}

// SetRemotePath sets the RemotePath field's value.
func (s *NasConfigForUpdateFunctionInput) SetRemotePath(v string) *NasConfigForUpdateFunctionInput {
	s.RemotePath = &v
	return s
}

// SetUid sets the Uid field's value.
func (s *NasConfigForUpdateFunctionInput) SetUid(v int64) *NasConfigForUpdateFunctionInput {
	s.Uid = &v
	return s
}

type NasConfigForUpdateFunctionOutput struct {
	_ struct{} `type:"structure"`

	FileSystemId *string `type:"string"`

	Gid *int64 `type:"int64"`

	LocalMountPath *string `type:"string"`

	MountPointId *string `type:"string"`

	RemotePath *string `type:"string"`

	Uid *int64 `type:"int64"`
}

// String returns the string representation
func (s NasConfigForUpdateFunctionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NasConfigForUpdateFunctionOutput) GoString() string {
	return s.String()
}

// SetFileSystemId sets the FileSystemId field's value.
func (s *NasConfigForUpdateFunctionOutput) SetFileSystemId(v string) *NasConfigForUpdateFunctionOutput {
	s.FileSystemId = &v
	return s
}

// SetGid sets the Gid field's value.
func (s *NasConfigForUpdateFunctionOutput) SetGid(v int64) *NasConfigForUpdateFunctionOutput {
	s.Gid = &v
	return s
}

// SetLocalMountPath sets the LocalMountPath field's value.
func (s *NasConfigForUpdateFunctionOutput) SetLocalMountPath(v string) *NasConfigForUpdateFunctionOutput {
	s.LocalMountPath = &v
	return s
}

// SetMountPointId sets the MountPointId field's value.
func (s *NasConfigForUpdateFunctionOutput) SetMountPointId(v string) *NasConfigForUpdateFunctionOutput {
	s.MountPointId = &v
	return s
}

// SetRemotePath sets the RemotePath field's value.
func (s *NasConfigForUpdateFunctionOutput) SetRemotePath(v string) *NasConfigForUpdateFunctionOutput {
	s.RemotePath = &v
	return s
}

// SetUid sets the Uid field's value.
func (s *NasConfigForUpdateFunctionOutput) SetUid(v int64) *NasConfigForUpdateFunctionOutput {
	s.Uid = &v
	return s
}

type NasStorageForUpdateFunctionInput struct {
	_ struct{} `type:"structure"`

	EnableNas *bool `type:"boolean"`

	NasConfigs []*NasConfigForUpdateFunctionInput `type:"list"`
}

// String returns the string representation
func (s NasStorageForUpdateFunctionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NasStorageForUpdateFunctionInput) GoString() string {
	return s.String()
}

// SetEnableNas sets the EnableNas field's value.
func (s *NasStorageForUpdateFunctionInput) SetEnableNas(v bool) *NasStorageForUpdateFunctionInput {
	s.EnableNas = &v
	return s
}

// SetNasConfigs sets the NasConfigs field's value.
func (s *NasStorageForUpdateFunctionInput) SetNasConfigs(v []*NasConfigForUpdateFunctionInput) *NasStorageForUpdateFunctionInput {
	s.NasConfigs = v
	return s
}

type NasStorageForUpdateFunctionOutput struct {
	_ struct{} `type:"structure"`

	EnableNas *bool `type:"boolean"`

	NasConfigs []*NasConfigForUpdateFunctionOutput `type:"list"`
}

// String returns the string representation
func (s NasStorageForUpdateFunctionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NasStorageForUpdateFunctionOutput) GoString() string {
	return s.String()
}

// SetEnableNas sets the EnableNas field's value.
func (s *NasStorageForUpdateFunctionOutput) SetEnableNas(v bool) *NasStorageForUpdateFunctionOutput {
	s.EnableNas = &v
	return s
}

// SetNasConfigs sets the NasConfigs field's value.
func (s *NasStorageForUpdateFunctionOutput) SetNasConfigs(v []*NasConfigForUpdateFunctionOutput) *NasStorageForUpdateFunctionOutput {
	s.NasConfigs = v
	return s
}

type SourceAccessConfigForUpdateFunctionInput struct {
	_ struct{} `type:"structure"`

	Password *string `type:"string"`

	Username *string `type:"string"`
}

// String returns the string representation
func (s SourceAccessConfigForUpdateFunctionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SourceAccessConfigForUpdateFunctionInput) GoString() string {
	return s.String()
}

// SetPassword sets the Password field's value.
func (s *SourceAccessConfigForUpdateFunctionInput) SetPassword(v string) *SourceAccessConfigForUpdateFunctionInput {
	s.Password = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *SourceAccessConfigForUpdateFunctionInput) SetUsername(v string) *SourceAccessConfigForUpdateFunctionInput {
	s.Username = &v
	return s
}

type TlsConfigForUpdateFunctionInput struct {
	_ struct{} `type:"structure"`

	EnableLog *bool `type:"boolean"`

	TlsProjectId *string `type:"string"`

	TlsTopicId *string `type:"string"`
}

// String returns the string representation
func (s TlsConfigForUpdateFunctionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TlsConfigForUpdateFunctionInput) GoString() string {
	return s.String()
}

// SetEnableLog sets the EnableLog field's value.
func (s *TlsConfigForUpdateFunctionInput) SetEnableLog(v bool) *TlsConfigForUpdateFunctionInput {
	s.EnableLog = &v
	return s
}

// SetTlsProjectId sets the TlsProjectId field's value.
func (s *TlsConfigForUpdateFunctionInput) SetTlsProjectId(v string) *TlsConfigForUpdateFunctionInput {
	s.TlsProjectId = &v
	return s
}

// SetTlsTopicId sets the TlsTopicId field's value.
func (s *TlsConfigForUpdateFunctionInput) SetTlsTopicId(v string) *TlsConfigForUpdateFunctionInput {
	s.TlsTopicId = &v
	return s
}

type TlsConfigForUpdateFunctionOutput struct {
	_ struct{} `type:"structure"`

	EnableLog *bool `type:"boolean"`

	TlsProjectId *string `type:"string"`

	TlsTopicId *string `type:"string"`
}

// String returns the string representation
func (s TlsConfigForUpdateFunctionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TlsConfigForUpdateFunctionOutput) GoString() string {
	return s.String()
}

// SetEnableLog sets the EnableLog field's value.
func (s *TlsConfigForUpdateFunctionOutput) SetEnableLog(v bool) *TlsConfigForUpdateFunctionOutput {
	s.EnableLog = &v
	return s
}

// SetTlsProjectId sets the TlsProjectId field's value.
func (s *TlsConfigForUpdateFunctionOutput) SetTlsProjectId(v string) *TlsConfigForUpdateFunctionOutput {
	s.TlsProjectId = &v
	return s
}

// SetTlsTopicId sets the TlsTopicId field's value.
func (s *TlsConfigForUpdateFunctionOutput) SetTlsTopicId(v string) *TlsConfigForUpdateFunctionOutput {
	s.TlsTopicId = &v
	return s
}

type TosMountConfigForUpdateFunctionInput struct {
	_ struct{} `type:"structure"`

	Credentials *CredentialsForUpdateFunctionInput `type:"structure"`

	EnableTos *bool `type:"boolean"`

	MountPoints []*MountPointForUpdateFunctionInput `type:"list"`
}

// String returns the string representation
func (s TosMountConfigForUpdateFunctionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TosMountConfigForUpdateFunctionInput) GoString() string {
	return s.String()
}

// SetCredentials sets the Credentials field's value.
func (s *TosMountConfigForUpdateFunctionInput) SetCredentials(v *CredentialsForUpdateFunctionInput) *TosMountConfigForUpdateFunctionInput {
	s.Credentials = v
	return s
}

// SetEnableTos sets the EnableTos field's value.
func (s *TosMountConfigForUpdateFunctionInput) SetEnableTos(v bool) *TosMountConfigForUpdateFunctionInput {
	s.EnableTos = &v
	return s
}

// SetMountPoints sets the MountPoints field's value.
func (s *TosMountConfigForUpdateFunctionInput) SetMountPoints(v []*MountPointForUpdateFunctionInput) *TosMountConfigForUpdateFunctionInput {
	s.MountPoints = v
	return s
}

type TosMountConfigForUpdateFunctionOutput struct {
	_ struct{} `type:"structure"`

	Credentials *CredentialsForUpdateFunctionOutput `type:"structure"`

	EnableTos *bool `type:"boolean"`

	MountPoints []*MountPointForUpdateFunctionOutput `type:"list"`
}

// String returns the string representation
func (s TosMountConfigForUpdateFunctionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TosMountConfigForUpdateFunctionOutput) GoString() string {
	return s.String()
}

// SetCredentials sets the Credentials field's value.
func (s *TosMountConfigForUpdateFunctionOutput) SetCredentials(v *CredentialsForUpdateFunctionOutput) *TosMountConfigForUpdateFunctionOutput {
	s.Credentials = v
	return s
}

// SetEnableTos sets the EnableTos field's value.
func (s *TosMountConfigForUpdateFunctionOutput) SetEnableTos(v bool) *TosMountConfigForUpdateFunctionOutput {
	s.EnableTos = &v
	return s
}

// SetMountPoints sets the MountPoints field's value.
func (s *TosMountConfigForUpdateFunctionOutput) SetMountPoints(v []*MountPointForUpdateFunctionOutput) *TosMountConfigForUpdateFunctionOutput {
	s.MountPoints = v
	return s
}

type UpdateFunctionInput struct {
	_ struct{} `type:"structure"`

	Description *string `type:"string"`

	Envs []*EnvForUpdateFunctionInput `type:"list"`

	ExclusiveMode *bool `type:"boolean"`

	// Id is a required field
	Id *string `type:"string" required:"true"`

	InitializerSec *int32 `type:"int32"`

	MaxConcurrency *int32 `type:"int32"`

	MemoryMB *int32 `type:"int32"`

	NasStorage *NasStorageForUpdateFunctionInput `type:"structure"`

	ProjectName *string `type:"string"`

	RequestTimeout *int32 `type:"int32"`

	Source *string `type:"string"`

	SourceAccessConfig *SourceAccessConfigForUpdateFunctionInput `type:"structure"`

	SourceType *string `type:"string"`

	TlsConfig *TlsConfigForUpdateFunctionInput `type:"structure"`

	TosMountConfig *TosMountConfigForUpdateFunctionInput `type:"structure"`

	VpcConfig *VpcConfigForUpdateFunctionInput `type:"structure"`
}

// String returns the string representation
func (s UpdateFunctionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateFunctionInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateFunctionInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateFunctionInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *UpdateFunctionInput) SetDescription(v string) *UpdateFunctionInput {
	s.Description = &v
	return s
}

// SetEnvs sets the Envs field's value.
func (s *UpdateFunctionInput) SetEnvs(v []*EnvForUpdateFunctionInput) *UpdateFunctionInput {
	s.Envs = v
	return s
}

// SetExclusiveMode sets the ExclusiveMode field's value.
func (s *UpdateFunctionInput) SetExclusiveMode(v bool) *UpdateFunctionInput {
	s.ExclusiveMode = &v
	return s
}

// SetId sets the Id field's value.
func (s *UpdateFunctionInput) SetId(v string) *UpdateFunctionInput {
	s.Id = &v
	return s
}

// SetInitializerSec sets the InitializerSec field's value.
func (s *UpdateFunctionInput) SetInitializerSec(v int32) *UpdateFunctionInput {
	s.InitializerSec = &v
	return s
}

// SetMaxConcurrency sets the MaxConcurrency field's value.
func (s *UpdateFunctionInput) SetMaxConcurrency(v int32) *UpdateFunctionInput {
	s.MaxConcurrency = &v
	return s
}

// SetMemoryMB sets the MemoryMB field's value.
func (s *UpdateFunctionInput) SetMemoryMB(v int32) *UpdateFunctionInput {
	s.MemoryMB = &v
	return s
}

// SetNasStorage sets the NasStorage field's value.
func (s *UpdateFunctionInput) SetNasStorage(v *NasStorageForUpdateFunctionInput) *UpdateFunctionInput {
	s.NasStorage = v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *UpdateFunctionInput) SetProjectName(v string) *UpdateFunctionInput {
	s.ProjectName = &v
	return s
}

// SetRequestTimeout sets the RequestTimeout field's value.
func (s *UpdateFunctionInput) SetRequestTimeout(v int32) *UpdateFunctionInput {
	s.RequestTimeout = &v
	return s
}

// SetSource sets the Source field's value.
func (s *UpdateFunctionInput) SetSource(v string) *UpdateFunctionInput {
	s.Source = &v
	return s
}

// SetSourceAccessConfig sets the SourceAccessConfig field's value.
func (s *UpdateFunctionInput) SetSourceAccessConfig(v *SourceAccessConfigForUpdateFunctionInput) *UpdateFunctionInput {
	s.SourceAccessConfig = v
	return s
}

// SetSourceType sets the SourceType field's value.
func (s *UpdateFunctionInput) SetSourceType(v string) *UpdateFunctionInput {
	s.SourceType = &v
	return s
}

// SetTlsConfig sets the TlsConfig field's value.
func (s *UpdateFunctionInput) SetTlsConfig(v *TlsConfigForUpdateFunctionInput) *UpdateFunctionInput {
	s.TlsConfig = v
	return s
}

// SetTosMountConfig sets the TosMountConfig field's value.
func (s *UpdateFunctionInput) SetTosMountConfig(v *TosMountConfigForUpdateFunctionInput) *UpdateFunctionInput {
	s.TosMountConfig = v
	return s
}

// SetVpcConfig sets the VpcConfig field's value.
func (s *UpdateFunctionInput) SetVpcConfig(v *VpcConfigForUpdateFunctionInput) *UpdateFunctionInput {
	s.VpcConfig = v
	return s
}

type UpdateFunctionOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	CodeSize *int32 `type:"int32"`

	CodeSizeLimit *int32 `type:"int32"`

	Command *string `type:"string"`

	CreationTime *string `type:"string"`

	Description *string `type:"string"`

	Envs []*EnvForUpdateFunctionOutput `type:"list"`

	ExclusiveMode *bool `type:"boolean"`

	Id *string `type:"string"`

	InitializerSec *int32 `type:"int32"`

	InstanceType *string `type:"string"`

	LastUpdateTime *string `type:"string"`

	MaxConcurrency *int32 `type:"int32"`

	MemoryMB *int32 `type:"int32"`

	Name *string `type:"string"`

	NasStorage *NasStorageForUpdateFunctionOutput `type:"structure"`

	Owner *string `type:"string"`

	ProjectName *string `type:"string"`

	RequestTimeout *int32 `type:"int32"`

	Runtime *string `type:"string"`

	SourceLocation *string `type:"string"`

	SourceType *string `type:"string"`

	TlsConfig *TlsConfigForUpdateFunctionOutput `type:"structure"`

	TosMountConfig *TosMountConfigForUpdateFunctionOutput `type:"structure"`

	TriggersCount *int32 `type:"int32"`

	VpcConfig *VpcConfigForUpdateFunctionOutput `type:"structure"`
}

// String returns the string representation
func (s UpdateFunctionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateFunctionOutput) GoString() string {
	return s.String()
}

// SetCodeSize sets the CodeSize field's value.
func (s *UpdateFunctionOutput) SetCodeSize(v int32) *UpdateFunctionOutput {
	s.CodeSize = &v
	return s
}

// SetCodeSizeLimit sets the CodeSizeLimit field's value.
func (s *UpdateFunctionOutput) SetCodeSizeLimit(v int32) *UpdateFunctionOutput {
	s.CodeSizeLimit = &v
	return s
}

// SetCommand sets the Command field's value.
func (s *UpdateFunctionOutput) SetCommand(v string) *UpdateFunctionOutput {
	s.Command = &v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *UpdateFunctionOutput) SetCreationTime(v string) *UpdateFunctionOutput {
	s.CreationTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *UpdateFunctionOutput) SetDescription(v string) *UpdateFunctionOutput {
	s.Description = &v
	return s
}

// SetEnvs sets the Envs field's value.
func (s *UpdateFunctionOutput) SetEnvs(v []*EnvForUpdateFunctionOutput) *UpdateFunctionOutput {
	s.Envs = v
	return s
}

// SetExclusiveMode sets the ExclusiveMode field's value.
func (s *UpdateFunctionOutput) SetExclusiveMode(v bool) *UpdateFunctionOutput {
	s.ExclusiveMode = &v
	return s
}

// SetId sets the Id field's value.
func (s *UpdateFunctionOutput) SetId(v string) *UpdateFunctionOutput {
	s.Id = &v
	return s
}

// SetInitializerSec sets the InitializerSec field's value.
func (s *UpdateFunctionOutput) SetInitializerSec(v int32) *UpdateFunctionOutput {
	s.InitializerSec = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *UpdateFunctionOutput) SetInstanceType(v string) *UpdateFunctionOutput {
	s.InstanceType = &v
	return s
}

// SetLastUpdateTime sets the LastUpdateTime field's value.
func (s *UpdateFunctionOutput) SetLastUpdateTime(v string) *UpdateFunctionOutput {
	s.LastUpdateTime = &v
	return s
}

// SetMaxConcurrency sets the MaxConcurrency field's value.
func (s *UpdateFunctionOutput) SetMaxConcurrency(v int32) *UpdateFunctionOutput {
	s.MaxConcurrency = &v
	return s
}

// SetMemoryMB sets the MemoryMB field's value.
func (s *UpdateFunctionOutput) SetMemoryMB(v int32) *UpdateFunctionOutput {
	s.MemoryMB = &v
	return s
}

// SetName sets the Name field's value.
func (s *UpdateFunctionOutput) SetName(v string) *UpdateFunctionOutput {
	s.Name = &v
	return s
}

// SetNasStorage sets the NasStorage field's value.
func (s *UpdateFunctionOutput) SetNasStorage(v *NasStorageForUpdateFunctionOutput) *UpdateFunctionOutput {
	s.NasStorage = v
	return s
}

// SetOwner sets the Owner field's value.
func (s *UpdateFunctionOutput) SetOwner(v string) *UpdateFunctionOutput {
	s.Owner = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *UpdateFunctionOutput) SetProjectName(v string) *UpdateFunctionOutput {
	s.ProjectName = &v
	return s
}

// SetRequestTimeout sets the RequestTimeout field's value.
func (s *UpdateFunctionOutput) SetRequestTimeout(v int32) *UpdateFunctionOutput {
	s.RequestTimeout = &v
	return s
}

// SetRuntime sets the Runtime field's value.
func (s *UpdateFunctionOutput) SetRuntime(v string) *UpdateFunctionOutput {
	s.Runtime = &v
	return s
}

// SetSourceLocation sets the SourceLocation field's value.
func (s *UpdateFunctionOutput) SetSourceLocation(v string) *UpdateFunctionOutput {
	s.SourceLocation = &v
	return s
}

// SetSourceType sets the SourceType field's value.
func (s *UpdateFunctionOutput) SetSourceType(v string) *UpdateFunctionOutput {
	s.SourceType = &v
	return s
}

// SetTlsConfig sets the TlsConfig field's value.
func (s *UpdateFunctionOutput) SetTlsConfig(v *TlsConfigForUpdateFunctionOutput) *UpdateFunctionOutput {
	s.TlsConfig = v
	return s
}

// SetTosMountConfig sets the TosMountConfig field's value.
func (s *UpdateFunctionOutput) SetTosMountConfig(v *TosMountConfigForUpdateFunctionOutput) *UpdateFunctionOutput {
	s.TosMountConfig = v
	return s
}

// SetTriggersCount sets the TriggersCount field's value.
func (s *UpdateFunctionOutput) SetTriggersCount(v int32) *UpdateFunctionOutput {
	s.TriggersCount = &v
	return s
}

// SetVpcConfig sets the VpcConfig field's value.
func (s *UpdateFunctionOutput) SetVpcConfig(v *VpcConfigForUpdateFunctionOutput) *UpdateFunctionOutput {
	s.VpcConfig = v
	return s
}

type VpcConfigForUpdateFunctionInput struct {
	_ struct{} `type:"structure"`

	EnableSharedInternetAccess *bool `type:"boolean"`

	EnableVpc *bool `type:"boolean"`

	SecurityGroupIds []*string `type:"list"`

	SubnetIds []*string `type:"list"`

	VpcId *string `type:"string"`
}

// String returns the string representation
func (s VpcConfigForUpdateFunctionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VpcConfigForUpdateFunctionInput) GoString() string {
	return s.String()
}

// SetEnableSharedInternetAccess sets the EnableSharedInternetAccess field's value.
func (s *VpcConfigForUpdateFunctionInput) SetEnableSharedInternetAccess(v bool) *VpcConfigForUpdateFunctionInput {
	s.EnableSharedInternetAccess = &v
	return s
}

// SetEnableVpc sets the EnableVpc field's value.
func (s *VpcConfigForUpdateFunctionInput) SetEnableVpc(v bool) *VpcConfigForUpdateFunctionInput {
	s.EnableVpc = &v
	return s
}

// SetSecurityGroupIds sets the SecurityGroupIds field's value.
func (s *VpcConfigForUpdateFunctionInput) SetSecurityGroupIds(v []*string) *VpcConfigForUpdateFunctionInput {
	s.SecurityGroupIds = v
	return s
}

// SetSubnetIds sets the SubnetIds field's value.
func (s *VpcConfigForUpdateFunctionInput) SetSubnetIds(v []*string) *VpcConfigForUpdateFunctionInput {
	s.SubnetIds = v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *VpcConfigForUpdateFunctionInput) SetVpcId(v string) *VpcConfigForUpdateFunctionInput {
	s.VpcId = &v
	return s
}

type VpcConfigForUpdateFunctionOutput struct {
	_ struct{} `type:"structure"`

	EnableSharedInternetAccess *bool `type:"boolean"`

	EnableVpc *bool `type:"boolean"`

	SecurityGroupIds []*string `type:"list"`

	SubnetIds []*string `type:"list"`

	VpcId *string `type:"string"`
}

// String returns the string representation
func (s VpcConfigForUpdateFunctionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VpcConfigForUpdateFunctionOutput) GoString() string {
	return s.String()
}

// SetEnableSharedInternetAccess sets the EnableSharedInternetAccess field's value.
func (s *VpcConfigForUpdateFunctionOutput) SetEnableSharedInternetAccess(v bool) *VpcConfigForUpdateFunctionOutput {
	s.EnableSharedInternetAccess = &v
	return s
}

// SetEnableVpc sets the EnableVpc field's value.
func (s *VpcConfigForUpdateFunctionOutput) SetEnableVpc(v bool) *VpcConfigForUpdateFunctionOutput {
	s.EnableVpc = &v
	return s
}

// SetSecurityGroupIds sets the SecurityGroupIds field's value.
func (s *VpcConfigForUpdateFunctionOutput) SetSecurityGroupIds(v []*string) *VpcConfigForUpdateFunctionOutput {
	s.SecurityGroupIds = v
	return s
}

// SetSubnetIds sets the SubnetIds field's value.
func (s *VpcConfigForUpdateFunctionOutput) SetSubnetIds(v []*string) *VpcConfigForUpdateFunctionOutput {
	s.SubnetIds = v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *VpcConfigForUpdateFunctionOutput) SetVpcId(v string) *VpcConfigForUpdateFunctionOutput {
	s.VpcId = &v
	return s
}
