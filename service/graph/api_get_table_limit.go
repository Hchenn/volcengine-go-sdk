// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package graph

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetTableLimitCommon = "GetTableLimit"

// GetTableLimitCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetTableLimitCommon operation. The "output" return
// value will be populated with the GetTableLimitCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetTableLimitCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetTableLimitCommon Send returns without error.
//
// See GetTableLimitCommon for more information on using the GetTableLimitCommon
// API call, and error handling.
//
//    // Example sending a request using the GetTableLimitCommonRequest method.
//    req, resp := client.GetTableLimitCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH) GetTableLimitCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetTableLimitCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetTableLimitCommon API operation for GRAPH.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH's
// API operation GetTableLimitCommon for usage and error information.
func (c *GRAPH) GetTableLimitCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetTableLimitCommonRequest(input)
	return out, req.Send()
}

// GetTableLimitCommonWithContext is the same as GetTableLimitCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetTableLimitCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH) GetTableLimitCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetTableLimitCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetTableLimit = "GetTableLimit"

// GetTableLimitRequest generates a "volcengine/request.Request" representing the
// client's request for the GetTableLimit operation. The "output" return
// value will be populated with the GetTableLimitCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetTableLimitCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetTableLimitCommon Send returns without error.
//
// See GetTableLimit for more information on using the GetTableLimit
// API call, and error handling.
//
//    // Example sending a request using the GetTableLimitRequest method.
//    req, resp := client.GetTableLimitRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH) GetTableLimitRequest(input *GetTableLimitInput) (req *request.Request, output *GetTableLimitOutput) {
	op := &request.Operation{
		Name:       opGetTableLimit,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetTableLimitInput{}
	}

	output = &GetTableLimitOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetTableLimit API operation for GRAPH.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH's
// API operation GetTableLimit for usage and error information.
func (c *GRAPH) GetTableLimit(input *GetTableLimitInput) (*GetTableLimitOutput, error) {
	req, out := c.GetTableLimitRequest(input)
	return out, req.Send()
}

// GetTableLimitWithContext is the same as GetTableLimit with the addition of
// the ability to pass a context and additional request options.
//
// See GetTableLimit for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH) GetTableLimitWithContext(ctx volcengine.Context, input *GetTableLimitInput, opts ...request.Option) (*GetTableLimitOutput, error) {
	req, out := c.GetTableLimitRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetTableLimitInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:"instanceId,omitempty" required:"true"`

	// Table is a required field
	Table *string `type:"string" json:"table,omitempty" required:"true"`
}

// String returns the string representation
func (s GetTableLimitInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTableLimitInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetTableLimitInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetTableLimitInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.Table == nil {
		invalidParams.Add(request.NewErrParamRequired("Table"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *GetTableLimitInput) SetInstanceId(v string) *GetTableLimitInput {
	s.InstanceId = &v
	return s
}

// SetTable sets the Table field's value.
func (s *GetTableLimitInput) SetTable(v string) *GetTableLimitInput {
	s.Table = &v
	return s
}

type GetTableLimitOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	TableLimits *TableLimitsForGetTableLimitOutput `type:"structure" json:"tableLimits,omitempty"`
}

// String returns the string representation
func (s GetTableLimitOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTableLimitOutput) GoString() string {
	return s.String()
}

// SetTableLimits sets the TableLimits field's value.
func (s *GetTableLimitOutput) SetTableLimits(v *TableLimitsForGetTableLimitOutput) *GetTableLimitOutput {
	s.TableLimits = v
	return s
}

type Iops_limitForGetTableLimitOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Max *int64 `type:"int64" json:"max,omitempty"`

	Min *int64 `type:"int64" json:"min,omitempty"`
}

// String returns the string representation
func (s Iops_limitForGetTableLimitOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Iops_limitForGetTableLimitOutput) GoString() string {
	return s.String()
}

// SetMax sets the Max field's value.
func (s *Iops_limitForGetTableLimitOutput) SetMax(v int64) *Iops_limitForGetTableLimitOutput {
	s.Max = &v
	return s
}

// SetMin sets the Min field's value.
func (s *Iops_limitForGetTableLimitOutput) SetMin(v int64) *Iops_limitForGetTableLimitOutput {
	s.Min = &v
	return s
}

type Read_bandwidth_limit_in_bytesForGetTableLimitOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Max *int64 `type:"int64" json:"max,omitempty"`

	Min *int64 `type:"int64" json:"min,omitempty"`
}

// String returns the string representation
func (s Read_bandwidth_limit_in_bytesForGetTableLimitOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Read_bandwidth_limit_in_bytesForGetTableLimitOutput) GoString() string {
	return s.String()
}

// SetMax sets the Max field's value.
func (s *Read_bandwidth_limit_in_bytesForGetTableLimitOutput) SetMax(v int64) *Read_bandwidth_limit_in_bytesForGetTableLimitOutput {
	s.Max = &v
	return s
}

// SetMin sets the Min field's value.
func (s *Read_bandwidth_limit_in_bytesForGetTableLimitOutput) SetMin(v int64) *Read_bandwidth_limit_in_bytesForGetTableLimitOutput {
	s.Min = &v
	return s
}

type Storage_capacity_limit_in_bytesForGetTableLimitOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Max *int64 `type:"int64" json:"max,omitempty"`

	Min *int64 `type:"int64" json:"min,omitempty"`
}

// String returns the string representation
func (s Storage_capacity_limit_in_bytesForGetTableLimitOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Storage_capacity_limit_in_bytesForGetTableLimitOutput) GoString() string {
	return s.String()
}

// SetMax sets the Max field's value.
func (s *Storage_capacity_limit_in_bytesForGetTableLimitOutput) SetMax(v int64) *Storage_capacity_limit_in_bytesForGetTableLimitOutput {
	s.Max = &v
	return s
}

// SetMin sets the Min field's value.
func (s *Storage_capacity_limit_in_bytesForGetTableLimitOutput) SetMin(v int64) *Storage_capacity_limit_in_bytesForGetTableLimitOutput {
	s.Min = &v
	return s
}

type TableLimitsForGetTableLimitOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Iops_limit *Iops_limitForGetTableLimitOutput `type:"structure" json:"iops_limit,omitempty"`

	Raw_vdc_replica_num_range *string `type:"string" json:"raw_vdc_replica_num_range,omitempty"`

	Read_bandwidth_limit_in_bytes *Read_bandwidth_limit_in_bytesForGetTableLimitOutput `type:"structure" json:"read_bandwidth_limit_in_bytes,omitempty"`

	Storage_capacity_limit_in_bytes *Storage_capacity_limit_in_bytesForGetTableLimitOutput `type:"structure" json:"storage_capacity_limit_in_bytes,omitempty"`

	Tablet_num_range *Tablet_num_rangeForGetTableLimitOutput `type:"structure" json:"tablet_num_range,omitempty"`

	Vdcs []*string `type:"list" json:"vdcs,omitempty"`

	Write_bandwidth_limit_in_bytes *Write_bandwidth_limit_in_bytesForGetTableLimitOutput `type:"structure" json:"write_bandwidth_limit_in_bytes,omitempty"`
}

// String returns the string representation
func (s TableLimitsForGetTableLimitOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TableLimitsForGetTableLimitOutput) GoString() string {
	return s.String()
}

// SetIops_limit sets the Iops_limit field's value.
func (s *TableLimitsForGetTableLimitOutput) SetIops_limit(v *Iops_limitForGetTableLimitOutput) *TableLimitsForGetTableLimitOutput {
	s.Iops_limit = v
	return s
}

// SetRaw_vdc_replica_num_range sets the Raw_vdc_replica_num_range field's value.
func (s *TableLimitsForGetTableLimitOutput) SetRaw_vdc_replica_num_range(v string) *TableLimitsForGetTableLimitOutput {
	s.Raw_vdc_replica_num_range = &v
	return s
}

// SetRead_bandwidth_limit_in_bytes sets the Read_bandwidth_limit_in_bytes field's value.
func (s *TableLimitsForGetTableLimitOutput) SetRead_bandwidth_limit_in_bytes(v *Read_bandwidth_limit_in_bytesForGetTableLimitOutput) *TableLimitsForGetTableLimitOutput {
	s.Read_bandwidth_limit_in_bytes = v
	return s
}

// SetStorage_capacity_limit_in_bytes sets the Storage_capacity_limit_in_bytes field's value.
func (s *TableLimitsForGetTableLimitOutput) SetStorage_capacity_limit_in_bytes(v *Storage_capacity_limit_in_bytesForGetTableLimitOutput) *TableLimitsForGetTableLimitOutput {
	s.Storage_capacity_limit_in_bytes = v
	return s
}

// SetTablet_num_range sets the Tablet_num_range field's value.
func (s *TableLimitsForGetTableLimitOutput) SetTablet_num_range(v *Tablet_num_rangeForGetTableLimitOutput) *TableLimitsForGetTableLimitOutput {
	s.Tablet_num_range = v
	return s
}

// SetVdcs sets the Vdcs field's value.
func (s *TableLimitsForGetTableLimitOutput) SetVdcs(v []*string) *TableLimitsForGetTableLimitOutput {
	s.Vdcs = v
	return s
}

// SetWrite_bandwidth_limit_in_bytes sets the Write_bandwidth_limit_in_bytes field's value.
func (s *TableLimitsForGetTableLimitOutput) SetWrite_bandwidth_limit_in_bytes(v *Write_bandwidth_limit_in_bytesForGetTableLimitOutput) *TableLimitsForGetTableLimitOutput {
	s.Write_bandwidth_limit_in_bytes = v
	return s
}

type Tablet_num_rangeForGetTableLimitOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Max *int64 `type:"int64" json:"max,omitempty"`

	Min *int64 `type:"int64" json:"min,omitempty"`
}

// String returns the string representation
func (s Tablet_num_rangeForGetTableLimitOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Tablet_num_rangeForGetTableLimitOutput) GoString() string {
	return s.String()
}

// SetMax sets the Max field's value.
func (s *Tablet_num_rangeForGetTableLimitOutput) SetMax(v int64) *Tablet_num_rangeForGetTableLimitOutput {
	s.Max = &v
	return s
}

// SetMin sets the Min field's value.
func (s *Tablet_num_rangeForGetTableLimitOutput) SetMin(v int64) *Tablet_num_rangeForGetTableLimitOutput {
	s.Min = &v
	return s
}

type Write_bandwidth_limit_in_bytesForGetTableLimitOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Max *int64 `type:"int64" json:"max,omitempty"`

	Min *int64 `type:"int64" json:"min,omitempty"`
}

// String returns the string representation
func (s Write_bandwidth_limit_in_bytesForGetTableLimitOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Write_bandwidth_limit_in_bytesForGetTableLimitOutput) GoString() string {
	return s.String()
}

// SetMax sets the Max field's value.
func (s *Write_bandwidth_limit_in_bytesForGetTableLimitOutput) SetMax(v int64) *Write_bandwidth_limit_in_bytesForGetTableLimitOutput {
	s.Max = &v
	return s
}

// SetMin sets the Min field's value.
func (s *Write_bandwidth_limit_in_bytesForGetTableLimitOutput) SetMin(v int64) *Write_bandwidth_limit_in_bytesForGetTableLimitOutput {
	s.Min = &v
	return s
}
