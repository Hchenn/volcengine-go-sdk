// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package graph

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetTableConfigCommon = "GetTableConfig"

// GetTableConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetTableConfigCommon operation. The "output" return
// value will be populated with the GetTableConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetTableConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetTableConfigCommon Send returns without error.
//
// See GetTableConfigCommon for more information on using the GetTableConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the GetTableConfigCommonRequest method.
//    req, resp := client.GetTableConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH) GetTableConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetTableConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetTableConfigCommon API operation for GRAPH.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH's
// API operation GetTableConfigCommon for usage and error information.
func (c *GRAPH) GetTableConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetTableConfigCommonRequest(input)
	return out, req.Send()
}

// GetTableConfigCommonWithContext is the same as GetTableConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetTableConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH) GetTableConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetTableConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetTableConfig = "GetTableConfig"

// GetTableConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the GetTableConfig operation. The "output" return
// value will be populated with the GetTableConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetTableConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetTableConfigCommon Send returns without error.
//
// See GetTableConfig for more information on using the GetTableConfig
// API call, and error handling.
//
//    // Example sending a request using the GetTableConfigRequest method.
//    req, resp := client.GetTableConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH) GetTableConfigRequest(input *GetTableConfigInput) (req *request.Request, output *GetTableConfigOutput) {
	op := &request.Operation{
		Name:       opGetTableConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetTableConfigInput{}
	}

	output = &GetTableConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetTableConfig API operation for GRAPH.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH's
// API operation GetTableConfig for usage and error information.
func (c *GRAPH) GetTableConfig(input *GetTableConfigInput) (*GetTableConfigOutput, error) {
	req, out := c.GetTableConfigRequest(input)
	return out, req.Send()
}

// GetTableConfigWithContext is the same as GetTableConfig with the addition of
// the ability to pass a context and additional request options.
//
// See GetTableConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH) GetTableConfigWithContext(ctx volcengine.Context, input *GetTableConfigInput, opts ...request.Option) (*GetTableConfigOutput, error) {
	req, out := c.GetTableConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetTableConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:"instanceId,omitempty" required:"true"`

	// Table is a required field
	Table *string `type:"string" json:"table,omitempty" required:"true"`
}

// String returns the string representation
func (s GetTableConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTableConfigInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetTableConfigInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetTableConfigInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.Table == nil {
		invalidParams.Add(request.NewErrParamRequired("Table"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *GetTableConfigInput) SetInstanceId(v string) *GetTableConfigInput {
	s.InstanceId = &v
	return s
}

// SetTable sets the Table field's value.
func (s *GetTableConfigInput) SetTable(v string) *GetTableConfigInput {
	s.Table = &v
	return s
}

type GetTableConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	TableConfig *TableConfigForGetTableConfigOutput `type:"structure" json:"tableConfig,omitempty"`
}

// String returns the string representation
func (s GetTableConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTableConfigOutput) GoString() string {
	return s.String()
}

// SetTableConfig sets the TableConfig field's value.
func (s *GetTableConfigOutput) SetTableConfig(v *TableConfigForGetTableConfigOutput) *GetTableConfigOutput {
	s.TableConfig = v
	return s
}

type TableConfigForGetTableConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enable_rotate *bool `type:"boolean" json:"enable_rotate,omitempty"`

	Enable_transaction *bool `type:"boolean" json:"enable_transaction,omitempty"`

	Rotate_size *int64 `type:"int64" json:"rotate_size,omitempty"`
}

// String returns the string representation
func (s TableConfigForGetTableConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TableConfigForGetTableConfigOutput) GoString() string {
	return s.String()
}

// SetEnable_rotate sets the Enable_rotate field's value.
func (s *TableConfigForGetTableConfigOutput) SetEnable_rotate(v bool) *TableConfigForGetTableConfigOutput {
	s.Enable_rotate = &v
	return s
}

// SetEnable_transaction sets the Enable_transaction field's value.
func (s *TableConfigForGetTableConfigOutput) SetEnable_transaction(v bool) *TableConfigForGetTableConfigOutput {
	s.Enable_transaction = &v
	return s
}

// SetRotate_size sets the Rotate_size field's value.
func (s *TableConfigForGetTableConfigOutput) SetRotate_size(v int64) *TableConfigForGetTableConfigOutput {
	s.Rotate_size = &v
	return s
}
