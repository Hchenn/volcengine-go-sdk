// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package graph

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetTableIOQosOptionsCommon = "GetTableIOQosOptions"

// GetTableIOQosOptionsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetTableIOQosOptionsCommon operation. The "output" return
// value will be populated with the GetTableIOQosOptionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetTableIOQosOptionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetTableIOQosOptionsCommon Send returns without error.
//
// See GetTableIOQosOptionsCommon for more information on using the GetTableIOQosOptionsCommon
// API call, and error handling.
//
//    // Example sending a request using the GetTableIOQosOptionsCommonRequest method.
//    req, resp := client.GetTableIOQosOptionsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH) GetTableIOQosOptionsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetTableIOQosOptionsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetTableIOQosOptionsCommon API operation for GRAPH.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH's
// API operation GetTableIOQosOptionsCommon for usage and error information.
func (c *GRAPH) GetTableIOQosOptionsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetTableIOQosOptionsCommonRequest(input)
	return out, req.Send()
}

// GetTableIOQosOptionsCommonWithContext is the same as GetTableIOQosOptionsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetTableIOQosOptionsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH) GetTableIOQosOptionsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetTableIOQosOptionsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetTableIOQosOptions = "GetTableIOQosOptions"

// GetTableIOQosOptionsRequest generates a "volcengine/request.Request" representing the
// client's request for the GetTableIOQosOptions operation. The "output" return
// value will be populated with the GetTableIOQosOptionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetTableIOQosOptionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetTableIOQosOptionsCommon Send returns without error.
//
// See GetTableIOQosOptions for more information on using the GetTableIOQosOptions
// API call, and error handling.
//
//    // Example sending a request using the GetTableIOQosOptionsRequest method.
//    req, resp := client.GetTableIOQosOptionsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH) GetTableIOQosOptionsRequest(input *GetTableIOQosOptionsInput) (req *request.Request, output *GetTableIOQosOptionsOutput) {
	op := &request.Operation{
		Name:       opGetTableIOQosOptions,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetTableIOQosOptionsInput{}
	}

	output = &GetTableIOQosOptionsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetTableIOQosOptions API operation for GRAPH.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH's
// API operation GetTableIOQosOptions for usage and error information.
func (c *GRAPH) GetTableIOQosOptions(input *GetTableIOQosOptionsInput) (*GetTableIOQosOptionsOutput, error) {
	req, out := c.GetTableIOQosOptionsRequest(input)
	return out, req.Send()
}

// GetTableIOQosOptionsWithContext is the same as GetTableIOQosOptions with the addition of
// the ability to pass a context and additional request options.
//
// See GetTableIOQosOptions for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH) GetTableIOQosOptionsWithContext(ctx volcengine.Context, input *GetTableIOQosOptionsInput, opts ...request.Option) (*GetTableIOQosOptionsOutput, error) {
	req, out := c.GetTableIOQosOptionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetTableIOQosOptionsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:"instanceId,omitempty" required:"true"`

	// Table is a required field
	Table *string `type:"string" json:"table,omitempty" required:"true"`
}

// String returns the string representation
func (s GetTableIOQosOptionsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTableIOQosOptionsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetTableIOQosOptionsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetTableIOQosOptionsInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.Table == nil {
		invalidParams.Add(request.NewErrParamRequired("Table"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *GetTableIOQosOptionsInput) SetInstanceId(v string) *GetTableIOQosOptionsInput {
	s.InstanceId = &v
	return s
}

// SetTable sets the Table field's value.
func (s *GetTableIOQosOptionsInput) SetTable(v string) *GetTableIOQosOptionsInput {
	s.Table = &v
	return s
}

type GetTableIOQosOptionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	IoQosOptions *IoQosOptionsForGetTableIOQosOptionsOutput `type:"structure" json:"ioQosOptions,omitempty"`
}

// String returns the string representation
func (s GetTableIOQosOptionsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTableIOQosOptionsOutput) GoString() string {
	return s.String()
}

// SetIoQosOptions sets the IoQosOptions field's value.
func (s *GetTableIOQosOptionsOutput) SetIoQosOptions(v *IoQosOptionsForGetTableIOQosOptionsOutput) *GetTableIOQosOptionsOutput {
	s.IoQosOptions = v
	return s
}

type IoQosOptionsForGetTableIOQosOptionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Iops_limit *int64 `type:"int64" json:"iops_limit,omitempty"`

	Read_bandwidth_limit_in_bytes *int64 `type:"int64" json:"read_bandwidth_limit_in_bytes,omitempty"`

	Storage_capacity_limit_in_bytes *int64 `type:"int64" json:"storage_capacity_limit_in_bytes,omitempty"`

	Write_bandwidth_limit_in_bytes *int64 `type:"int64" json:"write_bandwidth_limit_in_bytes,omitempty"`
}

// String returns the string representation
func (s IoQosOptionsForGetTableIOQosOptionsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s IoQosOptionsForGetTableIOQosOptionsOutput) GoString() string {
	return s.String()
}

// SetIops_limit sets the Iops_limit field's value.
func (s *IoQosOptionsForGetTableIOQosOptionsOutput) SetIops_limit(v int64) *IoQosOptionsForGetTableIOQosOptionsOutput {
	s.Iops_limit = &v
	return s
}

// SetRead_bandwidth_limit_in_bytes sets the Read_bandwidth_limit_in_bytes field's value.
func (s *IoQosOptionsForGetTableIOQosOptionsOutput) SetRead_bandwidth_limit_in_bytes(v int64) *IoQosOptionsForGetTableIOQosOptionsOutput {
	s.Read_bandwidth_limit_in_bytes = &v
	return s
}

// SetStorage_capacity_limit_in_bytes sets the Storage_capacity_limit_in_bytes field's value.
func (s *IoQosOptionsForGetTableIOQosOptionsOutput) SetStorage_capacity_limit_in_bytes(v int64) *IoQosOptionsForGetTableIOQosOptionsOutput {
	s.Storage_capacity_limit_in_bytes = &v
	return s
}

// SetWrite_bandwidth_limit_in_bytes sets the Write_bandwidth_limit_in_bytes field's value.
func (s *IoQosOptionsForGetTableIOQosOptionsOutput) SetWrite_bandwidth_limit_in_bytes(v int64) *IoQosOptionsForGetTableIOQosOptionsOutput {
	s.Write_bandwidth_limit_in_bytes = &v
	return s
}
