// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package graph

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetTableSchemaCommon = "GetTableSchema"

// GetTableSchemaCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetTableSchemaCommon operation. The "output" return
// value will be populated with the GetTableSchemaCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetTableSchemaCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetTableSchemaCommon Send returns without error.
//
// See GetTableSchemaCommon for more information on using the GetTableSchemaCommon
// API call, and error handling.
//
//    // Example sending a request using the GetTableSchemaCommonRequest method.
//    req, resp := client.GetTableSchemaCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH) GetTableSchemaCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetTableSchemaCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetTableSchemaCommon API operation for GRAPH.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH's
// API operation GetTableSchemaCommon for usage and error information.
func (c *GRAPH) GetTableSchemaCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetTableSchemaCommonRequest(input)
	return out, req.Send()
}

// GetTableSchemaCommonWithContext is the same as GetTableSchemaCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetTableSchemaCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH) GetTableSchemaCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetTableSchemaCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetTableSchema = "GetTableSchema"

// GetTableSchemaRequest generates a "volcengine/request.Request" representing the
// client's request for the GetTableSchema operation. The "output" return
// value will be populated with the GetTableSchemaCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetTableSchemaCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetTableSchemaCommon Send returns without error.
//
// See GetTableSchema for more information on using the GetTableSchema
// API call, and error handling.
//
//    // Example sending a request using the GetTableSchemaRequest method.
//    req, resp := client.GetTableSchemaRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH) GetTableSchemaRequest(input *GetTableSchemaInput) (req *request.Request, output *GetTableSchemaOutput) {
	op := &request.Operation{
		Name:       opGetTableSchema,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetTableSchemaInput{}
	}

	output = &GetTableSchemaOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetTableSchema API operation for GRAPH.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH's
// API operation GetTableSchema for usage and error information.
func (c *GRAPH) GetTableSchema(input *GetTableSchemaInput) (*GetTableSchemaOutput, error) {
	req, out := c.GetTableSchemaRequest(input)
	return out, req.Send()
}

// GetTableSchemaWithContext is the same as GetTableSchema with the addition of
// the ability to pass a context and additional request options.
//
// See GetTableSchema for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH) GetTableSchemaWithContext(ctx volcengine.Context, input *GetTableSchemaInput, opts ...request.Option) (*GetTableSchemaOutput, error) {
	req, out := c.GetTableSchemaRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ColumnForGetTableSchemaOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Column_name *string `type:"string" json:"column_name,omitempty"`

	Default_value *string `type:"string" json:"default_value,omitempty"`

	Enable_default_value *bool `type:"boolean" json:"enable_default_value,omitempty"`

	Schema_column_type *string `type:"string" json:"schema_column_type,omitempty"`
}

// String returns the string representation
func (s ColumnForGetTableSchemaOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ColumnForGetTableSchemaOutput) GoString() string {
	return s.String()
}

// SetColumn_name sets the Column_name field's value.
func (s *ColumnForGetTableSchemaOutput) SetColumn_name(v string) *ColumnForGetTableSchemaOutput {
	s.Column_name = &v
	return s
}

// SetDefault_value sets the Default_value field's value.
func (s *ColumnForGetTableSchemaOutput) SetDefault_value(v string) *ColumnForGetTableSchemaOutput {
	s.Default_value = &v
	return s
}

// SetEnable_default_value sets the Enable_default_value field's value.
func (s *ColumnForGetTableSchemaOutput) SetEnable_default_value(v bool) *ColumnForGetTableSchemaOutput {
	s.Enable_default_value = &v
	return s
}

// SetSchema_column_type sets the Schema_column_type field's value.
func (s *ColumnForGetTableSchemaOutput) SetSchema_column_type(v string) *ColumnForGetTableSchemaOutput {
	s.Schema_column_type = &v
	return s
}

type EdgeForGetTableSchemaOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Columns []*ColumnForGetTableSchemaOutput `type:"list" json:"columns,omitempty"`

	Enable_reverse_index *bool `type:"boolean" json:"enable_reverse_index,omitempty"`

	Label *string `type:"string" json:"label,omitempty"`

	Primary_key []*string `type:"list" json:"primary_key,omitempty"`

	Schema_label_type *string `type:"string" json:"schema_label_type,omitempty"`

	Secondary_indices []*Secondary_indexForGetTableSchemaOutput `type:"list" json:"secondary_indices,omitempty"`

	Uniq_index []*Uniq_indexForGetTableSchemaOutput `type:"list" json:"uniq_index,omitempty"`

	Vertex_constraint *Vertex_constraintForGetTableSchemaOutput `type:"structure" json:"vertex_constraint,omitempty"`
}

// String returns the string representation
func (s EdgeForGetTableSchemaOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EdgeForGetTableSchemaOutput) GoString() string {
	return s.String()
}

// SetColumns sets the Columns field's value.
func (s *EdgeForGetTableSchemaOutput) SetColumns(v []*ColumnForGetTableSchemaOutput) *EdgeForGetTableSchemaOutput {
	s.Columns = v
	return s
}

// SetEnable_reverse_index sets the Enable_reverse_index field's value.
func (s *EdgeForGetTableSchemaOutput) SetEnable_reverse_index(v bool) *EdgeForGetTableSchemaOutput {
	s.Enable_reverse_index = &v
	return s
}

// SetLabel sets the Label field's value.
func (s *EdgeForGetTableSchemaOutput) SetLabel(v string) *EdgeForGetTableSchemaOutput {
	s.Label = &v
	return s
}

// SetPrimary_key sets the Primary_key field's value.
func (s *EdgeForGetTableSchemaOutput) SetPrimary_key(v []*string) *EdgeForGetTableSchemaOutput {
	s.Primary_key = v
	return s
}

// SetSchema_label_type sets the Schema_label_type field's value.
func (s *EdgeForGetTableSchemaOutput) SetSchema_label_type(v string) *EdgeForGetTableSchemaOutput {
	s.Schema_label_type = &v
	return s
}

// SetSecondary_indices sets the Secondary_indices field's value.
func (s *EdgeForGetTableSchemaOutput) SetSecondary_indices(v []*Secondary_indexForGetTableSchemaOutput) *EdgeForGetTableSchemaOutput {
	s.Secondary_indices = v
	return s
}

// SetUniq_index sets the Uniq_index field's value.
func (s *EdgeForGetTableSchemaOutput) SetUniq_index(v []*Uniq_indexForGetTableSchemaOutput) *EdgeForGetTableSchemaOutput {
	s.Uniq_index = v
	return s
}

// SetVertex_constraint sets the Vertex_constraint field's value.
func (s *EdgeForGetTableSchemaOutput) SetVertex_constraint(v *Vertex_constraintForGetTableSchemaOutput) *EdgeForGetTableSchemaOutput {
	s.Vertex_constraint = v
	return s
}

type GetTableSchemaInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:"instanceId,omitempty" required:"true"`

	// Table is a required field
	Table *string `type:"string" json:"table,omitempty" required:"true"`
}

// String returns the string representation
func (s GetTableSchemaInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTableSchemaInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetTableSchemaInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetTableSchemaInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.Table == nil {
		invalidParams.Add(request.NewErrParamRequired("Table"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *GetTableSchemaInput) SetInstanceId(v string) *GetTableSchemaInput {
	s.InstanceId = &v
	return s
}

// SetTable sets the Table field's value.
func (s *GetTableSchemaInput) SetTable(v string) *GetTableSchemaInput {
	s.Table = &v
	return s
}

type GetTableSchemaOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	TableSchema *TableSchemaForGetTableSchemaOutput `type:"structure" json:"tableSchema,omitempty"`
}

// String returns the string representation
func (s GetTableSchemaOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTableSchemaOutput) GoString() string {
	return s.String()
}

// SetTableSchema sets the TableSchema field's value.
func (s *GetTableSchemaOutput) SetTableSchema(v *TableSchemaForGetTableSchemaOutput) *GetTableSchemaOutput {
	s.TableSchema = v
	return s
}

type Secondary_indexForGetTableSchemaOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Column_names []*string `type:"list" json:"column_names,omitempty"`

	Is_covering_index *bool `type:"boolean" json:"is_covering_index,omitempty"`

	Is_unique_index *bool `type:"boolean" json:"is_unique_index,omitempty"`
}

// String returns the string representation
func (s Secondary_indexForGetTableSchemaOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Secondary_indexForGetTableSchemaOutput) GoString() string {
	return s.String()
}

// SetColumn_names sets the Column_names field's value.
func (s *Secondary_indexForGetTableSchemaOutput) SetColumn_names(v []*string) *Secondary_indexForGetTableSchemaOutput {
	s.Column_names = v
	return s
}

// SetIs_covering_index sets the Is_covering_index field's value.
func (s *Secondary_indexForGetTableSchemaOutput) SetIs_covering_index(v bool) *Secondary_indexForGetTableSchemaOutput {
	s.Is_covering_index = &v
	return s
}

// SetIs_unique_index sets the Is_unique_index field's value.
func (s *Secondary_indexForGetTableSchemaOutput) SetIs_unique_index(v bool) *Secondary_indexForGetTableSchemaOutput {
	s.Is_unique_index = &v
	return s
}

type TableSchemaForGetTableSchemaOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Edges []*EdgeForGetTableSchemaOutput `type:"list" json:"edges,omitempty"`

	Table_name *string `type:"string" json:"table_name,omitempty"`

	Version *int64 `type:"int64" json:"version,omitempty"`

	Vertexes []*VertexForGetTableSchemaOutput `type:"list" json:"vertexes,omitempty"`
}

// String returns the string representation
func (s TableSchemaForGetTableSchemaOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TableSchemaForGetTableSchemaOutput) GoString() string {
	return s.String()
}

// SetEdges sets the Edges field's value.
func (s *TableSchemaForGetTableSchemaOutput) SetEdges(v []*EdgeForGetTableSchemaOutput) *TableSchemaForGetTableSchemaOutput {
	s.Edges = v
	return s
}

// SetTable_name sets the Table_name field's value.
func (s *TableSchemaForGetTableSchemaOutput) SetTable_name(v string) *TableSchemaForGetTableSchemaOutput {
	s.Table_name = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *TableSchemaForGetTableSchemaOutput) SetVersion(v int64) *TableSchemaForGetTableSchemaOutput {
	s.Version = &v
	return s
}

// SetVertexes sets the Vertexes field's value.
func (s *TableSchemaForGetTableSchemaOutput) SetVertexes(v []*VertexForGetTableSchemaOutput) *TableSchemaForGetTableSchemaOutput {
	s.Vertexes = v
	return s
}

type Uniq_indexForGetTableSchemaOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Values []*string `type:"list" json:"values,omitempty"`
}

// String returns the string representation
func (s Uniq_indexForGetTableSchemaOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Uniq_indexForGetTableSchemaOutput) GoString() string {
	return s.String()
}

// SetValues sets the Values field's value.
func (s *Uniq_indexForGetTableSchemaOutput) SetValues(v []*string) *Uniq_indexForGetTableSchemaOutput {
	s.Values = v
	return s
}

type VertexForGetTableSchemaOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Columns []*ColumnForGetTableSchemaOutput `type:"list" json:"columns,omitempty"`

	Label *string `type:"string" json:"label,omitempty"`

	Primary_key []*string `type:"list" json:"primary_key,omitempty"`

	Schema_label_type *string `type:"string" json:"schema_label_type,omitempty"`

	Secondary_indices []*Secondary_indexForGetTableSchemaOutput `type:"list" json:"secondary_indices,omitempty"`

	Uniq_index []*Uniq_indexForGetTableSchemaOutput `type:"list" json:"uniq_index,omitempty"`
}

// String returns the string representation
func (s VertexForGetTableSchemaOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VertexForGetTableSchemaOutput) GoString() string {
	return s.String()
}

// SetColumns sets the Columns field's value.
func (s *VertexForGetTableSchemaOutput) SetColumns(v []*ColumnForGetTableSchemaOutput) *VertexForGetTableSchemaOutput {
	s.Columns = v
	return s
}

// SetLabel sets the Label field's value.
func (s *VertexForGetTableSchemaOutput) SetLabel(v string) *VertexForGetTableSchemaOutput {
	s.Label = &v
	return s
}

// SetPrimary_key sets the Primary_key field's value.
func (s *VertexForGetTableSchemaOutput) SetPrimary_key(v []*string) *VertexForGetTableSchemaOutput {
	s.Primary_key = v
	return s
}

// SetSchema_label_type sets the Schema_label_type field's value.
func (s *VertexForGetTableSchemaOutput) SetSchema_label_type(v string) *VertexForGetTableSchemaOutput {
	s.Schema_label_type = &v
	return s
}

// SetSecondary_indices sets the Secondary_indices field's value.
func (s *VertexForGetTableSchemaOutput) SetSecondary_indices(v []*Secondary_indexForGetTableSchemaOutput) *VertexForGetTableSchemaOutput {
	s.Secondary_indices = v
	return s
}

// SetUniq_index sets the Uniq_index field's value.
func (s *VertexForGetTableSchemaOutput) SetUniq_index(v []*Uniq_indexForGetTableSchemaOutput) *VertexForGetTableSchemaOutput {
	s.Uniq_index = v
	return s
}

type Vertex_constraintForGetTableSchemaOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Primary_key_columns []*ColumnForGetTableSchemaOutput `locationName:"primary_key_columns" type:"list" json:",omitempty"`

	Schema_label_type *string `type:"string" json:"schema_label_type,omitempty"`
}

// String returns the string representation
func (s Vertex_constraintForGetTableSchemaOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Vertex_constraintForGetTableSchemaOutput) GoString() string {
	return s.String()
}

// SetPrimary_key_columns sets the Primary_key_columns field's value.
func (s *Vertex_constraintForGetTableSchemaOutput) SetPrimary_key_columns(v []*ColumnForGetTableSchemaOutput) *Vertex_constraintForGetTableSchemaOutput {
	s.Primary_key_columns = v
	return s
}

// SetSchema_label_type sets the Schema_label_type field's value.
func (s *Vertex_constraintForGetTableSchemaOutput) SetSchema_label_type(v string) *Vertex_constraintForGetTableSchemaOutput {
	s.Schema_label_type = &v
	return s
}
