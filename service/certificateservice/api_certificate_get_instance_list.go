// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package certificateservice

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCertificateGetInstanceListCommon = "CertificateGetInstanceList"

// CertificateGetInstanceListCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CertificateGetInstanceListCommon operation. The "output" return
// value will be populated with the CertificateGetInstanceListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CertificateGetInstanceListCommon Request to send the API call to the service.
// the "output" return value is not valid until after CertificateGetInstanceListCommon Send returns without error.
//
// See CertificateGetInstanceListCommon for more information on using the CertificateGetInstanceListCommon
// API call, and error handling.
//
//    // Example sending a request using the CertificateGetInstanceListCommonRequest method.
//    req, resp := client.CertificateGetInstanceListCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CERTIFICATESERVICE) CertificateGetInstanceListCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCertificateGetInstanceListCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CertificateGetInstanceListCommon API operation for CERTIFICATE_SERVICE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CERTIFICATE_SERVICE's
// API operation CertificateGetInstanceListCommon for usage and error information.
func (c *CERTIFICATESERVICE) CertificateGetInstanceListCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CertificateGetInstanceListCommonRequest(input)
	return out, req.Send()
}

// CertificateGetInstanceListCommonWithContext is the same as CertificateGetInstanceListCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CertificateGetInstanceListCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CERTIFICATESERVICE) CertificateGetInstanceListCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CertificateGetInstanceListCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCertificateGetInstanceList = "CertificateGetInstanceList"

// CertificateGetInstanceListRequest generates a "volcengine/request.Request" representing the
// client's request for the CertificateGetInstanceList operation. The "output" return
// value will be populated with the CertificateGetInstanceListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CertificateGetInstanceListCommon Request to send the API call to the service.
// the "output" return value is not valid until after CertificateGetInstanceListCommon Send returns without error.
//
// See CertificateGetInstanceList for more information on using the CertificateGetInstanceList
// API call, and error handling.
//
//    // Example sending a request using the CertificateGetInstanceListRequest method.
//    req, resp := client.CertificateGetInstanceListRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CERTIFICATESERVICE) CertificateGetInstanceListRequest(input *CertificateGetInstanceListInput) (req *request.Request, output *CertificateGetInstanceListOutput) {
	op := &request.Operation{
		Name:       opCertificateGetInstanceList,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CertificateGetInstanceListInput{}
	}

	output = &CertificateGetInstanceListOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CertificateGetInstanceList API operation for CERTIFICATE_SERVICE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CERTIFICATE_SERVICE's
// API operation CertificateGetInstanceList for usage and error information.
func (c *CERTIFICATESERVICE) CertificateGetInstanceList(input *CertificateGetInstanceListInput) (*CertificateGetInstanceListOutput, error) {
	req, out := c.CertificateGetInstanceListRequest(input)
	return out, req.Send()
}

// CertificateGetInstanceListWithContext is the same as CertificateGetInstanceList with the addition of
// the ability to pass a context and additional request options.
//
// See CertificateGetInstanceList for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CERTIFICATESERVICE) CertificateGetInstanceListWithContext(ctx volcengine.Context, input *CertificateGetInstanceListInput, opts ...request.Option) (*CertificateGetInstanceListOutput, error) {
	req, out := c.CertificateGetInstanceListRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CertificateGetInstanceListInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CertificateExpireAfter *string `type:"string" json:",omitempty"`

	CertificateExpireBefore *string `type:"string" json:",omitempty"`

	CommonName *string `type:"string" json:",omitempty"`

	Domain *string `type:"string" json:",omitempty"`

	InstanceIds []*string `type:"list" json:",omitempty"`

	InstanceType *string `type:"string" json:",omitempty" enum:"EnumOfInstanceTypeForCertificateGetInstanceListInput"`

	IsRevoked *bool `type:"boolean" json:",omitempty"`

	IsValid *bool `type:"boolean" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	Status []*string `type:"list" json:",omitempty"`

	Tag *string `type:"string" json:",omitempty"`

	TagFilters []*TagFilterForCertificateGetInstanceListInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s CertificateGetInstanceListInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CertificateGetInstanceListInput) GoString() string {
	return s.String()
}

// SetCertificateExpireAfter sets the CertificateExpireAfter field's value.
func (s *CertificateGetInstanceListInput) SetCertificateExpireAfter(v string) *CertificateGetInstanceListInput {
	s.CertificateExpireAfter = &v
	return s
}

// SetCertificateExpireBefore sets the CertificateExpireBefore field's value.
func (s *CertificateGetInstanceListInput) SetCertificateExpireBefore(v string) *CertificateGetInstanceListInput {
	s.CertificateExpireBefore = &v
	return s
}

// SetCommonName sets the CommonName field's value.
func (s *CertificateGetInstanceListInput) SetCommonName(v string) *CertificateGetInstanceListInput {
	s.CommonName = &v
	return s
}

// SetDomain sets the Domain field's value.
func (s *CertificateGetInstanceListInput) SetDomain(v string) *CertificateGetInstanceListInput {
	s.Domain = &v
	return s
}

// SetInstanceIds sets the InstanceIds field's value.
func (s *CertificateGetInstanceListInput) SetInstanceIds(v []*string) *CertificateGetInstanceListInput {
	s.InstanceIds = v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *CertificateGetInstanceListInput) SetInstanceType(v string) *CertificateGetInstanceListInput {
	s.InstanceType = &v
	return s
}

// SetIsRevoked sets the IsRevoked field's value.
func (s *CertificateGetInstanceListInput) SetIsRevoked(v bool) *CertificateGetInstanceListInput {
	s.IsRevoked = &v
	return s
}

// SetIsValid sets the IsValid field's value.
func (s *CertificateGetInstanceListInput) SetIsValid(v bool) *CertificateGetInstanceListInput {
	s.IsValid = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *CertificateGetInstanceListInput) SetPageNumber(v int32) *CertificateGetInstanceListInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *CertificateGetInstanceListInput) SetPageSize(v int32) *CertificateGetInstanceListInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *CertificateGetInstanceListInput) SetProjectName(v string) *CertificateGetInstanceListInput {
	s.ProjectName = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *CertificateGetInstanceListInput) SetStatus(v []*string) *CertificateGetInstanceListInput {
	s.Status = v
	return s
}

// SetTag sets the Tag field's value.
func (s *CertificateGetInstanceListInput) SetTag(v string) *CertificateGetInstanceListInput {
	s.Tag = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *CertificateGetInstanceListInput) SetTagFilters(v []*TagFilterForCertificateGetInstanceListInput) *CertificateGetInstanceListInput {
	s.TagFilters = v
	return s
}

type CertificateGetInstanceListOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Instances []*InstanceForCertificateGetInstanceListOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s CertificateGetInstanceListOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CertificateGetInstanceListOutput) GoString() string {
	return s.String()
}

// SetInstances sets the Instances field's value.
func (s *CertificateGetInstanceListOutput) SetInstances(v []*InstanceForCertificateGetInstanceListOutput) *CertificateGetInstanceListOutput {
	s.Instances = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *CertificateGetInstanceListOutput) SetPageNumber(v int32) *CertificateGetInstanceListOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *CertificateGetInstanceListOutput) SetPageSize(v int32) *CertificateGetInstanceListOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *CertificateGetInstanceListOutput) SetTotalCount(v int32) *CertificateGetInstanceListOutput {
	s.TotalCount = &v
	return s
}

type InstanceForCertificateGetInstanceListOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountId *string `type:"string" json:",omitempty"`

	CertificateDomainType *string `type:"string" json:",omitempty"`

	CertificateKeyAlgorithm *string `type:"string" json:",omitempty"`

	CommonName *string `type:"string" json:",omitempty"`

	CreatedTime *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceLevel *string `type:"string" json:",omitempty"`

	InstanceType *string `type:"string" json:",omitempty"`

	IsCertificateRevoked *bool `type:"boolean" json:",omitempty"`

	IsCertificateSm *bool `type:"boolean" json:",omitempty"`

	Issuer *string `type:"string" json:",omitempty"`

	NotAfter *string `type:"string" json:",omitempty"`

	NotBefore *string `type:"string" json:",omitempty"`

	OrderBrand *string `type:"string" json:",omitempty"`

	OrderPeriod *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	San []*string `type:"list" json:",omitempty"`

	SourceId *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	Tag *string `type:"string" json:",omitempty"`

	Tags []*TagForCertificateGetInstanceListOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s InstanceForCertificateGetInstanceListOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceForCertificateGetInstanceListOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetAccountId(v string) *InstanceForCertificateGetInstanceListOutput {
	s.AccountId = &v
	return s
}

// SetCertificateDomainType sets the CertificateDomainType field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetCertificateDomainType(v string) *InstanceForCertificateGetInstanceListOutput {
	s.CertificateDomainType = &v
	return s
}

// SetCertificateKeyAlgorithm sets the CertificateKeyAlgorithm field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetCertificateKeyAlgorithm(v string) *InstanceForCertificateGetInstanceListOutput {
	s.CertificateKeyAlgorithm = &v
	return s
}

// SetCommonName sets the CommonName field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetCommonName(v string) *InstanceForCertificateGetInstanceListOutput {
	s.CommonName = &v
	return s
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetCreatedTime(v string) *InstanceForCertificateGetInstanceListOutput {
	s.CreatedTime = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetInstanceId(v string) *InstanceForCertificateGetInstanceListOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceLevel sets the InstanceLevel field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetInstanceLevel(v string) *InstanceForCertificateGetInstanceListOutput {
	s.InstanceLevel = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetInstanceType(v string) *InstanceForCertificateGetInstanceListOutput {
	s.InstanceType = &v
	return s
}

// SetIsCertificateRevoked sets the IsCertificateRevoked field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetIsCertificateRevoked(v bool) *InstanceForCertificateGetInstanceListOutput {
	s.IsCertificateRevoked = &v
	return s
}

// SetIsCertificateSm sets the IsCertificateSm field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetIsCertificateSm(v bool) *InstanceForCertificateGetInstanceListOutput {
	s.IsCertificateSm = &v
	return s
}

// SetIssuer sets the Issuer field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetIssuer(v string) *InstanceForCertificateGetInstanceListOutput {
	s.Issuer = &v
	return s
}

// SetNotAfter sets the NotAfter field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetNotAfter(v string) *InstanceForCertificateGetInstanceListOutput {
	s.NotAfter = &v
	return s
}

// SetNotBefore sets the NotBefore field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetNotBefore(v string) *InstanceForCertificateGetInstanceListOutput {
	s.NotBefore = &v
	return s
}

// SetOrderBrand sets the OrderBrand field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetOrderBrand(v string) *InstanceForCertificateGetInstanceListOutput {
	s.OrderBrand = &v
	return s
}

// SetOrderPeriod sets the OrderPeriod field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetOrderPeriod(v int32) *InstanceForCertificateGetInstanceListOutput {
	s.OrderPeriod = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetProjectName(v string) *InstanceForCertificateGetInstanceListOutput {
	s.ProjectName = &v
	return s
}

// SetSan sets the San field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetSan(v []*string) *InstanceForCertificateGetInstanceListOutput {
	s.San = v
	return s
}

// SetSourceId sets the SourceId field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetSourceId(v string) *InstanceForCertificateGetInstanceListOutput {
	s.SourceId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetStatus(v string) *InstanceForCertificateGetInstanceListOutput {
	s.Status = &v
	return s
}

// SetTag sets the Tag field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetTag(v string) *InstanceForCertificateGetInstanceListOutput {
	s.Tag = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *InstanceForCertificateGetInstanceListOutput) SetTags(v []*TagForCertificateGetInstanceListOutput) *InstanceForCertificateGetInstanceListOutput {
	s.Tags = v
	return s
}

type TagFilterForCertificateGetInstanceListInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Values []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s TagFilterForCertificateGetInstanceListInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForCertificateGetInstanceListInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForCertificateGetInstanceListInput) SetKey(v string) *TagFilterForCertificateGetInstanceListInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagFilterForCertificateGetInstanceListInput) SetValues(v []*string) *TagFilterForCertificateGetInstanceListInput {
	s.Values = v
	return s
}

type TagForCertificateGetInstanceListOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForCertificateGetInstanceListOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForCertificateGetInstanceListOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForCertificateGetInstanceListOutput) SetKey(v string) *TagForCertificateGetInstanceListOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForCertificateGetInstanceListOutput) SetValue(v string) *TagForCertificateGetInstanceListOutput {
	s.Value = &v
	return s
}

const (
	// EnumOfInstanceTypeForCertificateGetInstanceListInputFree is a EnumOfInstanceTypeForCertificateGetInstanceListInput enum value
	EnumOfInstanceTypeForCertificateGetInstanceListInputFree = "Free"

	// EnumOfInstanceTypeForCertificateGetInstanceListInputTest is a EnumOfInstanceTypeForCertificateGetInstanceListInput enum value
	EnumOfInstanceTypeForCertificateGetInstanceListInputTest = "Test"

	// EnumOfInstanceTypeForCertificateGetInstanceListInputPaid is a EnumOfInstanceTypeForCertificateGetInstanceListInput enum value
	EnumOfInstanceTypeForCertificateGetInstanceListInputPaid = "Paid"

	// EnumOfInstanceTypeForCertificateGetInstanceListInputImported is a EnumOfInstanceTypeForCertificateGetInstanceListInput enum value
	EnumOfInstanceTypeForCertificateGetInstanceListInputImported = "Imported"
)

const (
	// EnumOfStatusListForCertificateGetInstanceListInputNotSubmitted is a EnumOfStatusListForCertificateGetInstanceListInput enum value
	EnumOfStatusListForCertificateGetInstanceListInputNotSubmitted = "NotSubmitted"

	// EnumOfStatusListForCertificateGetInstanceListInputPending is a EnumOfStatusListForCertificateGetInstanceListInput enum value
	EnumOfStatusListForCertificateGetInstanceListInputPending = "Pending"

	// EnumOfStatusListForCertificateGetInstanceListInputIssued is a EnumOfStatusListForCertificateGetInstanceListInput enum value
	EnumOfStatusListForCertificateGetInstanceListInputIssued = "Issued"

	// EnumOfStatusListForCertificateGetInstanceListInputCancelling is a EnumOfStatusListForCertificateGetInstanceListInput enum value
	EnumOfStatusListForCertificateGetInstanceListInputCancelling = "Cancelling"

	// EnumOfStatusListForCertificateGetInstanceListInputCanceled is a EnumOfStatusListForCertificateGetInstanceListInput enum value
	EnumOfStatusListForCertificateGetInstanceListInputCanceled = "Canceled"

	// EnumOfStatusListForCertificateGetInstanceListInputRevoking is a EnumOfStatusListForCertificateGetInstanceListInput enum value
	EnumOfStatusListForCertificateGetInstanceListInputRevoking = "Revoking"

	// EnumOfStatusListForCertificateGetInstanceListInputRevoked is a EnumOfStatusListForCertificateGetInstanceListInput enum value
	EnumOfStatusListForCertificateGetInstanceListInputRevoked = "Revoked"

	// EnumOfStatusListForCertificateGetInstanceListInputFailed is a EnumOfStatusListForCertificateGetInstanceListInput enum value
	EnumOfStatusListForCertificateGetInstanceListInputFailed = "Failed"

	// EnumOfStatusListForCertificateGetInstanceListInputUnknown is a EnumOfStatusListForCertificateGetInstanceListInput enum value
	EnumOfStatusListForCertificateGetInstanceListInputUnknown = "Unknown"
)
