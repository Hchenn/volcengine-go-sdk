// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package certificateservice

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCertificateGetOrganizationCommon = "CertificateGetOrganization"

// CertificateGetOrganizationCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CertificateGetOrganizationCommon operation. The "output" return
// value will be populated with the CertificateGetOrganizationCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CertificateGetOrganizationCommon Request to send the API call to the service.
// the "output" return value is not valid until after CertificateGetOrganizationCommon Send returns without error.
//
// See CertificateGetOrganizationCommon for more information on using the CertificateGetOrganizationCommon
// API call, and error handling.
//
//    // Example sending a request using the CertificateGetOrganizationCommonRequest method.
//    req, resp := client.CertificateGetOrganizationCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CERTIFICATESERVICE) CertificateGetOrganizationCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCertificateGetOrganizationCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CertificateGetOrganizationCommon API operation for CERTIFICATE_SERVICE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CERTIFICATE_SERVICE's
// API operation CertificateGetOrganizationCommon for usage and error information.
func (c *CERTIFICATESERVICE) CertificateGetOrganizationCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CertificateGetOrganizationCommonRequest(input)
	return out, req.Send()
}

// CertificateGetOrganizationCommonWithContext is the same as CertificateGetOrganizationCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CertificateGetOrganizationCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CERTIFICATESERVICE) CertificateGetOrganizationCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CertificateGetOrganizationCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCertificateGetOrganization = "CertificateGetOrganization"

// CertificateGetOrganizationRequest generates a "volcengine/request.Request" representing the
// client's request for the CertificateGetOrganization operation. The "output" return
// value will be populated with the CertificateGetOrganizationCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CertificateGetOrganizationCommon Request to send the API call to the service.
// the "output" return value is not valid until after CertificateGetOrganizationCommon Send returns without error.
//
// See CertificateGetOrganization for more information on using the CertificateGetOrganization
// API call, and error handling.
//
//    // Example sending a request using the CertificateGetOrganizationRequest method.
//    req, resp := client.CertificateGetOrganizationRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CERTIFICATESERVICE) CertificateGetOrganizationRequest(input *CertificateGetOrganizationInput) (req *request.Request, output *CertificateGetOrganizationOutput) {
	op := &request.Operation{
		Name:       opCertificateGetOrganization,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CertificateGetOrganizationInput{}
	}

	output = &CertificateGetOrganizationOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CertificateGetOrganization API operation for CERTIFICATE_SERVICE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CERTIFICATE_SERVICE's
// API operation CertificateGetOrganization for usage and error information.
func (c *CERTIFICATESERVICE) CertificateGetOrganization(input *CertificateGetOrganizationInput) (*CertificateGetOrganizationOutput, error) {
	req, out := c.CertificateGetOrganizationRequest(input)
	return out, req.Send()
}

// CertificateGetOrganizationWithContext is the same as CertificateGetOrganization with the addition of
// the ability to pass a context and additional request options.
//
// See CertificateGetOrganization for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CERTIFICATESERVICE) CertificateGetOrganizationWithContext(ctx volcengine.Context, input *CertificateGetOrganizationInput, opts ...request.Option) (*CertificateGetOrganizationOutput, error) {
	req, out := c.CertificateGetOrganizationRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CertificateGetOrganizationInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// OrganizationId is a required field
	OrganizationId *string `type:"string" json:",omitempty" required:"true"`

	ProjectName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CertificateGetOrganizationInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CertificateGetOrganizationInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CertificateGetOrganizationInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CertificateGetOrganizationInput"}
	if s.OrganizationId == nil {
		invalidParams.Add(request.NewErrParamRequired("OrganizationId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetOrganizationId sets the OrganizationId field's value.
func (s *CertificateGetOrganizationInput) SetOrganizationId(v string) *CertificateGetOrganizationInput {
	s.OrganizationId = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *CertificateGetOrganizationInput) SetProjectName(v string) *CertificateGetOrganizationInput {
	s.ProjectName = &v
	return s
}

type CertificateGetOrganizationOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Account *string `type:"string" json:",omitempty"`

	Address *string `type:"string" json:",omitempty"`

	BusinessLicenseNo *string `type:"string" json:",omitempty"`

	City *string `type:"string" json:",omitempty"`

	Contact *ContactForCertificateGetOrganizationOutput `type:"structure" json:",omitempty"`

	Country *string `type:"string" json:",omitempty"`

	CreatedTime *string `type:"string" json:",omitempty"`

	Department *string `type:"string" json:",omitempty"`

	Email *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	OrganizationId *string `type:"string" json:",omitempty"`

	PostalCode *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	Province *string `type:"string" json:",omitempty"`

	Tag *string `type:"string" json:",omitempty"`

	Tags []*TagForCertificateGetOrganizationOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s CertificateGetOrganizationOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CertificateGetOrganizationOutput) GoString() string {
	return s.String()
}

// SetAccount sets the Account field's value.
func (s *CertificateGetOrganizationOutput) SetAccount(v string) *CertificateGetOrganizationOutput {
	s.Account = &v
	return s
}

// SetAddress sets the Address field's value.
func (s *CertificateGetOrganizationOutput) SetAddress(v string) *CertificateGetOrganizationOutput {
	s.Address = &v
	return s
}

// SetBusinessLicenseNo sets the BusinessLicenseNo field's value.
func (s *CertificateGetOrganizationOutput) SetBusinessLicenseNo(v string) *CertificateGetOrganizationOutput {
	s.BusinessLicenseNo = &v
	return s
}

// SetCity sets the City field's value.
func (s *CertificateGetOrganizationOutput) SetCity(v string) *CertificateGetOrganizationOutput {
	s.City = &v
	return s
}

// SetContact sets the Contact field's value.
func (s *CertificateGetOrganizationOutput) SetContact(v *ContactForCertificateGetOrganizationOutput) *CertificateGetOrganizationOutput {
	s.Contact = v
	return s
}

// SetCountry sets the Country field's value.
func (s *CertificateGetOrganizationOutput) SetCountry(v string) *CertificateGetOrganizationOutput {
	s.Country = &v
	return s
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *CertificateGetOrganizationOutput) SetCreatedTime(v string) *CertificateGetOrganizationOutput {
	s.CreatedTime = &v
	return s
}

// SetDepartment sets the Department field's value.
func (s *CertificateGetOrganizationOutput) SetDepartment(v string) *CertificateGetOrganizationOutput {
	s.Department = &v
	return s
}

// SetEmail sets the Email field's value.
func (s *CertificateGetOrganizationOutput) SetEmail(v string) *CertificateGetOrganizationOutput {
	s.Email = &v
	return s
}

// SetName sets the Name field's value.
func (s *CertificateGetOrganizationOutput) SetName(v string) *CertificateGetOrganizationOutput {
	s.Name = &v
	return s
}

// SetOrganizationId sets the OrganizationId field's value.
func (s *CertificateGetOrganizationOutput) SetOrganizationId(v string) *CertificateGetOrganizationOutput {
	s.OrganizationId = &v
	return s
}

// SetPostalCode sets the PostalCode field's value.
func (s *CertificateGetOrganizationOutput) SetPostalCode(v string) *CertificateGetOrganizationOutput {
	s.PostalCode = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *CertificateGetOrganizationOutput) SetProjectName(v string) *CertificateGetOrganizationOutput {
	s.ProjectName = &v
	return s
}

// SetProvince sets the Province field's value.
func (s *CertificateGetOrganizationOutput) SetProvince(v string) *CertificateGetOrganizationOutput {
	s.Province = &v
	return s
}

// SetTag sets the Tag field's value.
func (s *CertificateGetOrganizationOutput) SetTag(v string) *CertificateGetOrganizationOutput {
	s.Tag = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *CertificateGetOrganizationOutput) SetTags(v []*TagForCertificateGetOrganizationOutput) *CertificateGetOrganizationOutput {
	s.Tags = v
	return s
}

type ContactForCertificateGetOrganizationOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Email *string `type:"string" json:",omitempty"`

	FirstName *string `type:"string" json:",omitempty"`

	IdCardNo *string `type:"string" json:",omitempty"`

	LastName *string `type:"string" json:",omitempty"`

	Phone *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ContactForCertificateGetOrganizationOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ContactForCertificateGetOrganizationOutput) GoString() string {
	return s.String()
}

// SetEmail sets the Email field's value.
func (s *ContactForCertificateGetOrganizationOutput) SetEmail(v string) *ContactForCertificateGetOrganizationOutput {
	s.Email = &v
	return s
}

// SetFirstName sets the FirstName field's value.
func (s *ContactForCertificateGetOrganizationOutput) SetFirstName(v string) *ContactForCertificateGetOrganizationOutput {
	s.FirstName = &v
	return s
}

// SetIdCardNo sets the IdCardNo field's value.
func (s *ContactForCertificateGetOrganizationOutput) SetIdCardNo(v string) *ContactForCertificateGetOrganizationOutput {
	s.IdCardNo = &v
	return s
}

// SetLastName sets the LastName field's value.
func (s *ContactForCertificateGetOrganizationOutput) SetLastName(v string) *ContactForCertificateGetOrganizationOutput {
	s.LastName = &v
	return s
}

// SetPhone sets the Phone field's value.
func (s *ContactForCertificateGetOrganizationOutput) SetPhone(v string) *ContactForCertificateGetOrganizationOutput {
	s.Phone = &v
	return s
}

type TagForCertificateGetOrganizationOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForCertificateGetOrganizationOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForCertificateGetOrganizationOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForCertificateGetOrganizationOutput) SetKey(v string) *TagForCertificateGetOrganizationOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForCertificateGetOrganizationOutput) SetValue(v string) *TagForCertificateGetOrganizationOutput {
	s.Value = &v
	return s
}
