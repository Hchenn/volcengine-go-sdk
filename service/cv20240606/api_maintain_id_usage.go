// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cv20240606

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opMaintainIDUsageCommon = "MaintainIDUsage"

// MaintainIDUsageCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the MaintainIDUsageCommon operation. The "output" return
// value will be populated with the MaintainIDUsageCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned MaintainIDUsageCommon Request to send the API call to the service.
// the "output" return value is not valid until after MaintainIDUsageCommon Send returns without error.
//
// See MaintainIDUsageCommon for more information on using the MaintainIDUsageCommon
// API call, and error handling.
//
//    // Example sending a request using the MaintainIDUsageCommonRequest method.
//    req, resp := client.MaintainIDUsageCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CV20240606) MaintainIDUsageCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opMaintainIDUsageCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// MaintainIDUsageCommon API operation for CV20240606.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CV20240606's
// API operation MaintainIDUsageCommon for usage and error information.
func (c *CV20240606) MaintainIDUsageCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.MaintainIDUsageCommonRequest(input)
	return out, req.Send()
}

// MaintainIDUsageCommonWithContext is the same as MaintainIDUsageCommon with the addition of
// the ability to pass a context and additional request options.
//
// See MaintainIDUsageCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CV20240606) MaintainIDUsageCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.MaintainIDUsageCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opMaintainIDUsage = "MaintainIDUsage"

// MaintainIDUsageRequest generates a "volcengine/request.Request" representing the
// client's request for the MaintainIDUsage operation. The "output" return
// value will be populated with the MaintainIDUsageCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned MaintainIDUsageCommon Request to send the API call to the service.
// the "output" return value is not valid until after MaintainIDUsageCommon Send returns without error.
//
// See MaintainIDUsage for more information on using the MaintainIDUsage
// API call, and error handling.
//
//    // Example sending a request using the MaintainIDUsageRequest method.
//    req, resp := client.MaintainIDUsageRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CV20240606) MaintainIDUsageRequest(input *MaintainIDUsageInput) (req *request.Request, output *MaintainIDUsageOutput) {
	op := &request.Operation{
		Name:       opMaintainIDUsage,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &MaintainIDUsageInput{}
	}

	output = &MaintainIDUsageOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// MaintainIDUsage API operation for CV20240606.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CV20240606's
// API operation MaintainIDUsage for usage and error information.
func (c *CV20240606) MaintainIDUsage(input *MaintainIDUsageInput) (*MaintainIDUsageOutput, error) {
	req, out := c.MaintainIDUsageRequest(input)
	return out, req.Send()
}

// MaintainIDUsageWithContext is the same as MaintainIDUsage with the addition of
// the ability to pass a context and additional request options.
//
// See MaintainIDUsage for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CV20240606) MaintainIDUsageWithContext(ctx volcengine.Context, input *MaintainIDUsageInput, opts ...request.Option) (*MaintainIDUsageOutput, error) {
	req, out := c.MaintainIDUsageRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type MaintainIDUsageInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Req_key is a required field
	Req_key *string `type:"string" json:"req_key,omitempty" required:"true"`
}

// String returns the string representation
func (s MaintainIDUsageInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MaintainIDUsageInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *MaintainIDUsageInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "MaintainIDUsageInput"}
	if s.Req_key == nil {
		invalidParams.Add(request.NewErrParamRequired("Req_key"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetReq_key sets the Req_key field's value.
func (s *MaintainIDUsageInput) SetReq_key(v string) *MaintainIDUsageInput {
	s.Req_key = &v
	return s
}

type MaintainIDUsageOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	TaskID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s MaintainIDUsageOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MaintainIDUsageOutput) GoString() string {
	return s.String()
}

// SetTaskID sets the TaskID field's value.
func (s *MaintainIDUsageOutput) SetTaskID(v string) *MaintainIDUsageOutput {
	s.TaskID = &v
	return s
}
