// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package quota

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteAlarmRulesCommon = "DeleteAlarmRules"

// DeleteAlarmRulesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteAlarmRulesCommon operation. The "output" return
// value will be populated with the DeleteAlarmRulesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteAlarmRulesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteAlarmRulesCommon Send returns without error.
//
// See DeleteAlarmRulesCommon for more information on using the DeleteAlarmRulesCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteAlarmRulesCommonRequest method.
//    req, resp := client.DeleteAlarmRulesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *QUOTA) DeleteAlarmRulesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteAlarmRulesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteAlarmRulesCommon API operation for QUOTA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for QUOTA's
// API operation DeleteAlarmRulesCommon for usage and error information.
func (c *QUOTA) DeleteAlarmRulesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteAlarmRulesCommonRequest(input)
	return out, req.Send()
}

// DeleteAlarmRulesCommonWithContext is the same as DeleteAlarmRulesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteAlarmRulesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *QUOTA) DeleteAlarmRulesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteAlarmRulesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteAlarmRules = "DeleteAlarmRules"

// DeleteAlarmRulesRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteAlarmRules operation. The "output" return
// value will be populated with the DeleteAlarmRulesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteAlarmRulesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteAlarmRulesCommon Send returns without error.
//
// See DeleteAlarmRules for more information on using the DeleteAlarmRules
// API call, and error handling.
//
//    // Example sending a request using the DeleteAlarmRulesRequest method.
//    req, resp := client.DeleteAlarmRulesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *QUOTA) DeleteAlarmRulesRequest(input *DeleteAlarmRulesInput) (req *request.Request, output *DeleteAlarmRulesOutput) {
	op := &request.Operation{
		Name:       opDeleteAlarmRules,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteAlarmRulesInput{}
	}

	output = &DeleteAlarmRulesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteAlarmRules API operation for QUOTA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for QUOTA's
// API operation DeleteAlarmRules for usage and error information.
func (c *QUOTA) DeleteAlarmRules(input *DeleteAlarmRulesInput) (*DeleteAlarmRulesOutput, error) {
	req, out := c.DeleteAlarmRulesRequest(input)
	return out, req.Send()
}

// DeleteAlarmRulesWithContext is the same as DeleteAlarmRules with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteAlarmRules for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *QUOTA) DeleteAlarmRulesWithContext(ctx volcengine.Context, input *DeleteAlarmRulesInput, opts ...request.Option) (*DeleteAlarmRulesOutput, error) {
	req, out := c.DeleteAlarmRulesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteAlarmRulesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	IDs []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DeleteAlarmRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAlarmRulesInput) GoString() string {
	return s.String()
}

// SetIDs sets the IDs field's value.
func (s *DeleteAlarmRulesInput) SetIDs(v []*string) *DeleteAlarmRulesInput {
	s.IDs = v
	return s
}

type DeleteAlarmRulesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	IDs []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DeleteAlarmRulesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAlarmRulesOutput) GoString() string {
	return s.String()
}

// SetIDs sets the IDs field's value.
func (s *DeleteAlarmRulesOutput) SetIDs(v []*string) *DeleteAlarmRulesOutput {
	s.IDs = v
	return s
}
