// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package quota

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAlarmHistoryCommon = "ListAlarmHistory"

// ListAlarmHistoryCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAlarmHistoryCommon operation. The "output" return
// value will be populated with the ListAlarmHistoryCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAlarmHistoryCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAlarmHistoryCommon Send returns without error.
//
// See ListAlarmHistoryCommon for more information on using the ListAlarmHistoryCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAlarmHistoryCommonRequest method.
//    req, resp := client.ListAlarmHistoryCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *QUOTA) ListAlarmHistoryCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAlarmHistoryCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ListAlarmHistoryCommon API operation for QUOTA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for QUOTA's
// API operation ListAlarmHistoryCommon for usage and error information.
func (c *QUOTA) ListAlarmHistoryCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAlarmHistoryCommonRequest(input)
	return out, req.Send()
}

// ListAlarmHistoryCommonWithContext is the same as ListAlarmHistoryCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAlarmHistoryCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *QUOTA) ListAlarmHistoryCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAlarmHistoryCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAlarmHistory = "ListAlarmHistory"

// ListAlarmHistoryRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAlarmHistory operation. The "output" return
// value will be populated with the ListAlarmHistoryCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAlarmHistoryCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAlarmHistoryCommon Send returns without error.
//
// See ListAlarmHistory for more information on using the ListAlarmHistory
// API call, and error handling.
//
//    // Example sending a request using the ListAlarmHistoryRequest method.
//    req, resp := client.ListAlarmHistoryRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *QUOTA) ListAlarmHistoryRequest(input *ListAlarmHistoryInput) (req *request.Request, output *ListAlarmHistoryOutput) {
	op := &request.Operation{
		Name:       opListAlarmHistory,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAlarmHistoryInput{}
	}

	output = &ListAlarmHistoryOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ListAlarmHistory API operation for QUOTA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for QUOTA's
// API operation ListAlarmHistory for usage and error information.
func (c *QUOTA) ListAlarmHistory(input *ListAlarmHistoryInput) (*ListAlarmHistoryOutput, error) {
	req, out := c.ListAlarmHistoryRequest(input)
	return out, req.Send()
}

// ListAlarmHistoryWithContext is the same as ListAlarmHistory with the addition of
// the ability to pass a context and additional request options.
//
// See ListAlarmHistory for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *QUOTA) ListAlarmHistoryWithContext(ctx volcengine.Context, input *ListAlarmHistoryInput, opts ...request.Option) (*ListAlarmHistoryOutput, error) {
	req, out := c.ListAlarmHistoryRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AlarmRecordListForListAlarmHistoryOutput struct {
	_ struct{} `type:"structure"`

	AlarmTime *string `type:"string"`

	AlarmType *string `type:"string"`

	AlarmValue *string `type:"string"`

	Dimensions *string `type:"string"`

	MetricUnit *string `type:"string"`

	ProductName *string `type:"string"`

	ProviderCode *string `type:"string"`

	QuotaCode *string `type:"string"`

	QuotaType *string `type:"string"`

	RuleID *string `type:"string"`

	RuleName *string `type:"string"`

	SendMessageStatus *int32 `type:"int32"`

	Threshold *string `type:"string"`
}

// String returns the string representation
func (s AlarmRecordListForListAlarmHistoryOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AlarmRecordListForListAlarmHistoryOutput) GoString() string {
	return s.String()
}

// SetAlarmTime sets the AlarmTime field's value.
func (s *AlarmRecordListForListAlarmHistoryOutput) SetAlarmTime(v string) *AlarmRecordListForListAlarmHistoryOutput {
	s.AlarmTime = &v
	return s
}

// SetAlarmType sets the AlarmType field's value.
func (s *AlarmRecordListForListAlarmHistoryOutput) SetAlarmType(v string) *AlarmRecordListForListAlarmHistoryOutput {
	s.AlarmType = &v
	return s
}

// SetAlarmValue sets the AlarmValue field's value.
func (s *AlarmRecordListForListAlarmHistoryOutput) SetAlarmValue(v string) *AlarmRecordListForListAlarmHistoryOutput {
	s.AlarmValue = &v
	return s
}

// SetDimensions sets the Dimensions field's value.
func (s *AlarmRecordListForListAlarmHistoryOutput) SetDimensions(v string) *AlarmRecordListForListAlarmHistoryOutput {
	s.Dimensions = &v
	return s
}

// SetMetricUnit sets the MetricUnit field's value.
func (s *AlarmRecordListForListAlarmHistoryOutput) SetMetricUnit(v string) *AlarmRecordListForListAlarmHistoryOutput {
	s.MetricUnit = &v
	return s
}

// SetProductName sets the ProductName field's value.
func (s *AlarmRecordListForListAlarmHistoryOutput) SetProductName(v string) *AlarmRecordListForListAlarmHistoryOutput {
	s.ProductName = &v
	return s
}

// SetProviderCode sets the ProviderCode field's value.
func (s *AlarmRecordListForListAlarmHistoryOutput) SetProviderCode(v string) *AlarmRecordListForListAlarmHistoryOutput {
	s.ProviderCode = &v
	return s
}

// SetQuotaCode sets the QuotaCode field's value.
func (s *AlarmRecordListForListAlarmHistoryOutput) SetQuotaCode(v string) *AlarmRecordListForListAlarmHistoryOutput {
	s.QuotaCode = &v
	return s
}

// SetQuotaType sets the QuotaType field's value.
func (s *AlarmRecordListForListAlarmHistoryOutput) SetQuotaType(v string) *AlarmRecordListForListAlarmHistoryOutput {
	s.QuotaType = &v
	return s
}

// SetRuleID sets the RuleID field's value.
func (s *AlarmRecordListForListAlarmHistoryOutput) SetRuleID(v string) *AlarmRecordListForListAlarmHistoryOutput {
	s.RuleID = &v
	return s
}

// SetRuleName sets the RuleName field's value.
func (s *AlarmRecordListForListAlarmHistoryOutput) SetRuleName(v string) *AlarmRecordListForListAlarmHistoryOutput {
	s.RuleName = &v
	return s
}

// SetSendMessageStatus sets the SendMessageStatus field's value.
func (s *AlarmRecordListForListAlarmHistoryOutput) SetSendMessageStatus(v int32) *AlarmRecordListForListAlarmHistoryOutput {
	s.SendMessageStatus = &v
	return s
}

// SetThreshold sets the Threshold field's value.
func (s *AlarmRecordListForListAlarmHistoryOutput) SetThreshold(v string) *AlarmRecordListForListAlarmHistoryOutput {
	s.Threshold = &v
	return s
}

type ListAlarmHistoryInput struct {
	_ struct{} `type:"structure"`

	AlertTimeEnd *string `type:"string"`

	AlertTimeStart *string `type:"string"`

	MaxResults *int32 `type:"int32"`

	NextToken *string `type:"string"`

	ProviderCode *string `type:"string"`

	QuotaCode *string `type:"string"`

	QuotaType *string `type:"string"`

	RuleName *string `type:"string"`
}

// String returns the string representation
func (s ListAlarmHistoryInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAlarmHistoryInput) GoString() string {
	return s.String()
}

// SetAlertTimeEnd sets the AlertTimeEnd field's value.
func (s *ListAlarmHistoryInput) SetAlertTimeEnd(v string) *ListAlarmHistoryInput {
	s.AlertTimeEnd = &v
	return s
}

// SetAlertTimeStart sets the AlertTimeStart field's value.
func (s *ListAlarmHistoryInput) SetAlertTimeStart(v string) *ListAlarmHistoryInput {
	s.AlertTimeStart = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListAlarmHistoryInput) SetMaxResults(v int32) *ListAlarmHistoryInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListAlarmHistoryInput) SetNextToken(v string) *ListAlarmHistoryInput {
	s.NextToken = &v
	return s
}

// SetProviderCode sets the ProviderCode field's value.
func (s *ListAlarmHistoryInput) SetProviderCode(v string) *ListAlarmHistoryInput {
	s.ProviderCode = &v
	return s
}

// SetQuotaCode sets the QuotaCode field's value.
func (s *ListAlarmHistoryInput) SetQuotaCode(v string) *ListAlarmHistoryInput {
	s.QuotaCode = &v
	return s
}

// SetQuotaType sets the QuotaType field's value.
func (s *ListAlarmHistoryInput) SetQuotaType(v string) *ListAlarmHistoryInput {
	s.QuotaType = &v
	return s
}

// SetRuleName sets the RuleName field's value.
func (s *ListAlarmHistoryInput) SetRuleName(v string) *ListAlarmHistoryInput {
	s.RuleName = &v
	return s
}

type ListAlarmHistoryOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	AlarmRecordList []*AlarmRecordListForListAlarmHistoryOutput `type:"list"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s ListAlarmHistoryOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAlarmHistoryOutput) GoString() string {
	return s.String()
}

// SetAlarmRecordList sets the AlarmRecordList field's value.
func (s *ListAlarmHistoryOutput) SetAlarmRecordList(v []*AlarmRecordListForListAlarmHistoryOutput) *ListAlarmHistoryOutput {
	s.AlarmRecordList = v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListAlarmHistoryOutput) SetNextToken(v string) *ListAlarmHistoryOutput {
	s.NextToken = &v
	return s
}
