// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package quota

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetAlarmRuleCommon = "GetAlarmRule"

// GetAlarmRuleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetAlarmRuleCommon operation. The "output" return
// value will be populated with the GetAlarmRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetAlarmRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetAlarmRuleCommon Send returns without error.
//
// See GetAlarmRuleCommon for more information on using the GetAlarmRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the GetAlarmRuleCommonRequest method.
//    req, resp := client.GetAlarmRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *QUOTA) GetAlarmRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetAlarmRuleCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetAlarmRuleCommon API operation for QUOTA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for QUOTA's
// API operation GetAlarmRuleCommon for usage and error information.
func (c *QUOTA) GetAlarmRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetAlarmRuleCommonRequest(input)
	return out, req.Send()
}

// GetAlarmRuleCommonWithContext is the same as GetAlarmRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetAlarmRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *QUOTA) GetAlarmRuleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetAlarmRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetAlarmRule = "GetAlarmRule"

// GetAlarmRuleRequest generates a "volcengine/request.Request" representing the
// client's request for the GetAlarmRule operation. The "output" return
// value will be populated with the GetAlarmRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetAlarmRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetAlarmRuleCommon Send returns without error.
//
// See GetAlarmRule for more information on using the GetAlarmRule
// API call, and error handling.
//
//    // Example sending a request using the GetAlarmRuleRequest method.
//    req, resp := client.GetAlarmRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *QUOTA) GetAlarmRuleRequest(input *GetAlarmRuleInput) (req *request.Request, output *GetAlarmRuleOutput) {
	op := &request.Operation{
		Name:       opGetAlarmRule,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetAlarmRuleInput{}
	}

	output = &GetAlarmRuleOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetAlarmRule API operation for QUOTA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for QUOTA's
// API operation GetAlarmRule for usage and error information.
func (c *QUOTA) GetAlarmRule(input *GetAlarmRuleInput) (*GetAlarmRuleOutput, error) {
	req, out := c.GetAlarmRuleRequest(input)
	return out, req.Send()
}

// GetAlarmRuleWithContext is the same as GetAlarmRule with the addition of
// the ability to pass a context and additional request options.
//
// See GetAlarmRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *QUOTA) GetAlarmRuleWithContext(ctx volcengine.Context, input *GetAlarmRuleInput, opts ...request.Option) (*GetAlarmRuleOutput, error) {
	req, out := c.GetAlarmRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetAlarmRuleInput struct {
	_ struct{} `type:"structure"`

	// ID is a required field
	ID *string `type:"string" required:"true"`
}

// String returns the string representation
func (s GetAlarmRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetAlarmRuleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetAlarmRuleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetAlarmRuleInput"}
	if s.ID == nil {
		invalidParams.Add(request.NewErrParamRequired("ID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetID sets the ID field's value.
func (s *GetAlarmRuleInput) SetID(v string) *GetAlarmRuleInput {
	s.ID = &v
	return s
}

type GetAlarmRuleOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	QuotaAlarmRule *QuotaAlarmRuleForGetAlarmRuleOutput `type:"structure"`
}

// String returns the string representation
func (s GetAlarmRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetAlarmRuleOutput) GoString() string {
	return s.String()
}

// SetQuotaAlarmRule sets the QuotaAlarmRule field's value.
func (s *GetAlarmRuleOutput) SetQuotaAlarmRule(v *QuotaAlarmRuleForGetAlarmRuleOutput) *GetAlarmRuleOutput {
	s.QuotaAlarmRule = v
	return s
}

type QuotaAlarmRuleForGetAlarmRuleOutput struct {
	_ struct{} `type:"structure"`

	AlarmType *string `type:"string"`

	CreatedTime *string `type:"string"`

	Description *string `type:"string"`

	Dimensions *string `type:"string"`

	EnableState *string `type:"string"`

	MetricUnit *string `type:"string"`

	ProductName *string `type:"string"`

	ProviderCode *string `type:"string"`

	QuotaCode *string `type:"string"`

	QuotaType *string `type:"string"`

	RuleID *string `type:"string"`

	RuleName *string `type:"string"`

	SilenceTime *int32 `type:"int32"`

	Statistics *string `type:"string"`

	Threshold *string `type:"string"`

	UpdatedTime *string `type:"string"`
}

// String returns the string representation
func (s QuotaAlarmRuleForGetAlarmRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s QuotaAlarmRuleForGetAlarmRuleOutput) GoString() string {
	return s.String()
}

// SetAlarmType sets the AlarmType field's value.
func (s *QuotaAlarmRuleForGetAlarmRuleOutput) SetAlarmType(v string) *QuotaAlarmRuleForGetAlarmRuleOutput {
	s.AlarmType = &v
	return s
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *QuotaAlarmRuleForGetAlarmRuleOutput) SetCreatedTime(v string) *QuotaAlarmRuleForGetAlarmRuleOutput {
	s.CreatedTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *QuotaAlarmRuleForGetAlarmRuleOutput) SetDescription(v string) *QuotaAlarmRuleForGetAlarmRuleOutput {
	s.Description = &v
	return s
}

// SetDimensions sets the Dimensions field's value.
func (s *QuotaAlarmRuleForGetAlarmRuleOutput) SetDimensions(v string) *QuotaAlarmRuleForGetAlarmRuleOutput {
	s.Dimensions = &v
	return s
}

// SetEnableState sets the EnableState field's value.
func (s *QuotaAlarmRuleForGetAlarmRuleOutput) SetEnableState(v string) *QuotaAlarmRuleForGetAlarmRuleOutput {
	s.EnableState = &v
	return s
}

// SetMetricUnit sets the MetricUnit field's value.
func (s *QuotaAlarmRuleForGetAlarmRuleOutput) SetMetricUnit(v string) *QuotaAlarmRuleForGetAlarmRuleOutput {
	s.MetricUnit = &v
	return s
}

// SetProductName sets the ProductName field's value.
func (s *QuotaAlarmRuleForGetAlarmRuleOutput) SetProductName(v string) *QuotaAlarmRuleForGetAlarmRuleOutput {
	s.ProductName = &v
	return s
}

// SetProviderCode sets the ProviderCode field's value.
func (s *QuotaAlarmRuleForGetAlarmRuleOutput) SetProviderCode(v string) *QuotaAlarmRuleForGetAlarmRuleOutput {
	s.ProviderCode = &v
	return s
}

// SetQuotaCode sets the QuotaCode field's value.
func (s *QuotaAlarmRuleForGetAlarmRuleOutput) SetQuotaCode(v string) *QuotaAlarmRuleForGetAlarmRuleOutput {
	s.QuotaCode = &v
	return s
}

// SetQuotaType sets the QuotaType field's value.
func (s *QuotaAlarmRuleForGetAlarmRuleOutput) SetQuotaType(v string) *QuotaAlarmRuleForGetAlarmRuleOutput {
	s.QuotaType = &v
	return s
}

// SetRuleID sets the RuleID field's value.
func (s *QuotaAlarmRuleForGetAlarmRuleOutput) SetRuleID(v string) *QuotaAlarmRuleForGetAlarmRuleOutput {
	s.RuleID = &v
	return s
}

// SetRuleName sets the RuleName field's value.
func (s *QuotaAlarmRuleForGetAlarmRuleOutput) SetRuleName(v string) *QuotaAlarmRuleForGetAlarmRuleOutput {
	s.RuleName = &v
	return s
}

// SetSilenceTime sets the SilenceTime field's value.
func (s *QuotaAlarmRuleForGetAlarmRuleOutput) SetSilenceTime(v int32) *QuotaAlarmRuleForGetAlarmRuleOutput {
	s.SilenceTime = &v
	return s
}

// SetStatistics sets the Statistics field's value.
func (s *QuotaAlarmRuleForGetAlarmRuleOutput) SetStatistics(v string) *QuotaAlarmRuleForGetAlarmRuleOutput {
	s.Statistics = &v
	return s
}

// SetThreshold sets the Threshold field's value.
func (s *QuotaAlarmRuleForGetAlarmRuleOutput) SetThreshold(v string) *QuotaAlarmRuleForGetAlarmRuleOutput {
	s.Threshold = &v
	return s
}

// SetUpdatedTime sets the UpdatedTime field's value.
func (s *QuotaAlarmRuleForGetAlarmRuleOutput) SetUpdatedTime(v string) *QuotaAlarmRuleForGetAlarmRuleOutput {
	s.UpdatedTime = &v
	return s
}
