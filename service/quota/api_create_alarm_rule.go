// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package quota

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateAlarmRuleCommon = "CreateAlarmRule"

// CreateAlarmRuleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateAlarmRuleCommon operation. The "output" return
// value will be populated with the CreateAlarmRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateAlarmRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateAlarmRuleCommon Send returns without error.
//
// See CreateAlarmRuleCommon for more information on using the CreateAlarmRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateAlarmRuleCommonRequest method.
//    req, resp := client.CreateAlarmRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *QUOTA) CreateAlarmRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateAlarmRuleCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateAlarmRuleCommon API operation for QUOTA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for QUOTA's
// API operation CreateAlarmRuleCommon for usage and error information.
func (c *QUOTA) CreateAlarmRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateAlarmRuleCommonRequest(input)
	return out, req.Send()
}

// CreateAlarmRuleCommonWithContext is the same as CreateAlarmRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateAlarmRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *QUOTA) CreateAlarmRuleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateAlarmRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateAlarmRule = "CreateAlarmRule"

// CreateAlarmRuleRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateAlarmRule operation. The "output" return
// value will be populated with the CreateAlarmRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateAlarmRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateAlarmRuleCommon Send returns without error.
//
// See CreateAlarmRule for more information on using the CreateAlarmRule
// API call, and error handling.
//
//    // Example sending a request using the CreateAlarmRuleRequest method.
//    req, resp := client.CreateAlarmRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *QUOTA) CreateAlarmRuleRequest(input *CreateAlarmRuleInput) (req *request.Request, output *CreateAlarmRuleOutput) {
	op := &request.Operation{
		Name:       opCreateAlarmRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateAlarmRuleInput{}
	}

	output = &CreateAlarmRuleOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateAlarmRule API operation for QUOTA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for QUOTA's
// API operation CreateAlarmRule for usage and error information.
func (c *QUOTA) CreateAlarmRule(input *CreateAlarmRuleInput) (*CreateAlarmRuleOutput, error) {
	req, out := c.CreateAlarmRuleRequest(input)
	return out, req.Send()
}

// CreateAlarmRuleWithContext is the same as CreateAlarmRule with the addition of
// the ability to pass a context and additional request options.
//
// See CreateAlarmRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *QUOTA) CreateAlarmRuleWithContext(ctx volcengine.Context, input *CreateAlarmRuleInput, opts ...request.Option) (*CreateAlarmRuleOutput, error) {
	req, out := c.CreateAlarmRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateAlarmRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// AlarmType is a required field
	AlarmType *string `type:"string" json:",omitempty" required:"true"`

	Description *string `type:"string" json:",omitempty"`

	Dimensions []*DimensionForCreateAlarmRuleInput `type:"list" json:",omitempty"`

	// MetricUnit is a required field
	MetricUnit *string `type:"string" json:",omitempty" required:"true"`

	// ProviderCode is a required field
	ProviderCode *string `type:"string" json:",omitempty" required:"true"`

	// QuotaCode is a required field
	QuotaCode *string `type:"string" json:",omitempty" required:"true"`

	// RuleName is a required field
	RuleName *string `type:"string" json:",omitempty" required:"true"`

	SilenceTime *int32 `type:"int32" json:",omitempty"`

	// Threshold is a required field
	Threshold *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CreateAlarmRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAlarmRuleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateAlarmRuleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateAlarmRuleInput"}
	if s.AlarmType == nil {
		invalidParams.Add(request.NewErrParamRequired("AlarmType"))
	}
	if s.MetricUnit == nil {
		invalidParams.Add(request.NewErrParamRequired("MetricUnit"))
	}
	if s.ProviderCode == nil {
		invalidParams.Add(request.NewErrParamRequired("ProviderCode"))
	}
	if s.QuotaCode == nil {
		invalidParams.Add(request.NewErrParamRequired("QuotaCode"))
	}
	if s.RuleName == nil {
		invalidParams.Add(request.NewErrParamRequired("RuleName"))
	}
	if s.Threshold == nil {
		invalidParams.Add(request.NewErrParamRequired("Threshold"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAlarmType sets the AlarmType field's value.
func (s *CreateAlarmRuleInput) SetAlarmType(v string) *CreateAlarmRuleInput {
	s.AlarmType = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateAlarmRuleInput) SetDescription(v string) *CreateAlarmRuleInput {
	s.Description = &v
	return s
}

// SetDimensions sets the Dimensions field's value.
func (s *CreateAlarmRuleInput) SetDimensions(v []*DimensionForCreateAlarmRuleInput) *CreateAlarmRuleInput {
	s.Dimensions = v
	return s
}

// SetMetricUnit sets the MetricUnit field's value.
func (s *CreateAlarmRuleInput) SetMetricUnit(v string) *CreateAlarmRuleInput {
	s.MetricUnit = &v
	return s
}

// SetProviderCode sets the ProviderCode field's value.
func (s *CreateAlarmRuleInput) SetProviderCode(v string) *CreateAlarmRuleInput {
	s.ProviderCode = &v
	return s
}

// SetQuotaCode sets the QuotaCode field's value.
func (s *CreateAlarmRuleInput) SetQuotaCode(v string) *CreateAlarmRuleInput {
	s.QuotaCode = &v
	return s
}

// SetRuleName sets the RuleName field's value.
func (s *CreateAlarmRuleInput) SetRuleName(v string) *CreateAlarmRuleInput {
	s.RuleName = &v
	return s
}

// SetSilenceTime sets the SilenceTime field's value.
func (s *CreateAlarmRuleInput) SetSilenceTime(v int32) *CreateAlarmRuleInput {
	s.SilenceTime = &v
	return s
}

// SetThreshold sets the Threshold field's value.
func (s *CreateAlarmRuleInput) SetThreshold(v string) *CreateAlarmRuleInput {
	s.Threshold = &v
	return s
}

type CreateAlarmRuleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	RuleID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateAlarmRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAlarmRuleOutput) GoString() string {
	return s.String()
}

// SetRuleID sets the RuleID field's value.
func (s *CreateAlarmRuleOutput) SetRuleID(v string) *CreateAlarmRuleOutput {
	s.RuleID = &v
	return s
}

type DimensionForCreateAlarmRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DimensionForCreateAlarmRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DimensionForCreateAlarmRuleInput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *DimensionForCreateAlarmRuleInput) SetName(v string) *DimensionForCreateAlarmRuleInput {
	s.Name = &v
	return s
}

// SetValue sets the Value field's value.
func (s *DimensionForCreateAlarmRuleInput) SetValue(v string) *DimensionForCreateAlarmRuleInput {
	s.Value = &v
	return s
}
