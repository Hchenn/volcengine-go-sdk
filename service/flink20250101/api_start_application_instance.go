// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package flink20250101

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opStartApplicationInstanceCommon = "StartApplicationInstance"

// StartApplicationInstanceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the StartApplicationInstanceCommon operation. The "output" return
// value will be populated with the StartApplicationInstanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned StartApplicationInstanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after StartApplicationInstanceCommon Send returns without error.
//
// See StartApplicationInstanceCommon for more information on using the StartApplicationInstanceCommon
// API call, and error handling.
//
//    // Example sending a request using the StartApplicationInstanceCommonRequest method.
//    req, resp := client.StartApplicationInstanceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FLINK20250101) StartApplicationInstanceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opStartApplicationInstanceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// StartApplicationInstanceCommon API operation for FLINK20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FLINK20250101's
// API operation StartApplicationInstanceCommon for usage and error information.
func (c *FLINK20250101) StartApplicationInstanceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.StartApplicationInstanceCommonRequest(input)
	return out, req.Send()
}

// StartApplicationInstanceCommonWithContext is the same as StartApplicationInstanceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See StartApplicationInstanceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FLINK20250101) StartApplicationInstanceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.StartApplicationInstanceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opStartApplicationInstance = "StartApplicationInstance"

// StartApplicationInstanceRequest generates a "volcengine/request.Request" representing the
// client's request for the StartApplicationInstance operation. The "output" return
// value will be populated with the StartApplicationInstanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned StartApplicationInstanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after StartApplicationInstanceCommon Send returns without error.
//
// See StartApplicationInstance for more information on using the StartApplicationInstance
// API call, and error handling.
//
//    // Example sending a request using the StartApplicationInstanceRequest method.
//    req, resp := client.StartApplicationInstanceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FLINK20250101) StartApplicationInstanceRequest(input *StartApplicationInstanceInput) (req *request.Request, output *StartApplicationInstanceOutput) {
	op := &request.Operation{
		Name:       opStartApplicationInstance,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &StartApplicationInstanceInput{}
	}

	output = &StartApplicationInstanceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// StartApplicationInstance API operation for FLINK20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FLINK20250101's
// API operation StartApplicationInstance for usage and error information.
func (c *FLINK20250101) StartApplicationInstance(input *StartApplicationInstanceInput) (*StartApplicationInstanceOutput, error) {
	req, out := c.StartApplicationInstanceRequest(input)
	return out, req.Send()
}

// StartApplicationInstanceWithContext is the same as StartApplicationInstance with the addition of
// the ability to pass a context and additional request options.
//
// See StartApplicationInstance for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FLINK20250101) StartApplicationInstanceWithContext(ctx volcengine.Context, input *StartApplicationInstanceInput, opts ...request.Option) (*StartApplicationInstanceOutput, error) {
	req, out := c.StartApplicationInstanceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AppForStartApplicationInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountId *string `type:"string" json:",omitempty"`

	Args *string `type:"string" json:",omitempty"`

	Conf *string `type:"string" json:",omitempty"`

	Dependency *DependencyForStartApplicationInstanceInput `type:"structure" json:",omitempty"`

	DeployRequest *DeployRequestForStartApplicationInstanceInput `type:"structure" json:",omitempty"`

	EngineVersion *string `type:"string" json:",omitempty" enum:"EnumOfEngineVersionForStartApplicationInstanceInput"`

	Jar *string `type:"string" json:",omitempty"`

	JobName *string `type:"string" json:",omitempty"`

	JobType *string `type:"string" json:",omitempty" enum:"EnumOfJobTypeForStartApplicationInstanceInput"`

	MainClass *string `type:"string" json:",omitempty"`

	ProjectId *string `type:"string" json:",omitempty"`

	SqlText *string `type:"string" json:",omitempty"`

	UniqueKey *string `type:"string" json:",omitempty"`

	UserId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AppForStartApplicationInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AppForStartApplicationInstanceInput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *AppForStartApplicationInstanceInput) SetAccountId(v string) *AppForStartApplicationInstanceInput {
	s.AccountId = &v
	return s
}

// SetArgs sets the Args field's value.
func (s *AppForStartApplicationInstanceInput) SetArgs(v string) *AppForStartApplicationInstanceInput {
	s.Args = &v
	return s
}

// SetConf sets the Conf field's value.
func (s *AppForStartApplicationInstanceInput) SetConf(v string) *AppForStartApplicationInstanceInput {
	s.Conf = &v
	return s
}

// SetDependency sets the Dependency field's value.
func (s *AppForStartApplicationInstanceInput) SetDependency(v *DependencyForStartApplicationInstanceInput) *AppForStartApplicationInstanceInput {
	s.Dependency = v
	return s
}

// SetDeployRequest sets the DeployRequest field's value.
func (s *AppForStartApplicationInstanceInput) SetDeployRequest(v *DeployRequestForStartApplicationInstanceInput) *AppForStartApplicationInstanceInput {
	s.DeployRequest = v
	return s
}

// SetEngineVersion sets the EngineVersion field's value.
func (s *AppForStartApplicationInstanceInput) SetEngineVersion(v string) *AppForStartApplicationInstanceInput {
	s.EngineVersion = &v
	return s
}

// SetJar sets the Jar field's value.
func (s *AppForStartApplicationInstanceInput) SetJar(v string) *AppForStartApplicationInstanceInput {
	s.Jar = &v
	return s
}

// SetJobName sets the JobName field's value.
func (s *AppForStartApplicationInstanceInput) SetJobName(v string) *AppForStartApplicationInstanceInput {
	s.JobName = &v
	return s
}

// SetJobType sets the JobType field's value.
func (s *AppForStartApplicationInstanceInput) SetJobType(v string) *AppForStartApplicationInstanceInput {
	s.JobType = &v
	return s
}

// SetMainClass sets the MainClass field's value.
func (s *AppForStartApplicationInstanceInput) SetMainClass(v string) *AppForStartApplicationInstanceInput {
	s.MainClass = &v
	return s
}

// SetProjectId sets the ProjectId field's value.
func (s *AppForStartApplicationInstanceInput) SetProjectId(v string) *AppForStartApplicationInstanceInput {
	s.ProjectId = &v
	return s
}

// SetSqlText sets the SqlText field's value.
func (s *AppForStartApplicationInstanceInput) SetSqlText(v string) *AppForStartApplicationInstanceInput {
	s.SqlText = &v
	return s
}

// SetUniqueKey sets the UniqueKey field's value.
func (s *AppForStartApplicationInstanceInput) SetUniqueKey(v string) *AppForStartApplicationInstanceInput {
	s.UniqueKey = &v
	return s
}

// SetUserId sets the UserId field's value.
func (s *AppForStartApplicationInstanceInput) SetUserId(v string) *AppForStartApplicationInstanceInput {
	s.UserId = &v
	return s
}

type DependencyForStartApplicationInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Jars []*string `type:"list" json:",omitempty"`

	PyLibraries []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DependencyForStartApplicationInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DependencyForStartApplicationInstanceInput) GoString() string {
	return s.String()
}

// SetJars sets the Jars field's value.
func (s *DependencyForStartApplicationInstanceInput) SetJars(v []*string) *DependencyForStartApplicationInstanceInput {
	s.Jars = v
	return s
}

// SetPyLibraries sets the PyLibraries field's value.
func (s *DependencyForStartApplicationInstanceInput) SetPyLibraries(v []*string) *DependencyForStartApplicationInstanceInput {
	s.PyLibraries = v
	return s
}

type DeployRequestForStartApplicationInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Namespace *string `type:"string" json:",omitempty"`

	Priority *string `type:"string" json:",omitempty"`

	Queue *string `type:"string" json:",omitempty"`

	ResourcePool *string `type:"string" json:",omitempty"`

	SchedulePolicy *string `type:"string" json:",omitempty" enum:"EnumOfSchedulePolicyForStartApplicationInstanceInput"`

	ScheduleTimeout *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DeployRequestForStartApplicationInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeployRequestForStartApplicationInstanceInput) GoString() string {
	return s.String()
}

// SetNamespace sets the Namespace field's value.
func (s *DeployRequestForStartApplicationInstanceInput) SetNamespace(v string) *DeployRequestForStartApplicationInstanceInput {
	s.Namespace = &v
	return s
}

// SetPriority sets the Priority field's value.
func (s *DeployRequestForStartApplicationInstanceInput) SetPriority(v string) *DeployRequestForStartApplicationInstanceInput {
	s.Priority = &v
	return s
}

// SetQueue sets the Queue field's value.
func (s *DeployRequestForStartApplicationInstanceInput) SetQueue(v string) *DeployRequestForStartApplicationInstanceInput {
	s.Queue = &v
	return s
}

// SetResourcePool sets the ResourcePool field's value.
func (s *DeployRequestForStartApplicationInstanceInput) SetResourcePool(v string) *DeployRequestForStartApplicationInstanceInput {
	s.ResourcePool = &v
	return s
}

// SetSchedulePolicy sets the SchedulePolicy field's value.
func (s *DeployRequestForStartApplicationInstanceInput) SetSchedulePolicy(v string) *DeployRequestForStartApplicationInstanceInput {
	s.SchedulePolicy = &v
	return s
}

// SetScheduleTimeout sets the ScheduleTimeout field's value.
func (s *DeployRequestForStartApplicationInstanceInput) SetScheduleTimeout(v string) *DeployRequestForStartApplicationInstanceInput {
	s.ScheduleTimeout = &v
	return s
}

type RestoreStrategyForStartApplicationInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	SavepointId *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RestoreStrategyForStartApplicationInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RestoreStrategyForStartApplicationInstanceInput) GoString() string {
	return s.String()
}

// SetSavepointId sets the SavepointId field's value.
func (s *RestoreStrategyForStartApplicationInstanceInput) SetSavepointId(v string) *RestoreStrategyForStartApplicationInstanceInput {
	s.SavepointId = &v
	return s
}

// SetType sets the Type field's value.
func (s *RestoreStrategyForStartApplicationInstanceInput) SetType(v string) *RestoreStrategyForStartApplicationInstanceInput {
	s.Type = &v
	return s
}

type StartApplicationInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	App *AppForStartApplicationInstanceInput `type:"structure" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	RestoreStrategy *RestoreStrategyForStartApplicationInstanceInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s StartApplicationInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StartApplicationInstanceInput) GoString() string {
	return s.String()
}

// SetApp sets the App field's value.
func (s *StartApplicationInstanceInput) SetApp(v *AppForStartApplicationInstanceInput) *StartApplicationInstanceInput {
	s.App = v
	return s
}

// SetId sets the Id field's value.
func (s *StartApplicationInstanceInput) SetId(v string) *StartApplicationInstanceInput {
	s.Id = &v
	return s
}

// SetRestoreStrategy sets the RestoreStrategy field's value.
func (s *StartApplicationInstanceInput) SetRestoreStrategy(v *RestoreStrategyForStartApplicationInstanceInput) *StartApplicationInstanceInput {
	s.RestoreStrategy = v
	return s
}

type StartApplicationInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	Success *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s StartApplicationInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StartApplicationInstanceOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *StartApplicationInstanceOutput) SetId(v string) *StartApplicationInstanceOutput {
	s.Id = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *StartApplicationInstanceOutput) SetInstanceId(v string) *StartApplicationInstanceOutput {
	s.InstanceId = &v
	return s
}

// SetSuccess sets the Success field's value.
func (s *StartApplicationInstanceOutput) SetSuccess(v bool) *StartApplicationInstanceOutput {
	s.Success = &v
	return s
}

const (
	// EnumOfEngineVersionForStartApplicationInstanceInputFlinkVersion111 is a EnumOfEngineVersionForStartApplicationInstanceInput enum value
	EnumOfEngineVersionForStartApplicationInstanceInputFlinkVersion111 = "FLINK_VERSION_1_11"

	// EnumOfEngineVersionForStartApplicationInstanceInputFlinkVersion116 is a EnumOfEngineVersionForStartApplicationInstanceInput enum value
	EnumOfEngineVersionForStartApplicationInstanceInputFlinkVersion116 = "FLINK_VERSION_1_16"
)

const (
	// EnumOfJobTypeForStartApplicationInstanceInputFlinkStreamingJar is a EnumOfJobTypeForStartApplicationInstanceInput enum value
	EnumOfJobTypeForStartApplicationInstanceInputFlinkStreamingJar = "FLINK_STREAMING_JAR"

	// EnumOfJobTypeForStartApplicationInstanceInputFlinkStreamingSql is a EnumOfJobTypeForStartApplicationInstanceInput enum value
	EnumOfJobTypeForStartApplicationInstanceInputFlinkStreamingSql = "FLINK_STREAMING_SQL"

	// EnumOfJobTypeForStartApplicationInstanceInputFlinkBatchSql is a EnumOfJobTypeForStartApplicationInstanceInput enum value
	EnumOfJobTypeForStartApplicationInstanceInputFlinkBatchSql = "FLINK_BATCH_SQL"

	// EnumOfJobTypeForStartApplicationInstanceInputFlinkBatchJar is a EnumOfJobTypeForStartApplicationInstanceInput enum value
	EnumOfJobTypeForStartApplicationInstanceInputFlinkBatchJar = "FLINK_BATCH_JAR"
)

const (
	// EnumOfSchedulePolicyForStartApplicationInstanceInputGang is a EnumOfSchedulePolicyForStartApplicationInstanceInput enum value
	EnumOfSchedulePolicyForStartApplicationInstanceInputGang = "GANG"

	// EnumOfSchedulePolicyForStartApplicationInstanceInputDrf is a EnumOfSchedulePolicyForStartApplicationInstanceInput enum value
	EnumOfSchedulePolicyForStartApplicationInstanceInputDrf = "DRF"
)
