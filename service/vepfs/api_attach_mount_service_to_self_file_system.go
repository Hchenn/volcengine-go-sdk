// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vepfs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opAttachMountServiceToSelfFileSystemCommon = "AttachMountServiceToSelfFileSystem"

// AttachMountServiceToSelfFileSystemCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the AttachMountServiceToSelfFileSystemCommon operation. The "output" return
// value will be populated with the AttachMountServiceToSelfFileSystemCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AttachMountServiceToSelfFileSystemCommon Request to send the API call to the service.
// the "output" return value is not valid until after AttachMountServiceToSelfFileSystemCommon Send returns without error.
//
// See AttachMountServiceToSelfFileSystemCommon for more information on using the AttachMountServiceToSelfFileSystemCommon
// API call, and error handling.
//
//    // Example sending a request using the AttachMountServiceToSelfFileSystemCommonRequest method.
//    req, resp := client.AttachMountServiceToSelfFileSystemCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEPFS) AttachMountServiceToSelfFileSystemCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opAttachMountServiceToSelfFileSystemCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AttachMountServiceToSelfFileSystemCommon API operation for VEPFS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEPFS's
// API operation AttachMountServiceToSelfFileSystemCommon for usage and error information.
func (c *VEPFS) AttachMountServiceToSelfFileSystemCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.AttachMountServiceToSelfFileSystemCommonRequest(input)
	return out, req.Send()
}

// AttachMountServiceToSelfFileSystemCommonWithContext is the same as AttachMountServiceToSelfFileSystemCommon with the addition of
// the ability to pass a context and additional request options.
//
// See AttachMountServiceToSelfFileSystemCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEPFS) AttachMountServiceToSelfFileSystemCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.AttachMountServiceToSelfFileSystemCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAttachMountServiceToSelfFileSystem = "AttachMountServiceToSelfFileSystem"

// AttachMountServiceToSelfFileSystemRequest generates a "volcengine/request.Request" representing the
// client's request for the AttachMountServiceToSelfFileSystem operation. The "output" return
// value will be populated with the AttachMountServiceToSelfFileSystemCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AttachMountServiceToSelfFileSystemCommon Request to send the API call to the service.
// the "output" return value is not valid until after AttachMountServiceToSelfFileSystemCommon Send returns without error.
//
// See AttachMountServiceToSelfFileSystem for more information on using the AttachMountServiceToSelfFileSystem
// API call, and error handling.
//
//    // Example sending a request using the AttachMountServiceToSelfFileSystemRequest method.
//    req, resp := client.AttachMountServiceToSelfFileSystemRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEPFS) AttachMountServiceToSelfFileSystemRequest(input *AttachMountServiceToSelfFileSystemInput) (req *request.Request, output *AttachMountServiceToSelfFileSystemOutput) {
	op := &request.Operation{
		Name:       opAttachMountServiceToSelfFileSystem,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AttachMountServiceToSelfFileSystemInput{}
	}

	output = &AttachMountServiceToSelfFileSystemOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AttachMountServiceToSelfFileSystem API operation for VEPFS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEPFS's
// API operation AttachMountServiceToSelfFileSystem for usage and error information.
func (c *VEPFS) AttachMountServiceToSelfFileSystem(input *AttachMountServiceToSelfFileSystemInput) (*AttachMountServiceToSelfFileSystemOutput, error) {
	req, out := c.AttachMountServiceToSelfFileSystemRequest(input)
	return out, req.Send()
}

// AttachMountServiceToSelfFileSystemWithContext is the same as AttachMountServiceToSelfFileSystem with the addition of
// the ability to pass a context and additional request options.
//
// See AttachMountServiceToSelfFileSystem for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEPFS) AttachMountServiceToSelfFileSystemWithContext(ctx volcengine.Context, input *AttachMountServiceToSelfFileSystemInput, opts ...request.Option) (*AttachMountServiceToSelfFileSystemOutput, error) {
	req, out := c.AttachMountServiceToSelfFileSystemRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AttachMountServiceToSelfFileSystemInput struct {
	_ struct{} `type:"structure"`

	CustomerPath *string `type:"string"`

	FileSystemId *string `type:"string"`

	MountServiceId *string `type:"string"`
}

// String returns the string representation
func (s AttachMountServiceToSelfFileSystemInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AttachMountServiceToSelfFileSystemInput) GoString() string {
	return s.String()
}

// SetCustomerPath sets the CustomerPath field's value.
func (s *AttachMountServiceToSelfFileSystemInput) SetCustomerPath(v string) *AttachMountServiceToSelfFileSystemInput {
	s.CustomerPath = &v
	return s
}

// SetFileSystemId sets the FileSystemId field's value.
func (s *AttachMountServiceToSelfFileSystemInput) SetFileSystemId(v string) *AttachMountServiceToSelfFileSystemInput {
	s.FileSystemId = &v
	return s
}

// SetMountServiceId sets the MountServiceId field's value.
func (s *AttachMountServiceToSelfFileSystemInput) SetMountServiceId(v string) *AttachMountServiceToSelfFileSystemInput {
	s.MountServiceId = &v
	return s
}

type AttachMountServiceToSelfFileSystemOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s AttachMountServiceToSelfFileSystemOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AttachMountServiceToSelfFileSystemOutput) GoString() string {
	return s.String()
}
