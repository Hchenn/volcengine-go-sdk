// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vepfs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opSetFilesetQosCommon = "SetFilesetQos"

// SetFilesetQosCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the SetFilesetQosCommon operation. The "output" return
// value will be populated with the SetFilesetQosCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned SetFilesetQosCommon Request to send the API call to the service.
// the "output" return value is not valid until after SetFilesetQosCommon Send returns without error.
//
// See SetFilesetQosCommon for more information on using the SetFilesetQosCommon
// API call, and error handling.
//
//    // Example sending a request using the SetFilesetQosCommonRequest method.
//    req, resp := client.SetFilesetQosCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEPFS) SetFilesetQosCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opSetFilesetQosCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// SetFilesetQosCommon API operation for VEPFS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEPFS's
// API operation SetFilesetQosCommon for usage and error information.
func (c *VEPFS) SetFilesetQosCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.SetFilesetQosCommonRequest(input)
	return out, req.Send()
}

// SetFilesetQosCommonWithContext is the same as SetFilesetQosCommon with the addition of
// the ability to pass a context and additional request options.
//
// See SetFilesetQosCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEPFS) SetFilesetQosCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.SetFilesetQosCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opSetFilesetQos = "SetFilesetQos"

// SetFilesetQosRequest generates a "volcengine/request.Request" representing the
// client's request for the SetFilesetQos operation. The "output" return
// value will be populated with the SetFilesetQosCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned SetFilesetQosCommon Request to send the API call to the service.
// the "output" return value is not valid until after SetFilesetQosCommon Send returns without error.
//
// See SetFilesetQos for more information on using the SetFilesetQos
// API call, and error handling.
//
//    // Example sending a request using the SetFilesetQosRequest method.
//    req, resp := client.SetFilesetQosRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEPFS) SetFilesetQosRequest(input *SetFilesetQosInput) (req *request.Request, output *SetFilesetQosOutput) {
	op := &request.Operation{
		Name:       opSetFilesetQos,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &SetFilesetQosInput{}
	}

	output = &SetFilesetQosOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// SetFilesetQos API operation for VEPFS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEPFS's
// API operation SetFilesetQos for usage and error information.
func (c *VEPFS) SetFilesetQos(input *SetFilesetQosInput) (*SetFilesetQosOutput, error) {
	req, out := c.SetFilesetQosRequest(input)
	return out, req.Send()
}

// SetFilesetQosWithContext is the same as SetFilesetQos with the addition of
// the ability to pass a context and additional request options.
//
// See SetFilesetQos for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEPFS) SetFilesetQosWithContext(ctx volcengine.Context, input *SetFilesetQosInput, opts ...request.Option) (*SetFilesetQosOutput, error) {
	req, out := c.SetFilesetQosRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type SetFilesetQosInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// FileSystemId is a required field
	FileSystemId *string `type:"string" json:",omitempty" required:"true"`

	// FilesetId is a required field
	FilesetId *string `type:"string" json:",omitempty" required:"true"`

	MaxBandwidth *int32 `type:"int32" json:",omitempty"`

	MaxIops *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s SetFilesetQosInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SetFilesetQosInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *SetFilesetQosInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "SetFilesetQosInput"}
	if s.FileSystemId == nil {
		invalidParams.Add(request.NewErrParamRequired("FileSystemId"))
	}
	if s.FilesetId == nil {
		invalidParams.Add(request.NewErrParamRequired("FilesetId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFileSystemId sets the FileSystemId field's value.
func (s *SetFilesetQosInput) SetFileSystemId(v string) *SetFilesetQosInput {
	s.FileSystemId = &v
	return s
}

// SetFilesetId sets the FilesetId field's value.
func (s *SetFilesetQosInput) SetFilesetId(v string) *SetFilesetQosInput {
	s.FilesetId = &v
	return s
}

// SetMaxBandwidth sets the MaxBandwidth field's value.
func (s *SetFilesetQosInput) SetMaxBandwidth(v int32) *SetFilesetQosInput {
	s.MaxBandwidth = &v
	return s
}

// SetMaxIops sets the MaxIops field's value.
func (s *SetFilesetQosInput) SetMaxIops(v int32) *SetFilesetQosInput {
	s.MaxIops = &v
	return s
}

type SetFilesetQosOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s SetFilesetQosOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SetFilesetQosOutput) GoString() string {
	return s.String()
}
