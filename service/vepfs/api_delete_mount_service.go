// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vepfs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteMountServiceCommon = "DeleteMountService"

// DeleteMountServiceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteMountServiceCommon operation. The "output" return
// value will be populated with the DeleteMountServiceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteMountServiceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteMountServiceCommon Send returns without error.
//
// See DeleteMountServiceCommon for more information on using the DeleteMountServiceCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteMountServiceCommonRequest method.
//    req, resp := client.DeleteMountServiceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEPFS) DeleteMountServiceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteMountServiceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteMountServiceCommon API operation for VEPFS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEPFS's
// API operation DeleteMountServiceCommon for usage and error information.
func (c *VEPFS) DeleteMountServiceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteMountServiceCommonRequest(input)
	return out, req.Send()
}

// DeleteMountServiceCommonWithContext is the same as DeleteMountServiceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteMountServiceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEPFS) DeleteMountServiceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteMountServiceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteMountService = "DeleteMountService"

// DeleteMountServiceRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteMountService operation. The "output" return
// value will be populated with the DeleteMountServiceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteMountServiceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteMountServiceCommon Send returns without error.
//
// See DeleteMountService for more information on using the DeleteMountService
// API call, and error handling.
//
//    // Example sending a request using the DeleteMountServiceRequest method.
//    req, resp := client.DeleteMountServiceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEPFS) DeleteMountServiceRequest(input *DeleteMountServiceInput) (req *request.Request, output *DeleteMountServiceOutput) {
	op := &request.Operation{
		Name:       opDeleteMountService,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteMountServiceInput{}
	}

	output = &DeleteMountServiceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteMountService API operation for VEPFS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEPFS's
// API operation DeleteMountService for usage and error information.
func (c *VEPFS) DeleteMountService(input *DeleteMountServiceInput) (*DeleteMountServiceOutput, error) {
	req, out := c.DeleteMountServiceRequest(input)
	return out, req.Send()
}

// DeleteMountServiceWithContext is the same as DeleteMountService with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteMountService for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEPFS) DeleteMountServiceWithContext(ctx volcengine.Context, input *DeleteMountServiceInput, opts ...request.Option) (*DeleteMountServiceOutput, error) {
	req, out := c.DeleteMountServiceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteMountServiceInput struct {
	_ struct{} `type:"structure"`

	MountServiceId *string `type:"string"`
}

// String returns the string representation
func (s DeleteMountServiceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteMountServiceInput) GoString() string {
	return s.String()
}

// SetMountServiceId sets the MountServiceId field's value.
func (s *DeleteMountServiceInput) SetMountServiceId(v string) *DeleteMountServiceInput {
	s.MountServiceId = &v
	return s
}

type DeleteMountServiceOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteMountServiceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteMountServiceOutput) GoString() string {
	return s.String()
}
