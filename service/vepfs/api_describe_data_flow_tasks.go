// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vepfs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDataFlowTasksCommon = "DescribeDataFlowTasks"

// DescribeDataFlowTasksCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDataFlowTasksCommon operation. The "output" return
// value will be populated with the DescribeDataFlowTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDataFlowTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDataFlowTasksCommon Send returns without error.
//
// See DescribeDataFlowTasksCommon for more information on using the DescribeDataFlowTasksCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDataFlowTasksCommonRequest method.
//    req, resp := client.DescribeDataFlowTasksCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEPFS) DescribeDataFlowTasksCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDataFlowTasksCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDataFlowTasksCommon API operation for VEPFS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEPFS's
// API operation DescribeDataFlowTasksCommon for usage and error information.
func (c *VEPFS) DescribeDataFlowTasksCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDataFlowTasksCommonRequest(input)
	return out, req.Send()
}

// DescribeDataFlowTasksCommonWithContext is the same as DescribeDataFlowTasksCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDataFlowTasksCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEPFS) DescribeDataFlowTasksCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDataFlowTasksCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDataFlowTasks = "DescribeDataFlowTasks"

// DescribeDataFlowTasksRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDataFlowTasks operation. The "output" return
// value will be populated with the DescribeDataFlowTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDataFlowTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDataFlowTasksCommon Send returns without error.
//
// See DescribeDataFlowTasks for more information on using the DescribeDataFlowTasks
// API call, and error handling.
//
//    // Example sending a request using the DescribeDataFlowTasksRequest method.
//    req, resp := client.DescribeDataFlowTasksRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEPFS) DescribeDataFlowTasksRequest(input *DescribeDataFlowTasksInput) (req *request.Request, output *DescribeDataFlowTasksOutput) {
	op := &request.Operation{
		Name:       opDescribeDataFlowTasks,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDataFlowTasksInput{}
	}

	output = &DescribeDataFlowTasksOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDataFlowTasks API operation for VEPFS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEPFS's
// API operation DescribeDataFlowTasks for usage and error information.
func (c *VEPFS) DescribeDataFlowTasks(input *DescribeDataFlowTasksInput) (*DescribeDataFlowTasksOutput, error) {
	req, out := c.DescribeDataFlowTasksRequest(input)
	return out, req.Send()
}

// DescribeDataFlowTasksWithContext is the same as DescribeDataFlowTasks with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDataFlowTasks for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEPFS) DescribeDataFlowTasksWithContext(ctx volcengine.Context, input *DescribeDataFlowTasksInput, opts ...request.Option) (*DescribeDataFlowTasksOutput, error) {
	req, out := c.DescribeDataFlowTasksRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataFlowTaskForDescribeDataFlowTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	DataFlowTaskId *string `type:"string" json:",omitempty"`

	DataStorage *string `type:"string" json:",omitempty"`

	DataStoragePath *string `type:"string" json:",omitempty"`

	DataType *string `type:"string" json:",omitempty" enum:"EnumOfDataTypeForDescribeDataFlowTasksOutput"`

	EndTime *string `type:"string" json:",omitempty"`

	EntryListFileInfo *EntryListFileInfoForDescribeDataFlowTasksOutput `type:"structure" json:",omitempty"`

	EntryListFileUrl *string `type:"string" json:",omitempty"`

	ExecCount *string `type:"string" json:",omitempty"`

	ExecSize *string `type:"string" json:",omitempty"`

	ExportSymlinkPolicy *string `type:"string" json:",omitempty" enum:"EnumOfExportSymlinkPolicyForDescribeDataFlowTasksOutput"`

	FailedCount *string `type:"string" json:",omitempty"`

	FileSystemId *string `type:"string" json:",omitempty"`

	FilesetId *string `type:"string" json:",omitempty"`

	FilesetPath *string `type:"string" json:",omitempty"`

	QueueCount *string `type:"string" json:",omitempty"`

	Reports []*ReportForDescribeDataFlowTasksOutput `type:"list" json:",omitempty"`

	SameNameFilePolicy *string `type:"string" json:",omitempty" enum:"EnumOfSameNameFilePolicyForDescribeDataFlowTasksOutput"`

	StartTime *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty" enum:"EnumOfStatusForDescribeDataFlowTasksOutput"`

	SubPath *string `type:"string" json:",omitempty"`

	TaskAction *string `type:"string" json:",omitempty" enum:"EnumOfTaskActionForDescribeDataFlowTasksOutput"`

	TotalSize *string `type:"string" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataFlowTaskForDescribeDataFlowTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataFlowTaskForDescribeDataFlowTasksOutput) GoString() string {
	return s.String()
}

// SetCreateTime sets the CreateTime field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetCreateTime(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.CreateTime = &v
	return s
}

// SetDataFlowTaskId sets the DataFlowTaskId field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetDataFlowTaskId(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.DataFlowTaskId = &v
	return s
}

// SetDataStorage sets the DataStorage field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetDataStorage(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.DataStorage = &v
	return s
}

// SetDataStoragePath sets the DataStoragePath field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetDataStoragePath(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.DataStoragePath = &v
	return s
}

// SetDataType sets the DataType field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetDataType(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.DataType = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetEndTime(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.EndTime = &v
	return s
}

// SetEntryListFileInfo sets the EntryListFileInfo field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetEntryListFileInfo(v *EntryListFileInfoForDescribeDataFlowTasksOutput) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.EntryListFileInfo = v
	return s
}

// SetEntryListFileUrl sets the EntryListFileUrl field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetEntryListFileUrl(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.EntryListFileUrl = &v
	return s
}

// SetExecCount sets the ExecCount field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetExecCount(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.ExecCount = &v
	return s
}

// SetExecSize sets the ExecSize field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetExecSize(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.ExecSize = &v
	return s
}

// SetExportSymlinkPolicy sets the ExportSymlinkPolicy field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetExportSymlinkPolicy(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.ExportSymlinkPolicy = &v
	return s
}

// SetFailedCount sets the FailedCount field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetFailedCount(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.FailedCount = &v
	return s
}

// SetFileSystemId sets the FileSystemId field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetFileSystemId(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.FileSystemId = &v
	return s
}

// SetFilesetId sets the FilesetId field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetFilesetId(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.FilesetId = &v
	return s
}

// SetFilesetPath sets the FilesetPath field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetFilesetPath(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.FilesetPath = &v
	return s
}

// SetQueueCount sets the QueueCount field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetQueueCount(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.QueueCount = &v
	return s
}

// SetReports sets the Reports field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetReports(v []*ReportForDescribeDataFlowTasksOutput) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.Reports = v
	return s
}

// SetSameNameFilePolicy sets the SameNameFilePolicy field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetSameNameFilePolicy(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.SameNameFilePolicy = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetStartTime(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.StartTime = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetStatus(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.Status = &v
	return s
}

// SetSubPath sets the SubPath field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetSubPath(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.SubPath = &v
	return s
}

// SetTaskAction sets the TaskAction field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetTaskAction(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.TaskAction = &v
	return s
}

// SetTotalSize sets the TotalSize field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetTotalSize(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.TotalSize = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DataFlowTaskForDescribeDataFlowTasksOutput) SetUpdateTime(v string) *DataFlowTaskForDescribeDataFlowTasksOutput {
	s.UpdateTime = &v
	return s
}

type DescribeDataFlowTasksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DataFlowTaskIds *string `type:"string" json:",omitempty"`

	// FileSystemId is a required field
	FileSystemId *string `type:"string" json:",omitempty" required:"true"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	TaskAction *string `type:"string" json:",omitempty" enum:"EnumOfTaskActionForDescribeDataFlowTasksInput"`
}

// String returns the string representation
func (s DescribeDataFlowTasksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDataFlowTasksInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDataFlowTasksInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDataFlowTasksInput"}
	if s.FileSystemId == nil {
		invalidParams.Add(request.NewErrParamRequired("FileSystemId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDataFlowTaskIds sets the DataFlowTaskIds field's value.
func (s *DescribeDataFlowTasksInput) SetDataFlowTaskIds(v string) *DescribeDataFlowTasksInput {
	s.DataFlowTaskIds = &v
	return s
}

// SetFileSystemId sets the FileSystemId field's value.
func (s *DescribeDataFlowTasksInput) SetFileSystemId(v string) *DescribeDataFlowTasksInput {
	s.FileSystemId = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeDataFlowTasksInput) SetPageNumber(v int32) *DescribeDataFlowTasksInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeDataFlowTasksInput) SetPageSize(v int32) *DescribeDataFlowTasksInput {
	s.PageSize = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeDataFlowTasksInput) SetStatus(v string) *DescribeDataFlowTasksInput {
	s.Status = &v
	return s
}

// SetTaskAction sets the TaskAction field's value.
func (s *DescribeDataFlowTasksInput) SetTaskAction(v string) *DescribeDataFlowTasksInput {
	s.TaskAction = &v
	return s
}

type DescribeDataFlowTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	DataFlowTasks []*DataFlowTaskForDescribeDataFlowTasksOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDataFlowTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDataFlowTasksOutput) GoString() string {
	return s.String()
}

// SetDataFlowTasks sets the DataFlowTasks field's value.
func (s *DescribeDataFlowTasksOutput) SetDataFlowTasks(v []*DataFlowTaskForDescribeDataFlowTasksOutput) *DescribeDataFlowTasksOutput {
	s.DataFlowTasks = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeDataFlowTasksOutput) SetPageNumber(v int32) *DescribeDataFlowTasksOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeDataFlowTasksOutput) SetPageSize(v int32) *DescribeDataFlowTasksOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeDataFlowTasksOutput) SetTotalCount(v int32) *DescribeDataFlowTasksOutput {
	s.TotalCount = &v
	return s
}

type EntryListFileInfoForDescribeDataFlowTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FileBucket *string `type:"string" json:",omitempty"`

	FileKey *string `type:"string" json:",omitempty"`

	FileName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s EntryListFileInfoForDescribeDataFlowTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EntryListFileInfoForDescribeDataFlowTasksOutput) GoString() string {
	return s.String()
}

// SetFileBucket sets the FileBucket field's value.
func (s *EntryListFileInfoForDescribeDataFlowTasksOutput) SetFileBucket(v string) *EntryListFileInfoForDescribeDataFlowTasksOutput {
	s.FileBucket = &v
	return s
}

// SetFileKey sets the FileKey field's value.
func (s *EntryListFileInfoForDescribeDataFlowTasksOutput) SetFileKey(v string) *EntryListFileInfoForDescribeDataFlowTasksOutput {
	s.FileKey = &v
	return s
}

// SetFileName sets the FileName field's value.
func (s *EntryListFileInfoForDescribeDataFlowTasksOutput) SetFileName(v string) *EntryListFileInfoForDescribeDataFlowTasksOutput {
	s.FileName = &v
	return s
}

type ReportForDescribeDataFlowTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Path *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty" enum:"EnumOfTypeForDescribeDataFlowTasksOutput"`
}

// String returns the string representation
func (s ReportForDescribeDataFlowTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ReportForDescribeDataFlowTasksOutput) GoString() string {
	return s.String()
}

// SetPath sets the Path field's value.
func (s *ReportForDescribeDataFlowTasksOutput) SetPath(v string) *ReportForDescribeDataFlowTasksOutput {
	s.Path = &v
	return s
}

// SetType sets the Type field's value.
func (s *ReportForDescribeDataFlowTasksOutput) SetType(v string) *ReportForDescribeDataFlowTasksOutput {
	s.Type = &v
	return s
}

const (
	// EnumOfDataTypeForDescribeDataFlowTasksOutputMetadata is a EnumOfDataTypeForDescribeDataFlowTasksOutput enum value
	EnumOfDataTypeForDescribeDataFlowTasksOutputMetadata = "Metadata"

	// EnumOfDataTypeForDescribeDataFlowTasksOutputMetaAndData is a EnumOfDataTypeForDescribeDataFlowTasksOutput enum value
	EnumOfDataTypeForDescribeDataFlowTasksOutputMetaAndData = "MetaAndData"
)

const (
	// EnumOfExportSymlinkPolicyForDescribeDataFlowTasksOutputSkip is a EnumOfExportSymlinkPolicyForDescribeDataFlowTasksOutput enum value
	EnumOfExportSymlinkPolicyForDescribeDataFlowTasksOutputSkip = "Skip"

	// EnumOfExportSymlinkPolicyForDescribeDataFlowTasksOutputNormalFile is a EnumOfExportSymlinkPolicyForDescribeDataFlowTasksOutput enum value
	EnumOfExportSymlinkPolicyForDescribeDataFlowTasksOutputNormalFile = "NormalFile"
)

const (
	// EnumOfSameNameFilePolicyForDescribeDataFlowTasksOutputSkip is a EnumOfSameNameFilePolicyForDescribeDataFlowTasksOutput enum value
	EnumOfSameNameFilePolicyForDescribeDataFlowTasksOutputSkip = "Skip"

	// EnumOfSameNameFilePolicyForDescribeDataFlowTasksOutputKeepLatest is a EnumOfSameNameFilePolicyForDescribeDataFlowTasksOutput enum value
	EnumOfSameNameFilePolicyForDescribeDataFlowTasksOutputKeepLatest = "KeepLatest"

	// EnumOfSameNameFilePolicyForDescribeDataFlowTasksOutputOverWrite is a EnumOfSameNameFilePolicyForDescribeDataFlowTasksOutput enum value
	EnumOfSameNameFilePolicyForDescribeDataFlowTasksOutputOverWrite = "OverWrite"
)

const (
	// EnumOfStatusForDescribeDataFlowTasksOutputCreating is a EnumOfStatusForDescribeDataFlowTasksOutput enum value
	EnumOfStatusForDescribeDataFlowTasksOutputCreating = "Creating"

	// EnumOfStatusForDescribeDataFlowTasksOutputRunning is a EnumOfStatusForDescribeDataFlowTasksOutput enum value
	EnumOfStatusForDescribeDataFlowTasksOutputRunning = "Running"

	// EnumOfStatusForDescribeDataFlowTasksOutputFinished is a EnumOfStatusForDescribeDataFlowTasksOutput enum value
	EnumOfStatusForDescribeDataFlowTasksOutputFinished = "Finished"

	// EnumOfStatusForDescribeDataFlowTasksOutputCanceling is a EnumOfStatusForDescribeDataFlowTasksOutput enum value
	EnumOfStatusForDescribeDataFlowTasksOutputCanceling = "Canceling"

	// EnumOfStatusForDescribeDataFlowTasksOutputCanceled is a EnumOfStatusForDescribeDataFlowTasksOutput enum value
	EnumOfStatusForDescribeDataFlowTasksOutputCanceled = "Canceled"

	// EnumOfStatusForDescribeDataFlowTasksOutputDeleting is a EnumOfStatusForDescribeDataFlowTasksOutput enum value
	EnumOfStatusForDescribeDataFlowTasksOutputDeleting = "Deleting"

	// EnumOfStatusForDescribeDataFlowTasksOutputError is a EnumOfStatusForDescribeDataFlowTasksOutput enum value
	EnumOfStatusForDescribeDataFlowTasksOutputError = "Error"

	// EnumOfStatusForDescribeDataFlowTasksOutputDeleted is a EnumOfStatusForDescribeDataFlowTasksOutput enum value
	EnumOfStatusForDescribeDataFlowTasksOutputDeleted = "Deleted"
)

const (
	// EnumOfTaskActionForDescribeDataFlowTasksInputImport is a EnumOfTaskActionForDescribeDataFlowTasksInput enum value
	EnumOfTaskActionForDescribeDataFlowTasksInputImport = "Import"

	// EnumOfTaskActionForDescribeDataFlowTasksInputExport is a EnumOfTaskActionForDescribeDataFlowTasksInput enum value
	EnumOfTaskActionForDescribeDataFlowTasksInputExport = "Export"

	// EnumOfTaskActionForDescribeDataFlowTasksInputInventory is a EnumOfTaskActionForDescribeDataFlowTasksInput enum value
	EnumOfTaskActionForDescribeDataFlowTasksInputInventory = "Inventory"

	// EnumOfTaskActionForDescribeDataFlowTasksInputDelete is a EnumOfTaskActionForDescribeDataFlowTasksInput enum value
	EnumOfTaskActionForDescribeDataFlowTasksInputDelete = "Delete"
)

const (
	// EnumOfTaskActionForDescribeDataFlowTasksOutputImport is a EnumOfTaskActionForDescribeDataFlowTasksOutput enum value
	EnumOfTaskActionForDescribeDataFlowTasksOutputImport = "Import"

	// EnumOfTaskActionForDescribeDataFlowTasksOutputExport is a EnumOfTaskActionForDescribeDataFlowTasksOutput enum value
	EnumOfTaskActionForDescribeDataFlowTasksOutputExport = "Export"

	// EnumOfTaskActionForDescribeDataFlowTasksOutputInventory is a EnumOfTaskActionForDescribeDataFlowTasksOutput enum value
	EnumOfTaskActionForDescribeDataFlowTasksOutputInventory = "Inventory"

	// EnumOfTaskActionForDescribeDataFlowTasksOutputDelete is a EnumOfTaskActionForDescribeDataFlowTasksOutput enum value
	EnumOfTaskActionForDescribeDataFlowTasksOutputDelete = "Delete"
)

const (
	// EnumOfTypeForDescribeDataFlowTasksOutputTotalFiles is a EnumOfTypeForDescribeDataFlowTasksOutput enum value
	EnumOfTypeForDescribeDataFlowTasksOutputTotalFiles = "TotalFiles"

	// EnumOfTypeForDescribeDataFlowTasksOutputFailedFiles is a EnumOfTypeForDescribeDataFlowTasksOutput enum value
	EnumOfTypeForDescribeDataFlowTasksOutputFailedFiles = "FailedFiles"

	// EnumOfTypeForDescribeDataFlowTasksOutputSuccessFiles is a EnumOfTypeForDescribeDataFlowTasksOutput enum value
	EnumOfTypeForDescribeDataFlowTasksOutputSuccessFiles = "SuccessFiles"

	// EnumOfTypeForDescribeDataFlowTasksOutputInventoryFiles is a EnumOfTypeForDescribeDataFlowTasksOutput enum value
	EnumOfTypeForDescribeDataFlowTasksOutputInventoryFiles = "InventoryFiles"
)
