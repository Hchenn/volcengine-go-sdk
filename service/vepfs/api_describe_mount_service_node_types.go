// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vepfs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeMountServiceNodeTypesCommon = "DescribeMountServiceNodeTypes"

// DescribeMountServiceNodeTypesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeMountServiceNodeTypesCommon operation. The "output" return
// value will be populated with the DescribeMountServiceNodeTypesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeMountServiceNodeTypesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeMountServiceNodeTypesCommon Send returns without error.
//
// See DescribeMountServiceNodeTypesCommon for more information on using the DescribeMountServiceNodeTypesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeMountServiceNodeTypesCommonRequest method.
//    req, resp := client.DescribeMountServiceNodeTypesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEPFS) DescribeMountServiceNodeTypesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeMountServiceNodeTypesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeMountServiceNodeTypesCommon API operation for VEPFS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEPFS's
// API operation DescribeMountServiceNodeTypesCommon for usage and error information.
func (c *VEPFS) DescribeMountServiceNodeTypesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeMountServiceNodeTypesCommonRequest(input)
	return out, req.Send()
}

// DescribeMountServiceNodeTypesCommonWithContext is the same as DescribeMountServiceNodeTypesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeMountServiceNodeTypesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEPFS) DescribeMountServiceNodeTypesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeMountServiceNodeTypesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeMountServiceNodeTypes = "DescribeMountServiceNodeTypes"

// DescribeMountServiceNodeTypesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeMountServiceNodeTypes operation. The "output" return
// value will be populated with the DescribeMountServiceNodeTypesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeMountServiceNodeTypesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeMountServiceNodeTypesCommon Send returns without error.
//
// See DescribeMountServiceNodeTypes for more information on using the DescribeMountServiceNodeTypes
// API call, and error handling.
//
//    // Example sending a request using the DescribeMountServiceNodeTypesRequest method.
//    req, resp := client.DescribeMountServiceNodeTypesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEPFS) DescribeMountServiceNodeTypesRequest(input *DescribeMountServiceNodeTypesInput) (req *request.Request, output *DescribeMountServiceNodeTypesOutput) {
	op := &request.Operation{
		Name:       opDescribeMountServiceNodeTypes,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeMountServiceNodeTypesInput{}
	}

	output = &DescribeMountServiceNodeTypesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeMountServiceNodeTypes API operation for VEPFS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEPFS's
// API operation DescribeMountServiceNodeTypes for usage and error information.
func (c *VEPFS) DescribeMountServiceNodeTypes(input *DescribeMountServiceNodeTypesInput) (*DescribeMountServiceNodeTypesOutput, error) {
	req, out := c.DescribeMountServiceNodeTypesRequest(input)
	return out, req.Send()
}

// DescribeMountServiceNodeTypesWithContext is the same as DescribeMountServiceNodeTypes with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeMountServiceNodeTypes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEPFS) DescribeMountServiceNodeTypesWithContext(ctx volcengine.Context, input *DescribeMountServiceNodeTypesInput, opts ...request.Option) (*DescribeMountServiceNodeTypesOutput, error) {
	req, out := c.DescribeMountServiceNodeTypesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeMountServiceNodeTypesInput struct {
	_ struct{} `type:"structure"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s DescribeMountServiceNodeTypesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeMountServiceNodeTypesInput) GoString() string {
	return s.String()
}

// SetZoneId sets the ZoneId field's value.
func (s *DescribeMountServiceNodeTypesInput) SetZoneId(v string) *DescribeMountServiceNodeTypesInput {
	s.ZoneId = &v
	return s
}

type DescribeMountServiceNodeTypesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	NodeTypeInfos []*NodeTypeInfoForDescribeMountServiceNodeTypesOutput `type:"list"`
}

// String returns the string representation
func (s DescribeMountServiceNodeTypesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeMountServiceNodeTypesOutput) GoString() string {
	return s.String()
}

// SetNodeTypeInfos sets the NodeTypeInfos field's value.
func (s *DescribeMountServiceNodeTypesOutput) SetNodeTypeInfos(v []*NodeTypeInfoForDescribeMountServiceNodeTypesOutput) *DescribeMountServiceNodeTypesOutput {
	s.NodeTypeInfos = v
	return s
}

type NodeTypeInfoForDescribeMountServiceNodeTypesOutput struct {
	_ struct{} `type:"structure"`

	Description *string `type:"string"`

	NodeType *string `type:"string"`
}

// String returns the string representation
func (s NodeTypeInfoForDescribeMountServiceNodeTypesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NodeTypeInfoForDescribeMountServiceNodeTypesOutput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *NodeTypeInfoForDescribeMountServiceNodeTypesOutput) SetDescription(v string) *NodeTypeInfoForDescribeMountServiceNodeTypesOutput {
	s.Description = &v
	return s
}

// SetNodeType sets the NodeType field's value.
func (s *NodeTypeInfoForDescribeMountServiceNodeTypesOutput) SetNodeType(v string) *NodeTypeInfoForDescribeMountServiceNodeTypesOutput {
	s.NodeType = &v
	return s
}
