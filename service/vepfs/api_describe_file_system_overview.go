// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vepfs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeFileSystemOverviewCommon = "DescribeFileSystemOverview"

// DescribeFileSystemOverviewCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeFileSystemOverviewCommon operation. The "output" return
// value will be populated with the DescribeFileSystemOverviewCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeFileSystemOverviewCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeFileSystemOverviewCommon Send returns without error.
//
// See DescribeFileSystemOverviewCommon for more information on using the DescribeFileSystemOverviewCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeFileSystemOverviewCommonRequest method.
//    req, resp := client.DescribeFileSystemOverviewCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEPFS) DescribeFileSystemOverviewCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeFileSystemOverviewCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeFileSystemOverviewCommon API operation for VEPFS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEPFS's
// API operation DescribeFileSystemOverviewCommon for usage and error information.
func (c *VEPFS) DescribeFileSystemOverviewCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeFileSystemOverviewCommonRequest(input)
	return out, req.Send()
}

// DescribeFileSystemOverviewCommonWithContext is the same as DescribeFileSystemOverviewCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeFileSystemOverviewCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEPFS) DescribeFileSystemOverviewCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeFileSystemOverviewCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeFileSystemOverview = "DescribeFileSystemOverview"

// DescribeFileSystemOverviewRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeFileSystemOverview operation. The "output" return
// value will be populated with the DescribeFileSystemOverviewCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeFileSystemOverviewCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeFileSystemOverviewCommon Send returns without error.
//
// See DescribeFileSystemOverview for more information on using the DescribeFileSystemOverview
// API call, and error handling.
//
//    // Example sending a request using the DescribeFileSystemOverviewRequest method.
//    req, resp := client.DescribeFileSystemOverviewRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEPFS) DescribeFileSystemOverviewRequest(input *DescribeFileSystemOverviewInput) (req *request.Request, output *DescribeFileSystemOverviewOutput) {
	op := &request.Operation{
		Name:       opDescribeFileSystemOverview,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeFileSystemOverviewInput{}
	}

	output = &DescribeFileSystemOverviewOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeFileSystemOverview API operation for VEPFS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEPFS's
// API operation DescribeFileSystemOverview for usage and error information.
func (c *VEPFS) DescribeFileSystemOverview(input *DescribeFileSystemOverviewInput) (*DescribeFileSystemOverviewOutput, error) {
	req, out := c.DescribeFileSystemOverviewRequest(input)
	return out, req.Send()
}

// DescribeFileSystemOverviewWithContext is the same as DescribeFileSystemOverview with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeFileSystemOverview for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEPFS) DescribeFileSystemOverviewWithContext(ctx volcengine.Context, input *DescribeFileSystemOverviewInput, opts ...request.Option) (*DescribeFileSystemOverviewOutput, error) {
	req, out := c.DescribeFileSystemOverviewRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeFileSystemOverviewInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DescribeFileSystemOverviewInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeFileSystemOverviewInput) GoString() string {
	return s.String()
}

type DescribeFileSystemOverviewOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	OverView *OverViewForDescribeFileSystemOverviewOutput `type:"structure"`
}

// String returns the string representation
func (s DescribeFileSystemOverviewOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeFileSystemOverviewOutput) GoString() string {
	return s.String()
}

// SetOverView sets the OverView field's value.
func (s *DescribeFileSystemOverviewOutput) SetOverView(v *OverViewForDescribeFileSystemOverviewOutput) *DescribeFileSystemOverviewOutput {
	s.OverView = v
	return s
}

type OverViewForDescribeFileSystemOverviewOutput struct {
	_ struct{} `type:"structure"`

	AccountId *string `type:"string"`

	ErrorCount *int32 `type:"int32"`

	OtherCount *int32 `type:"int32"`

	RegionId *string `type:"string"`

	RunningCount *int32 `type:"int32"`

	TotalCount *int32 `type:"int32"`
}

// String returns the string representation
func (s OverViewForDescribeFileSystemOverviewOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OverViewForDescribeFileSystemOverviewOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *OverViewForDescribeFileSystemOverviewOutput) SetAccountId(v string) *OverViewForDescribeFileSystemOverviewOutput {
	s.AccountId = &v
	return s
}

// SetErrorCount sets the ErrorCount field's value.
func (s *OverViewForDescribeFileSystemOverviewOutput) SetErrorCount(v int32) *OverViewForDescribeFileSystemOverviewOutput {
	s.ErrorCount = &v
	return s
}

// SetOtherCount sets the OtherCount field's value.
func (s *OverViewForDescribeFileSystemOverviewOutput) SetOtherCount(v int32) *OverViewForDescribeFileSystemOverviewOutput {
	s.OtherCount = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *OverViewForDescribeFileSystemOverviewOutput) SetRegionId(v string) *OverViewForDescribeFileSystemOverviewOutput {
	s.RegionId = &v
	return s
}

// SetRunningCount sets the RunningCount field's value.
func (s *OverViewForDescribeFileSystemOverviewOutput) SetRunningCount(v int32) *OverViewForDescribeFileSystemOverviewOutput {
	s.RunningCount = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *OverViewForDescribeFileSystemOverviewOutput) SetTotalCount(v int32) *OverViewForDescribeFileSystemOverviewOutput {
	s.TotalCount = &v
	return s
}
