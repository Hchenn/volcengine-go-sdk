// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package advdefence

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescWebAtkTopSrcIpCommon = "DescWebAtkTopSrcIp"

// DescWebAtkTopSrcIpCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescWebAtkTopSrcIpCommon operation. The "output" return
// value will be populated with the DescWebAtkTopSrcIpCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescWebAtkTopSrcIpCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescWebAtkTopSrcIpCommon Send returns without error.
//
// See DescWebAtkTopSrcIpCommon for more information on using the DescWebAtkTopSrcIpCommon
// API call, and error handling.
//
//    // Example sending a request using the DescWebAtkTopSrcIpCommonRequest method.
//    req, resp := client.DescWebAtkTopSrcIpCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE) DescWebAtkTopSrcIpCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescWebAtkTopSrcIpCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescWebAtkTopSrcIpCommon API operation for ADVDEFENCE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE's
// API operation DescWebAtkTopSrcIpCommon for usage and error information.
func (c *ADVDEFENCE) DescWebAtkTopSrcIpCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescWebAtkTopSrcIpCommonRequest(input)
	return out, req.Send()
}

// DescWebAtkTopSrcIpCommonWithContext is the same as DescWebAtkTopSrcIpCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescWebAtkTopSrcIpCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE) DescWebAtkTopSrcIpCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescWebAtkTopSrcIpCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescWebAtkTopSrcIp = "DescWebAtkTopSrcIp"

// DescWebAtkTopSrcIpRequest generates a "volcengine/request.Request" representing the
// client's request for the DescWebAtkTopSrcIp operation. The "output" return
// value will be populated with the DescWebAtkTopSrcIpCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescWebAtkTopSrcIpCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescWebAtkTopSrcIpCommon Send returns without error.
//
// See DescWebAtkTopSrcIp for more information on using the DescWebAtkTopSrcIp
// API call, and error handling.
//
//    // Example sending a request using the DescWebAtkTopSrcIpRequest method.
//    req, resp := client.DescWebAtkTopSrcIpRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE) DescWebAtkTopSrcIpRequest(input *DescWebAtkTopSrcIpInput) (req *request.Request, output *DescWebAtkTopSrcIpOutput) {
	op := &request.Operation{
		Name:       opDescWebAtkTopSrcIp,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescWebAtkTopSrcIpInput{}
	}

	output = &DescWebAtkTopSrcIpOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescWebAtkTopSrcIp API operation for ADVDEFENCE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE's
// API operation DescWebAtkTopSrcIp for usage and error information.
func (c *ADVDEFENCE) DescWebAtkTopSrcIp(input *DescWebAtkTopSrcIpInput) (*DescWebAtkTopSrcIpOutput, error) {
	req, out := c.DescWebAtkTopSrcIpRequest(input)
	return out, req.Send()
}

// DescWebAtkTopSrcIpWithContext is the same as DescWebAtkTopSrcIp with the addition of
// the ability to pass a context and additional request options.
//
// See DescWebAtkTopSrcIp for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE) DescWebAtkTopSrcIpWithContext(ctx volcengine.Context, input *DescWebAtkTopSrcIpInput, opts ...request.Option) (*DescWebAtkTopSrcIpOutput, error) {
	req, out := c.DescWebAtkTopSrcIpRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescWebAtkTopSrcIpInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BeginTime *int32 `type:"int32" json:",omitempty"`

	EndTime *int32 `type:"int32" json:",omitempty"`

	Hosts []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescWebAtkTopSrcIpInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescWebAtkTopSrcIpInput) GoString() string {
	return s.String()
}

// SetBeginTime sets the BeginTime field's value.
func (s *DescWebAtkTopSrcIpInput) SetBeginTime(v int32) *DescWebAtkTopSrcIpInput {
	s.BeginTime = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DescWebAtkTopSrcIpInput) SetEndTime(v int32) *DescWebAtkTopSrcIpInput {
	s.EndTime = &v
	return s
}

// SetHosts sets the Hosts field's value.
func (s *DescWebAtkTopSrcIpInput) SetHosts(v []*string) *DescWebAtkTopSrcIpInput {
	s.Hosts = v
	return s
}

type DescWebAtkTopSrcIpOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AttackCount *int32 `type:"int32" json:",omitempty"`

	AttackIP *string `type:"string" json:",omitempty"`

	Percentage *float64 `type:"float" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescWebAtkTopSrcIpOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescWebAtkTopSrcIpOutput) GoString() string {
	return s.String()
}

// SetAttackCount sets the AttackCount field's value.
func (s *DescWebAtkTopSrcIpOutput) SetAttackCount(v int32) *DescWebAtkTopSrcIpOutput {
	s.AttackCount = &v
	return s
}

// SetAttackIP sets the AttackIP field's value.
func (s *DescWebAtkTopSrcIpOutput) SetAttackIP(v string) *DescWebAtkTopSrcIpOutput {
	s.AttackIP = &v
	return s
}

// SetPercentage sets the Percentage field's value.
func (s *DescWebAtkTopSrcIpOutput) SetPercentage(v float64) *DescWebAtkTopSrcIpOutput {
	s.Percentage = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *DescWebAtkTopSrcIpOutput) SetRegion(v string) *DescWebAtkTopSrcIpOutput {
	s.Region = &v
	return s
}
