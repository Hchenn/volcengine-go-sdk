// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package advdefence

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetHostDefStatusCommon = "GetHostDefStatus"

// GetHostDefStatusCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetHostDefStatusCommon operation. The "output" return
// value will be populated with the GetHostDefStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetHostDefStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetHostDefStatusCommon Send returns without error.
//
// See GetHostDefStatusCommon for more information on using the GetHostDefStatusCommon
// API call, and error handling.
//
//    // Example sending a request using the GetHostDefStatusCommonRequest method.
//    req, resp := client.GetHostDefStatusCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE) GetHostDefStatusCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetHostDefStatusCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetHostDefStatusCommon API operation for ADVDEFENCE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE's
// API operation GetHostDefStatusCommon for usage and error information.
func (c *ADVDEFENCE) GetHostDefStatusCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetHostDefStatusCommonRequest(input)
	return out, req.Send()
}

// GetHostDefStatusCommonWithContext is the same as GetHostDefStatusCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetHostDefStatusCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE) GetHostDefStatusCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetHostDefStatusCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetHostDefStatus = "GetHostDefStatus"

// GetHostDefStatusRequest generates a "volcengine/request.Request" representing the
// client's request for the GetHostDefStatus operation. The "output" return
// value will be populated with the GetHostDefStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetHostDefStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetHostDefStatusCommon Send returns without error.
//
// See GetHostDefStatus for more information on using the GetHostDefStatus
// API call, and error handling.
//
//    // Example sending a request using the GetHostDefStatusRequest method.
//    req, resp := client.GetHostDefStatusRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE) GetHostDefStatusRequest(input *GetHostDefStatusInput) (req *request.Request, output *GetHostDefStatusOutput) {
	op := &request.Operation{
		Name:       opGetHostDefStatus,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetHostDefStatusInput{}
	}

	output = &GetHostDefStatusOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetHostDefStatus API operation for ADVDEFENCE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE's
// API operation GetHostDefStatus for usage and error information.
func (c *ADVDEFENCE) GetHostDefStatus(input *GetHostDefStatusInput) (*GetHostDefStatusOutput, error) {
	req, out := c.GetHostDefStatusRequest(input)
	return out, req.Send()
}

// GetHostDefStatusWithContext is the same as GetHostDefStatus with the addition of
// the ability to pass a context and additional request options.
//
// See GetHostDefStatus for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE) GetHostDefStatusWithContext(ctx volcengine.Context, input *GetHostDefStatusInput, opts ...request.Option) (*GetHostDefStatusOutput, error) {
	req, out := c.GetHostDefStatusRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetHostDefStatusInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Host is a required field
	Host *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetHostDefStatusInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetHostDefStatusInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetHostDefStatusInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetHostDefStatusInput"}
	if s.Host == nil {
		invalidParams.Add(request.NewErrParamRequired("Host"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetHost sets the Host field's value.
func (s *GetHostDefStatusInput) SetHost(v string) *GetHostDefStatusInput {
	s.Host = &v
	return s
}

type GetHostDefStatusOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AllowEnable *int32 `type:"int32" json:",omitempty"`

	BlackLctEnable *int32 `type:"int32" json:",omitempty"`

	BlockEnable *int32 `type:"int32" json:",omitempty"`

	CcEnable *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s GetHostDefStatusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetHostDefStatusOutput) GoString() string {
	return s.String()
}

// SetAllowEnable sets the AllowEnable field's value.
func (s *GetHostDefStatusOutput) SetAllowEnable(v int32) *GetHostDefStatusOutput {
	s.AllowEnable = &v
	return s
}

// SetBlackLctEnable sets the BlackLctEnable field's value.
func (s *GetHostDefStatusOutput) SetBlackLctEnable(v int32) *GetHostDefStatusOutput {
	s.BlackLctEnable = &v
	return s
}

// SetBlockEnable sets the BlockEnable field's value.
func (s *GetHostDefStatusOutput) SetBlockEnable(v int32) *GetHostDefStatusOutput {
	s.BlockEnable = &v
	return s
}

// SetCcEnable sets the CcEnable field's value.
func (s *GetHostDefStatusOutput) SetCcEnable(v int32) *GetHostDefStatusOutput {
	s.CcEnable = &v
	return s
}
