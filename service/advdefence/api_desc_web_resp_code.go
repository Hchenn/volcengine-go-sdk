// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package advdefence

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescWebRespCodeCommon = "DescWebRespCode"

// DescWebRespCodeCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescWebRespCodeCommon operation. The "output" return
// value will be populated with the DescWebRespCodeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescWebRespCodeCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescWebRespCodeCommon Send returns without error.
//
// See DescWebRespCodeCommon for more information on using the DescWebRespCodeCommon
// API call, and error handling.
//
//    // Example sending a request using the DescWebRespCodeCommonRequest method.
//    req, resp := client.DescWebRespCodeCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE) DescWebRespCodeCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescWebRespCodeCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescWebRespCodeCommon API operation for ADVDEFENCE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE's
// API operation DescWebRespCodeCommon for usage and error information.
func (c *ADVDEFENCE) DescWebRespCodeCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescWebRespCodeCommonRequest(input)
	return out, req.Send()
}

// DescWebRespCodeCommonWithContext is the same as DescWebRespCodeCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescWebRespCodeCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE) DescWebRespCodeCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescWebRespCodeCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescWebRespCode = "DescWebRespCode"

// DescWebRespCodeRequest generates a "volcengine/request.Request" representing the
// client's request for the DescWebRespCode operation. The "output" return
// value will be populated with the DescWebRespCodeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescWebRespCodeCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescWebRespCodeCommon Send returns without error.
//
// See DescWebRespCode for more information on using the DescWebRespCode
// API call, and error handling.
//
//    // Example sending a request using the DescWebRespCodeRequest method.
//    req, resp := client.DescWebRespCodeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE) DescWebRespCodeRequest(input *DescWebRespCodeInput) (req *request.Request, output *DescWebRespCodeOutput) {
	op := &request.Operation{
		Name:       opDescWebRespCode,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescWebRespCodeInput{}
	}

	output = &DescWebRespCodeOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescWebRespCode API operation for ADVDEFENCE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE's
// API operation DescWebRespCode for usage and error information.
func (c *ADVDEFENCE) DescWebRespCode(input *DescWebRespCodeInput) (*DescWebRespCodeOutput, error) {
	req, out := c.DescWebRespCodeRequest(input)
	return out, req.Send()
}

// DescWebRespCodeWithContext is the same as DescWebRespCode with the addition of
// the ability to pass a context and additional request options.
//
// See DescWebRespCode for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE) DescWebRespCodeWithContext(ctx volcengine.Context, input *DescWebRespCodeInput, opts ...request.Option) (*DescWebRespCodeOutput, error) {
	req, out := c.DescWebRespCodeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescWebRespCodeInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BeginTime *int32 `type:"int32" json:",omitempty"`

	EndTime *int32 `type:"int32" json:",omitempty"`

	Hosts []*string `type:"list" json:",omitempty"`

	Type *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescWebRespCodeInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescWebRespCodeInput) GoString() string {
	return s.String()
}

// SetBeginTime sets the BeginTime field's value.
func (s *DescWebRespCodeInput) SetBeginTime(v int32) *DescWebRespCodeInput {
	s.BeginTime = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DescWebRespCodeInput) SetEndTime(v int32) *DescWebRespCodeInput {
	s.EndTime = &v
	return s
}

// SetHosts sets the Hosts field's value.
func (s *DescWebRespCodeInput) SetHosts(v []*string) *DescWebRespCodeInput {
	s.Hosts = v
	return s
}

// SetType sets the Type field's value.
func (s *DescWebRespCodeInput) SetType(v int32) *DescWebRespCodeInput {
	s.Type = &v
	return s
}

type DescWebRespCodeOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Distribution []*DistributionForDescWebRespCodeOutput `type:"list" json:",omitempty"`

	Trend []*TrendForDescWebRespCodeOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescWebRespCodeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescWebRespCodeOutput) GoString() string {
	return s.String()
}

// SetDistribution sets the Distribution field's value.
func (s *DescWebRespCodeOutput) SetDistribution(v []*DistributionForDescWebRespCodeOutput) *DescWebRespCodeOutput {
	s.Distribution = v
	return s
}

// SetTrend sets the Trend field's value.
func (s *DescWebRespCodeOutput) SetTrend(v []*TrendForDescWebRespCodeOutput) *DescWebRespCodeOutput {
	s.Trend = v
	return s
}

type DistributionForDescWebRespCodeOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Percentage *float64 `type:"float" json:",omitempty"`

	RespCode *string `type:"string" json:",omitempty"`

	TotalQps *float64 `type:"float" json:",omitempty"`
}

// String returns the string representation
func (s DistributionForDescWebRespCodeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DistributionForDescWebRespCodeOutput) GoString() string {
	return s.String()
}

// SetPercentage sets the Percentage field's value.
func (s *DistributionForDescWebRespCodeOutput) SetPercentage(v float64) *DistributionForDescWebRespCodeOutput {
	s.Percentage = &v
	return s
}

// SetRespCode sets the RespCode field's value.
func (s *DistributionForDescWebRespCodeOutput) SetRespCode(v string) *DistributionForDescWebRespCodeOutput {
	s.RespCode = &v
	return s
}

// SetTotalQps sets the TotalQps field's value.
func (s *DistributionForDescWebRespCodeOutput) SetTotalQps(v float64) *DistributionForDescWebRespCodeOutput {
	s.TotalQps = &v
	return s
}

type FlowForDescWebRespCodeOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Qps *float64 `type:"float" json:",omitempty"`

	TimeStamp *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s FlowForDescWebRespCodeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FlowForDescWebRespCodeOutput) GoString() string {
	return s.String()
}

// SetQps sets the Qps field's value.
func (s *FlowForDescWebRespCodeOutput) SetQps(v float64) *FlowForDescWebRespCodeOutput {
	s.Qps = &v
	return s
}

// SetTimeStamp sets the TimeStamp field's value.
func (s *FlowForDescWebRespCodeOutput) SetTimeStamp(v int32) *FlowForDescWebRespCodeOutput {
	s.TimeStamp = &v
	return s
}

type TrendForDescWebRespCodeOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Flow []*FlowForDescWebRespCodeOutput `type:"list" json:",omitempty"`

	RespCode *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TrendForDescWebRespCodeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TrendForDescWebRespCodeOutput) GoString() string {
	return s.String()
}

// SetFlow sets the Flow field's value.
func (s *TrendForDescWebRespCodeOutput) SetFlow(v []*FlowForDescWebRespCodeOutput) *TrendForDescWebRespCodeOutput {
	s.Flow = v
	return s
}

// SetRespCode sets the RespCode field's value.
func (s *TrendForDescWebRespCodeOutput) SetRespCode(v string) *TrendForDescWebRespCodeOutput {
	s.RespCode = &v
	return s
}
