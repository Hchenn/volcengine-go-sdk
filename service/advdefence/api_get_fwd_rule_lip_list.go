// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package advdefence

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetFwdRuleLipListCommon = "GetFwdRuleLipList"

// GetFwdRuleLipListCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetFwdRuleLipListCommon operation. The "output" return
// value will be populated with the GetFwdRuleLipListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetFwdRuleLipListCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetFwdRuleLipListCommon Send returns without error.
//
// See GetFwdRuleLipListCommon for more information on using the GetFwdRuleLipListCommon
// API call, and error handling.
//
//    // Example sending a request using the GetFwdRuleLipListCommonRequest method.
//    req, resp := client.GetFwdRuleLipListCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE) GetFwdRuleLipListCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetFwdRuleLipListCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetFwdRuleLipListCommon API operation for ADVDEFENCE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE's
// API operation GetFwdRuleLipListCommon for usage and error information.
func (c *ADVDEFENCE) GetFwdRuleLipListCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetFwdRuleLipListCommonRequest(input)
	return out, req.Send()
}

// GetFwdRuleLipListCommonWithContext is the same as GetFwdRuleLipListCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetFwdRuleLipListCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE) GetFwdRuleLipListCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetFwdRuleLipListCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetFwdRuleLipList = "GetFwdRuleLipList"

// GetFwdRuleLipListRequest generates a "volcengine/request.Request" representing the
// client's request for the GetFwdRuleLipList operation. The "output" return
// value will be populated with the GetFwdRuleLipListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetFwdRuleLipListCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetFwdRuleLipListCommon Send returns without error.
//
// See GetFwdRuleLipList for more information on using the GetFwdRuleLipList
// API call, and error handling.
//
//    // Example sending a request using the GetFwdRuleLipListRequest method.
//    req, resp := client.GetFwdRuleLipListRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE) GetFwdRuleLipListRequest(input *GetFwdRuleLipListInput) (req *request.Request, output *GetFwdRuleLipListOutput) {
	op := &request.Operation{
		Name:       opGetFwdRuleLipList,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetFwdRuleLipListInput{}
	}

	output = &GetFwdRuleLipListOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetFwdRuleLipList API operation for ADVDEFENCE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE's
// API operation GetFwdRuleLipList for usage and error information.
func (c *ADVDEFENCE) GetFwdRuleLipList(input *GetFwdRuleLipListInput) (*GetFwdRuleLipListOutput, error) {
	req, out := c.GetFwdRuleLipListRequest(input)
	return out, req.Send()
}

// GetFwdRuleLipListWithContext is the same as GetFwdRuleLipList with the addition of
// the ability to pass a context and additional request options.
//
// See GetFwdRuleLipList for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE) GetFwdRuleLipListWithContext(ctx volcengine.Context, input *GetFwdRuleLipListInput, opts ...request.Option) (*GetFwdRuleLipListOutput, error) {
	req, out := c.GetFwdRuleLipListRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetFwdRuleLipListInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// RegionList is a required field
	RegionList *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetFwdRuleLipListInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetFwdRuleLipListInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetFwdRuleLipListInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetFwdRuleLipListInput"}
	if s.RegionList == nil {
		invalidParams.Add(request.NewErrParamRequired("RegionList"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetRegionList sets the RegionList field's value.
func (s *GetFwdRuleLipListInput) SetRegionList(v string) *GetFwdRuleLipListInput {
	s.RegionList = &v
	return s
}

type GetFwdRuleLipListOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	LipList []*string `type:"list" json:",omitempty"`

	UpdateTime *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s GetFwdRuleLipListOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetFwdRuleLipListOutput) GoString() string {
	return s.String()
}

// SetLipList sets the LipList field's value.
func (s *GetFwdRuleLipListOutput) SetLipList(v []*string) *GetFwdRuleLipListOutput {
	s.LipList = v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *GetFwdRuleLipListOutput) SetUpdateTime(v int32) *GetFwdRuleLipListOutput {
	s.UpdateTime = &v
	return s
}
