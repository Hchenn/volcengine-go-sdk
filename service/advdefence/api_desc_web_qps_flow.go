// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package advdefence

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescWebQpsFlowCommon = "DescWebQpsFlow"

// DescWebQpsFlowCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescWebQpsFlowCommon operation. The "output" return
// value will be populated with the DescWebQpsFlowCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescWebQpsFlowCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescWebQpsFlowCommon Send returns without error.
//
// See DescWebQpsFlowCommon for more information on using the DescWebQpsFlowCommon
// API call, and error handling.
//
//    // Example sending a request using the DescWebQpsFlowCommonRequest method.
//    req, resp := client.DescWebQpsFlowCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE) DescWebQpsFlowCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescWebQpsFlowCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescWebQpsFlowCommon API operation for ADVDEFENCE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE's
// API operation DescWebQpsFlowCommon for usage and error information.
func (c *ADVDEFENCE) DescWebQpsFlowCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescWebQpsFlowCommonRequest(input)
	return out, req.Send()
}

// DescWebQpsFlowCommonWithContext is the same as DescWebQpsFlowCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescWebQpsFlowCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE) DescWebQpsFlowCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescWebQpsFlowCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescWebQpsFlow = "DescWebQpsFlow"

// DescWebQpsFlowRequest generates a "volcengine/request.Request" representing the
// client's request for the DescWebQpsFlow operation. The "output" return
// value will be populated with the DescWebQpsFlowCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescWebQpsFlowCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescWebQpsFlowCommon Send returns without error.
//
// See DescWebQpsFlow for more information on using the DescWebQpsFlow
// API call, and error handling.
//
//    // Example sending a request using the DescWebQpsFlowRequest method.
//    req, resp := client.DescWebQpsFlowRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE) DescWebQpsFlowRequest(input *DescWebQpsFlowInput) (req *request.Request, output *DescWebQpsFlowOutput) {
	op := &request.Operation{
		Name:       opDescWebQpsFlow,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescWebQpsFlowInput{}
	}

	output = &DescWebQpsFlowOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescWebQpsFlow API operation for ADVDEFENCE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE's
// API operation DescWebQpsFlow for usage and error information.
func (c *ADVDEFENCE) DescWebQpsFlow(input *DescWebQpsFlowInput) (*DescWebQpsFlowOutput, error) {
	req, out := c.DescWebQpsFlowRequest(input)
	return out, req.Send()
}

// DescWebQpsFlowWithContext is the same as DescWebQpsFlow with the addition of
// the ability to pass a context and additional request options.
//
// See DescWebQpsFlow for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE) DescWebQpsFlowWithContext(ctx volcengine.Context, input *DescWebQpsFlowInput, opts ...request.Option) (*DescWebQpsFlowOutput, error) {
	req, out := c.DescWebQpsFlowRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AttackQpsFlowForDescWebQpsFlowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Qps *float64 `type:"float" json:",omitempty"`

	TimeStamp *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s AttackQpsFlowForDescWebQpsFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AttackQpsFlowForDescWebQpsFlowOutput) GoString() string {
	return s.String()
}

// SetQps sets the Qps field's value.
func (s *AttackQpsFlowForDescWebQpsFlowOutput) SetQps(v float64) *AttackQpsFlowForDescWebQpsFlowOutput {
	s.Qps = &v
	return s
}

// SetTimeStamp sets the TimeStamp field's value.
func (s *AttackQpsFlowForDescWebQpsFlowOutput) SetTimeStamp(v int32) *AttackQpsFlowForDescWebQpsFlowOutput {
	s.TimeStamp = &v
	return s
}

type BackSrcQpsFlowForDescWebQpsFlowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Qps *float64 `type:"float" json:",omitempty"`

	TimeStamp *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s BackSrcQpsFlowForDescWebQpsFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BackSrcQpsFlowForDescWebQpsFlowOutput) GoString() string {
	return s.String()
}

// SetQps sets the Qps field's value.
func (s *BackSrcQpsFlowForDescWebQpsFlowOutput) SetQps(v float64) *BackSrcQpsFlowForDescWebQpsFlowOutput {
	s.Qps = &v
	return s
}

// SetTimeStamp sets the TimeStamp field's value.
func (s *BackSrcQpsFlowForDescWebQpsFlowOutput) SetTimeStamp(v int32) *BackSrcQpsFlowForDescWebQpsFlowOutput {
	s.TimeStamp = &v
	return s
}

type DescWebQpsFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BeginTime *int32 `type:"int32" json:",omitempty"`

	EndTime *int32 `type:"int32" json:",omitempty"`

	Hosts []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescWebQpsFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescWebQpsFlowInput) GoString() string {
	return s.String()
}

// SetBeginTime sets the BeginTime field's value.
func (s *DescWebQpsFlowInput) SetBeginTime(v int32) *DescWebQpsFlowInput {
	s.BeginTime = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DescWebQpsFlowInput) SetEndTime(v int32) *DescWebQpsFlowInput {
	s.EndTime = &v
	return s
}

// SetHosts sets the Hosts field's value.
func (s *DescWebQpsFlowInput) SetHosts(v []*string) *DescWebQpsFlowInput {
	s.Hosts = v
	return s
}

type DescWebQpsFlowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AttackQpsFlow []*AttackQpsFlowForDescWebQpsFlowOutput `type:"list" json:",omitempty"`

	BackSrcQpsFlow []*BackSrcQpsFlowForDescWebQpsFlowOutput `type:"list" json:",omitempty"`

	InQpsFlow []*InQpsFlowForDescWebQpsFlowOutput `type:"list" json:",omitempty"`

	PeakAttackQps *float64 `type:"float" json:",omitempty"`

	PeakAttackQpsFlow []*PeakAttackQpsFlowForDescWebQpsFlowOutput `type:"list" json:",omitempty"`

	PeakBackSrcQpsFlow []*PeakBackSrcQpsFlowForDescWebQpsFlowOutput `type:"list" json:",omitempty"`

	PeakInQpsFlow []*PeakInQpsFlowForDescWebQpsFlowOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescWebQpsFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescWebQpsFlowOutput) GoString() string {
	return s.String()
}

// SetAttackQpsFlow sets the AttackQpsFlow field's value.
func (s *DescWebQpsFlowOutput) SetAttackQpsFlow(v []*AttackQpsFlowForDescWebQpsFlowOutput) *DescWebQpsFlowOutput {
	s.AttackQpsFlow = v
	return s
}

// SetBackSrcQpsFlow sets the BackSrcQpsFlow field's value.
func (s *DescWebQpsFlowOutput) SetBackSrcQpsFlow(v []*BackSrcQpsFlowForDescWebQpsFlowOutput) *DescWebQpsFlowOutput {
	s.BackSrcQpsFlow = v
	return s
}

// SetInQpsFlow sets the InQpsFlow field's value.
func (s *DescWebQpsFlowOutput) SetInQpsFlow(v []*InQpsFlowForDescWebQpsFlowOutput) *DescWebQpsFlowOutput {
	s.InQpsFlow = v
	return s
}

// SetPeakAttackQps sets the PeakAttackQps field's value.
func (s *DescWebQpsFlowOutput) SetPeakAttackQps(v float64) *DescWebQpsFlowOutput {
	s.PeakAttackQps = &v
	return s
}

// SetPeakAttackQpsFlow sets the PeakAttackQpsFlow field's value.
func (s *DescWebQpsFlowOutput) SetPeakAttackQpsFlow(v []*PeakAttackQpsFlowForDescWebQpsFlowOutput) *DescWebQpsFlowOutput {
	s.PeakAttackQpsFlow = v
	return s
}

// SetPeakBackSrcQpsFlow sets the PeakBackSrcQpsFlow field's value.
func (s *DescWebQpsFlowOutput) SetPeakBackSrcQpsFlow(v []*PeakBackSrcQpsFlowForDescWebQpsFlowOutput) *DescWebQpsFlowOutput {
	s.PeakBackSrcQpsFlow = v
	return s
}

// SetPeakInQpsFlow sets the PeakInQpsFlow field's value.
func (s *DescWebQpsFlowOutput) SetPeakInQpsFlow(v []*PeakInQpsFlowForDescWebQpsFlowOutput) *DescWebQpsFlowOutput {
	s.PeakInQpsFlow = v
	return s
}

type InQpsFlowForDescWebQpsFlowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Qps *float64 `type:"float" json:",omitempty"`

	TimeStamp *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s InQpsFlowForDescWebQpsFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InQpsFlowForDescWebQpsFlowOutput) GoString() string {
	return s.String()
}

// SetQps sets the Qps field's value.
func (s *InQpsFlowForDescWebQpsFlowOutput) SetQps(v float64) *InQpsFlowForDescWebQpsFlowOutput {
	s.Qps = &v
	return s
}

// SetTimeStamp sets the TimeStamp field's value.
func (s *InQpsFlowForDescWebQpsFlowOutput) SetTimeStamp(v int32) *InQpsFlowForDescWebQpsFlowOutput {
	s.TimeStamp = &v
	return s
}

type PeakAttackQpsFlowForDescWebQpsFlowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Qps *float64 `type:"float" json:",omitempty"`

	TimeStamp *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s PeakAttackQpsFlowForDescWebQpsFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PeakAttackQpsFlowForDescWebQpsFlowOutput) GoString() string {
	return s.String()
}

// SetQps sets the Qps field's value.
func (s *PeakAttackQpsFlowForDescWebQpsFlowOutput) SetQps(v float64) *PeakAttackQpsFlowForDescWebQpsFlowOutput {
	s.Qps = &v
	return s
}

// SetTimeStamp sets the TimeStamp field's value.
func (s *PeakAttackQpsFlowForDescWebQpsFlowOutput) SetTimeStamp(v int32) *PeakAttackQpsFlowForDescWebQpsFlowOutput {
	s.TimeStamp = &v
	return s
}

type PeakBackSrcQpsFlowForDescWebQpsFlowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Qps *float64 `type:"float" json:",omitempty"`

	TimeStamp *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s PeakBackSrcQpsFlowForDescWebQpsFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PeakBackSrcQpsFlowForDescWebQpsFlowOutput) GoString() string {
	return s.String()
}

// SetQps sets the Qps field's value.
func (s *PeakBackSrcQpsFlowForDescWebQpsFlowOutput) SetQps(v float64) *PeakBackSrcQpsFlowForDescWebQpsFlowOutput {
	s.Qps = &v
	return s
}

// SetTimeStamp sets the TimeStamp field's value.
func (s *PeakBackSrcQpsFlowForDescWebQpsFlowOutput) SetTimeStamp(v int32) *PeakBackSrcQpsFlowForDescWebQpsFlowOutput {
	s.TimeStamp = &v
	return s
}

type PeakInQpsFlowForDescWebQpsFlowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Qps *float64 `type:"float" json:",omitempty"`

	TimeStamp *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s PeakInQpsFlowForDescWebQpsFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PeakInQpsFlowForDescWebQpsFlowOutput) GoString() string {
	return s.String()
}

// SetQps sets the Qps field's value.
func (s *PeakInQpsFlowForDescWebQpsFlowOutput) SetQps(v float64) *PeakInQpsFlowForDescWebQpsFlowOutput {
	s.Qps = &v
	return s
}

// SetTimeStamp sets the TimeStamp field's value.
func (s *PeakInQpsFlowForDescWebQpsFlowOutput) SetTimeStamp(v int32) *PeakInQpsFlowForDescWebQpsFlowOutput {
	s.TimeStamp = &v
	return s
}
