// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package advdefence

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescCertificateCommon = "DescCertificate"

// DescCertificateCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescCertificateCommon operation. The "output" return
// value will be populated with the DescCertificateCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescCertificateCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescCertificateCommon Send returns without error.
//
// See DescCertificateCommon for more information on using the DescCertificateCommon
// API call, and error handling.
//
//    // Example sending a request using the DescCertificateCommonRequest method.
//    req, resp := client.DescCertificateCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE) DescCertificateCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescCertificateCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescCertificateCommon API operation for ADVDEFENCE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE's
// API operation DescCertificateCommon for usage and error information.
func (c *ADVDEFENCE) DescCertificateCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescCertificateCommonRequest(input)
	return out, req.Send()
}

// DescCertificateCommonWithContext is the same as DescCertificateCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescCertificateCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE) DescCertificateCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescCertificateCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescCertificate = "DescCertificate"

// DescCertificateRequest generates a "volcengine/request.Request" representing the
// client's request for the DescCertificate operation. The "output" return
// value will be populated with the DescCertificateCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescCertificateCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescCertificateCommon Send returns without error.
//
// See DescCertificate for more information on using the DescCertificate
// API call, and error handling.
//
//    // Example sending a request using the DescCertificateRequest method.
//    req, resp := client.DescCertificateRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ADVDEFENCE) DescCertificateRequest(input *DescCertificateInput) (req *request.Request, output *DescCertificateOutput) {
	op := &request.Operation{
		Name:       opDescCertificate,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescCertificateInput{}
	}

	output = &DescCertificateOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescCertificate API operation for ADVDEFENCE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ADVDEFENCE's
// API operation DescCertificate for usage and error information.
func (c *ADVDEFENCE) DescCertificate(input *DescCertificateInput) (*DescCertificateOutput, error) {
	req, out := c.DescCertificateRequest(input)
	return out, req.Send()
}

// DescCertificateWithContext is the same as DescCertificate with the addition of
// the ability to pass a context and additional request options.
//
// See DescCertificate for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ADVDEFENCE) DescCertificateWithContext(ctx volcengine.Context, input *DescCertificateInput, opts ...request.Option) (*DescCertificateOutput, error) {
	req, out := c.DescCertificateRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescCertificateInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Domain *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescCertificateInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescCertificateInput) GoString() string {
	return s.String()
}

// SetDomain sets the Domain field's value.
func (s *DescCertificateInput) SetDomain(v string) *DescCertificateInput {
	s.Domain = &v
	return s
}

type DescCertificateOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Count *int32 `type:"int32" json:",omitempty"`

	OtherCertList []*OtherCertListForDescCertificateOutput `type:"list" json:",omitempty"`

	RecommendCertList []*RecommendCertListForDescCertificateOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescCertificateOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescCertificateOutput) GoString() string {
	return s.String()
}

// SetCount sets the Count field's value.
func (s *DescCertificateOutput) SetCount(v int32) *DescCertificateOutput {
	s.Count = &v
	return s
}

// SetOtherCertList sets the OtherCertList field's value.
func (s *DescCertificateOutput) SetOtherCertList(v []*OtherCertListForDescCertificateOutput) *DescCertificateOutput {
	s.OtherCertList = v
	return s
}

// SetRecommendCertList sets the RecommendCertList field's value.
func (s *DescCertificateOutput) SetRecommendCertList(v []*RecommendCertListForDescCertificateOutput) *DescCertificateOutput {
	s.RecommendCertList = v
	return s
}

type OtherCertListForDescCertificateOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Hosts []*string `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	UserCertId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s OtherCertListForDescCertificateOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OtherCertListForDescCertificateOutput) GoString() string {
	return s.String()
}

// SetHosts sets the Hosts field's value.
func (s *OtherCertListForDescCertificateOutput) SetHosts(v []*string) *OtherCertListForDescCertificateOutput {
	s.Hosts = v
	return s
}

// SetName sets the Name field's value.
func (s *OtherCertListForDescCertificateOutput) SetName(v string) *OtherCertListForDescCertificateOutput {
	s.Name = &v
	return s
}

// SetUserCertId sets the UserCertId field's value.
func (s *OtherCertListForDescCertificateOutput) SetUserCertId(v string) *OtherCertListForDescCertificateOutput {
	s.UserCertId = &v
	return s
}

type RecommendCertListForDescCertificateOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Hosts []*string `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	UserCertId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RecommendCertListForDescCertificateOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RecommendCertListForDescCertificateOutput) GoString() string {
	return s.String()
}

// SetHosts sets the Hosts field's value.
func (s *RecommendCertListForDescCertificateOutput) SetHosts(v []*string) *RecommendCertListForDescCertificateOutput {
	s.Hosts = v
	return s
}

// SetName sets the Name field's value.
func (s *RecommendCertListForDescCertificateOutput) SetName(v string) *RecommendCertListForDescCertificateOutput {
	s.Name = &v
	return s
}

// SetUserCertId sets the UserCertId field's value.
func (s *RecommendCertListForDescCertificateOutput) SetUserCertId(v string) *RecommendCertListForDescCertificateOutput {
	s.UserCertId = &v
	return s
}
