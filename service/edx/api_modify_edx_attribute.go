// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package edx

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyEDXAttributeCommon = "ModifyEDXAttribute"

// ModifyEDXAttributeCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyEDXAttributeCommon operation. The "output" return
// value will be populated with the ModifyEDXAttributeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyEDXAttributeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyEDXAttributeCommon Send returns without error.
//
// See ModifyEDXAttributeCommon for more information on using the ModifyEDXAttributeCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyEDXAttributeCommonRequest method.
//    req, resp := client.ModifyEDXAttributeCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *EDX) ModifyEDXAttributeCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyEDXAttributeCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyEDXAttributeCommon API operation for EDX.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for EDX's
// API operation ModifyEDXAttributeCommon for usage and error information.
func (c *EDX) ModifyEDXAttributeCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyEDXAttributeCommonRequest(input)
	return out, req.Send()
}

// ModifyEDXAttributeCommonWithContext is the same as ModifyEDXAttributeCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyEDXAttributeCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *EDX) ModifyEDXAttributeCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyEDXAttributeCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyEDXAttribute = "ModifyEDXAttribute"

// ModifyEDXAttributeRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyEDXAttribute operation. The "output" return
// value will be populated with the ModifyEDXAttributeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyEDXAttributeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyEDXAttributeCommon Send returns without error.
//
// See ModifyEDXAttribute for more information on using the ModifyEDXAttribute
// API call, and error handling.
//
//    // Example sending a request using the ModifyEDXAttributeRequest method.
//    req, resp := client.ModifyEDXAttributeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *EDX) ModifyEDXAttributeRequest(input *ModifyEDXAttributeInput) (req *request.Request, output *ModifyEDXAttributeOutput) {
	op := &request.Operation{
		Name:       opModifyEDXAttribute,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyEDXAttributeInput{}
	}

	output = &ModifyEDXAttributeOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyEDXAttribute API operation for EDX.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for EDX's
// API operation ModifyEDXAttribute for usage and error information.
func (c *EDX) ModifyEDXAttribute(input *ModifyEDXAttributeInput) (*ModifyEDXAttributeOutput, error) {
	req, out := c.ModifyEDXAttributeRequest(input)
	return out, req.Send()
}

// ModifyEDXAttributeWithContext is the same as ModifyEDXAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyEDXAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *EDX) ModifyEDXAttributeWithContext(ctx volcengine.Context, input *ModifyEDXAttributeInput, opts ...request.Option) (*ModifyEDXAttributeOutput, error) {
	req, out := c.ModifyEDXAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyEDXAttributeInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Description is a required field
	Description *string `type:"string" json:",omitempty" required:"true"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ModifyEDXAttributeInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyEDXAttributeInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyEDXAttributeInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyEDXAttributeInput"}
	if s.Description == nil {
		invalidParams.Add(request.NewErrParamRequired("Description"))
	}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *ModifyEDXAttributeInput) SetDescription(v string) *ModifyEDXAttributeInput {
	s.Description = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyEDXAttributeInput) SetInstanceId(v string) *ModifyEDXAttributeInput {
	s.InstanceId = &v
	return s
}

// SetName sets the Name field's value.
func (s *ModifyEDXAttributeInput) SetName(v string) *ModifyEDXAttributeInput {
	s.Name = &v
	return s
}

type ModifyEDXAttributeOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyEDXAttributeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyEDXAttributeOutput) GoString() string {
	return s.String()
}
