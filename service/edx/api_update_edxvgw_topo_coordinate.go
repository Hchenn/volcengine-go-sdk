// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package edx

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateEDXVGWTopoCoordinateCommon = "UpdateEDXVGWTopoCoordinate"

// UpdateEDXVGWTopoCoordinateCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateEDXVGWTopoCoordinateCommon operation. The "output" return
// value will be populated with the UpdateEDXVGWTopoCoordinateCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateEDXVGWTopoCoordinateCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateEDXVGWTopoCoordinateCommon Send returns without error.
//
// See UpdateEDXVGWTopoCoordinateCommon for more information on using the UpdateEDXVGWTopoCoordinateCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateEDXVGWTopoCoordinateCommonRequest method.
//    req, resp := client.UpdateEDXVGWTopoCoordinateCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *EDX) UpdateEDXVGWTopoCoordinateCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateEDXVGWTopoCoordinateCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateEDXVGWTopoCoordinateCommon API operation for EDX.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for EDX's
// API operation UpdateEDXVGWTopoCoordinateCommon for usage and error information.
func (c *EDX) UpdateEDXVGWTopoCoordinateCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateEDXVGWTopoCoordinateCommonRequest(input)
	return out, req.Send()
}

// UpdateEDXVGWTopoCoordinateCommonWithContext is the same as UpdateEDXVGWTopoCoordinateCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateEDXVGWTopoCoordinateCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *EDX) UpdateEDXVGWTopoCoordinateCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateEDXVGWTopoCoordinateCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateEDXVGWTopoCoordinate = "UpdateEDXVGWTopoCoordinate"

// UpdateEDXVGWTopoCoordinateRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateEDXVGWTopoCoordinate operation. The "output" return
// value will be populated with the UpdateEDXVGWTopoCoordinateCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateEDXVGWTopoCoordinateCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateEDXVGWTopoCoordinateCommon Send returns without error.
//
// See UpdateEDXVGWTopoCoordinate for more information on using the UpdateEDXVGWTopoCoordinate
// API call, and error handling.
//
//    // Example sending a request using the UpdateEDXVGWTopoCoordinateRequest method.
//    req, resp := client.UpdateEDXVGWTopoCoordinateRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *EDX) UpdateEDXVGWTopoCoordinateRequest(input *UpdateEDXVGWTopoCoordinateInput) (req *request.Request, output *UpdateEDXVGWTopoCoordinateOutput) {
	op := &request.Operation{
		Name:       opUpdateEDXVGWTopoCoordinate,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateEDXVGWTopoCoordinateInput{}
	}

	output = &UpdateEDXVGWTopoCoordinateOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateEDXVGWTopoCoordinate API operation for EDX.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for EDX's
// API operation UpdateEDXVGWTopoCoordinate for usage and error information.
func (c *EDX) UpdateEDXVGWTopoCoordinate(input *UpdateEDXVGWTopoCoordinateInput) (*UpdateEDXVGWTopoCoordinateOutput, error) {
	req, out := c.UpdateEDXVGWTopoCoordinateRequest(input)
	return out, req.Send()
}

// UpdateEDXVGWTopoCoordinateWithContext is the same as UpdateEDXVGWTopoCoordinate with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateEDXVGWTopoCoordinate for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *EDX) UpdateEDXVGWTopoCoordinateWithContext(ctx volcengine.Context, input *UpdateEDXVGWTopoCoordinateInput, opts ...request.Option) (*UpdateEDXVGWTopoCoordinateOutput, error) {
	req, out := c.UpdateEDXVGWTopoCoordinateRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type TopoCoordinateListForUpdateEDXVGWTopoCoordinateInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	VgwID *string `type:"string" json:",omitempty"`

	XCoordinate *int32 `type:"int32" json:",omitempty"`

	YCoordinate *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s TopoCoordinateListForUpdateEDXVGWTopoCoordinateInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TopoCoordinateListForUpdateEDXVGWTopoCoordinateInput) GoString() string {
	return s.String()
}

// SetVgwID sets the VgwID field's value.
func (s *TopoCoordinateListForUpdateEDXVGWTopoCoordinateInput) SetVgwID(v string) *TopoCoordinateListForUpdateEDXVGWTopoCoordinateInput {
	s.VgwID = &v
	return s
}

// SetXCoordinate sets the XCoordinate field's value.
func (s *TopoCoordinateListForUpdateEDXVGWTopoCoordinateInput) SetXCoordinate(v int32) *TopoCoordinateListForUpdateEDXVGWTopoCoordinateInput {
	s.XCoordinate = &v
	return s
}

// SetYCoordinate sets the YCoordinate field's value.
func (s *TopoCoordinateListForUpdateEDXVGWTopoCoordinateInput) SetYCoordinate(v int32) *TopoCoordinateListForUpdateEDXVGWTopoCoordinateInput {
	s.YCoordinate = &v
	return s
}

type UpdateEDXVGWTopoCoordinateInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	TopoCoordinateList []*TopoCoordinateListForUpdateEDXVGWTopoCoordinateInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s UpdateEDXVGWTopoCoordinateInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateEDXVGWTopoCoordinateInput) GoString() string {
	return s.String()
}

// SetTopoCoordinateList sets the TopoCoordinateList field's value.
func (s *UpdateEDXVGWTopoCoordinateInput) SetTopoCoordinateList(v []*TopoCoordinateListForUpdateEDXVGWTopoCoordinateInput) *UpdateEDXVGWTopoCoordinateInput {
	s.TopoCoordinateList = v
	return s
}

type UpdateEDXVGWTopoCoordinateOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateEDXVGWTopoCoordinateOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateEDXVGWTopoCoordinateOutput) GoString() string {
	return s.String()
}
