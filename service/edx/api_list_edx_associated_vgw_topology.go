// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package edx

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListEDXAssociatedVGWTopologyCommon = "ListEDXAssociatedVGWTopology"

// ListEDXAssociatedVGWTopologyCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListEDXAssociatedVGWTopologyCommon operation. The "output" return
// value will be populated with the ListEDXAssociatedVGWTopologyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListEDXAssociatedVGWTopologyCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListEDXAssociatedVGWTopologyCommon Send returns without error.
//
// See ListEDXAssociatedVGWTopologyCommon for more information on using the ListEDXAssociatedVGWTopologyCommon
// API call, and error handling.
//
//    // Example sending a request using the ListEDXAssociatedVGWTopologyCommonRequest method.
//    req, resp := client.ListEDXAssociatedVGWTopologyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *EDX) ListEDXAssociatedVGWTopologyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListEDXAssociatedVGWTopologyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListEDXAssociatedVGWTopologyCommon API operation for EDX.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for EDX's
// API operation ListEDXAssociatedVGWTopologyCommon for usage and error information.
func (c *EDX) ListEDXAssociatedVGWTopologyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListEDXAssociatedVGWTopologyCommonRequest(input)
	return out, req.Send()
}

// ListEDXAssociatedVGWTopologyCommonWithContext is the same as ListEDXAssociatedVGWTopologyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListEDXAssociatedVGWTopologyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *EDX) ListEDXAssociatedVGWTopologyCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListEDXAssociatedVGWTopologyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListEDXAssociatedVGWTopology = "ListEDXAssociatedVGWTopology"

// ListEDXAssociatedVGWTopologyRequest generates a "volcengine/request.Request" representing the
// client's request for the ListEDXAssociatedVGWTopology operation. The "output" return
// value will be populated with the ListEDXAssociatedVGWTopologyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListEDXAssociatedVGWTopologyCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListEDXAssociatedVGWTopologyCommon Send returns without error.
//
// See ListEDXAssociatedVGWTopology for more information on using the ListEDXAssociatedVGWTopology
// API call, and error handling.
//
//    // Example sending a request using the ListEDXAssociatedVGWTopologyRequest method.
//    req, resp := client.ListEDXAssociatedVGWTopologyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *EDX) ListEDXAssociatedVGWTopologyRequest(input *ListEDXAssociatedVGWTopologyInput) (req *request.Request, output *ListEDXAssociatedVGWTopologyOutput) {
	op := &request.Operation{
		Name:       opListEDXAssociatedVGWTopology,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListEDXAssociatedVGWTopologyInput{}
	}

	output = &ListEDXAssociatedVGWTopologyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListEDXAssociatedVGWTopology API operation for EDX.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for EDX's
// API operation ListEDXAssociatedVGWTopology for usage and error information.
func (c *EDX) ListEDXAssociatedVGWTopology(input *ListEDXAssociatedVGWTopologyInput) (*ListEDXAssociatedVGWTopologyOutput, error) {
	req, out := c.ListEDXAssociatedVGWTopologyRequest(input)
	return out, req.Send()
}

// ListEDXAssociatedVGWTopologyWithContext is the same as ListEDXAssociatedVGWTopology with the addition of
// the ability to pass a context and additional request options.
//
// See ListEDXAssociatedVGWTopology for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *EDX) ListEDXAssociatedVGWTopologyWithContext(ctx volcengine.Context, input *ListEDXAssociatedVGWTopologyInput, opts ...request.Option) (*ListEDXAssociatedVGWTopologyOutput, error) {
	req, out := c.ListEDXAssociatedVGWTopologyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ClusterForListEDXAssociatedVGWTopologyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Alias *string `type:"string" json:",omitempty"`

	City *string `type:"string" json:",omitempty"`

	Cluster *string `type:"string" json:",omitempty"`

	Country *string `type:"string" json:",omitempty"`

	ISP *string `type:"string" json:",omitempty"`

	Province *string `type:"string" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ClusterForListEDXAssociatedVGWTopologyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ClusterForListEDXAssociatedVGWTopologyOutput) GoString() string {
	return s.String()
}

// SetAlias sets the Alias field's value.
func (s *ClusterForListEDXAssociatedVGWTopologyOutput) SetAlias(v string) *ClusterForListEDXAssociatedVGWTopologyOutput {
	s.Alias = &v
	return s
}

// SetCity sets the City field's value.
func (s *ClusterForListEDXAssociatedVGWTopologyOutput) SetCity(v string) *ClusterForListEDXAssociatedVGWTopologyOutput {
	s.City = &v
	return s
}

// SetCluster sets the Cluster field's value.
func (s *ClusterForListEDXAssociatedVGWTopologyOutput) SetCluster(v string) *ClusterForListEDXAssociatedVGWTopologyOutput {
	s.Cluster = &v
	return s
}

// SetCountry sets the Country field's value.
func (s *ClusterForListEDXAssociatedVGWTopologyOutput) SetCountry(v string) *ClusterForListEDXAssociatedVGWTopologyOutput {
	s.Country = &v
	return s
}

// SetISP sets the ISP field's value.
func (s *ClusterForListEDXAssociatedVGWTopologyOutput) SetISP(v string) *ClusterForListEDXAssociatedVGWTopologyOutput {
	s.ISP = &v
	return s
}

// SetProvince sets the Province field's value.
func (s *ClusterForListEDXAssociatedVGWTopologyOutput) SetProvince(v string) *ClusterForListEDXAssociatedVGWTopologyOutput {
	s.Province = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *ClusterForListEDXAssociatedVGWTopologyOutput) SetRegion(v string) *ClusterForListEDXAssociatedVGWTopologyOutput {
	s.Region = &v
	return s
}

type ListEDXAssociatedVGWTopologyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// EDXInstanceId is a required field
	EDXInstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ListEDXAssociatedVGWTopologyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListEDXAssociatedVGWTopologyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListEDXAssociatedVGWTopologyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListEDXAssociatedVGWTopologyInput"}
	if s.EDXInstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("EDXInstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetEDXInstanceId sets the EDXInstanceId field's value.
func (s *ListEDXAssociatedVGWTopologyInput) SetEDXInstanceId(v string) *ListEDXAssociatedVGWTopologyInput {
	s.EDXInstanceId = &v
	return s
}

type ListEDXAssociatedVGWTopologyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	VGWTopoInfoList []*VGWTopoInfoListForListEDXAssociatedVGWTopologyOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListEDXAssociatedVGWTopologyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListEDXAssociatedVGWTopologyOutput) GoString() string {
	return s.String()
}

// SetVGWTopoInfoList sets the VGWTopoInfoList field's value.
func (s *ListEDXAssociatedVGWTopologyOutput) SetVGWTopoInfoList(v []*VGWTopoInfoListForListEDXAssociatedVGWTopologyOutput) *ListEDXAssociatedVGWTopologyOutput {
	s.VGWTopoInfoList = v
	return s
}

type VGWTopoInfoListForListEDXAssociatedVGWTopologyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Cluster *ClusterForListEDXAssociatedVGWTopologyOutput `type:"structure" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	XCoordinate *int32 `type:"int32" json:",omitempty"`

	YCoordinate *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s VGWTopoInfoListForListEDXAssociatedVGWTopologyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VGWTopoInfoListForListEDXAssociatedVGWTopologyOutput) GoString() string {
	return s.String()
}

// SetCluster sets the Cluster field's value.
func (s *VGWTopoInfoListForListEDXAssociatedVGWTopologyOutput) SetCluster(v *ClusterForListEDXAssociatedVGWTopologyOutput) *VGWTopoInfoListForListEDXAssociatedVGWTopologyOutput {
	s.Cluster = v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *VGWTopoInfoListForListEDXAssociatedVGWTopologyOutput) SetInstanceId(v string) *VGWTopoInfoListForListEDXAssociatedVGWTopologyOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *VGWTopoInfoListForListEDXAssociatedVGWTopologyOutput) SetInstanceName(v string) *VGWTopoInfoListForListEDXAssociatedVGWTopologyOutput {
	s.InstanceName = &v
	return s
}

// SetType sets the Type field's value.
func (s *VGWTopoInfoListForListEDXAssociatedVGWTopologyOutput) SetType(v string) *VGWTopoInfoListForListEDXAssociatedVGWTopologyOutput {
	s.Type = &v
	return s
}

// SetXCoordinate sets the XCoordinate field's value.
func (s *VGWTopoInfoListForListEDXAssociatedVGWTopologyOutput) SetXCoordinate(v int32) *VGWTopoInfoListForListEDXAssociatedVGWTopologyOutput {
	s.XCoordinate = &v
	return s
}

// SetYCoordinate sets the YCoordinate field's value.
func (s *VGWTopoInfoListForListEDXAssociatedVGWTopologyOutput) SetYCoordinate(v int32) *VGWTopoInfoListForListEDXAssociatedVGWTopologyOutput {
	s.YCoordinate = &v
	return s
}
