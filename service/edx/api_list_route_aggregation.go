// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package edx

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListRouteAggregationCommon = "ListRouteAggregation"

// ListRouteAggregationCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListRouteAggregationCommon operation. The "output" return
// value will be populated with the ListRouteAggregationCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRouteAggregationCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRouteAggregationCommon Send returns without error.
//
// See ListRouteAggregationCommon for more information on using the ListRouteAggregationCommon
// API call, and error handling.
//
//    // Example sending a request using the ListRouteAggregationCommonRequest method.
//    req, resp := client.ListRouteAggregationCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *EDX) ListRouteAggregationCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListRouteAggregationCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRouteAggregationCommon API operation for EDX.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for EDX's
// API operation ListRouteAggregationCommon for usage and error information.
func (c *EDX) ListRouteAggregationCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListRouteAggregationCommonRequest(input)
	return out, req.Send()
}

// ListRouteAggregationCommonWithContext is the same as ListRouteAggregationCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListRouteAggregationCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *EDX) ListRouteAggregationCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListRouteAggregationCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListRouteAggregation = "ListRouteAggregation"

// ListRouteAggregationRequest generates a "volcengine/request.Request" representing the
// client's request for the ListRouteAggregation operation. The "output" return
// value will be populated with the ListRouteAggregationCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRouteAggregationCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRouteAggregationCommon Send returns without error.
//
// See ListRouteAggregation for more information on using the ListRouteAggregation
// API call, and error handling.
//
//    // Example sending a request using the ListRouteAggregationRequest method.
//    req, resp := client.ListRouteAggregationRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *EDX) ListRouteAggregationRequest(input *ListRouteAggregationInput) (req *request.Request, output *ListRouteAggregationOutput) {
	op := &request.Operation{
		Name:       opListRouteAggregation,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListRouteAggregationInput{}
	}

	output = &ListRouteAggregationOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRouteAggregation API operation for EDX.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for EDX's
// API operation ListRouteAggregation for usage and error information.
func (c *EDX) ListRouteAggregation(input *ListRouteAggregationInput) (*ListRouteAggregationOutput, error) {
	req, out := c.ListRouteAggregationRequest(input)
	return out, req.Send()
}

// ListRouteAggregationWithContext is the same as ListRouteAggregation with the addition of
// the ability to pass a context and additional request options.
//
// See ListRouteAggregation for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *EDX) ListRouteAggregationWithContext(ctx volcengine.Context, input *ListRouteAggregationInput, opts ...request.Option) (*ListRouteAggregationOutput, error) {
	req, out := c.ListRouteAggregationRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AggregationListForListRouteAggregationOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AggregationCidr *string `type:"string" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	DetailSuppressed *bool `type:"boolean" json:",omitempty"`

	Direction *string `type:"string" json:",omitempty"`

	Enabled *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s AggregationListForListRouteAggregationOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AggregationListForListRouteAggregationOutput) GoString() string {
	return s.String()
}

// SetAggregationCidr sets the AggregationCidr field's value.
func (s *AggregationListForListRouteAggregationOutput) SetAggregationCidr(v string) *AggregationListForListRouteAggregationOutput {
	s.AggregationCidr = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *AggregationListForListRouteAggregationOutput) SetCreateTime(v string) *AggregationListForListRouteAggregationOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *AggregationListForListRouteAggregationOutput) SetDescription(v string) *AggregationListForListRouteAggregationOutput {
	s.Description = &v
	return s
}

// SetDetailSuppressed sets the DetailSuppressed field's value.
func (s *AggregationListForListRouteAggregationOutput) SetDetailSuppressed(v bool) *AggregationListForListRouteAggregationOutput {
	s.DetailSuppressed = &v
	return s
}

// SetDirection sets the Direction field's value.
func (s *AggregationListForListRouteAggregationOutput) SetDirection(v string) *AggregationListForListRouteAggregationOutput {
	s.Direction = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *AggregationListForListRouteAggregationOutput) SetEnabled(v bool) *AggregationListForListRouteAggregationOutput {
	s.Enabled = &v
	return s
}

type ListRouteAggregationInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AggregationCidr *string `type:"string" json:",omitempty"`

	Enabled *string `type:"string" json:",omitempty"`

	PageNumber *string `type:"string" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	VIFInstanceId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListRouteAggregationInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRouteAggregationInput) GoString() string {
	return s.String()
}

// SetAggregationCidr sets the AggregationCidr field's value.
func (s *ListRouteAggregationInput) SetAggregationCidr(v string) *ListRouteAggregationInput {
	s.AggregationCidr = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *ListRouteAggregationInput) SetEnabled(v string) *ListRouteAggregationInput {
	s.Enabled = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListRouteAggregationInput) SetPageNumber(v string) *ListRouteAggregationInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListRouteAggregationInput) SetPageSize(v int32) *ListRouteAggregationInput {
	s.PageSize = &v
	return s
}

// SetVIFInstanceId sets the VIFInstanceId field's value.
func (s *ListRouteAggregationInput) SetVIFInstanceId(v string) *ListRouteAggregationInput {
	s.VIFInstanceId = &v
	return s
}

type ListRouteAggregationOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AggregationList []*AggregationListForListRouteAggregationOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListRouteAggregationOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRouteAggregationOutput) GoString() string {
	return s.String()
}

// SetAggregationList sets the AggregationList field's value.
func (s *ListRouteAggregationOutput) SetAggregationList(v []*AggregationListForListRouteAggregationOutput) *ListRouteAggregationOutput {
	s.AggregationList = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListRouteAggregationOutput) SetPageNumber(v int32) *ListRouteAggregationOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListRouteAggregationOutput) SetPageSize(v int32) *ListRouteAggregationOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListRouteAggregationOutput) SetTotalCount(v int32) *ListRouteAggregationOutput {
	s.TotalCount = &v
	return s
}
