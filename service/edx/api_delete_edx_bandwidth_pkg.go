// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package edx

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteEDXBandwidthPkgCommon = "DeleteEDXBandwidthPkg"

// DeleteEDXBandwidthPkgCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteEDXBandwidthPkgCommon operation. The "output" return
// value will be populated with the DeleteEDXBandwidthPkgCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteEDXBandwidthPkgCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteEDXBandwidthPkgCommon Send returns without error.
//
// See DeleteEDXBandwidthPkgCommon for more information on using the DeleteEDXBandwidthPkgCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteEDXBandwidthPkgCommonRequest method.
//    req, resp := client.DeleteEDXBandwidthPkgCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *EDX) DeleteEDXBandwidthPkgCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteEDXBandwidthPkgCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteEDXBandwidthPkgCommon API operation for EDX.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for EDX's
// API operation DeleteEDXBandwidthPkgCommon for usage and error information.
func (c *EDX) DeleteEDXBandwidthPkgCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteEDXBandwidthPkgCommonRequest(input)
	return out, req.Send()
}

// DeleteEDXBandwidthPkgCommonWithContext is the same as DeleteEDXBandwidthPkgCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteEDXBandwidthPkgCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *EDX) DeleteEDXBandwidthPkgCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteEDXBandwidthPkgCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteEDXBandwidthPkg = "DeleteEDXBandwidthPkg"

// DeleteEDXBandwidthPkgRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteEDXBandwidthPkg operation. The "output" return
// value will be populated with the DeleteEDXBandwidthPkgCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteEDXBandwidthPkgCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteEDXBandwidthPkgCommon Send returns without error.
//
// See DeleteEDXBandwidthPkg for more information on using the DeleteEDXBandwidthPkg
// API call, and error handling.
//
//    // Example sending a request using the DeleteEDXBandwidthPkgRequest method.
//    req, resp := client.DeleteEDXBandwidthPkgRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *EDX) DeleteEDXBandwidthPkgRequest(input *DeleteEDXBandwidthPkgInput) (req *request.Request, output *DeleteEDXBandwidthPkgOutput) {
	op := &request.Operation{
		Name:       opDeleteEDXBandwidthPkg,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteEDXBandwidthPkgInput{}
	}

	output = &DeleteEDXBandwidthPkgOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteEDXBandwidthPkg API operation for EDX.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for EDX's
// API operation DeleteEDXBandwidthPkg for usage and error information.
func (c *EDX) DeleteEDXBandwidthPkg(input *DeleteEDXBandwidthPkgInput) (*DeleteEDXBandwidthPkgOutput, error) {
	req, out := c.DeleteEDXBandwidthPkgRequest(input)
	return out, req.Send()
}

// DeleteEDXBandwidthPkgWithContext is the same as DeleteEDXBandwidthPkg with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteEDXBandwidthPkg for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *EDX) DeleteEDXBandwidthPkgWithContext(ctx volcengine.Context, input *DeleteEDXBandwidthPkgInput, opts ...request.Option) (*DeleteEDXBandwidthPkgOutput, error) {
	req, out := c.DeleteEDXBandwidthPkgRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteEDXBandwidthPkgInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// BandwidthPkgId is a required field
	BandwidthPkgId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DeleteEDXBandwidthPkgInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteEDXBandwidthPkgInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteEDXBandwidthPkgInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteEDXBandwidthPkgInput"}
	if s.BandwidthPkgId == nil {
		invalidParams.Add(request.NewErrParamRequired("BandwidthPkgId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBandwidthPkgId sets the BandwidthPkgId field's value.
func (s *DeleteEDXBandwidthPkgInput) SetBandwidthPkgId(v string) *DeleteEDXBandwidthPkgInput {
	s.BandwidthPkgId = &v
	return s
}

type DeleteEDXBandwidthPkgOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteEDXBandwidthPkgOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteEDXBandwidthPkgOutput) GoString() string {
	return s.String()
}
