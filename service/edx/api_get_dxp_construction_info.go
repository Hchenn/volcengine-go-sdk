// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package edx

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetDXPConstructionInfoCommon = "GetDXPConstructionInfo"

// GetDXPConstructionInfoCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetDXPConstructionInfoCommon operation. The "output" return
// value will be populated with the GetDXPConstructionInfoCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetDXPConstructionInfoCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetDXPConstructionInfoCommon Send returns without error.
//
// See GetDXPConstructionInfoCommon for more information on using the GetDXPConstructionInfoCommon
// API call, and error handling.
//
//    // Example sending a request using the GetDXPConstructionInfoCommonRequest method.
//    req, resp := client.GetDXPConstructionInfoCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *EDX) GetDXPConstructionInfoCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetDXPConstructionInfoCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetDXPConstructionInfoCommon API operation for EDX.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for EDX's
// API operation GetDXPConstructionInfoCommon for usage and error information.
func (c *EDX) GetDXPConstructionInfoCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetDXPConstructionInfoCommonRequest(input)
	return out, req.Send()
}

// GetDXPConstructionInfoCommonWithContext is the same as GetDXPConstructionInfoCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetDXPConstructionInfoCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *EDX) GetDXPConstructionInfoCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetDXPConstructionInfoCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetDXPConstructionInfo = "GetDXPConstructionInfo"

// GetDXPConstructionInfoRequest generates a "volcengine/request.Request" representing the
// client's request for the GetDXPConstructionInfo operation. The "output" return
// value will be populated with the GetDXPConstructionInfoCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetDXPConstructionInfoCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetDXPConstructionInfoCommon Send returns without error.
//
// See GetDXPConstructionInfo for more information on using the GetDXPConstructionInfo
// API call, and error handling.
//
//    // Example sending a request using the GetDXPConstructionInfoRequest method.
//    req, resp := client.GetDXPConstructionInfoRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *EDX) GetDXPConstructionInfoRequest(input *GetDXPConstructionInfoInput) (req *request.Request, output *GetDXPConstructionInfoOutput) {
	op := &request.Operation{
		Name:       opGetDXPConstructionInfo,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetDXPConstructionInfoInput{}
	}

	output = &GetDXPConstructionInfoOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetDXPConstructionInfo API operation for EDX.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for EDX's
// API operation GetDXPConstructionInfo for usage and error information.
func (c *EDX) GetDXPConstructionInfo(input *GetDXPConstructionInfoInput) (*GetDXPConstructionInfoOutput, error) {
	req, out := c.GetDXPConstructionInfoRequest(input)
	return out, req.Send()
}

// GetDXPConstructionInfoWithContext is the same as GetDXPConstructionInfo with the addition of
// the ability to pass a context and additional request options.
//
// See GetDXPConstructionInfo for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *EDX) GetDXPConstructionInfoWithContext(ctx volcengine.Context, input *GetDXPConstructionInfoInput, opts ...request.Option) (*GetDXPConstructionInfoOutput, error) {
	req, out := c.GetDXPConstructionInfoRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConstructionInfoForGetDXPConstructionInfoOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ConstructionEndDate *string `type:"string" json:",omitempty"`

	ConstructionStartDate *string `type:"string" json:",omitempty"`

	ContactName *string `type:"string" json:",omitempty"`

	ContactPhone *string `type:"string" json:",omitempty"`

	DeviceInfo *string `type:"string" json:",omitempty"`

	IDCAddr *string `type:"string" json:",omitempty"`

	ODFInfo *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ConstructionInfoForGetDXPConstructionInfoOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConstructionInfoForGetDXPConstructionInfoOutput) GoString() string {
	return s.String()
}

// SetConstructionEndDate sets the ConstructionEndDate field's value.
func (s *ConstructionInfoForGetDXPConstructionInfoOutput) SetConstructionEndDate(v string) *ConstructionInfoForGetDXPConstructionInfoOutput {
	s.ConstructionEndDate = &v
	return s
}

// SetConstructionStartDate sets the ConstructionStartDate field's value.
func (s *ConstructionInfoForGetDXPConstructionInfoOutput) SetConstructionStartDate(v string) *ConstructionInfoForGetDXPConstructionInfoOutput {
	s.ConstructionStartDate = &v
	return s
}

// SetContactName sets the ContactName field's value.
func (s *ConstructionInfoForGetDXPConstructionInfoOutput) SetContactName(v string) *ConstructionInfoForGetDXPConstructionInfoOutput {
	s.ContactName = &v
	return s
}

// SetContactPhone sets the ContactPhone field's value.
func (s *ConstructionInfoForGetDXPConstructionInfoOutput) SetContactPhone(v string) *ConstructionInfoForGetDXPConstructionInfoOutput {
	s.ContactPhone = &v
	return s
}

// SetDeviceInfo sets the DeviceInfo field's value.
func (s *ConstructionInfoForGetDXPConstructionInfoOutput) SetDeviceInfo(v string) *ConstructionInfoForGetDXPConstructionInfoOutput {
	s.DeviceInfo = &v
	return s
}

// SetIDCAddr sets the IDCAddr field's value.
func (s *ConstructionInfoForGetDXPConstructionInfoOutput) SetIDCAddr(v string) *ConstructionInfoForGetDXPConstructionInfoOutput {
	s.IDCAddr = &v
	return s
}

// SetODFInfo sets the ODFInfo field's value.
func (s *ConstructionInfoForGetDXPConstructionInfoOutput) SetODFInfo(v string) *ConstructionInfoForGetDXPConstructionInfoOutput {
	s.ODFInfo = &v
	return s
}

type GetDXPConstructionInfoInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetDXPConstructionInfoInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetDXPConstructionInfoInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetDXPConstructionInfoInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetDXPConstructionInfoInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *GetDXPConstructionInfoInput) SetInstanceId(v string) *GetDXPConstructionInfoInput {
	s.InstanceId = &v
	return s
}

type GetDXPConstructionInfoOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ConstructionInfo *ConstructionInfoForGetDXPConstructionInfoOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetDXPConstructionInfoOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetDXPConstructionInfoOutput) GoString() string {
	return s.String()
}

// SetConstructionInfo sets the ConstructionInfo field's value.
func (s *GetDXPConstructionInfoOutput) SetConstructionInfo(v *ConstructionInfoForGetDXPConstructionInfoOutput) *GetDXPConstructionInfoOutput {
	s.ConstructionInfo = v
	return s
}
