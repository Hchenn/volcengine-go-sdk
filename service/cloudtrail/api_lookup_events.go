// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudtrail

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opLookupEventsCommon = "LookupEvents"

// LookupEventsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the LookupEventsCommon operation. The "output" return
// value will be populated with the LookupEventsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned LookupEventsCommon Request to send the API call to the service.
// the "output" return value is not valid until after LookupEventsCommon Send returns without error.
//
// See LookupEventsCommon for more information on using the LookupEventsCommon
// API call, and error handling.
//
//    // Example sending a request using the LookupEventsCommonRequest method.
//    req, resp := client.LookupEventsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDTRAIL) LookupEventsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opLookupEventsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// LookupEventsCommon API operation for CLOUD_TRAIL.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUD_TRAIL's
// API operation LookupEventsCommon for usage and error information.
func (c *CLOUDTRAIL) LookupEventsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.LookupEventsCommonRequest(input)
	return out, req.Send()
}

// LookupEventsCommonWithContext is the same as LookupEventsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See LookupEventsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDTRAIL) LookupEventsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.LookupEventsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opLookupEvents = "LookupEvents"

// LookupEventsRequest generates a "volcengine/request.Request" representing the
// client's request for the LookupEvents operation. The "output" return
// value will be populated with the LookupEventsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned LookupEventsCommon Request to send the API call to the service.
// the "output" return value is not valid until after LookupEventsCommon Send returns without error.
//
// See LookupEvents for more information on using the LookupEvents
// API call, and error handling.
//
//    // Example sending a request using the LookupEventsRequest method.
//    req, resp := client.LookupEventsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDTRAIL) LookupEventsRequest(input *LookupEventsInput) (req *request.Request, output *LookupEventsOutput) {
	op := &request.Operation{
		Name:       opLookupEvents,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &LookupEventsInput{}
	}

	output = &LookupEventsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// LookupEvents API operation for CLOUD_TRAIL.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUD_TRAIL's
// API operation LookupEvents for usage and error information.
func (c *CLOUDTRAIL) LookupEvents(input *LookupEventsInput) (*LookupEventsOutput, error) {
	req, out := c.LookupEventsRequest(input)
	return out, req.Send()
}

// LookupEventsWithContext is the same as LookupEvents with the addition of
// the ability to pass a context and additional request options.
//
// See LookupEvents for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDTRAIL) LookupEventsWithContext(ctx volcengine.Context, input *LookupEventsInput, opts ...request.Option) (*LookupEventsOutput, error) {
	req, out := c.LookupEventsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type LookupConditionForLookupEventsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	LookupConditionKey *string `type:"string" json:",omitempty"`

	LookupConditionValue *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s LookupConditionForLookupEventsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LookupConditionForLookupEventsInput) GoString() string {
	return s.String()
}

// SetLookupConditionKey sets the LookupConditionKey field's value.
func (s *LookupConditionForLookupEventsInput) SetLookupConditionKey(v string) *LookupConditionForLookupEventsInput {
	s.LookupConditionKey = &v
	return s
}

// SetLookupConditionValue sets the LookupConditionValue field's value.
func (s *LookupConditionForLookupEventsInput) SetLookupConditionValue(v string) *LookupConditionForLookupEventsInput {
	s.LookupConditionValue = &v
	return s
}

type LookupEventsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EndTime *int64 `type:"int64" json:",omitempty"`

	LookupConditions []*LookupConditionForLookupEventsInput `type:"list" json:",omitempty"`

	MaxResults *int32 `type:"int32" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`

	StartTime *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s LookupEventsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LookupEventsInput) GoString() string {
	return s.String()
}

// SetEndTime sets the EndTime field's value.
func (s *LookupEventsInput) SetEndTime(v int64) *LookupEventsInput {
	s.EndTime = &v
	return s
}

// SetLookupConditions sets the LookupConditions field's value.
func (s *LookupEventsInput) SetLookupConditions(v []*LookupConditionForLookupEventsInput) *LookupEventsInput {
	s.LookupConditions = v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *LookupEventsInput) SetMaxResults(v int32) *LookupEventsInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *LookupEventsInput) SetNextToken(v string) *LookupEventsInput {
	s.NextToken = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *LookupEventsInput) SetStartTime(v int64) *LookupEventsInput {
	s.StartTime = &v
	return s
}

type LookupEventsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	NextToken *string `type:"string" json:",omitempty"`

	Trails []*TrailForLookupEventsOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s LookupEventsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LookupEventsOutput) GoString() string {
	return s.String()
}

// SetNextToken sets the NextToken field's value.
func (s *LookupEventsOutput) SetNextToken(v string) *LookupEventsOutput {
	s.NextToken = &v
	return s
}

// SetTrails sets the Trails field's value.
func (s *LookupEventsOutput) SetTrails(v []*TrailForLookupEventsOutput) *LookupEventsOutput {
	s.Trails = v
	return s
}

type RelatedResourceForLookupEventsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	IntegratedTrn *string `type:"string" json:",omitempty"`

	ResourceID *string `type:"string" json:",omitempty"`

	ResourceType *string `type:"string" json:",omitempty"`

	ResourceTypeDisplay *string `type:"string" json:",omitempty"`

	ServiceCode *string `type:"string" json:",omitempty"`

	SourceType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RelatedResourceForLookupEventsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RelatedResourceForLookupEventsOutput) GoString() string {
	return s.String()
}

// SetIntegratedTrn sets the IntegratedTrn field's value.
func (s *RelatedResourceForLookupEventsOutput) SetIntegratedTrn(v string) *RelatedResourceForLookupEventsOutput {
	s.IntegratedTrn = &v
	return s
}

// SetResourceID sets the ResourceID field's value.
func (s *RelatedResourceForLookupEventsOutput) SetResourceID(v string) *RelatedResourceForLookupEventsOutput {
	s.ResourceID = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *RelatedResourceForLookupEventsOutput) SetResourceType(v string) *RelatedResourceForLookupEventsOutput {
	s.ResourceType = &v
	return s
}

// SetResourceTypeDisplay sets the ResourceTypeDisplay field's value.
func (s *RelatedResourceForLookupEventsOutput) SetResourceTypeDisplay(v string) *RelatedResourceForLookupEventsOutput {
	s.ResourceTypeDisplay = &v
	return s
}

// SetServiceCode sets the ServiceCode field's value.
func (s *RelatedResourceForLookupEventsOutput) SetServiceCode(v string) *RelatedResourceForLookupEventsOutput {
	s.ServiceCode = &v
	return s
}

// SetSourceType sets the SourceType field's value.
func (s *RelatedResourceForLookupEventsOutput) SetSourceType(v string) *RelatedResourceForLookupEventsOutput {
	s.SourceType = &v
	return s
}

type TrailForLookupEventsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccessKeyID *string `type:"string" json:",omitempty"`

	ErrorCode *string `type:"string" json:",omitempty"`

	EventDetail *string `type:"string" json:",omitempty"`

	EventID *string `type:"string" json:",omitempty"`

	EventName *string `type:"string" json:",omitempty"`

	EventNameDisplay *string `type:"string" json:",omitempty"`

	EventSource *string `type:"string" json:",omitempty"`

	EventSourceDisplay *string `type:"string" json:",omitempty"`

	EventTime *string `type:"string" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`

	RelatedResources []*RelatedResourceForLookupEventsOutput `type:"list" json:",omitempty"`

	RequestID *string `type:"string" json:",omitempty"`

	SourceIPAddress *string `type:"string" json:",omitempty"`

	UserName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TrailForLookupEventsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TrailForLookupEventsOutput) GoString() string {
	return s.String()
}

// SetAccessKeyID sets the AccessKeyID field's value.
func (s *TrailForLookupEventsOutput) SetAccessKeyID(v string) *TrailForLookupEventsOutput {
	s.AccessKeyID = &v
	return s
}

// SetErrorCode sets the ErrorCode field's value.
func (s *TrailForLookupEventsOutput) SetErrorCode(v string) *TrailForLookupEventsOutput {
	s.ErrorCode = &v
	return s
}

// SetEventDetail sets the EventDetail field's value.
func (s *TrailForLookupEventsOutput) SetEventDetail(v string) *TrailForLookupEventsOutput {
	s.EventDetail = &v
	return s
}

// SetEventID sets the EventID field's value.
func (s *TrailForLookupEventsOutput) SetEventID(v string) *TrailForLookupEventsOutput {
	s.EventID = &v
	return s
}

// SetEventName sets the EventName field's value.
func (s *TrailForLookupEventsOutput) SetEventName(v string) *TrailForLookupEventsOutput {
	s.EventName = &v
	return s
}

// SetEventNameDisplay sets the EventNameDisplay field's value.
func (s *TrailForLookupEventsOutput) SetEventNameDisplay(v string) *TrailForLookupEventsOutput {
	s.EventNameDisplay = &v
	return s
}

// SetEventSource sets the EventSource field's value.
func (s *TrailForLookupEventsOutput) SetEventSource(v string) *TrailForLookupEventsOutput {
	s.EventSource = &v
	return s
}

// SetEventSourceDisplay sets the EventSourceDisplay field's value.
func (s *TrailForLookupEventsOutput) SetEventSourceDisplay(v string) *TrailForLookupEventsOutput {
	s.EventSourceDisplay = &v
	return s
}

// SetEventTime sets the EventTime field's value.
func (s *TrailForLookupEventsOutput) SetEventTime(v string) *TrailForLookupEventsOutput {
	s.EventTime = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *TrailForLookupEventsOutput) SetRegion(v string) *TrailForLookupEventsOutput {
	s.Region = &v
	return s
}

// SetRelatedResources sets the RelatedResources field's value.
func (s *TrailForLookupEventsOutput) SetRelatedResources(v []*RelatedResourceForLookupEventsOutput) *TrailForLookupEventsOutput {
	s.RelatedResources = v
	return s
}

// SetRequestID sets the RequestID field's value.
func (s *TrailForLookupEventsOutput) SetRequestID(v string) *TrailForLookupEventsOutput {
	s.RequestID = &v
	return s
}

// SetSourceIPAddress sets the SourceIPAddress field's value.
func (s *TrailForLookupEventsOutput) SetSourceIPAddress(v string) *TrailForLookupEventsOutput {
	s.SourceIPAddress = &v
	return s
}

// SetUserName sets the UserName field's value.
func (s *TrailForLookupEventsOutput) SetUserName(v string) *TrailForLookupEventsOutput {
	s.UserName = &v
	return s
}
