// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribePurchasableExclusiveClustersCommon = "DescribePurchasableExclusiveClusters"

// DescribePurchasableExclusiveClustersCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribePurchasableExclusiveClustersCommon operation. The "output" return
// value will be populated with the DescribePurchasableExclusiveClustersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribePurchasableExclusiveClustersCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribePurchasableExclusiveClustersCommon Send returns without error.
//
// See DescribePurchasableExclusiveClustersCommon for more information on using the DescribePurchasableExclusiveClustersCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribePurchasableExclusiveClustersCommonRequest method.
//    req, resp := client.DescribePurchasableExclusiveClustersCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) DescribePurchasableExclusiveClustersCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribePurchasableExclusiveClustersCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribePurchasableExclusiveClustersCommon API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation DescribePurchasableExclusiveClustersCommon for usage and error information.
func (c *CLB) DescribePurchasableExclusiveClustersCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribePurchasableExclusiveClustersCommonRequest(input)
	return out, req.Send()
}

// DescribePurchasableExclusiveClustersCommonWithContext is the same as DescribePurchasableExclusiveClustersCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribePurchasableExclusiveClustersCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) DescribePurchasableExclusiveClustersCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribePurchasableExclusiveClustersCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribePurchasableExclusiveClusters = "DescribePurchasableExclusiveClusters"

// DescribePurchasableExclusiveClustersRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribePurchasableExclusiveClusters operation. The "output" return
// value will be populated with the DescribePurchasableExclusiveClustersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribePurchasableExclusiveClustersCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribePurchasableExclusiveClustersCommon Send returns without error.
//
// See DescribePurchasableExclusiveClusters for more information on using the DescribePurchasableExclusiveClusters
// API call, and error handling.
//
//    // Example sending a request using the DescribePurchasableExclusiveClustersRequest method.
//    req, resp := client.DescribePurchasableExclusiveClustersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) DescribePurchasableExclusiveClustersRequest(input *DescribePurchasableExclusiveClustersInput) (req *request.Request, output *DescribePurchasableExclusiveClustersOutput) {
	op := &request.Operation{
		Name:       opDescribePurchasableExclusiveClusters,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribePurchasableExclusiveClustersInput{}
	}

	output = &DescribePurchasableExclusiveClustersOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribePurchasableExclusiveClusters API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation DescribePurchasableExclusiveClusters for usage and error information.
func (c *CLB) DescribePurchasableExclusiveClusters(input *DescribePurchasableExclusiveClustersInput) (*DescribePurchasableExclusiveClustersOutput, error) {
	req, out := c.DescribePurchasableExclusiveClustersRequest(input)
	return out, req.Send()
}

// DescribePurchasableExclusiveClustersWithContext is the same as DescribePurchasableExclusiveClusters with the addition of
// the ability to pass a context and additional request options.
//
// See DescribePurchasableExclusiveClusters for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) DescribePurchasableExclusiveClustersWithContext(ctx volcengine.Context, input *DescribePurchasableExclusiveClustersInput, opts ...request.Option) (*DescribePurchasableExclusiveClustersOutput, error) {
	req, out := c.DescribePurchasableExclusiveClustersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribePurchasableExclusiveClustersInput struct {
	_ struct{} `type:"structure"`

	ExclusiveClusterIds []*string `type:"list"`

	ExclusiveClusterName *string `type:"string"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`
}

// String returns the string representation
func (s DescribePurchasableExclusiveClustersInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribePurchasableExclusiveClustersInput) GoString() string {
	return s.String()
}

// SetExclusiveClusterIds sets the ExclusiveClusterIds field's value.
func (s *DescribePurchasableExclusiveClustersInput) SetExclusiveClusterIds(v []*string) *DescribePurchasableExclusiveClustersInput {
	s.ExclusiveClusterIds = v
	return s
}

// SetExclusiveClusterName sets the ExclusiveClusterName field's value.
func (s *DescribePurchasableExclusiveClustersInput) SetExclusiveClusterName(v string) *DescribePurchasableExclusiveClustersInput {
	s.ExclusiveClusterName = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribePurchasableExclusiveClustersInput) SetPageNumber(v int64) *DescribePurchasableExclusiveClustersInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribePurchasableExclusiveClustersInput) SetPageSize(v int64) *DescribePurchasableExclusiveClustersInput {
	s.PageSize = &v
	return s
}

type DescribePurchasableExclusiveClustersOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	ExclusiveClusters []*ExclusiveClusterForDescribePurchasableExclusiveClustersOutput `type:"list"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RequestId *string `type:"string"`

	TotalCount *int64 `type:"integer"`
}

// String returns the string representation
func (s DescribePurchasableExclusiveClustersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribePurchasableExclusiveClustersOutput) GoString() string {
	return s.String()
}

// SetExclusiveClusters sets the ExclusiveClusters field's value.
func (s *DescribePurchasableExclusiveClustersOutput) SetExclusiveClusters(v []*ExclusiveClusterForDescribePurchasableExclusiveClustersOutput) *DescribePurchasableExclusiveClustersOutput {
	s.ExclusiveClusters = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribePurchasableExclusiveClustersOutput) SetPageNumber(v int64) *DescribePurchasableExclusiveClustersOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribePurchasableExclusiveClustersOutput) SetPageSize(v int64) *DescribePurchasableExclusiveClustersOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribePurchasableExclusiveClustersOutput) SetRequestId(v string) *DescribePurchasableExclusiveClustersOutput {
	s.RequestId = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribePurchasableExclusiveClustersOutput) SetTotalCount(v int64) *DescribePurchasableExclusiveClustersOutput {
	s.TotalCount = &v
	return s
}

type ExclusiveClusterForDescribePurchasableExclusiveClustersOutput struct {
	_ struct{} `type:"structure"`

	AvailableZones []*string `type:"list"`

	BusinessStatus *string `type:"string"`

	CreateTime *string `type:"string"`

	DispatchUnitType *string `type:"string"`

	ExclusiveClusterId *string `type:"string"`

	ExclusiveClusterName *string `type:"string"`

	MaxPerformanceUnitCount *int64 `type:"integer"`

	PerformanceUnit *string `type:"string"`

	Status *string `type:"string"`

	UpdateTime *string `type:"string"`
}

// String returns the string representation
func (s ExclusiveClusterForDescribePurchasableExclusiveClustersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ExclusiveClusterForDescribePurchasableExclusiveClustersOutput) GoString() string {
	return s.String()
}

// SetAvailableZones sets the AvailableZones field's value.
func (s *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput) SetAvailableZones(v []*string) *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput {
	s.AvailableZones = v
	return s
}

// SetBusinessStatus sets the BusinessStatus field's value.
func (s *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput) SetBusinessStatus(v string) *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput {
	s.BusinessStatus = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput) SetCreateTime(v string) *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput {
	s.CreateTime = &v
	return s
}

// SetDispatchUnitType sets the DispatchUnitType field's value.
func (s *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput) SetDispatchUnitType(v string) *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput {
	s.DispatchUnitType = &v
	return s
}

// SetExclusiveClusterId sets the ExclusiveClusterId field's value.
func (s *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput) SetExclusiveClusterId(v string) *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput {
	s.ExclusiveClusterId = &v
	return s
}

// SetExclusiveClusterName sets the ExclusiveClusterName field's value.
func (s *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput) SetExclusiveClusterName(v string) *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput {
	s.ExclusiveClusterName = &v
	return s
}

// SetMaxPerformanceUnitCount sets the MaxPerformanceUnitCount field's value.
func (s *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput) SetMaxPerformanceUnitCount(v int64) *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput {
	s.MaxPerformanceUnitCount = &v
	return s
}

// SetPerformanceUnit sets the PerformanceUnit field's value.
func (s *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput) SetPerformanceUnit(v string) *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput {
	s.PerformanceUnit = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput) SetStatus(v string) *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput {
	s.Status = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput) SetUpdateTime(v string) *ExclusiveClusterForDescribePurchasableExclusiveClustersOutput {
	s.UpdateTime = &v
	return s
}
