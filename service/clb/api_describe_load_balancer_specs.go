// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeLoadBalancerSpecsCommon = "DescribeLoadBalancerSpecs"

// DescribeLoadBalancerSpecsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeLoadBalancerSpecsCommon operation. The "output" return
// value will be populated with the DescribeLoadBalancerSpecsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeLoadBalancerSpecsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeLoadBalancerSpecsCommon Send returns without error.
//
// See DescribeLoadBalancerSpecsCommon for more information on using the DescribeLoadBalancerSpecsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeLoadBalancerSpecsCommonRequest method.
//    req, resp := client.DescribeLoadBalancerSpecsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) DescribeLoadBalancerSpecsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeLoadBalancerSpecsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeLoadBalancerSpecsCommon API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation DescribeLoadBalancerSpecsCommon for usage and error information.
func (c *CLB) DescribeLoadBalancerSpecsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeLoadBalancerSpecsCommonRequest(input)
	return out, req.Send()
}

// DescribeLoadBalancerSpecsCommonWithContext is the same as DescribeLoadBalancerSpecsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeLoadBalancerSpecsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) DescribeLoadBalancerSpecsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeLoadBalancerSpecsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeLoadBalancerSpecs = "DescribeLoadBalancerSpecs"

// DescribeLoadBalancerSpecsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeLoadBalancerSpecs operation. The "output" return
// value will be populated with the DescribeLoadBalancerSpecsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeLoadBalancerSpecsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeLoadBalancerSpecsCommon Send returns without error.
//
// See DescribeLoadBalancerSpecs for more information on using the DescribeLoadBalancerSpecs
// API call, and error handling.
//
//    // Example sending a request using the DescribeLoadBalancerSpecsRequest method.
//    req, resp := client.DescribeLoadBalancerSpecsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) DescribeLoadBalancerSpecsRequest(input *DescribeLoadBalancerSpecsInput) (req *request.Request, output *DescribeLoadBalancerSpecsOutput) {
	op := &request.Operation{
		Name:       opDescribeLoadBalancerSpecs,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeLoadBalancerSpecsInput{}
	}

	output = &DescribeLoadBalancerSpecsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeLoadBalancerSpecs API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation DescribeLoadBalancerSpecs for usage and error information.
func (c *CLB) DescribeLoadBalancerSpecs(input *DescribeLoadBalancerSpecsInput) (*DescribeLoadBalancerSpecsOutput, error) {
	req, out := c.DescribeLoadBalancerSpecsRequest(input)
	return out, req.Send()
}

// DescribeLoadBalancerSpecsWithContext is the same as DescribeLoadBalancerSpecs with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeLoadBalancerSpecs for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) DescribeLoadBalancerSpecsWithContext(ctx volcengine.Context, input *DescribeLoadBalancerSpecsInput, opts ...request.Option) (*DescribeLoadBalancerSpecsOutput, error) {
	req, out := c.DescribeLoadBalancerSpecsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeLoadBalancerSpecsInput struct {
	_ struct{} `type:"structure"`

	EnglishSpec *string `type:"string"`
}

// String returns the string representation
func (s DescribeLoadBalancerSpecsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeLoadBalancerSpecsInput) GoString() string {
	return s.String()
}

// SetEnglishSpec sets the EnglishSpec field's value.
func (s *DescribeLoadBalancerSpecsInput) SetEnglishSpec(v string) *DescribeLoadBalancerSpecsInput {
	s.EnglishSpec = &v
	return s
}

type DescribeLoadBalancerSpecsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	LoadBalancerSpecs []*LoadBalancerSpecForDescribeLoadBalancerSpecsOutput `type:"list"`

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s DescribeLoadBalancerSpecsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeLoadBalancerSpecsOutput) GoString() string {
	return s.String()
}

// SetLoadBalancerSpecs sets the LoadBalancerSpecs field's value.
func (s *DescribeLoadBalancerSpecsOutput) SetLoadBalancerSpecs(v []*LoadBalancerSpecForDescribeLoadBalancerSpecsOutput) *DescribeLoadBalancerSpecsOutput {
	s.LoadBalancerSpecs = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeLoadBalancerSpecsOutput) SetRequestId(v string) *DescribeLoadBalancerSpecsOutput {
	s.RequestId = &v
	return s
}

type LoadBalancerSpecForDescribeLoadBalancerSpecsOutput struct {
	_ struct{} `type:"structure"`

	Bandwidth *int64 `type:"integer"`

	ChineseSpec *string `type:"string"`

	EnglishSpec *string `type:"string"`

	MaxConnections *int64 `type:"integer"`

	NewConnectionsPerSecond *int64 `type:"integer"`

	QueriesPerSecond *int64 `type:"integer"`
}

// String returns the string representation
func (s LoadBalancerSpecForDescribeLoadBalancerSpecsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LoadBalancerSpecForDescribeLoadBalancerSpecsOutput) GoString() string {
	return s.String()
}

// SetBandwidth sets the Bandwidth field's value.
func (s *LoadBalancerSpecForDescribeLoadBalancerSpecsOutput) SetBandwidth(v int64) *LoadBalancerSpecForDescribeLoadBalancerSpecsOutput {
	s.Bandwidth = &v
	return s
}

// SetChineseSpec sets the ChineseSpec field's value.
func (s *LoadBalancerSpecForDescribeLoadBalancerSpecsOutput) SetChineseSpec(v string) *LoadBalancerSpecForDescribeLoadBalancerSpecsOutput {
	s.ChineseSpec = &v
	return s
}

// SetEnglishSpec sets the EnglishSpec field's value.
func (s *LoadBalancerSpecForDescribeLoadBalancerSpecsOutput) SetEnglishSpec(v string) *LoadBalancerSpecForDescribeLoadBalancerSpecsOutput {
	s.EnglishSpec = &v
	return s
}

// SetMaxConnections sets the MaxConnections field's value.
func (s *LoadBalancerSpecForDescribeLoadBalancerSpecsOutput) SetMaxConnections(v int64) *LoadBalancerSpecForDescribeLoadBalancerSpecsOutput {
	s.MaxConnections = &v
	return s
}

// SetNewConnectionsPerSecond sets the NewConnectionsPerSecond field's value.
func (s *LoadBalancerSpecForDescribeLoadBalancerSpecsOutput) SetNewConnectionsPerSecond(v int64) *LoadBalancerSpecForDescribeLoadBalancerSpecsOutput {
	s.NewConnectionsPerSecond = &v
	return s
}

// SetQueriesPerSecond sets the QueriesPerSecond field's value.
func (s *LoadBalancerSpecForDescribeLoadBalancerSpecsOutput) SetQueriesPerSecond(v int64) *LoadBalancerSpecForDescribeLoadBalancerSpecsOutput {
	s.QueriesPerSecond = &v
	return s
}
