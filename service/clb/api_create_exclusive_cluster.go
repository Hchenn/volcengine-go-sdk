// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateExclusiveClusterCommon = "CreateExclusiveCluster"

// CreateExclusiveClusterCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateExclusiveClusterCommon operation. The "output" return
// value will be populated with the CreateExclusiveClusterCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateExclusiveClusterCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateExclusiveClusterCommon Send returns without error.
//
// See CreateExclusiveClusterCommon for more information on using the CreateExclusiveClusterCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateExclusiveClusterCommonRequest method.
//    req, resp := client.CreateExclusiveClusterCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) CreateExclusiveClusterCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateExclusiveClusterCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateExclusiveClusterCommon API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation CreateExclusiveClusterCommon for usage and error information.
func (c *CLB) CreateExclusiveClusterCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateExclusiveClusterCommonRequest(input)
	return out, req.Send()
}

// CreateExclusiveClusterCommonWithContext is the same as CreateExclusiveClusterCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateExclusiveClusterCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) CreateExclusiveClusterCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateExclusiveClusterCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateExclusiveCluster = "CreateExclusiveCluster"

// CreateExclusiveClusterRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateExclusiveCluster operation. The "output" return
// value will be populated with the CreateExclusiveClusterCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateExclusiveClusterCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateExclusiveClusterCommon Send returns without error.
//
// See CreateExclusiveCluster for more information on using the CreateExclusiveCluster
// API call, and error handling.
//
//    // Example sending a request using the CreateExclusiveClusterRequest method.
//    req, resp := client.CreateExclusiveClusterRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) CreateExclusiveClusterRequest(input *CreateExclusiveClusterInput) (req *request.Request, output *CreateExclusiveClusterOutput) {
	op := &request.Operation{
		Name:       opCreateExclusiveCluster,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateExclusiveClusterInput{}
	}

	output = &CreateExclusiveClusterOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateExclusiveCluster API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation CreateExclusiveCluster for usage and error information.
func (c *CLB) CreateExclusiveCluster(input *CreateExclusiveClusterInput) (*CreateExclusiveClusterOutput, error) {
	req, out := c.CreateExclusiveClusterRequest(input)
	return out, req.Send()
}

// CreateExclusiveClusterWithContext is the same as CreateExclusiveCluster with the addition of
// the ability to pass a context and additional request options.
//
// See CreateExclusiveCluster for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) CreateExclusiveClusterWithContext(ctx volcengine.Context, input *CreateExclusiveClusterInput, opts ...request.Option) (*CreateExclusiveClusterOutput, error) {
	req, out := c.CreateExclusiveClusterRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateExclusiveClusterInput struct {
	_ struct{} `type:"structure"`

	BillingType *int64 `type:"integer"`

	// ExclusiveClusterId is a required field
	ExclusiveClusterId *string `type:"string" required:"true"`

	ExclusiveClusterName *string `type:"string"`

	Period *int64 `type:"integer"`

	PeriodUnit *string `type:"string"`

	ProjectName *string `type:"string"`

	// RegionId is a required field
	RegionId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s CreateExclusiveClusterInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateExclusiveClusterInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateExclusiveClusterInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateExclusiveClusterInput"}
	if s.ExclusiveClusterId == nil {
		invalidParams.Add(request.NewErrParamRequired("ExclusiveClusterId"))
	}
	if s.RegionId == nil {
		invalidParams.Add(request.NewErrParamRequired("RegionId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBillingType sets the BillingType field's value.
func (s *CreateExclusiveClusterInput) SetBillingType(v int64) *CreateExclusiveClusterInput {
	s.BillingType = &v
	return s
}

// SetExclusiveClusterId sets the ExclusiveClusterId field's value.
func (s *CreateExclusiveClusterInput) SetExclusiveClusterId(v string) *CreateExclusiveClusterInput {
	s.ExclusiveClusterId = &v
	return s
}

// SetExclusiveClusterName sets the ExclusiveClusterName field's value.
func (s *CreateExclusiveClusterInput) SetExclusiveClusterName(v string) *CreateExclusiveClusterInput {
	s.ExclusiveClusterName = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *CreateExclusiveClusterInput) SetPeriod(v int64) *CreateExclusiveClusterInput {
	s.Period = &v
	return s
}

// SetPeriodUnit sets the PeriodUnit field's value.
func (s *CreateExclusiveClusterInput) SetPeriodUnit(v string) *CreateExclusiveClusterInput {
	s.PeriodUnit = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *CreateExclusiveClusterInput) SetProjectName(v string) *CreateExclusiveClusterInput {
	s.ProjectName = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *CreateExclusiveClusterInput) SetRegionId(v string) *CreateExclusiveClusterInput {
	s.RegionId = &v
	return s
}

type CreateExclusiveClusterOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	OrderId *string `type:"string"`

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s CreateExclusiveClusterOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateExclusiveClusterOutput) GoString() string {
	return s.String()
}

// SetOrderId sets the OrderId field's value.
func (s *CreateExclusiveClusterOutput) SetOrderId(v string) *CreateExclusiveClusterOutput {
	s.OrderId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *CreateExclusiveClusterOutput) SetRequestId(v string) *CreateExclusiveClusterOutput {
	s.RequestId = &v
	return s
}
