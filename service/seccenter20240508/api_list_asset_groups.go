// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAssetGroupsCommon = "ListAssetGroups"

// ListAssetGroupsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAssetGroupsCommon operation. The "output" return
// value will be populated with the ListAssetGroupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAssetGroupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAssetGroupsCommon Send returns without error.
//
// See ListAssetGroupsCommon for more information on using the ListAssetGroupsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAssetGroupsCommonRequest method.
//    req, resp := client.ListAssetGroupsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListAssetGroupsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAssetGroupsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAssetGroupsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListAssetGroupsCommon for usage and error information.
func (c *SECCENTER20240508) ListAssetGroupsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAssetGroupsCommonRequest(input)
	return out, req.Send()
}

// ListAssetGroupsCommonWithContext is the same as ListAssetGroupsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAssetGroupsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListAssetGroupsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAssetGroupsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAssetGroups = "ListAssetGroups"

// ListAssetGroupsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAssetGroups operation. The "output" return
// value will be populated with the ListAssetGroupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAssetGroupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAssetGroupsCommon Send returns without error.
//
// See ListAssetGroups for more information on using the ListAssetGroups
// API call, and error handling.
//
//    // Example sending a request using the ListAssetGroupsRequest method.
//    req, resp := client.ListAssetGroupsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListAssetGroupsRequest(input *ListAssetGroupsInput) (req *request.Request, output *ListAssetGroupsOutput) {
	op := &request.Operation{
		Name:       opListAssetGroups,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAssetGroupsInput{}
	}

	output = &ListAssetGroupsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAssetGroups API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListAssetGroups for usage and error information.
func (c *SECCENTER20240508) ListAssetGroups(input *ListAssetGroupsInput) (*ListAssetGroupsOutput, error) {
	req, out := c.ListAssetGroupsRequest(input)
	return out, req.Send()
}

// ListAssetGroupsWithContext is the same as ListAssetGroups with the addition of
// the ability to pass a context and additional request options.
//
// See ListAssetGroups for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListAssetGroupsWithContext(ctx volcengine.Context, input *ListAssetGroupsInput, opts ...request.Option) (*ListAssetGroupsOutput, error) {
	req, out := c.ListAssetGroupsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListAssetGroupsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ListAssetGroupsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssetGroupsInput) GoString() string {
	return s.String()
}

type ListAssetGroupsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListAssetGroupsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssetGroupsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListAssetGroupsOutput) SetData(v []*string) *ListAssetGroupsOutput {
	s.Data = v
	return s
}
