// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListCloudPlatformsCommon = "ListCloudPlatforms"

// ListCloudPlatformsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListCloudPlatformsCommon operation. The "output" return
// value will be populated with the ListCloudPlatformsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListCloudPlatformsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListCloudPlatformsCommon Send returns without error.
//
// See ListCloudPlatformsCommon for more information on using the ListCloudPlatformsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListCloudPlatformsCommonRequest method.
//    req, resp := client.ListCloudPlatformsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListCloudPlatformsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListCloudPlatformsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListCloudPlatformsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListCloudPlatformsCommon for usage and error information.
func (c *SECCENTER20240508) ListCloudPlatformsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListCloudPlatformsCommonRequest(input)
	return out, req.Send()
}

// ListCloudPlatformsCommonWithContext is the same as ListCloudPlatformsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListCloudPlatformsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListCloudPlatformsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListCloudPlatformsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListCloudPlatforms = "ListCloudPlatforms"

// ListCloudPlatformsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListCloudPlatforms operation. The "output" return
// value will be populated with the ListCloudPlatformsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListCloudPlatformsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListCloudPlatformsCommon Send returns without error.
//
// See ListCloudPlatforms for more information on using the ListCloudPlatforms
// API call, and error handling.
//
//    // Example sending a request using the ListCloudPlatformsRequest method.
//    req, resp := client.ListCloudPlatformsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListCloudPlatformsRequest(input *ListCloudPlatformsInput) (req *request.Request, output *ListCloudPlatformsOutput) {
	op := &request.Operation{
		Name:       opListCloudPlatforms,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListCloudPlatformsInput{}
	}

	output = &ListCloudPlatformsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListCloudPlatforms API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListCloudPlatforms for usage and error information.
func (c *SECCENTER20240508) ListCloudPlatforms(input *ListCloudPlatformsInput) (*ListCloudPlatformsOutput, error) {
	req, out := c.ListCloudPlatformsRequest(input)
	return out, req.Send()
}

// ListCloudPlatformsWithContext is the same as ListCloudPlatforms with the addition of
// the ability to pass a context and additional request options.
//
// See ListCloudPlatforms for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListCloudPlatformsWithContext(ctx volcengine.Context, input *ListCloudPlatformsInput, opts ...request.Option) (*ListCloudPlatformsOutput, error) {
	req, out := c.ListCloudPlatformsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListCloudPlatformsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:"key,omitempty"`

	Name *string `type:"string" json:"name,omitempty"`

	Online *bool `type:"boolean" json:"online,omitempty"`
}

// String returns the string representation
func (s DataForListCloudPlatformsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListCloudPlatformsOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *DataForListCloudPlatformsOutput) SetKey(v string) *DataForListCloudPlatformsOutput {
	s.Key = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForListCloudPlatformsOutput) SetName(v string) *DataForListCloudPlatformsOutput {
	s.Name = &v
	return s
}

// SetOnline sets the Online field's value.
func (s *DataForListCloudPlatformsOutput) SetOnline(v bool) *DataForListCloudPlatformsOutput {
	s.Online = &v
	return s
}

type ListCloudPlatformsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ListCloudPlatformsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListCloudPlatformsInput) GoString() string {
	return s.String()
}

type ListCloudPlatformsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListCloudPlatformsOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListCloudPlatformsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListCloudPlatformsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListCloudPlatformsOutput) SetData(v []*DataForListCloudPlatformsOutput) *ListCloudPlatformsOutput {
	s.Data = v
	return s
}
