// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListHostVpcCommon = "ListHostVpc"

// ListHostVpcCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListHostVpcCommon operation. The "output" return
// value will be populated with the ListHostVpcCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListHostVpcCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListHostVpcCommon Send returns without error.
//
// See ListHostVpcCommon for more information on using the ListHostVpcCommon
// API call, and error handling.
//
//    // Example sending a request using the ListHostVpcCommonRequest method.
//    req, resp := client.ListHostVpcCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListHostVpcCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListHostVpcCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ListHostVpcCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListHostVpcCommon for usage and error information.
func (c *SECCENTER20240508) ListHostVpcCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListHostVpcCommonRequest(input)
	return out, req.Send()
}

// ListHostVpcCommonWithContext is the same as ListHostVpcCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListHostVpcCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListHostVpcCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListHostVpcCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListHostVpc = "ListHostVpc"

// ListHostVpcRequest generates a "volcengine/request.Request" representing the
// client's request for the ListHostVpc operation. The "output" return
// value will be populated with the ListHostVpcCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListHostVpcCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListHostVpcCommon Send returns without error.
//
// See ListHostVpc for more information on using the ListHostVpc
// API call, and error handling.
//
//    // Example sending a request using the ListHostVpcRequest method.
//    req, resp := client.ListHostVpcRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListHostVpcRequest(input *ListHostVpcInput) (req *request.Request, output *ListHostVpcOutput) {
	op := &request.Operation{
		Name:       opListHostVpc,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListHostVpcInput{}
	}

	output = &ListHostVpcOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ListHostVpc API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListHostVpc for usage and error information.
func (c *SECCENTER20240508) ListHostVpc(input *ListHostVpcInput) (*ListHostVpcOutput, error) {
	req, out := c.ListHostVpcRequest(input)
	return out, req.Send()
}

// ListHostVpcWithContext is the same as ListHostVpc with the addition of
// the ability to pass a context and additional request options.
//
// See ListHostVpc for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListHostVpcWithContext(ctx volcengine.Context, input *ListHostVpcInput, opts ...request.Option) (*ListHostVpcOutput, error) {
	req, out := c.ListHostVpcRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListHostVpcInput struct {
	_ struct{} `type:"structure"`

	TopGroupID *string `type:"string"`
}

// String returns the string representation
func (s ListHostVpcInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListHostVpcInput) GoString() string {
	return s.String()
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *ListHostVpcInput) SetTopGroupID(v string) *ListHostVpcInput {
	s.TopGroupID = &v
	return s
}

type ListHostVpcOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	VpcIds []*string `type:"list"`
}

// String returns the string representation
func (s ListHostVpcOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListHostVpcOutput) GoString() string {
	return s.String()
}

// SetVpcIds sets the VpcIds field's value.
func (s *ListHostVpcOutput) SetVpcIds(v []*string) *ListHostVpcOutput {
	s.VpcIds = v
	return s
}
