// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListRegistriesCommon = "ListRegistries"

// ListRegistriesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListRegistriesCommon operation. The "output" return
// value will be populated with the ListRegistriesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRegistriesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRegistriesCommon Send returns without error.
//
// See ListRegistriesCommon for more information on using the ListRegistriesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListRegistriesCommonRequest method.
//    req, resp := client.ListRegistriesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListRegistriesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListRegistriesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRegistriesCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListRegistriesCommon for usage and error information.
func (c *SECCENTER20240508) ListRegistriesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListRegistriesCommonRequest(input)
	return out, req.Send()
}

// ListRegistriesCommonWithContext is the same as ListRegistriesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListRegistriesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListRegistriesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListRegistriesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListRegistries = "ListRegistries"

// ListRegistriesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListRegistries operation. The "output" return
// value will be populated with the ListRegistriesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRegistriesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRegistriesCommon Send returns without error.
//
// See ListRegistries for more information on using the ListRegistries
// API call, and error handling.
//
//    // Example sending a request using the ListRegistriesRequest method.
//    req, resp := client.ListRegistriesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListRegistriesRequest(input *ListRegistriesInput) (req *request.Request, output *ListRegistriesOutput) {
	op := &request.Operation{
		Name:       opListRegistries,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListRegistriesInput{}
	}

	output = &ListRegistriesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRegistries API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListRegistries for usage and error information.
func (c *SECCENTER20240508) ListRegistries(input *ListRegistriesInput) (*ListRegistriesOutput, error) {
	req, out := c.ListRegistriesRequest(input)
	return out, req.Send()
}

// ListRegistriesWithContext is the same as ListRegistries with the addition of
// the ability to pass a context and additional request options.
//
// See ListRegistries for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListRegistriesWithContext(ctx volcengine.Context, input *ListRegistriesInput, opts ...request.Option) (*ListRegistriesOutput, error) {
	req, out := c.ListRegistriesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AttributesForListRegistriesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	VolcRegion *string `type:"string" json:",omitempty"`

	VolcStatus *string `type:"string" json:",omitempty"`

	VolcType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AttributesForListRegistriesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AttributesForListRegistriesOutput) GoString() string {
	return s.String()
}

// SetVolcRegion sets the VolcRegion field's value.
func (s *AttributesForListRegistriesOutput) SetVolcRegion(v string) *AttributesForListRegistriesOutput {
	s.VolcRegion = &v
	return s
}

// SetVolcStatus sets the VolcStatus field's value.
func (s *AttributesForListRegistriesOutput) SetVolcStatus(v string) *AttributesForListRegistriesOutput {
	s.VolcStatus = &v
	return s
}

// SetVolcType sets the VolcType field's value.
func (s *AttributesForListRegistriesOutput) SetVolcType(v string) *AttributesForListRegistriesOutput {
	s.VolcType = &v
	return s
}

type DataForListRegistriesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Attributes *AttributesForListRegistriesOutput `type:"structure" json:",omitempty"`

	CollectTime *int32 `type:"int32" json:",omitempty"`

	FlowRateLimit *int32 `type:"int32" json:",omitempty"`

	ID *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Registry *string `type:"string" json:",omitempty"`

	RegistryCreateTime *int32 `type:"int32" json:",omitempty"`

	RegistryType *string `type:"string" json:",omitempty"`

	VpcAuthStatus *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DataForListRegistriesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListRegistriesOutput) GoString() string {
	return s.String()
}

// SetAttributes sets the Attributes field's value.
func (s *DataForListRegistriesOutput) SetAttributes(v *AttributesForListRegistriesOutput) *DataForListRegistriesOutput {
	s.Attributes = v
	return s
}

// SetCollectTime sets the CollectTime field's value.
func (s *DataForListRegistriesOutput) SetCollectTime(v int32) *DataForListRegistriesOutput {
	s.CollectTime = &v
	return s
}

// SetFlowRateLimit sets the FlowRateLimit field's value.
func (s *DataForListRegistriesOutput) SetFlowRateLimit(v int32) *DataForListRegistriesOutput {
	s.FlowRateLimit = &v
	return s
}

// SetID sets the ID field's value.
func (s *DataForListRegistriesOutput) SetID(v string) *DataForListRegistriesOutput {
	s.ID = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForListRegistriesOutput) SetName(v string) *DataForListRegistriesOutput {
	s.Name = &v
	return s
}

// SetRegistry sets the Registry field's value.
func (s *DataForListRegistriesOutput) SetRegistry(v string) *DataForListRegistriesOutput {
	s.Registry = &v
	return s
}

// SetRegistryCreateTime sets the RegistryCreateTime field's value.
func (s *DataForListRegistriesOutput) SetRegistryCreateTime(v int32) *DataForListRegistriesOutput {
	s.RegistryCreateTime = &v
	return s
}

// SetRegistryType sets the RegistryType field's value.
func (s *DataForListRegistriesOutput) SetRegistryType(v string) *DataForListRegistriesOutput {
	s.RegistryType = &v
	return s
}

// SetVpcAuthStatus sets the VpcAuthStatus field's value.
func (s *DataForListRegistriesOutput) SetVpcAuthStatus(v int32) *DataForListRegistriesOutput {
	s.VpcAuthStatus = &v
	return s
}

type FilterForListRegistriesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Regions []*string `type:"list" json:",omitempty"`

	VolcStatus []*string `type:"list" json:",omitempty"`

	VpcAuthStatus []*int32 `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListRegistriesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListRegistriesInput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *FilterForListRegistriesInput) SetName(v string) *FilterForListRegistriesInput {
	s.Name = &v
	return s
}

// SetRegions sets the Regions field's value.
func (s *FilterForListRegistriesInput) SetRegions(v []*string) *FilterForListRegistriesInput {
	s.Regions = v
	return s
}

// SetVolcStatus sets the VolcStatus field's value.
func (s *FilterForListRegistriesInput) SetVolcStatus(v []*string) *FilterForListRegistriesInput {
	s.VolcStatus = v
	return s
}

// SetVpcAuthStatus sets the VpcAuthStatus field's value.
func (s *FilterForListRegistriesInput) SetVpcAuthStatus(v []*int32) *FilterForListRegistriesInput {
	s.VpcAuthStatus = v
	return s
}

type ListRegistriesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListRegistriesInput `type:"structure" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int32 `type:"int32" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int32 `type:"int32" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListRegistriesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRegistriesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListRegistriesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListRegistriesInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFilter sets the Filter field's value.
func (s *ListRegistriesInput) SetFilter(v *FilterForListRegistriesInput) *ListRegistriesInput {
	s.Filter = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListRegistriesInput) SetPageNumber(v int32) *ListRegistriesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListRegistriesInput) SetPageSize(v int32) *ListRegistriesInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *ListRegistriesInput) SetSortBy(v string) *ListRegistriesInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *ListRegistriesInput) SetSortOrder(v string) *ListRegistriesInput {
	s.SortOrder = &v
	return s
}

type ListRegistriesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListRegistriesOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListRegistriesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRegistriesOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListRegistriesOutput) SetData(v []*DataForListRegistriesOutput) *ListRegistriesOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListRegistriesOutput) SetPageNumber(v int32) *ListRegistriesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListRegistriesOutput) SetPageSize(v int32) *ListRegistriesOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListRegistriesOutput) SetTotalCount(v int32) *ListRegistriesOutput {
	s.TotalCount = &v
	return s
}
