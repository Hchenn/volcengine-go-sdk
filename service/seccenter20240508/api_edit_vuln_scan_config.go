// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opEditVulnScanConfigCommon = "EditVulnScanConfig"

// EditVulnScanConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the EditVulnScanConfigCommon operation. The "output" return
// value will be populated with the EditVulnScanConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned EditVulnScanConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after EditVulnScanConfigCommon Send returns without error.
//
// See EditVulnScanConfigCommon for more information on using the EditVulnScanConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the EditVulnScanConfigCommonRequest method.
//    req, resp := client.EditVulnScanConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) EditVulnScanConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opEditVulnScanConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// EditVulnScanConfigCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation EditVulnScanConfigCommon for usage and error information.
func (c *SECCENTER20240508) EditVulnScanConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.EditVulnScanConfigCommonRequest(input)
	return out, req.Send()
}

// EditVulnScanConfigCommonWithContext is the same as EditVulnScanConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See EditVulnScanConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) EditVulnScanConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.EditVulnScanConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opEditVulnScanConfig = "EditVulnScanConfig"

// EditVulnScanConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the EditVulnScanConfig operation. The "output" return
// value will be populated with the EditVulnScanConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned EditVulnScanConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after EditVulnScanConfigCommon Send returns without error.
//
// See EditVulnScanConfig for more information on using the EditVulnScanConfig
// API call, and error handling.
//
//    // Example sending a request using the EditVulnScanConfigRequest method.
//    req, resp := client.EditVulnScanConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) EditVulnScanConfigRequest(input *EditVulnScanConfigInput) (req *request.Request, output *EditVulnScanConfigOutput) {
	op := &request.Operation{
		Name:       opEditVulnScanConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &EditVulnScanConfigInput{}
	}

	output = &EditVulnScanConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// EditVulnScanConfig API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation EditVulnScanConfig for usage and error information.
func (c *SECCENTER20240508) EditVulnScanConfig(input *EditVulnScanConfigInput) (*EditVulnScanConfigOutput, error) {
	req, out := c.EditVulnScanConfigRequest(input)
	return out, req.Send()
}

// EditVulnScanConfigWithContext is the same as EditVulnScanConfig with the addition of
// the ability to pass a context and additional request options.
//
// See EditVulnScanConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) EditVulnScanConfigWithContext(ctx volcengine.Context, input *EditVulnScanConfigInput, opts ...request.Option) (*EditVulnScanConfigOutput, error) {
	req, out := c.EditVulnScanConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type EditVulnScanConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentIDList []*string `type:"list" json:",omitempty"`

	AssetIDs []*string `type:"list" json:",omitempty"`

	AssetType *string `type:"string" json:",omitempty" enum:"EnumOfAssetTypeForEditVulnScanConfigInput"`

	IfAllHost *bool `type:"boolean" json:",omitempty"`

	LeafGroupIDs []*string `type:"list" json:",omitempty"`

	ScanType *ScanTypeForEditVulnScanConfigInput `type:"structure" json:",omitempty"`

	TopGroupID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s EditVulnScanConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EditVulnScanConfigInput) GoString() string {
	return s.String()
}

// SetAgentIDList sets the AgentIDList field's value.
func (s *EditVulnScanConfigInput) SetAgentIDList(v []*string) *EditVulnScanConfigInput {
	s.AgentIDList = v
	return s
}

// SetAssetIDs sets the AssetIDs field's value.
func (s *EditVulnScanConfigInput) SetAssetIDs(v []*string) *EditVulnScanConfigInput {
	s.AssetIDs = v
	return s
}

// SetAssetType sets the AssetType field's value.
func (s *EditVulnScanConfigInput) SetAssetType(v string) *EditVulnScanConfigInput {
	s.AssetType = &v
	return s
}

// SetIfAllHost sets the IfAllHost field's value.
func (s *EditVulnScanConfigInput) SetIfAllHost(v bool) *EditVulnScanConfigInput {
	s.IfAllHost = &v
	return s
}

// SetLeafGroupIDs sets the LeafGroupIDs field's value.
func (s *EditVulnScanConfigInput) SetLeafGroupIDs(v []*string) *EditVulnScanConfigInput {
	s.LeafGroupIDs = v
	return s
}

// SetScanType sets the ScanType field's value.
func (s *EditVulnScanConfigInput) SetScanType(v *ScanTypeForEditVulnScanConfigInput) *EditVulnScanConfigInput {
	s.ScanType = v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *EditVulnScanConfigInput) SetTopGroupID(v string) *EditVulnScanConfigInput {
	s.TopGroupID = &v
	return s
}

type EditVulnScanConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s EditVulnScanConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EditVulnScanConfigOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *EditVulnScanConfigOutput) SetData(v string) *EditVulnScanConfigOutput {
	s.Data = &v
	return s
}

type ScanTypeForEditVulnScanConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	App *bool `type:"boolean" json:",omitempty"`

	DevLinux *bool `type:"boolean" json:",omitempty"`

	DevPy *bool `type:"boolean" json:",omitempty"`

	Linux *bool `type:"boolean" json:",omitempty"`

	Webcms *bool `type:"boolean" json:",omitempty"`

	Windows *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s ScanTypeForEditVulnScanConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ScanTypeForEditVulnScanConfigInput) GoString() string {
	return s.String()
}

// SetApp sets the App field's value.
func (s *ScanTypeForEditVulnScanConfigInput) SetApp(v bool) *ScanTypeForEditVulnScanConfigInput {
	s.App = &v
	return s
}

// SetDevLinux sets the DevLinux field's value.
func (s *ScanTypeForEditVulnScanConfigInput) SetDevLinux(v bool) *ScanTypeForEditVulnScanConfigInput {
	s.DevLinux = &v
	return s
}

// SetDevPy sets the DevPy field's value.
func (s *ScanTypeForEditVulnScanConfigInput) SetDevPy(v bool) *ScanTypeForEditVulnScanConfigInput {
	s.DevPy = &v
	return s
}

// SetLinux sets the Linux field's value.
func (s *ScanTypeForEditVulnScanConfigInput) SetLinux(v bool) *ScanTypeForEditVulnScanConfigInput {
	s.Linux = &v
	return s
}

// SetWebcms sets the Webcms field's value.
func (s *ScanTypeForEditVulnScanConfigInput) SetWebcms(v bool) *ScanTypeForEditVulnScanConfigInput {
	s.Webcms = &v
	return s
}

// SetWindows sets the Windows field's value.
func (s *ScanTypeForEditVulnScanConfigInput) SetWindows(v bool) *ScanTypeForEditVulnScanConfigInput {
	s.Windows = &v
	return s
}

const (
	// EnumOfAssetTypeForEditVulnScanConfigInputHost is a EnumOfAssetTypeForEditVulnScanConfigInput enum value
	EnumOfAssetTypeForEditVulnScanConfigInputHost = "Host"

	// EnumOfAssetTypeForEditVulnScanConfigInputDev is a EnumOfAssetTypeForEditVulnScanConfigInput enum value
	EnumOfAssetTypeForEditVulnScanConfigInputDev = "Dev"
)
