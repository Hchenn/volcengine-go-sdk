// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetRepoImageScanScopeCommon = "GetRepoImageScanScope"

// GetRepoImageScanScopeCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetRepoImageScanScopeCommon operation. The "output" return
// value will be populated with the GetRepoImageScanScopeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetRepoImageScanScopeCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetRepoImageScanScopeCommon Send returns without error.
//
// See GetRepoImageScanScopeCommon for more information on using the GetRepoImageScanScopeCommon
// API call, and error handling.
//
//    // Example sending a request using the GetRepoImageScanScopeCommonRequest method.
//    req, resp := client.GetRepoImageScanScopeCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetRepoImageScanScopeCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetRepoImageScanScopeCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetRepoImageScanScopeCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetRepoImageScanScopeCommon for usage and error information.
func (c *SECCENTER20240508) GetRepoImageScanScopeCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetRepoImageScanScopeCommonRequest(input)
	return out, req.Send()
}

// GetRepoImageScanScopeCommonWithContext is the same as GetRepoImageScanScopeCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetRepoImageScanScopeCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetRepoImageScanScopeCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetRepoImageScanScopeCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetRepoImageScanScope = "GetRepoImageScanScope"

// GetRepoImageScanScopeRequest generates a "volcengine/request.Request" representing the
// client's request for the GetRepoImageScanScope operation. The "output" return
// value will be populated with the GetRepoImageScanScopeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetRepoImageScanScopeCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetRepoImageScanScopeCommon Send returns without error.
//
// See GetRepoImageScanScope for more information on using the GetRepoImageScanScope
// API call, and error handling.
//
//    // Example sending a request using the GetRepoImageScanScopeRequest method.
//    req, resp := client.GetRepoImageScanScopeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetRepoImageScanScopeRequest(input *GetRepoImageScanScopeInput) (req *request.Request, output *GetRepoImageScanScopeOutput) {
	op := &request.Operation{
		Name:       opGetRepoImageScanScope,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetRepoImageScanScopeInput{}
	}

	output = &GetRepoImageScanScopeOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetRepoImageScanScope API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetRepoImageScanScope for usage and error information.
func (c *SECCENTER20240508) GetRepoImageScanScope(input *GetRepoImageScanScopeInput) (*GetRepoImageScanScopeOutput, error) {
	req, out := c.GetRepoImageScanScopeRequest(input)
	return out, req.Send()
}

// GetRepoImageScanScopeWithContext is the same as GetRepoImageScanScope with the addition of
// the ability to pass a context and additional request options.
//
// See GetRepoImageScanScope for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetRepoImageScanScopeWithContext(ctx volcengine.Context, input *GetRepoImageScanScopeInput, opts ...request.Option) (*GetRepoImageScanScopeOutput, error) {
	req, out := c.GetRepoImageScanScopeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForGetRepoImageScanScopeOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ImageSizeLimit *int32 `type:"int32" json:",omitempty"`

	LatestPush *int32 `type:"int32" json:",omitempty"`

	NamespaceIDs []*string `type:"list" json:",omitempty"`

	ScanItems []*string `type:"list" json:",omitempty"`

	Timeout *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DataForGetRepoImageScanScopeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForGetRepoImageScanScopeOutput) GoString() string {
	return s.String()
}

// SetImageSizeLimit sets the ImageSizeLimit field's value.
func (s *DataForGetRepoImageScanScopeOutput) SetImageSizeLimit(v int32) *DataForGetRepoImageScanScopeOutput {
	s.ImageSizeLimit = &v
	return s
}

// SetLatestPush sets the LatestPush field's value.
func (s *DataForGetRepoImageScanScopeOutput) SetLatestPush(v int32) *DataForGetRepoImageScanScopeOutput {
	s.LatestPush = &v
	return s
}

// SetNamespaceIDs sets the NamespaceIDs field's value.
func (s *DataForGetRepoImageScanScopeOutput) SetNamespaceIDs(v []*string) *DataForGetRepoImageScanScopeOutput {
	s.NamespaceIDs = v
	return s
}

// SetScanItems sets the ScanItems field's value.
func (s *DataForGetRepoImageScanScopeOutput) SetScanItems(v []*string) *DataForGetRepoImageScanScopeOutput {
	s.ScanItems = v
	return s
}

// SetTimeout sets the Timeout field's value.
func (s *DataForGetRepoImageScanScopeOutput) SetTimeout(v int32) *DataForGetRepoImageScanScopeOutput {
	s.Timeout = &v
	return s
}

type GetRepoImageScanScopeInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetRepoImageScanScopeInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetRepoImageScanScopeInput) GoString() string {
	return s.String()
}

type GetRepoImageScanScopeOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data *DataForGetRepoImageScanScopeOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetRepoImageScanScopeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetRepoImageScanScopeOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *GetRepoImageScanScopeOutput) SetData(v *DataForGetRepoImageScanScopeOutput) *GetRepoImageScanScopeOutput {
	s.Data = v
	return s
}
