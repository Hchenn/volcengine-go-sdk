// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListDevPlatformCommon = "ListDevPlatform"

// ListDevPlatformCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListDevPlatformCommon operation. The "output" return
// value will be populated with the ListDevPlatformCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListDevPlatformCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListDevPlatformCommon Send returns without error.
//
// See ListDevPlatformCommon for more information on using the ListDevPlatformCommon
// API call, and error handling.
//
//    // Example sending a request using the ListDevPlatformCommonRequest method.
//    req, resp := client.ListDevPlatformCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListDevPlatformCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListDevPlatformCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListDevPlatformCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListDevPlatformCommon for usage and error information.
func (c *SECCENTER20240508) ListDevPlatformCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListDevPlatformCommonRequest(input)
	return out, req.Send()
}

// ListDevPlatformCommonWithContext is the same as ListDevPlatformCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListDevPlatformCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListDevPlatformCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListDevPlatformCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListDevPlatform = "ListDevPlatform"

// ListDevPlatformRequest generates a "volcengine/request.Request" representing the
// client's request for the ListDevPlatform operation. The "output" return
// value will be populated with the ListDevPlatformCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListDevPlatformCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListDevPlatformCommon Send returns without error.
//
// See ListDevPlatform for more information on using the ListDevPlatform
// API call, and error handling.
//
//    // Example sending a request using the ListDevPlatformRequest method.
//    req, resp := client.ListDevPlatformRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListDevPlatformRequest(input *ListDevPlatformInput) (req *request.Request, output *ListDevPlatformOutput) {
	op := &request.Operation{
		Name:       opListDevPlatform,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListDevPlatformInput{}
	}

	output = &ListDevPlatformOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListDevPlatform API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListDevPlatform for usage and error information.
func (c *SECCENTER20240508) ListDevPlatform(input *ListDevPlatformInput) (*ListDevPlatformOutput, error) {
	req, out := c.ListDevPlatformRequest(input)
	return out, req.Send()
}

// ListDevPlatformWithContext is the same as ListDevPlatform with the addition of
// the ability to pass a context and additional request options.
//
// See ListDevPlatform for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListDevPlatformWithContext(ctx volcengine.Context, input *ListDevPlatformInput, opts ...request.Option) (*ListDevPlatformOutput, error) {
	req, out := c.ListDevPlatformRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListDevPlatformInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ListDevPlatformInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListDevPlatformInput) GoString() string {
	return s.String()
}

type ListDevPlatformOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListDevPlatformOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListDevPlatformOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListDevPlatformOutput) SetData(v []*string) *ListDevPlatformOutput {
	s.Data = v
	return s
}
