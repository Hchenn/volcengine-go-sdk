// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetRegistryImagesSyncStatusCommon = "GetRegistryImagesSyncStatus"

// GetRegistryImagesSyncStatusCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetRegistryImagesSyncStatusCommon operation. The "output" return
// value will be populated with the GetRegistryImagesSyncStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetRegistryImagesSyncStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetRegistryImagesSyncStatusCommon Send returns without error.
//
// See GetRegistryImagesSyncStatusCommon for more information on using the GetRegistryImagesSyncStatusCommon
// API call, and error handling.
//
//    // Example sending a request using the GetRegistryImagesSyncStatusCommonRequest method.
//    req, resp := client.GetRegistryImagesSyncStatusCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetRegistryImagesSyncStatusCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetRegistryImagesSyncStatusCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetRegistryImagesSyncStatusCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetRegistryImagesSyncStatusCommon for usage and error information.
func (c *SECCENTER20240508) GetRegistryImagesSyncStatusCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetRegistryImagesSyncStatusCommonRequest(input)
	return out, req.Send()
}

// GetRegistryImagesSyncStatusCommonWithContext is the same as GetRegistryImagesSyncStatusCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetRegistryImagesSyncStatusCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetRegistryImagesSyncStatusCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetRegistryImagesSyncStatusCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetRegistryImagesSyncStatus = "GetRegistryImagesSyncStatus"

// GetRegistryImagesSyncStatusRequest generates a "volcengine/request.Request" representing the
// client's request for the GetRegistryImagesSyncStatus operation. The "output" return
// value will be populated with the GetRegistryImagesSyncStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetRegistryImagesSyncStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetRegistryImagesSyncStatusCommon Send returns without error.
//
// See GetRegistryImagesSyncStatus for more information on using the GetRegistryImagesSyncStatus
// API call, and error handling.
//
//    // Example sending a request using the GetRegistryImagesSyncStatusRequest method.
//    req, resp := client.GetRegistryImagesSyncStatusRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetRegistryImagesSyncStatusRequest(input *GetRegistryImagesSyncStatusInput) (req *request.Request, output *GetRegistryImagesSyncStatusOutput) {
	op := &request.Operation{
		Name:       opGetRegistryImagesSyncStatus,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetRegistryImagesSyncStatusInput{}
	}

	output = &GetRegistryImagesSyncStatusOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetRegistryImagesSyncStatus API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetRegistryImagesSyncStatus for usage and error information.
func (c *SECCENTER20240508) GetRegistryImagesSyncStatus(input *GetRegistryImagesSyncStatusInput) (*GetRegistryImagesSyncStatusOutput, error) {
	req, out := c.GetRegistryImagesSyncStatusRequest(input)
	return out, req.Send()
}

// GetRegistryImagesSyncStatusWithContext is the same as GetRegistryImagesSyncStatus with the addition of
// the ability to pass a context and additional request options.
//
// See GetRegistryImagesSyncStatus for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetRegistryImagesSyncStatusWithContext(ctx volcengine.Context, input *GetRegistryImagesSyncStatusInput, opts ...request.Option) (*GetRegistryImagesSyncStatusOutput, error) {
	req, out := c.GetRegistryImagesSyncStatusRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForGetRegistryImagesSyncStatusOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	LatestSyncTime *int32 `type:"int32" json:",omitempty"`

	SyncProcessing *bool `type:"boolean" json:",omitempty"`

	SyncStatus *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForGetRegistryImagesSyncStatusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForGetRegistryImagesSyncStatusOutput) GoString() string {
	return s.String()
}

// SetLatestSyncTime sets the LatestSyncTime field's value.
func (s *DataForGetRegistryImagesSyncStatusOutput) SetLatestSyncTime(v int32) *DataForGetRegistryImagesSyncStatusOutput {
	s.LatestSyncTime = &v
	return s
}

// SetSyncProcessing sets the SyncProcessing field's value.
func (s *DataForGetRegistryImagesSyncStatusOutput) SetSyncProcessing(v bool) *DataForGetRegistryImagesSyncStatusOutput {
	s.SyncProcessing = &v
	return s
}

// SetSyncStatus sets the SyncStatus field's value.
func (s *DataForGetRegistryImagesSyncStatusOutput) SetSyncStatus(v string) *DataForGetRegistryImagesSyncStatusOutput {
	s.SyncStatus = &v
	return s
}

type GetRegistryImagesSyncStatusInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetRegistryImagesSyncStatusInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetRegistryImagesSyncStatusInput) GoString() string {
	return s.String()
}

type GetRegistryImagesSyncStatusOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data *DataForGetRegistryImagesSyncStatusOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetRegistryImagesSyncStatusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetRegistryImagesSyncStatusOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *GetRegistryImagesSyncStatusOutput) SetData(v *DataForGetRegistryImagesSyncStatusOutput) *GetRegistryImagesSyncStatusOutput {
	s.Data = v
	return s
}
