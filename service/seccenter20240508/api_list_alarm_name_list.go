// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAlarmNameListCommon = "ListAlarmNameList"

// ListAlarmNameListCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAlarmNameListCommon operation. The "output" return
// value will be populated with the ListAlarmNameListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAlarmNameListCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAlarmNameListCommon Send returns without error.
//
// See ListAlarmNameListCommon for more information on using the ListAlarmNameListCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAlarmNameListCommonRequest method.
//    req, resp := client.ListAlarmNameListCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListAlarmNameListCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAlarmNameListCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ListAlarmNameListCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListAlarmNameListCommon for usage and error information.
func (c *SECCENTER20240508) ListAlarmNameListCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAlarmNameListCommonRequest(input)
	return out, req.Send()
}

// ListAlarmNameListCommonWithContext is the same as ListAlarmNameListCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAlarmNameListCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListAlarmNameListCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAlarmNameListCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAlarmNameList = "ListAlarmNameList"

// ListAlarmNameListRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAlarmNameList operation. The "output" return
// value will be populated with the ListAlarmNameListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAlarmNameListCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAlarmNameListCommon Send returns without error.
//
// See ListAlarmNameList for more information on using the ListAlarmNameList
// API call, and error handling.
//
//    // Example sending a request using the ListAlarmNameListRequest method.
//    req, resp := client.ListAlarmNameListRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListAlarmNameListRequest(input *ListAlarmNameListInput) (req *request.Request, output *ListAlarmNameListOutput) {
	op := &request.Operation{
		Name:       opListAlarmNameList,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAlarmNameListInput{}
	}

	output = &ListAlarmNameListOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ListAlarmNameList API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListAlarmNameList for usage and error information.
func (c *SECCENTER20240508) ListAlarmNameList(input *ListAlarmNameListInput) (*ListAlarmNameListOutput, error) {
	req, out := c.ListAlarmNameListRequest(input)
	return out, req.Send()
}

// ListAlarmNameListWithContext is the same as ListAlarmNameList with the addition of
// the ability to pass a context and additional request options.
//
// See ListAlarmNameList for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListAlarmNameListWithContext(ctx volcengine.Context, input *ListAlarmNameListInput, opts ...request.Option) (*ListAlarmNameListOutput, error) {
	req, out := c.ListAlarmNameListRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListAlarmNameListInput struct {
	_ struct{} `type:"structure"`

	Type *string `type:"string"`
}

// String returns the string representation
func (s ListAlarmNameListInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAlarmNameListInput) GoString() string {
	return s.String()
}

// SetType sets the Type field's value.
func (s *ListAlarmNameListInput) SetType(v string) *ListAlarmNameListInput {
	s.Type = &v
	return s
}

type ListAlarmNameListOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	AlarmNameList []*string `type:"list"`
}

// String returns the string representation
func (s ListAlarmNameListOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAlarmNameListOutput) GoString() string {
	return s.String()
}

// SetAlarmNameList sets the AlarmNameList field's value.
func (s *ListAlarmNameListOutput) SetAlarmNameList(v []*string) *ListAlarmNameListOutput {
	s.AlarmNameList = v
	return s
}
