// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAssetNamespacesCommon = "ListAssetNamespaces"

// ListAssetNamespacesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAssetNamespacesCommon operation. The "output" return
// value will be populated with the ListAssetNamespacesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAssetNamespacesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAssetNamespacesCommon Send returns without error.
//
// See ListAssetNamespacesCommon for more information on using the ListAssetNamespacesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAssetNamespacesCommonRequest method.
//    req, resp := client.ListAssetNamespacesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListAssetNamespacesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAssetNamespacesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAssetNamespacesCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListAssetNamespacesCommon for usage and error information.
func (c *SECCENTER20240508) ListAssetNamespacesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAssetNamespacesCommonRequest(input)
	return out, req.Send()
}

// ListAssetNamespacesCommonWithContext is the same as ListAssetNamespacesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAssetNamespacesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListAssetNamespacesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAssetNamespacesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAssetNamespaces = "ListAssetNamespaces"

// ListAssetNamespacesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAssetNamespaces operation. The "output" return
// value will be populated with the ListAssetNamespacesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAssetNamespacesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAssetNamespacesCommon Send returns without error.
//
// See ListAssetNamespaces for more information on using the ListAssetNamespaces
// API call, and error handling.
//
//    // Example sending a request using the ListAssetNamespacesRequest method.
//    req, resp := client.ListAssetNamespacesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListAssetNamespacesRequest(input *ListAssetNamespacesInput) (req *request.Request, output *ListAssetNamespacesOutput) {
	op := &request.Operation{
		Name:       opListAssetNamespaces,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAssetNamespacesInput{}
	}

	output = &ListAssetNamespacesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAssetNamespaces API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListAssetNamespaces for usage and error information.
func (c *SECCENTER20240508) ListAssetNamespaces(input *ListAssetNamespacesInput) (*ListAssetNamespacesOutput, error) {
	req, out := c.ListAssetNamespacesRequest(input)
	return out, req.Send()
}

// ListAssetNamespacesWithContext is the same as ListAssetNamespaces with the addition of
// the ability to pass a context and additional request options.
//
// See ListAssetNamespaces for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListAssetNamespacesWithContext(ctx volcengine.Context, input *ListAssetNamespacesInput, opts ...request.Option) (*ListAssetNamespacesOutput, error) {
	req, out := c.ListAssetNamespacesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListAssetNamespacesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClusterID *string `type:"string" json:",omitempty"`

	CreationTime *int32 `type:"int32" json:",omitempty"`

	ExternalClusterID *string `type:"string" json:",omitempty"`

	HasAuditRisk *bool `type:"boolean" json:",omitempty"`

	ID *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForListAssetNamespacesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListAssetNamespacesOutput) GoString() string {
	return s.String()
}

// SetClusterID sets the ClusterID field's value.
func (s *DataForListAssetNamespacesOutput) SetClusterID(v string) *DataForListAssetNamespacesOutput {
	s.ClusterID = &v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *DataForListAssetNamespacesOutput) SetCreationTime(v int32) *DataForListAssetNamespacesOutput {
	s.CreationTime = &v
	return s
}

// SetExternalClusterID sets the ExternalClusterID field's value.
func (s *DataForListAssetNamespacesOutput) SetExternalClusterID(v string) *DataForListAssetNamespacesOutput {
	s.ExternalClusterID = &v
	return s
}

// SetHasAuditRisk sets the HasAuditRisk field's value.
func (s *DataForListAssetNamespacesOutput) SetHasAuditRisk(v bool) *DataForListAssetNamespacesOutput {
	s.HasAuditRisk = &v
	return s
}

// SetID sets the ID field's value.
func (s *DataForListAssetNamespacesOutput) SetID(v string) *DataForListAssetNamespacesOutput {
	s.ID = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForListAssetNamespacesOutput) SetName(v string) *DataForListAssetNamespacesOutput {
	s.Name = &v
	return s
}

type FilterForListAssetNamespacesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClusterID *string `type:"string" json:",omitempty"`

	HasAuditRiskList []*bool `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListAssetNamespacesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListAssetNamespacesInput) GoString() string {
	return s.String()
}

// SetClusterID sets the ClusterID field's value.
func (s *FilterForListAssetNamespacesInput) SetClusterID(v string) *FilterForListAssetNamespacesInput {
	s.ClusterID = &v
	return s
}

// SetHasAuditRiskList sets the HasAuditRiskList field's value.
func (s *FilterForListAssetNamespacesInput) SetHasAuditRiskList(v []*bool) *FilterForListAssetNamespacesInput {
	s.HasAuditRiskList = v
	return s
}

// SetName sets the Name field's value.
func (s *FilterForListAssetNamespacesInput) SetName(v string) *FilterForListAssetNamespacesInput {
	s.Name = &v
	return s
}

type ListAssetNamespacesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListAssetNamespacesInput `type:"structure" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int32 `type:"int32" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int32 `type:"int32" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListAssetNamespacesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssetNamespacesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListAssetNamespacesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListAssetNamespacesInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFilter sets the Filter field's value.
func (s *ListAssetNamespacesInput) SetFilter(v *FilterForListAssetNamespacesInput) *ListAssetNamespacesInput {
	s.Filter = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListAssetNamespacesInput) SetPageNumber(v int32) *ListAssetNamespacesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListAssetNamespacesInput) SetPageSize(v int32) *ListAssetNamespacesInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *ListAssetNamespacesInput) SetSortBy(v string) *ListAssetNamespacesInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *ListAssetNamespacesInput) SetSortOrder(v string) *ListAssetNamespacesInput {
	s.SortOrder = &v
	return s
}

type ListAssetNamespacesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListAssetNamespacesOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListAssetNamespacesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssetNamespacesOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListAssetNamespacesOutput) SetData(v []*DataForListAssetNamespacesOutput) *ListAssetNamespacesOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListAssetNamespacesOutput) SetPageNumber(v int32) *ListAssetNamespacesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListAssetNamespacesOutput) SetPageSize(v int32) *ListAssetNamespacesOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListAssetNamespacesOutput) SetTotalCount(v int32) *ListAssetNamespacesOutput {
	s.TotalCount = &v
	return s
}
