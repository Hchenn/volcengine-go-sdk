// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyWhiteListCommon = "ModifyWhiteList"

// ModifyWhiteListCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyWhiteListCommon operation. The "output" return
// value will be populated with the ModifyWhiteListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyWhiteListCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyWhiteListCommon Send returns without error.
//
// See ModifyWhiteListCommon for more information on using the ModifyWhiteListCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyWhiteListCommonRequest method.
//    req, resp := client.ModifyWhiteListCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ModifyWhiteListCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyWhiteListCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyWhiteListCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ModifyWhiteListCommon for usage and error information.
func (c *SECCENTER20240508) ModifyWhiteListCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyWhiteListCommonRequest(input)
	return out, req.Send()
}

// ModifyWhiteListCommonWithContext is the same as ModifyWhiteListCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyWhiteListCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ModifyWhiteListCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyWhiteListCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyWhiteList = "ModifyWhiteList"

// ModifyWhiteListRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyWhiteList operation. The "output" return
// value will be populated with the ModifyWhiteListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyWhiteListCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyWhiteListCommon Send returns without error.
//
// See ModifyWhiteList for more information on using the ModifyWhiteList
// API call, and error handling.
//
//    // Example sending a request using the ModifyWhiteListRequest method.
//    req, resp := client.ModifyWhiteListRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ModifyWhiteListRequest(input *ModifyWhiteListInput) (req *request.Request, output *ModifyWhiteListOutput) {
	op := &request.Operation{
		Name:       opModifyWhiteList,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyWhiteListInput{}
	}

	output = &ModifyWhiteListOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyWhiteList API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ModifyWhiteList for usage and error information.
func (c *SECCENTER20240508) ModifyWhiteList(input *ModifyWhiteListInput) (*ModifyWhiteListOutput, error) {
	req, out := c.ModifyWhiteListRequest(input)
	return out, req.Send()
}

// ModifyWhiteListWithContext is the same as ModifyWhiteList with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyWhiteList for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ModifyWhiteListWithContext(ctx volcengine.Context, input *ModifyWhiteListInput, opts ...request.Option) (*ModifyWhiteListOutput, error) {
	req, out := c.ModifyWhiteListRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyWhiteListInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Desc *string `type:"string" json:",omitempty"`

	ID *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ModifyWhiteListInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyWhiteListInput) GoString() string {
	return s.String()
}

// SetDesc sets the Desc field's value.
func (s *ModifyWhiteListInput) SetDesc(v string) *ModifyWhiteListInput {
	s.Desc = &v
	return s
}

// SetID sets the ID field's value.
func (s *ModifyWhiteListInput) SetID(v string) *ModifyWhiteListInput {
	s.ID = &v
	return s
}

// SetName sets the Name field's value.
func (s *ModifyWhiteListInput) SetName(v string) *ModifyWhiteListInput {
	s.Name = &v
	return s
}

// SetType sets the Type field's value.
func (s *ModifyWhiteListInput) SetType(v string) *ModifyWhiteListInput {
	s.Type = &v
	return s
}

type ModifyWhiteListOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ModifyWhiteListOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyWhiteListOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ModifyWhiteListOutput) SetData(v string) *ModifyWhiteListOutput {
	s.Data = &v
	return s
}
