// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetFingerprintTop5Common = "GetFingerprintTop5"

// GetFingerprintTop5CommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetFingerprintTop5Common operation. The "output" return
// value will be populated with the GetFingerprintTop5Common request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetFingerprintTop5Common Request to send the API call to the service.
// the "output" return value is not valid until after GetFingerprintTop5Common Send returns without error.
//
// See GetFingerprintTop5Common for more information on using the GetFingerprintTop5Common
// API call, and error handling.
//
//    // Example sending a request using the GetFingerprintTop5CommonRequest method.
//    req, resp := client.GetFingerprintTop5CommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetFingerprintTop5CommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetFingerprintTop5Common,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetFingerprintTop5Common API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetFingerprintTop5Common for usage and error information.
func (c *SECCENTER20240508) GetFingerprintTop5Common(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetFingerprintTop5CommonRequest(input)
	return out, req.Send()
}

// GetFingerprintTop5CommonWithContext is the same as GetFingerprintTop5Common with the addition of
// the ability to pass a context and additional request options.
//
// See GetFingerprintTop5Common for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetFingerprintTop5CommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetFingerprintTop5CommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetFingerprintTop5 = "GetFingerprintTop5"

// GetFingerprintTop5Request generates a "volcengine/request.Request" representing the
// client's request for the GetFingerprintTop5 operation. The "output" return
// value will be populated with the GetFingerprintTop5Common request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetFingerprintTop5Common Request to send the API call to the service.
// the "output" return value is not valid until after GetFingerprintTop5Common Send returns without error.
//
// See GetFingerprintTop5 for more information on using the GetFingerprintTop5
// API call, and error handling.
//
//    // Example sending a request using the GetFingerprintTop5Request method.
//    req, resp := client.GetFingerprintTop5Request(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetFingerprintTop5Request(input *GetFingerprintTop5Input) (req *request.Request, output *GetFingerprintTop5Output) {
	op := &request.Operation{
		Name:       opGetFingerprintTop5,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetFingerprintTop5Input{}
	}

	output = &GetFingerprintTop5Output{}
	req = c.newRequest(op, input, output)

	return
}

// GetFingerprintTop5 API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetFingerprintTop5 for usage and error information.
func (c *SECCENTER20240508) GetFingerprintTop5(input *GetFingerprintTop5Input) (*GetFingerprintTop5Output, error) {
	req, out := c.GetFingerprintTop5Request(input)
	return out, req.Send()
}

// GetFingerprintTop5WithContext is the same as GetFingerprintTop5 with the addition of
// the ability to pass a context and additional request options.
//
// See GetFingerprintTop5 for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetFingerprintTop5WithContext(ctx volcengine.Context, input *GetFingerprintTop5Input, opts ...request.Option) (*GetFingerprintTop5Output, error) {
	req, out := c.GetFingerprintTop5Request(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForGetFingerprintTop5Output struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DataForGetFingerprintTop5Output) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForGetFingerprintTop5Output) GoString() string {
	return s.String()
}

type GetFingerprintTop5Input struct {
	_ struct{} `type:"structure"`

	// FingerprintType is a required field
	FingerprintType *string `type:"string" required:"true"`
}

// String returns the string representation
func (s GetFingerprintTop5Input) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetFingerprintTop5Input) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetFingerprintTop5Input) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetFingerprintTop5Input"}
	if s.FingerprintType == nil {
		invalidParams.Add(request.NewErrParamRequired("FingerprintType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFingerprintType sets the FingerprintType field's value.
func (s *GetFingerprintTop5Input) SetFingerprintType(v string) *GetFingerprintTop5Input {
	s.FingerprintType = &v
	return s
}

type GetFingerprintTop5Output struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Data []*DataForGetFingerprintTop5Output `type:"list"`
}

// String returns the string representation
func (s GetFingerprintTop5Output) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetFingerprintTop5Output) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *GetFingerprintTop5Output) SetData(v []*DataForGetFingerprintTop5Output) *GetFingerprintTop5Output {
	s.Data = v
	return s
}
