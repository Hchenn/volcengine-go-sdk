// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAssetTagsCommon = "ListAssetTags"

// ListAssetTagsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAssetTagsCommon operation. The "output" return
// value will be populated with the ListAssetTagsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAssetTagsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAssetTagsCommon Send returns without error.
//
// See ListAssetTagsCommon for more information on using the ListAssetTagsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAssetTagsCommonRequest method.
//    req, resp := client.ListAssetTagsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListAssetTagsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAssetTagsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ListAssetTagsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListAssetTagsCommon for usage and error information.
func (c *SECCENTER20240508) ListAssetTagsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAssetTagsCommonRequest(input)
	return out, req.Send()
}

// ListAssetTagsCommonWithContext is the same as ListAssetTagsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAssetTagsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListAssetTagsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAssetTagsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAssetTags = "ListAssetTags"

// ListAssetTagsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAssetTags operation. The "output" return
// value will be populated with the ListAssetTagsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAssetTagsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAssetTagsCommon Send returns without error.
//
// See ListAssetTags for more information on using the ListAssetTags
// API call, and error handling.
//
//    // Example sending a request using the ListAssetTagsRequest method.
//    req, resp := client.ListAssetTagsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListAssetTagsRequest(input *ListAssetTagsInput) (req *request.Request, output *ListAssetTagsOutput) {
	op := &request.Operation{
		Name:       opListAssetTags,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAssetTagsInput{}
	}

	output = &ListAssetTagsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ListAssetTags API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListAssetTags for usage and error information.
func (c *SECCENTER20240508) ListAssetTags(input *ListAssetTagsInput) (*ListAssetTagsOutput, error) {
	req, out := c.ListAssetTagsRequest(input)
	return out, req.Send()
}

// ListAssetTagsWithContext is the same as ListAssetTags with the addition of
// the ability to pass a context and additional request options.
//
// See ListAssetTags for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListAssetTagsWithContext(ctx volcengine.Context, input *ListAssetTagsInput, opts ...request.Option) (*ListAssetTagsOutput, error) {
	req, out := c.ListAssetTagsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListAssetTagsInput struct {
	_ struct{} `type:"structure"`

	TopGroupID *string `type:"string"`
}

// String returns the string representation
func (s ListAssetTagsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssetTagsInput) GoString() string {
	return s.String()
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *ListAssetTagsInput) SetTopGroupID(v string) *ListAssetTagsInput {
	s.TopGroupID = &v
	return s
}

type ListAssetTagsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Data []*string `type:"list"`
}

// String returns the string representation
func (s ListAssetTagsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssetTagsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListAssetTagsOutput) SetData(v []*string) *ListAssetTagsOutput {
	s.Data = v
	return s
}
