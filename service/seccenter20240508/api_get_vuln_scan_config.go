// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetVulnScanConfigCommon = "GetVulnScanConfig"

// GetVulnScanConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetVulnScanConfigCommon operation. The "output" return
// value will be populated with the GetVulnScanConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetVulnScanConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetVulnScanConfigCommon Send returns without error.
//
// See GetVulnScanConfigCommon for more information on using the GetVulnScanConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the GetVulnScanConfigCommonRequest method.
//    req, resp := client.GetVulnScanConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetVulnScanConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetVulnScanConfigCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetVulnScanConfigCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetVulnScanConfigCommon for usage and error information.
func (c *SECCENTER20240508) GetVulnScanConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetVulnScanConfigCommonRequest(input)
	return out, req.Send()
}

// GetVulnScanConfigCommonWithContext is the same as GetVulnScanConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetVulnScanConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetVulnScanConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetVulnScanConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetVulnScanConfig = "GetVulnScanConfig"

// GetVulnScanConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the GetVulnScanConfig operation. The "output" return
// value will be populated with the GetVulnScanConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetVulnScanConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetVulnScanConfigCommon Send returns without error.
//
// See GetVulnScanConfig for more information on using the GetVulnScanConfig
// API call, and error handling.
//
//    // Example sending a request using the GetVulnScanConfigRequest method.
//    req, resp := client.GetVulnScanConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetVulnScanConfigRequest(input *GetVulnScanConfigInput) (req *request.Request, output *GetVulnScanConfigOutput) {
	op := &request.Operation{
		Name:       opGetVulnScanConfig,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetVulnScanConfigInput{}
	}

	output = &GetVulnScanConfigOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetVulnScanConfig API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetVulnScanConfig for usage and error information.
func (c *SECCENTER20240508) GetVulnScanConfig(input *GetVulnScanConfigInput) (*GetVulnScanConfigOutput, error) {
	req, out := c.GetVulnScanConfigRequest(input)
	return out, req.Send()
}

// GetVulnScanConfigWithContext is the same as GetVulnScanConfig with the addition of
// the ability to pass a context and additional request options.
//
// See GetVulnScanConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetVulnScanConfigWithContext(ctx volcengine.Context, input *GetVulnScanConfigInput, opts ...request.Option) (*GetVulnScanConfigOutput, error) {
	req, out := c.GetVulnScanConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetVulnScanConfigInput struct {
	_ struct{} `type:"structure"`

	AssetType *string `type:"string" enum:"EnumOfAssetTypeForGetVulnScanConfigInput"`

	TopGroupID *string `type:"string"`
}

// String returns the string representation
func (s GetVulnScanConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetVulnScanConfigInput) GoString() string {
	return s.String()
}

// SetAssetType sets the AssetType field's value.
func (s *GetVulnScanConfigInput) SetAssetType(v string) *GetVulnScanConfigInput {
	s.AssetType = &v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *GetVulnScanConfigInput) SetTopGroupID(v string) *GetVulnScanConfigInput {
	s.TopGroupID = &v
	return s
}

type GetVulnScanConfigOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	AgentIDList []*string `type:"list"`

	AssetIDs []*string `type:"list"`

	IfAllHost *bool `type:"boolean"`

	LeafGroupIDs []*string `type:"list"`

	ScanType *ScanTypeForGetVulnScanConfigOutput `type:"structure"`

	TopGroupID *string `type:"string"`
}

// String returns the string representation
func (s GetVulnScanConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetVulnScanConfigOutput) GoString() string {
	return s.String()
}

// SetAgentIDList sets the AgentIDList field's value.
func (s *GetVulnScanConfigOutput) SetAgentIDList(v []*string) *GetVulnScanConfigOutput {
	s.AgentIDList = v
	return s
}

// SetAssetIDs sets the AssetIDs field's value.
func (s *GetVulnScanConfigOutput) SetAssetIDs(v []*string) *GetVulnScanConfigOutput {
	s.AssetIDs = v
	return s
}

// SetIfAllHost sets the IfAllHost field's value.
func (s *GetVulnScanConfigOutput) SetIfAllHost(v bool) *GetVulnScanConfigOutput {
	s.IfAllHost = &v
	return s
}

// SetLeafGroupIDs sets the LeafGroupIDs field's value.
func (s *GetVulnScanConfigOutput) SetLeafGroupIDs(v []*string) *GetVulnScanConfigOutput {
	s.LeafGroupIDs = v
	return s
}

// SetScanType sets the ScanType field's value.
func (s *GetVulnScanConfigOutput) SetScanType(v *ScanTypeForGetVulnScanConfigOutput) *GetVulnScanConfigOutput {
	s.ScanType = v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *GetVulnScanConfigOutput) SetTopGroupID(v string) *GetVulnScanConfigOutput {
	s.TopGroupID = &v
	return s
}

type ScanTypeForGetVulnScanConfigOutput struct {
	_ struct{} `type:"structure"`

	App *bool `type:"boolean"`

	DevLinux *bool `type:"boolean"`

	DevPy *bool `type:"boolean"`

	Linux *bool `type:"boolean"`

	Webcms *bool `type:"boolean"`

	Windows *bool `type:"boolean"`
}

// String returns the string representation
func (s ScanTypeForGetVulnScanConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ScanTypeForGetVulnScanConfigOutput) GoString() string {
	return s.String()
}

// SetApp sets the App field's value.
func (s *ScanTypeForGetVulnScanConfigOutput) SetApp(v bool) *ScanTypeForGetVulnScanConfigOutput {
	s.App = &v
	return s
}

// SetDevLinux sets the DevLinux field's value.
func (s *ScanTypeForGetVulnScanConfigOutput) SetDevLinux(v bool) *ScanTypeForGetVulnScanConfigOutput {
	s.DevLinux = &v
	return s
}

// SetDevPy sets the DevPy field's value.
func (s *ScanTypeForGetVulnScanConfigOutput) SetDevPy(v bool) *ScanTypeForGetVulnScanConfigOutput {
	s.DevPy = &v
	return s
}

// SetLinux sets the Linux field's value.
func (s *ScanTypeForGetVulnScanConfigOutput) SetLinux(v bool) *ScanTypeForGetVulnScanConfigOutput {
	s.Linux = &v
	return s
}

// SetWebcms sets the Webcms field's value.
func (s *ScanTypeForGetVulnScanConfigOutput) SetWebcms(v bool) *ScanTypeForGetVulnScanConfigOutput {
	s.Webcms = &v
	return s
}

// SetWindows sets the Windows field's value.
func (s *ScanTypeForGetVulnScanConfigOutput) SetWindows(v bool) *ScanTypeForGetVulnScanConfigOutput {
	s.Windows = &v
	return s
}

const (
	// EnumOfAssetTypeForGetVulnScanConfigInputHost is a EnumOfAssetTypeForGetVulnScanConfigInput enum value
	EnumOfAssetTypeForGetVulnScanConfigInputHost = "Host"

	// EnumOfAssetTypeForGetVulnScanConfigInputDev is a EnumOfAssetTypeForGetVulnScanConfigInput enum value
	EnumOfAssetTypeForGetVulnScanConfigInputDev = "Dev"
)
