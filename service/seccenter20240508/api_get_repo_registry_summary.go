// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetRepoRegistrySummaryCommon = "GetRepoRegistrySummary"

// GetRepoRegistrySummaryCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetRepoRegistrySummaryCommon operation. The "output" return
// value will be populated with the GetRepoRegistrySummaryCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetRepoRegistrySummaryCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetRepoRegistrySummaryCommon Send returns without error.
//
// See GetRepoRegistrySummaryCommon for more information on using the GetRepoRegistrySummaryCommon
// API call, and error handling.
//
//    // Example sending a request using the GetRepoRegistrySummaryCommonRequest method.
//    req, resp := client.GetRepoRegistrySummaryCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetRepoRegistrySummaryCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetRepoRegistrySummaryCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetRepoRegistrySummaryCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetRepoRegistrySummaryCommon for usage and error information.
func (c *SECCENTER20240508) GetRepoRegistrySummaryCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetRepoRegistrySummaryCommonRequest(input)
	return out, req.Send()
}

// GetRepoRegistrySummaryCommonWithContext is the same as GetRepoRegistrySummaryCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetRepoRegistrySummaryCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetRepoRegistrySummaryCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetRepoRegistrySummaryCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetRepoRegistrySummary = "GetRepoRegistrySummary"

// GetRepoRegistrySummaryRequest generates a "volcengine/request.Request" representing the
// client's request for the GetRepoRegistrySummary operation. The "output" return
// value will be populated with the GetRepoRegistrySummaryCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetRepoRegistrySummaryCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetRepoRegistrySummaryCommon Send returns without error.
//
// See GetRepoRegistrySummary for more information on using the GetRepoRegistrySummary
// API call, and error handling.
//
//    // Example sending a request using the GetRepoRegistrySummaryRequest method.
//    req, resp := client.GetRepoRegistrySummaryRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetRepoRegistrySummaryRequest(input *GetRepoRegistrySummaryInput) (req *request.Request, output *GetRepoRegistrySummaryOutput) {
	op := &request.Operation{
		Name:       opGetRepoRegistrySummary,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetRepoRegistrySummaryInput{}
	}

	output = &GetRepoRegistrySummaryOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetRepoRegistrySummary API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetRepoRegistrySummary for usage and error information.
func (c *SECCENTER20240508) GetRepoRegistrySummary(input *GetRepoRegistrySummaryInput) (*GetRepoRegistrySummaryOutput, error) {
	req, out := c.GetRepoRegistrySummaryRequest(input)
	return out, req.Send()
}

// GetRepoRegistrySummaryWithContext is the same as GetRepoRegistrySummary with the addition of
// the ability to pass a context and additional request options.
//
// See GetRepoRegistrySummary for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetRepoRegistrySummaryWithContext(ctx volcengine.Context, input *GetRepoRegistrySummaryInput, opts ...request.Option) (*GetRepoRegistrySummaryOutput, error) {
	req, out := c.GetRepoRegistrySummaryRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForGetRepoRegistrySummaryOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`

	UnreadyCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DataForGetRepoRegistrySummaryOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForGetRepoRegistrySummaryOutput) GoString() string {
	return s.String()
}

// SetTotalCount sets the TotalCount field's value.
func (s *DataForGetRepoRegistrySummaryOutput) SetTotalCount(v int32) *DataForGetRepoRegistrySummaryOutput {
	s.TotalCount = &v
	return s
}

// SetUnreadyCount sets the UnreadyCount field's value.
func (s *DataForGetRepoRegistrySummaryOutput) SetUnreadyCount(v int32) *DataForGetRepoRegistrySummaryOutput {
	s.UnreadyCount = &v
	return s
}

type GetRepoRegistrySummaryInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetRepoRegistrySummaryInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetRepoRegistrySummaryInput) GoString() string {
	return s.String()
}

type GetRepoRegistrySummaryOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data *DataForGetRepoRegistrySummaryOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetRepoRegistrySummaryOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetRepoRegistrySummaryOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *GetRepoRegistrySummaryOutput) SetData(v *DataForGetRepoRegistrySummaryOutput) *GetRepoRegistrySummaryOutput {
	s.Data = v
	return s
}
