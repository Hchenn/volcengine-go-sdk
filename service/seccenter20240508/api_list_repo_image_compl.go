// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListRepoImageComplCommon = "ListRepoImageCompl"

// ListRepoImageComplCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListRepoImageComplCommon operation. The "output" return
// value will be populated with the ListRepoImageComplCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRepoImageComplCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRepoImageComplCommon Send returns without error.
//
// See ListRepoImageComplCommon for more information on using the ListRepoImageComplCommon
// API call, and error handling.
//
//    // Example sending a request using the ListRepoImageComplCommonRequest method.
//    req, resp := client.ListRepoImageComplCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListRepoImageComplCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListRepoImageComplCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRepoImageComplCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListRepoImageComplCommon for usage and error information.
func (c *SECCENTER20240508) ListRepoImageComplCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListRepoImageComplCommonRequest(input)
	return out, req.Send()
}

// ListRepoImageComplCommonWithContext is the same as ListRepoImageComplCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListRepoImageComplCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListRepoImageComplCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListRepoImageComplCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListRepoImageCompl = "ListRepoImageCompl"

// ListRepoImageComplRequest generates a "volcengine/request.Request" representing the
// client's request for the ListRepoImageCompl operation. The "output" return
// value will be populated with the ListRepoImageComplCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRepoImageComplCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRepoImageComplCommon Send returns without error.
//
// See ListRepoImageCompl for more information on using the ListRepoImageCompl
// API call, and error handling.
//
//    // Example sending a request using the ListRepoImageComplRequest method.
//    req, resp := client.ListRepoImageComplRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListRepoImageComplRequest(input *ListRepoImageComplInput) (req *request.Request, output *ListRepoImageComplOutput) {
	op := &request.Operation{
		Name:       opListRepoImageCompl,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListRepoImageComplInput{}
	}

	output = &ListRepoImageComplOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRepoImageCompl API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListRepoImageCompl for usage and error information.
func (c *SECCENTER20240508) ListRepoImageCompl(input *ListRepoImageComplInput) (*ListRepoImageComplOutput, error) {
	req, out := c.ListRepoImageComplRequest(input)
	return out, req.Send()
}

// ListRepoImageComplWithContext is the same as ListRepoImageCompl with the addition of
// the ability to pass a context and additional request options.
//
// See ListRepoImageCompl for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListRepoImageComplWithContext(ctx volcengine.Context, input *ListRepoImageComplInput, opts ...request.Option) (*ListRepoImageComplOutput, error) {
	req, out := c.ListRepoImageComplRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListRepoImageComplOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CheckType *string `type:"string" json:",omitempty"`

	CheckTypeID *string `type:"string" json:",omitempty"`

	ID *string `type:"string" json:",omitempty"`

	RuleID *string `type:"string" json:",omitempty"`

	SectionDesc *string `type:"string" json:",omitempty"`

	SectionID *string `type:"string" json:",omitempty"`

	Severity *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForListRepoImageComplOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListRepoImageComplOutput) GoString() string {
	return s.String()
}

// SetCheckType sets the CheckType field's value.
func (s *DataForListRepoImageComplOutput) SetCheckType(v string) *DataForListRepoImageComplOutput {
	s.CheckType = &v
	return s
}

// SetCheckTypeID sets the CheckTypeID field's value.
func (s *DataForListRepoImageComplOutput) SetCheckTypeID(v string) *DataForListRepoImageComplOutput {
	s.CheckTypeID = &v
	return s
}

// SetID sets the ID field's value.
func (s *DataForListRepoImageComplOutput) SetID(v string) *DataForListRepoImageComplOutput {
	s.ID = &v
	return s
}

// SetRuleID sets the RuleID field's value.
func (s *DataForListRepoImageComplOutput) SetRuleID(v string) *DataForListRepoImageComplOutput {
	s.RuleID = &v
	return s
}

// SetSectionDesc sets the SectionDesc field's value.
func (s *DataForListRepoImageComplOutput) SetSectionDesc(v string) *DataForListRepoImageComplOutput {
	s.SectionDesc = &v
	return s
}

// SetSectionID sets the SectionID field's value.
func (s *DataForListRepoImageComplOutput) SetSectionID(v string) *DataForListRepoImageComplOutput {
	s.SectionID = &v
	return s
}

// SetSeverity sets the Severity field's value.
func (s *DataForListRepoImageComplOutput) SetSeverity(v string) *DataForListRepoImageComplOutput {
	s.Severity = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DataForListRepoImageComplOutput) SetStatus(v string) *DataForListRepoImageComplOutput {
	s.Status = &v
	return s
}

type FilterForListRepoImageComplInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CheckTypeID *string `type:"string" json:",omitempty"`

	SectionDesc *string `type:"string" json:",omitempty"`

	Severity []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListRepoImageComplInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListRepoImageComplInput) GoString() string {
	return s.String()
}

// SetCheckTypeID sets the CheckTypeID field's value.
func (s *FilterForListRepoImageComplInput) SetCheckTypeID(v string) *FilterForListRepoImageComplInput {
	s.CheckTypeID = &v
	return s
}

// SetSectionDesc sets the SectionDesc field's value.
func (s *FilterForListRepoImageComplInput) SetSectionDesc(v string) *FilterForListRepoImageComplInput {
	s.SectionDesc = &v
	return s
}

// SetSeverity sets the Severity field's value.
func (s *FilterForListRepoImageComplInput) SetSeverity(v []*string) *FilterForListRepoImageComplInput {
	s.Severity = v
	return s
}

type ListRepoImageComplInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// AssetID is a required field
	AssetID *string `type:"string" json:",omitempty" required:"true"`

	Filter *FilterForListRepoImageComplInput `type:"structure" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int32 `type:"int32" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int32 `type:"int32" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListRepoImageComplInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRepoImageComplInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListRepoImageComplInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListRepoImageComplInput"}
	if s.AssetID == nil {
		invalidParams.Add(request.NewErrParamRequired("AssetID"))
	}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAssetID sets the AssetID field's value.
func (s *ListRepoImageComplInput) SetAssetID(v string) *ListRepoImageComplInput {
	s.AssetID = &v
	return s
}

// SetFilter sets the Filter field's value.
func (s *ListRepoImageComplInput) SetFilter(v *FilterForListRepoImageComplInput) *ListRepoImageComplInput {
	s.Filter = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListRepoImageComplInput) SetPageNumber(v int32) *ListRepoImageComplInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListRepoImageComplInput) SetPageSize(v int32) *ListRepoImageComplInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *ListRepoImageComplInput) SetSortBy(v string) *ListRepoImageComplInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *ListRepoImageComplInput) SetSortOrder(v string) *ListRepoImageComplInput {
	s.SortOrder = &v
	return s
}

type ListRepoImageComplOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListRepoImageComplOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListRepoImageComplOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRepoImageComplOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListRepoImageComplOutput) SetData(v []*DataForListRepoImageComplOutput) *ListRepoImageComplOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListRepoImageComplOutput) SetPageNumber(v int32) *ListRepoImageComplOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListRepoImageComplOutput) SetPageSize(v int32) *ListRepoImageComplOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListRepoImageComplOutput) SetTotalCount(v int32) *ListRepoImageComplOutput {
	s.TotalCount = &v
	return s
}
