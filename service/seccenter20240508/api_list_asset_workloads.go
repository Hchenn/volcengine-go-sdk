// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAssetWorkloadsCommon = "ListAssetWorkloads"

// ListAssetWorkloadsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAssetWorkloadsCommon operation. The "output" return
// value will be populated with the ListAssetWorkloadsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAssetWorkloadsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAssetWorkloadsCommon Send returns without error.
//
// See ListAssetWorkloadsCommon for more information on using the ListAssetWorkloadsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAssetWorkloadsCommonRequest method.
//    req, resp := client.ListAssetWorkloadsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListAssetWorkloadsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAssetWorkloadsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAssetWorkloadsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListAssetWorkloadsCommon for usage and error information.
func (c *SECCENTER20240508) ListAssetWorkloadsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAssetWorkloadsCommonRequest(input)
	return out, req.Send()
}

// ListAssetWorkloadsCommonWithContext is the same as ListAssetWorkloadsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAssetWorkloadsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListAssetWorkloadsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAssetWorkloadsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAssetWorkloads = "ListAssetWorkloads"

// ListAssetWorkloadsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAssetWorkloads operation. The "output" return
// value will be populated with the ListAssetWorkloadsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAssetWorkloadsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAssetWorkloadsCommon Send returns without error.
//
// See ListAssetWorkloads for more information on using the ListAssetWorkloads
// API call, and error handling.
//
//    // Example sending a request using the ListAssetWorkloadsRequest method.
//    req, resp := client.ListAssetWorkloadsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListAssetWorkloadsRequest(input *ListAssetWorkloadsInput) (req *request.Request, output *ListAssetWorkloadsOutput) {
	op := &request.Operation{
		Name:       opListAssetWorkloads,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAssetWorkloadsInput{}
	}

	output = &ListAssetWorkloadsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAssetWorkloads API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListAssetWorkloads for usage and error information.
func (c *SECCENTER20240508) ListAssetWorkloads(input *ListAssetWorkloadsInput) (*ListAssetWorkloadsOutput, error) {
	req, out := c.ListAssetWorkloadsRequest(input)
	return out, req.Send()
}

// ListAssetWorkloadsWithContext is the same as ListAssetWorkloads with the addition of
// the ability to pass a context and additional request options.
//
// See ListAssetWorkloads for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListAssetWorkloadsWithContext(ctx volcengine.Context, input *ListAssetWorkloadsInput, opts ...request.Option) (*ListAssetWorkloadsOutput, error) {
	req, out := c.ListAssetWorkloadsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListAssetWorkloadsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClusterId *string `type:"string" json:",omitempty"`

	ClusterName *string `type:"string" json:",omitempty"`

	CreationTime *int32 `type:"int32" json:",omitempty"`

	HasCveRisk *bool `type:"boolean" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	K8sId *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Namespace *string `type:"string" json:",omitempty"`

	PodCount *int32 `type:"int32" json:",omitempty"`

	Replicas *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForListAssetWorkloadsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListAssetWorkloadsOutput) GoString() string {
	return s.String()
}

// SetClusterId sets the ClusterId field's value.
func (s *DataForListAssetWorkloadsOutput) SetClusterId(v string) *DataForListAssetWorkloadsOutput {
	s.ClusterId = &v
	return s
}

// SetClusterName sets the ClusterName field's value.
func (s *DataForListAssetWorkloadsOutput) SetClusterName(v string) *DataForListAssetWorkloadsOutput {
	s.ClusterName = &v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *DataForListAssetWorkloadsOutput) SetCreationTime(v int32) *DataForListAssetWorkloadsOutput {
	s.CreationTime = &v
	return s
}

// SetHasCveRisk sets the HasCveRisk field's value.
func (s *DataForListAssetWorkloadsOutput) SetHasCveRisk(v bool) *DataForListAssetWorkloadsOutput {
	s.HasCveRisk = &v
	return s
}

// SetId sets the Id field's value.
func (s *DataForListAssetWorkloadsOutput) SetId(v string) *DataForListAssetWorkloadsOutput {
	s.Id = &v
	return s
}

// SetK8sId sets the K8sId field's value.
func (s *DataForListAssetWorkloadsOutput) SetK8sId(v string) *DataForListAssetWorkloadsOutput {
	s.K8sId = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForListAssetWorkloadsOutput) SetName(v string) *DataForListAssetWorkloadsOutput {
	s.Name = &v
	return s
}

// SetNamespace sets the Namespace field's value.
func (s *DataForListAssetWorkloadsOutput) SetNamespace(v string) *DataForListAssetWorkloadsOutput {
	s.Namespace = &v
	return s
}

// SetPodCount sets the PodCount field's value.
func (s *DataForListAssetWorkloadsOutput) SetPodCount(v int32) *DataForListAssetWorkloadsOutput {
	s.PodCount = &v
	return s
}

// SetReplicas sets the Replicas field's value.
func (s *DataForListAssetWorkloadsOutput) SetReplicas(v string) *DataForListAssetWorkloadsOutput {
	s.Replicas = &v
	return s
}

// SetType sets the Type field's value.
func (s *DataForListAssetWorkloadsOutput) SetType(v string) *DataForListAssetWorkloadsOutput {
	s.Type = &v
	return s
}

type FilterForListAssetWorkloadsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClusterId *string `type:"string" json:",omitempty"`

	HasCveRisk *bool `type:"boolean" json:",omitempty"`

	HasCveRiskList []*bool `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Namespace *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListAssetWorkloadsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListAssetWorkloadsInput) GoString() string {
	return s.String()
}

// SetClusterId sets the ClusterId field's value.
func (s *FilterForListAssetWorkloadsInput) SetClusterId(v string) *FilterForListAssetWorkloadsInput {
	s.ClusterId = &v
	return s
}

// SetHasCveRisk sets the HasCveRisk field's value.
func (s *FilterForListAssetWorkloadsInput) SetHasCveRisk(v bool) *FilterForListAssetWorkloadsInput {
	s.HasCveRisk = &v
	return s
}

// SetHasCveRiskList sets the HasCveRiskList field's value.
func (s *FilterForListAssetWorkloadsInput) SetHasCveRiskList(v []*bool) *FilterForListAssetWorkloadsInput {
	s.HasCveRiskList = v
	return s
}

// SetName sets the Name field's value.
func (s *FilterForListAssetWorkloadsInput) SetName(v string) *FilterForListAssetWorkloadsInput {
	s.Name = &v
	return s
}

// SetNamespace sets the Namespace field's value.
func (s *FilterForListAssetWorkloadsInput) SetNamespace(v string) *FilterForListAssetWorkloadsInput {
	s.Namespace = &v
	return s
}

// SetType sets the Type field's value.
func (s *FilterForListAssetWorkloadsInput) SetType(v string) *FilterForListAssetWorkloadsInput {
	s.Type = &v
	return s
}

type ListAssetWorkloadsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListAssetWorkloadsInput `type:"structure" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int32 `type:"int32" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int32 `type:"int32" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListAssetWorkloadsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssetWorkloadsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListAssetWorkloadsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListAssetWorkloadsInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFilter sets the Filter field's value.
func (s *ListAssetWorkloadsInput) SetFilter(v *FilterForListAssetWorkloadsInput) *ListAssetWorkloadsInput {
	s.Filter = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListAssetWorkloadsInput) SetPageNumber(v int32) *ListAssetWorkloadsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListAssetWorkloadsInput) SetPageSize(v int32) *ListAssetWorkloadsInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *ListAssetWorkloadsInput) SetSortBy(v string) *ListAssetWorkloadsInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *ListAssetWorkloadsInput) SetSortOrder(v string) *ListAssetWorkloadsInput {
	s.SortOrder = &v
	return s
}

type ListAssetWorkloadsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListAssetWorkloadsOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListAssetWorkloadsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssetWorkloadsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListAssetWorkloadsOutput) SetData(v []*DataForListAssetWorkloadsOutput) *ListAssetWorkloadsOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListAssetWorkloadsOutput) SetPageNumber(v int32) *ListAssetWorkloadsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListAssetWorkloadsOutput) SetPageSize(v int32) *ListAssetWorkloadsOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListAssetWorkloadsOutput) SetTotalCount(v int32) *ListAssetWorkloadsOutput {
	s.TotalCount = &v
	return s
}
