// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetFingerprintStatisticsCommon = "GetFingerprintStatistics"

// GetFingerprintStatisticsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetFingerprintStatisticsCommon operation. The "output" return
// value will be populated with the GetFingerprintStatisticsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetFingerprintStatisticsCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetFingerprintStatisticsCommon Send returns without error.
//
// See GetFingerprintStatisticsCommon for more information on using the GetFingerprintStatisticsCommon
// API call, and error handling.
//
//    // Example sending a request using the GetFingerprintStatisticsCommonRequest method.
//    req, resp := client.GetFingerprintStatisticsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetFingerprintStatisticsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetFingerprintStatisticsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetFingerprintStatisticsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetFingerprintStatisticsCommon for usage and error information.
func (c *SECCENTER20240508) GetFingerprintStatisticsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetFingerprintStatisticsCommonRequest(input)
	return out, req.Send()
}

// GetFingerprintStatisticsCommonWithContext is the same as GetFingerprintStatisticsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetFingerprintStatisticsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetFingerprintStatisticsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetFingerprintStatisticsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetFingerprintStatistics = "GetFingerprintStatistics"

// GetFingerprintStatisticsRequest generates a "volcengine/request.Request" representing the
// client's request for the GetFingerprintStatistics operation. The "output" return
// value will be populated with the GetFingerprintStatisticsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetFingerprintStatisticsCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetFingerprintStatisticsCommon Send returns without error.
//
// See GetFingerprintStatistics for more information on using the GetFingerprintStatistics
// API call, and error handling.
//
//    // Example sending a request using the GetFingerprintStatisticsRequest method.
//    req, resp := client.GetFingerprintStatisticsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetFingerprintStatisticsRequest(input *GetFingerprintStatisticsInput) (req *request.Request, output *GetFingerprintStatisticsOutput) {
	op := &request.Operation{
		Name:       opGetFingerprintStatistics,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetFingerprintStatisticsInput{}
	}

	output = &GetFingerprintStatisticsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetFingerprintStatistics API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetFingerprintStatistics for usage and error information.
func (c *SECCENTER20240508) GetFingerprintStatistics(input *GetFingerprintStatisticsInput) (*GetFingerprintStatisticsOutput, error) {
	req, out := c.GetFingerprintStatisticsRequest(input)
	return out, req.Send()
}

// GetFingerprintStatisticsWithContext is the same as GetFingerprintStatistics with the addition of
// the ability to pass a context and additional request options.
//
// See GetFingerprintStatistics for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetFingerprintStatisticsWithContext(ctx volcengine.Context, input *GetFingerprintStatisticsInput, opts ...request.Option) (*GetFingerprintStatisticsOutput, error) {
	req, out := c.GetFingerprintStatisticsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetFingerprintStatisticsInput struct {
	_ struct{} `type:"structure"`

	AgentID *string `type:"string"`
}

// String returns the string representation
func (s GetFingerprintStatisticsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetFingerprintStatisticsInput) GoString() string {
	return s.String()
}

// SetAgentID sets the AgentID field's value.
func (s *GetFingerprintStatisticsInput) SetAgentID(v string) *GetFingerprintStatisticsInput {
	s.AgentID = &v
	return s
}

type GetFingerprintStatisticsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	App *int32 `type:"int32"`

	Container *int32 `type:"int32"`

	Cron *int32 `type:"int32"`

	Integrity *int32 `type:"int32"`

	Kmod *int32 `type:"int32"`

	Port *int32 `type:"int32"`

	Process *int32 `type:"int32"`

	Service *int32 `type:"int32"`

	Software *int32 `type:"int32"`

	User *int32 `type:"int32"`

	Web *int32 `type:"int32"`
}

// String returns the string representation
func (s GetFingerprintStatisticsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetFingerprintStatisticsOutput) GoString() string {
	return s.String()
}

// SetApp sets the App field's value.
func (s *GetFingerprintStatisticsOutput) SetApp(v int32) *GetFingerprintStatisticsOutput {
	s.App = &v
	return s
}

// SetContainer sets the Container field's value.
func (s *GetFingerprintStatisticsOutput) SetContainer(v int32) *GetFingerprintStatisticsOutput {
	s.Container = &v
	return s
}

// SetCron sets the Cron field's value.
func (s *GetFingerprintStatisticsOutput) SetCron(v int32) *GetFingerprintStatisticsOutput {
	s.Cron = &v
	return s
}

// SetIntegrity sets the Integrity field's value.
func (s *GetFingerprintStatisticsOutput) SetIntegrity(v int32) *GetFingerprintStatisticsOutput {
	s.Integrity = &v
	return s
}

// SetKmod sets the Kmod field's value.
func (s *GetFingerprintStatisticsOutput) SetKmod(v int32) *GetFingerprintStatisticsOutput {
	s.Kmod = &v
	return s
}

// SetPort sets the Port field's value.
func (s *GetFingerprintStatisticsOutput) SetPort(v int32) *GetFingerprintStatisticsOutput {
	s.Port = &v
	return s
}

// SetProcess sets the Process field's value.
func (s *GetFingerprintStatisticsOutput) SetProcess(v int32) *GetFingerprintStatisticsOutput {
	s.Process = &v
	return s
}

// SetService sets the Service field's value.
func (s *GetFingerprintStatisticsOutput) SetService(v int32) *GetFingerprintStatisticsOutput {
	s.Service = &v
	return s
}

// SetSoftware sets the Software field's value.
func (s *GetFingerprintStatisticsOutput) SetSoftware(v int32) *GetFingerprintStatisticsOutput {
	s.Software = &v
	return s
}

// SetUser sets the User field's value.
func (s *GetFingerprintStatisticsOutput) SetUser(v int32) *GetFingerprintStatisticsOutput {
	s.User = &v
	return s
}

// SetWeb sets the Web field's value.
func (s *GetFingerprintStatisticsOutput) SetWeb(v int32) *GetFingerprintStatisticsOutput {
	s.Web = &v
	return s
}
