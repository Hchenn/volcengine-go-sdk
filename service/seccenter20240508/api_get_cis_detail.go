// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetCisDetailCommon = "GetCisDetail"

// GetCisDetailCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetCisDetailCommon operation. The "output" return
// value will be populated with the GetCisDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetCisDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetCisDetailCommon Send returns without error.
//
// See GetCisDetailCommon for more information on using the GetCisDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the GetCisDetailCommonRequest method.
//    req, resp := client.GetCisDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetCisDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetCisDetailCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetCisDetailCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetCisDetailCommon for usage and error information.
func (c *SECCENTER20240508) GetCisDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetCisDetailCommonRequest(input)
	return out, req.Send()
}

// GetCisDetailCommonWithContext is the same as GetCisDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetCisDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetCisDetailCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetCisDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetCisDetail = "GetCisDetail"

// GetCisDetailRequest generates a "volcengine/request.Request" representing the
// client's request for the GetCisDetail operation. The "output" return
// value will be populated with the GetCisDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetCisDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetCisDetailCommon Send returns without error.
//
// See GetCisDetail for more information on using the GetCisDetail
// API call, and error handling.
//
//    // Example sending a request using the GetCisDetailRequest method.
//    req, resp := client.GetCisDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetCisDetailRequest(input *GetCisDetailInput) (req *request.Request, output *GetCisDetailOutput) {
	op := &request.Operation{
		Name:       opGetCisDetail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetCisDetailInput{}
	}

	output = &GetCisDetailOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetCisDetail API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetCisDetail for usage and error information.
func (c *SECCENTER20240508) GetCisDetail(input *GetCisDetailInput) (*GetCisDetailOutput, error) {
	req, out := c.GetCisDetailRequest(input)
	return out, req.Send()
}

// GetCisDetailWithContext is the same as GetCisDetail with the addition of
// the ability to pass a context and additional request options.
//
// See GetCisDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetCisDetailWithContext(ctx volcengine.Context, input *GetCisDetailInput, opts ...request.Option) (*GetCisDetailOutput, error) {
	req, out := c.GetCisDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForGetCisDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Audit *string `type:"string" json:",omitempty"`

	BenchmarkType *string `type:"string" json:",omitempty"`

	CheckType *string `type:"string" json:",omitempty"`

	Remediation *string `type:"string" json:",omitempty"`

	RuleID *string `type:"string" json:",omitempty"`

	SectionDesc *string `type:"string" json:",omitempty"`

	SectionID *string `type:"string" json:",omitempty"`

	Severity *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForGetCisDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForGetCisDetailOutput) GoString() string {
	return s.String()
}

// SetAudit sets the Audit field's value.
func (s *DataForGetCisDetailOutput) SetAudit(v string) *DataForGetCisDetailOutput {
	s.Audit = &v
	return s
}

// SetBenchmarkType sets the BenchmarkType field's value.
func (s *DataForGetCisDetailOutput) SetBenchmarkType(v string) *DataForGetCisDetailOutput {
	s.BenchmarkType = &v
	return s
}

// SetCheckType sets the CheckType field's value.
func (s *DataForGetCisDetailOutput) SetCheckType(v string) *DataForGetCisDetailOutput {
	s.CheckType = &v
	return s
}

// SetRemediation sets the Remediation field's value.
func (s *DataForGetCisDetailOutput) SetRemediation(v string) *DataForGetCisDetailOutput {
	s.Remediation = &v
	return s
}

// SetRuleID sets the RuleID field's value.
func (s *DataForGetCisDetailOutput) SetRuleID(v string) *DataForGetCisDetailOutput {
	s.RuleID = &v
	return s
}

// SetSectionDesc sets the SectionDesc field's value.
func (s *DataForGetCisDetailOutput) SetSectionDesc(v string) *DataForGetCisDetailOutput {
	s.SectionDesc = &v
	return s
}

// SetSectionID sets the SectionID field's value.
func (s *DataForGetCisDetailOutput) SetSectionID(v string) *DataForGetCisDetailOutput {
	s.SectionID = &v
	return s
}

// SetSeverity sets the Severity field's value.
func (s *DataForGetCisDetailOutput) SetSeverity(v string) *DataForGetCisDetailOutput {
	s.Severity = &v
	return s
}

type GetCisDetailInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	RuleID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetCisDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetCisDetailInput) GoString() string {
	return s.String()
}

// SetRuleID sets the RuleID field's value.
func (s *GetCisDetailInput) SetRuleID(v string) *GetCisDetailInput {
	s.RuleID = &v
	return s
}

type GetCisDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data *DataForGetCisDetailOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetCisDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetCisDetailOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *GetCisDetailOutput) SetData(v *DataForGetCisDetailOutput) *GetCisDetailOutput {
	s.Data = v
	return s
}
