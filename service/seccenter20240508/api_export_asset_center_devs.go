// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opExportAssetCenterDevsCommon = "ExportAssetCenterDevs"

// ExportAssetCenterDevsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ExportAssetCenterDevsCommon operation. The "output" return
// value will be populated with the ExportAssetCenterDevsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ExportAssetCenterDevsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ExportAssetCenterDevsCommon Send returns without error.
//
// See ExportAssetCenterDevsCommon for more information on using the ExportAssetCenterDevsCommon
// API call, and error handling.
//
//    // Example sending a request using the ExportAssetCenterDevsCommonRequest method.
//    req, resp := client.ExportAssetCenterDevsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ExportAssetCenterDevsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opExportAssetCenterDevsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ExportAssetCenterDevsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ExportAssetCenterDevsCommon for usage and error information.
func (c *SECCENTER20240508) ExportAssetCenterDevsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ExportAssetCenterDevsCommonRequest(input)
	return out, req.Send()
}

// ExportAssetCenterDevsCommonWithContext is the same as ExportAssetCenterDevsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ExportAssetCenterDevsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ExportAssetCenterDevsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ExportAssetCenterDevsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opExportAssetCenterDevs = "ExportAssetCenterDevs"

// ExportAssetCenterDevsRequest generates a "volcengine/request.Request" representing the
// client's request for the ExportAssetCenterDevs operation. The "output" return
// value will be populated with the ExportAssetCenterDevsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ExportAssetCenterDevsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ExportAssetCenterDevsCommon Send returns without error.
//
// See ExportAssetCenterDevs for more information on using the ExportAssetCenterDevs
// API call, and error handling.
//
//    // Example sending a request using the ExportAssetCenterDevsRequest method.
//    req, resp := client.ExportAssetCenterDevsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ExportAssetCenterDevsRequest(input *ExportAssetCenterDevsInput) (req *request.Request, output *ExportAssetCenterDevsOutput) {
	op := &request.Operation{
		Name:       opExportAssetCenterDevs,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ExportAssetCenterDevsInput{}
	}

	output = &ExportAssetCenterDevsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ExportAssetCenterDevs API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ExportAssetCenterDevs for usage and error information.
func (c *SECCENTER20240508) ExportAssetCenterDevs(input *ExportAssetCenterDevsInput) (*ExportAssetCenterDevsOutput, error) {
	req, out := c.ExportAssetCenterDevsRequest(input)
	return out, req.Send()
}

// ExportAssetCenterDevsWithContext is the same as ExportAssetCenterDevs with the addition of
// the ability to pass a context and additional request options.
//
// See ExportAssetCenterDevs for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ExportAssetCenterDevsWithContext(ctx volcengine.Context, input *ExportAssetCenterDevsInput, opts ...request.Option) (*ExportAssetCenterDevsOutput, error) {
	req, out := c.ExportAssetCenterDevsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ExportAssetCenterDevsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AssetId *string `type:"string" json:",omitempty"`

	AssetIds []*string `type:"list" json:",omitempty"`

	AssetName *string `type:"string" json:",omitempty"`

	IP *string `type:"string" json:",omitempty"`

	IsAll *bool `type:"boolean" json:",omitempty"`

	Platforms []*string `type:"list" json:",omitempty"`

	Regions []*string `type:"list" json:",omitempty"`

	Risk *RiskForExportAssetCenterDevsInput `type:"structure" json:",omitempty"`

	Status []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ExportAssetCenterDevsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ExportAssetCenterDevsInput) GoString() string {
	return s.String()
}

// SetAssetId sets the AssetId field's value.
func (s *ExportAssetCenterDevsInput) SetAssetId(v string) *ExportAssetCenterDevsInput {
	s.AssetId = &v
	return s
}

// SetAssetIds sets the AssetIds field's value.
func (s *ExportAssetCenterDevsInput) SetAssetIds(v []*string) *ExportAssetCenterDevsInput {
	s.AssetIds = v
	return s
}

// SetAssetName sets the AssetName field's value.
func (s *ExportAssetCenterDevsInput) SetAssetName(v string) *ExportAssetCenterDevsInput {
	s.AssetName = &v
	return s
}

// SetIP sets the IP field's value.
func (s *ExportAssetCenterDevsInput) SetIP(v string) *ExportAssetCenterDevsInput {
	s.IP = &v
	return s
}

// SetIsAll sets the IsAll field's value.
func (s *ExportAssetCenterDevsInput) SetIsAll(v bool) *ExportAssetCenterDevsInput {
	s.IsAll = &v
	return s
}

// SetPlatforms sets the Platforms field's value.
func (s *ExportAssetCenterDevsInput) SetPlatforms(v []*string) *ExportAssetCenterDevsInput {
	s.Platforms = v
	return s
}

// SetRegions sets the Regions field's value.
func (s *ExportAssetCenterDevsInput) SetRegions(v []*string) *ExportAssetCenterDevsInput {
	s.Regions = v
	return s
}

// SetRisk sets the Risk field's value.
func (s *ExportAssetCenterDevsInput) SetRisk(v *RiskForExportAssetCenterDevsInput) *ExportAssetCenterDevsInput {
	s.Risk = v
	return s
}

// SetStatus sets the Status field's value.
func (s *ExportAssetCenterDevsInput) SetStatus(v []*string) *ExportAssetCenterDevsInput {
	s.Status = v
	return s
}

type ExportAssetCenterDevsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	FileName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ExportAssetCenterDevsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ExportAssetCenterDevsOutput) GoString() string {
	return s.String()
}

// SetFileName sets the FileName field's value.
func (s *ExportAssetCenterDevsOutput) SetFileName(v string) *ExportAssetCenterDevsOutput {
	s.FileName = &v
	return s
}

type RiskForExportAssetCenterDevsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Alarm *bool `type:"boolean" json:",omitempty"`

	Baseline *bool `type:"boolean" json:",omitempty"`

	Virus *bool `type:"boolean" json:",omitempty"`

	Vuln *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s RiskForExportAssetCenterDevsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RiskForExportAssetCenterDevsInput) GoString() string {
	return s.String()
}

// SetAlarm sets the Alarm field's value.
func (s *RiskForExportAssetCenterDevsInput) SetAlarm(v bool) *RiskForExportAssetCenterDevsInput {
	s.Alarm = &v
	return s
}

// SetBaseline sets the Baseline field's value.
func (s *RiskForExportAssetCenterDevsInput) SetBaseline(v bool) *RiskForExportAssetCenterDevsInput {
	s.Baseline = &v
	return s
}

// SetVirus sets the Virus field's value.
func (s *RiskForExportAssetCenterDevsInput) SetVirus(v bool) *RiskForExportAssetCenterDevsInput {
	s.Virus = &v
	return s
}

// SetVuln sets the Vuln field's value.
func (s *RiskForExportAssetCenterDevsInput) SetVuln(v bool) *RiskForExportAssetCenterDevsInput {
	s.Vuln = &v
	return s
}
