// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListRepoImageVirusCommon = "ListRepoImageVirus"

// ListRepoImageVirusCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListRepoImageVirusCommon operation. The "output" return
// value will be populated with the ListRepoImageVirusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRepoImageVirusCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRepoImageVirusCommon Send returns without error.
//
// See ListRepoImageVirusCommon for more information on using the ListRepoImageVirusCommon
// API call, and error handling.
//
//    // Example sending a request using the ListRepoImageVirusCommonRequest method.
//    req, resp := client.ListRepoImageVirusCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListRepoImageVirusCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListRepoImageVirusCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRepoImageVirusCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListRepoImageVirusCommon for usage and error information.
func (c *SECCENTER20240508) ListRepoImageVirusCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListRepoImageVirusCommonRequest(input)
	return out, req.Send()
}

// ListRepoImageVirusCommonWithContext is the same as ListRepoImageVirusCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListRepoImageVirusCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListRepoImageVirusCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListRepoImageVirusCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListRepoImageVirus = "ListRepoImageVirus"

// ListRepoImageVirusRequest generates a "volcengine/request.Request" representing the
// client's request for the ListRepoImageVirus operation. The "output" return
// value will be populated with the ListRepoImageVirusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRepoImageVirusCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRepoImageVirusCommon Send returns without error.
//
// See ListRepoImageVirus for more information on using the ListRepoImageVirus
// API call, and error handling.
//
//    // Example sending a request using the ListRepoImageVirusRequest method.
//    req, resp := client.ListRepoImageVirusRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListRepoImageVirusRequest(input *ListRepoImageVirusInput) (req *request.Request, output *ListRepoImageVirusOutput) {
	op := &request.Operation{
		Name:       opListRepoImageVirus,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListRepoImageVirusInput{}
	}

	output = &ListRepoImageVirusOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRepoImageVirus API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListRepoImageVirus for usage and error information.
func (c *SECCENTER20240508) ListRepoImageVirus(input *ListRepoImageVirusInput) (*ListRepoImageVirusOutput, error) {
	req, out := c.ListRepoImageVirusRequest(input)
	return out, req.Send()
}

// ListRepoImageVirusWithContext is the same as ListRepoImageVirus with the addition of
// the ability to pass a context and additional request options.
//
// See ListRepoImageVirus for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListRepoImageVirusWithContext(ctx volcengine.Context, input *ListRepoImageVirusInput, opts ...request.Option) (*ListRepoImageVirusOutput, error) {
	req, out := c.ListRepoImageVirusRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListRepoImageVirusOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FileName *string `type:"string" json:",omitempty"`

	ID *string `type:"string" json:",omitempty"`

	Md5 *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	VirusName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForListRepoImageVirusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListRepoImageVirusOutput) GoString() string {
	return s.String()
}

// SetFileName sets the FileName field's value.
func (s *DataForListRepoImageVirusOutput) SetFileName(v string) *DataForListRepoImageVirusOutput {
	s.FileName = &v
	return s
}

// SetID sets the ID field's value.
func (s *DataForListRepoImageVirusOutput) SetID(v string) *DataForListRepoImageVirusOutput {
	s.ID = &v
	return s
}

// SetMd5 sets the Md5 field's value.
func (s *DataForListRepoImageVirusOutput) SetMd5(v string) *DataForListRepoImageVirusOutput {
	s.Md5 = &v
	return s
}

// SetType sets the Type field's value.
func (s *DataForListRepoImageVirusOutput) SetType(v string) *DataForListRepoImageVirusOutput {
	s.Type = &v
	return s
}

// SetVirusName sets the VirusName field's value.
func (s *DataForListRepoImageVirusOutput) SetVirusName(v string) *DataForListRepoImageVirusOutput {
	s.VirusName = &v
	return s
}

type FilterForListRepoImageVirusInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FileName *string `type:"string" json:",omitempty"`

	Md5 *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	VirusName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListRepoImageVirusInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListRepoImageVirusInput) GoString() string {
	return s.String()
}

// SetFileName sets the FileName field's value.
func (s *FilterForListRepoImageVirusInput) SetFileName(v string) *FilterForListRepoImageVirusInput {
	s.FileName = &v
	return s
}

// SetMd5 sets the Md5 field's value.
func (s *FilterForListRepoImageVirusInput) SetMd5(v string) *FilterForListRepoImageVirusInput {
	s.Md5 = &v
	return s
}

// SetType sets the Type field's value.
func (s *FilterForListRepoImageVirusInput) SetType(v string) *FilterForListRepoImageVirusInput {
	s.Type = &v
	return s
}

// SetVirusName sets the VirusName field's value.
func (s *FilterForListRepoImageVirusInput) SetVirusName(v string) *FilterForListRepoImageVirusInput {
	s.VirusName = &v
	return s
}

type ListRepoImageVirusInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// AssetID is a required field
	AssetID *string `type:"string" json:",omitempty" required:"true"`

	Filter *FilterForListRepoImageVirusInput `type:"structure" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int32 `type:"int32" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int32 `type:"int32" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListRepoImageVirusInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRepoImageVirusInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListRepoImageVirusInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListRepoImageVirusInput"}
	if s.AssetID == nil {
		invalidParams.Add(request.NewErrParamRequired("AssetID"))
	}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAssetID sets the AssetID field's value.
func (s *ListRepoImageVirusInput) SetAssetID(v string) *ListRepoImageVirusInput {
	s.AssetID = &v
	return s
}

// SetFilter sets the Filter field's value.
func (s *ListRepoImageVirusInput) SetFilter(v *FilterForListRepoImageVirusInput) *ListRepoImageVirusInput {
	s.Filter = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListRepoImageVirusInput) SetPageNumber(v int32) *ListRepoImageVirusInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListRepoImageVirusInput) SetPageSize(v int32) *ListRepoImageVirusInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *ListRepoImageVirusInput) SetSortBy(v string) *ListRepoImageVirusInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *ListRepoImageVirusInput) SetSortOrder(v string) *ListRepoImageVirusInput {
	s.SortOrder = &v
	return s
}

type ListRepoImageVirusOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListRepoImageVirusOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListRepoImageVirusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRepoImageVirusOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListRepoImageVirusOutput) SetData(v []*DataForListRepoImageVirusOutput) *ListRepoImageVirusOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListRepoImageVirusOutput) SetPageNumber(v int32) *ListRepoImageVirusOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListRepoImageVirusOutput) SetPageSize(v int32) *ListRepoImageVirusOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListRepoImageVirusOutput) SetTotalCount(v int32) *ListRepoImageVirusOutput {
	s.TotalCount = &v
	return s
}
