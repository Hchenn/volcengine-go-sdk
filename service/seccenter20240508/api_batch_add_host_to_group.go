// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opBatchAddHostToGroupCommon = "BatchAddHostToGroup"

// BatchAddHostToGroupCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the BatchAddHostToGroupCommon operation. The "output" return
// value will be populated with the BatchAddHostToGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned BatchAddHostToGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after BatchAddHostToGroupCommon Send returns without error.
//
// See BatchAddHostToGroupCommon for more information on using the BatchAddHostToGroupCommon
// API call, and error handling.
//
//    // Example sending a request using the BatchAddHostToGroupCommonRequest method.
//    req, resp := client.BatchAddHostToGroupCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) BatchAddHostToGroupCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opBatchAddHostToGroupCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// BatchAddHostToGroupCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation BatchAddHostToGroupCommon for usage and error information.
func (c *SECCENTER20240508) BatchAddHostToGroupCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.BatchAddHostToGroupCommonRequest(input)
	return out, req.Send()
}

// BatchAddHostToGroupCommonWithContext is the same as BatchAddHostToGroupCommon with the addition of
// the ability to pass a context and additional request options.
//
// See BatchAddHostToGroupCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) BatchAddHostToGroupCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.BatchAddHostToGroupCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opBatchAddHostToGroup = "BatchAddHostToGroup"

// BatchAddHostToGroupRequest generates a "volcengine/request.Request" representing the
// client's request for the BatchAddHostToGroup operation. The "output" return
// value will be populated with the BatchAddHostToGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned BatchAddHostToGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after BatchAddHostToGroupCommon Send returns without error.
//
// See BatchAddHostToGroup for more information on using the BatchAddHostToGroup
// API call, and error handling.
//
//    // Example sending a request using the BatchAddHostToGroupRequest method.
//    req, resp := client.BatchAddHostToGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) BatchAddHostToGroupRequest(input *BatchAddHostToGroupInput) (req *request.Request, output *BatchAddHostToGroupOutput) {
	op := &request.Operation{
		Name:       opBatchAddHostToGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &BatchAddHostToGroupInput{}
	}

	output = &BatchAddHostToGroupOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// BatchAddHostToGroup API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation BatchAddHostToGroup for usage and error information.
func (c *SECCENTER20240508) BatchAddHostToGroup(input *BatchAddHostToGroupInput) (*BatchAddHostToGroupOutput, error) {
	req, out := c.BatchAddHostToGroupRequest(input)
	return out, req.Send()
}

// BatchAddHostToGroupWithContext is the same as BatchAddHostToGroup with the addition of
// the ability to pass a context and additional request options.
//
// See BatchAddHostToGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) BatchAddHostToGroupWithContext(ctx volcengine.Context, input *BatchAddHostToGroupInput, opts ...request.Option) (*BatchAddHostToGroupOutput, error) {
	req, out := c.BatchAddHostToGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type BatchAddHostToGroupInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentIds []*string `type:"list" json:",omitempty"`

	GroupID *string `type:"string" json:",omitempty"`

	Reconfirm *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s BatchAddHostToGroupInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BatchAddHostToGroupInput) GoString() string {
	return s.String()
}

// SetAgentIds sets the AgentIds field's value.
func (s *BatchAddHostToGroupInput) SetAgentIds(v []*string) *BatchAddHostToGroupInput {
	s.AgentIds = v
	return s
}

// SetGroupID sets the GroupID field's value.
func (s *BatchAddHostToGroupInput) SetGroupID(v string) *BatchAddHostToGroupInput {
	s.GroupID = &v
	return s
}

// SetReconfirm sets the Reconfirm field's value.
func (s *BatchAddHostToGroupInput) SetReconfirm(v bool) *BatchAddHostToGroupInput {
	s.Reconfirm = &v
	return s
}

type BatchAddHostToGroupOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	GroupID *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s BatchAddHostToGroupOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BatchAddHostToGroupOutput) GoString() string {
	return s.String()
}

// SetGroupID sets the GroupID field's value.
func (s *BatchAddHostToGroupOutput) SetGroupID(v string) *BatchAddHostToGroupOutput {
	s.GroupID = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *BatchAddHostToGroupOutput) SetStatus(v string) *BatchAddHostToGroupOutput {
	s.Status = &v
	return s
}
