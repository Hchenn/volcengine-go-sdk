// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mcs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetApiV1OverviewAlarmStatsCommon = "GetApiV1OverviewAlarmStats"

// GetApiV1OverviewAlarmStatsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetApiV1OverviewAlarmStatsCommon operation. The "output" return
// value will be populated with the GetApiV1OverviewAlarmStatsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetApiV1OverviewAlarmStatsCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetApiV1OverviewAlarmStatsCommon Send returns without error.
//
// See GetApiV1OverviewAlarmStatsCommon for more information on using the GetApiV1OverviewAlarmStatsCommon
// API call, and error handling.
//
//    // Example sending a request using the GetApiV1OverviewAlarmStatsCommonRequest method.
//    req, resp := client.GetApiV1OverviewAlarmStatsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCS) GetApiV1OverviewAlarmStatsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetApiV1OverviewAlarmStatsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetApiV1OverviewAlarmStatsCommon API operation for MCS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCS's
// API operation GetApiV1OverviewAlarmStatsCommon for usage and error information.
func (c *MCS) GetApiV1OverviewAlarmStatsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetApiV1OverviewAlarmStatsCommonRequest(input)
	return out, req.Send()
}

// GetApiV1OverviewAlarmStatsCommonWithContext is the same as GetApiV1OverviewAlarmStatsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetApiV1OverviewAlarmStatsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCS) GetApiV1OverviewAlarmStatsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetApiV1OverviewAlarmStatsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetApiV1OverviewAlarmStats = "GetApiV1OverviewAlarmStats"

// GetApiV1OverviewAlarmStatsRequest generates a "volcengine/request.Request" representing the
// client's request for the GetApiV1OverviewAlarmStats operation. The "output" return
// value will be populated with the GetApiV1OverviewAlarmStatsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetApiV1OverviewAlarmStatsCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetApiV1OverviewAlarmStatsCommon Send returns without error.
//
// See GetApiV1OverviewAlarmStats for more information on using the GetApiV1OverviewAlarmStats
// API call, and error handling.
//
//    // Example sending a request using the GetApiV1OverviewAlarmStatsRequest method.
//    req, resp := client.GetApiV1OverviewAlarmStatsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCS) GetApiV1OverviewAlarmStatsRequest(input *GetApiV1OverviewAlarmStatsInput) (req *request.Request, output *GetApiV1OverviewAlarmStatsOutput) {
	op := &request.Operation{
		Name:       opGetApiV1OverviewAlarmStats,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetApiV1OverviewAlarmStatsInput{}
	}

	output = &GetApiV1OverviewAlarmStatsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetApiV1OverviewAlarmStats API operation for MCS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCS's
// API operation GetApiV1OverviewAlarmStats for usage and error information.
func (c *MCS) GetApiV1OverviewAlarmStats(input *GetApiV1OverviewAlarmStatsInput) (*GetApiV1OverviewAlarmStatsOutput, error) {
	req, out := c.GetApiV1OverviewAlarmStatsRequest(input)
	return out, req.Send()
}

// GetApiV1OverviewAlarmStatsWithContext is the same as GetApiV1OverviewAlarmStats with the addition of
// the ability to pass a context and additional request options.
//
// See GetApiV1OverviewAlarmStats for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCS) GetApiV1OverviewAlarmStatsWithContext(ctx volcengine.Context, input *GetApiV1OverviewAlarmStatsInput, opts ...request.Option) (*GetApiV1OverviewAlarmStatsOutput, error) {
	req, out := c.GetApiV1OverviewAlarmStatsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetApiV1OverviewAlarmStatsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetApiV1OverviewAlarmStatsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetApiV1OverviewAlarmStatsInput) GoString() string {
	return s.String()
}

type GetApiV1OverviewAlarmStatsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Stats []*StatForGetApiV1OverviewAlarmStatsOutput `type:"list" json:"stats,omitempty"`

	Total *int32 `type:"int32" json:"total,omitempty"`
}

// String returns the string representation
func (s GetApiV1OverviewAlarmStatsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetApiV1OverviewAlarmStatsOutput) GoString() string {
	return s.String()
}

// SetStats sets the Stats field's value.
func (s *GetApiV1OverviewAlarmStatsOutput) SetStats(v []*StatForGetApiV1OverviewAlarmStatsOutput) *GetApiV1OverviewAlarmStatsOutput {
	s.Stats = v
	return s
}

// SetTotal sets the Total field's value.
func (s *GetApiV1OverviewAlarmStatsOutput) SetTotal(v int32) *GetApiV1OverviewAlarmStatsOutput {
	s.Total = &v
	return s
}

type StatForGetApiV1OverviewAlarmStatsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Count *int64 `type:"int64" json:"count,omitempty"`

	Date *string `type:"string" json:"date,omitempty"`
}

// String returns the string representation
func (s StatForGetApiV1OverviewAlarmStatsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StatForGetApiV1OverviewAlarmStatsOutput) GoString() string {
	return s.String()
}

// SetCount sets the Count field's value.
func (s *StatForGetApiV1OverviewAlarmStatsOutput) SetCount(v int64) *StatForGetApiV1OverviewAlarmStatsOutput {
	s.Count = &v
	return s
}

// SetDate sets the Date field's value.
func (s *StatForGetApiV1OverviewAlarmStatsOutput) SetDate(v string) *StatForGetApiV1OverviewAlarmStatsOutput {
	s.Date = &v
	return s
}
