// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mcs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetAssetSyncTaskCommon = "GetAssetSyncTask"

// GetAssetSyncTaskCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetAssetSyncTaskCommon operation. The "output" return
// value will be populated with the GetAssetSyncTaskCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetAssetSyncTaskCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetAssetSyncTaskCommon Send returns without error.
//
// See GetAssetSyncTaskCommon for more information on using the GetAssetSyncTaskCommon
// API call, and error handling.
//
//    // Example sending a request using the GetAssetSyncTaskCommonRequest method.
//    req, resp := client.GetAssetSyncTaskCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCS) GetAssetSyncTaskCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetAssetSyncTaskCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetAssetSyncTaskCommon API operation for MCS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCS's
// API operation GetAssetSyncTaskCommon for usage and error information.
func (c *MCS) GetAssetSyncTaskCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetAssetSyncTaskCommonRequest(input)
	return out, req.Send()
}

// GetAssetSyncTaskCommonWithContext is the same as GetAssetSyncTaskCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetAssetSyncTaskCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCS) GetAssetSyncTaskCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetAssetSyncTaskCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetAssetSyncTask = "GetAssetSyncTask"

// GetAssetSyncTaskRequest generates a "volcengine/request.Request" representing the
// client's request for the GetAssetSyncTask operation. The "output" return
// value will be populated with the GetAssetSyncTaskCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetAssetSyncTaskCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetAssetSyncTaskCommon Send returns without error.
//
// See GetAssetSyncTask for more information on using the GetAssetSyncTask
// API call, and error handling.
//
//    // Example sending a request using the GetAssetSyncTaskRequest method.
//    req, resp := client.GetAssetSyncTaskRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCS) GetAssetSyncTaskRequest(input *GetAssetSyncTaskInput) (req *request.Request, output *GetAssetSyncTaskOutput) {
	op := &request.Operation{
		Name:       opGetAssetSyncTask,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetAssetSyncTaskInput{}
	}

	output = &GetAssetSyncTaskOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetAssetSyncTask API operation for MCS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCS's
// API operation GetAssetSyncTask for usage and error information.
func (c *MCS) GetAssetSyncTask(input *GetAssetSyncTaskInput) (*GetAssetSyncTaskOutput, error) {
	req, out := c.GetAssetSyncTaskRequest(input)
	return out, req.Send()
}

// GetAssetSyncTaskWithContext is the same as GetAssetSyncTask with the addition of
// the ability to pass a context and additional request options.
//
// See GetAssetSyncTask for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCS) GetAssetSyncTaskWithContext(ctx volcengine.Context, input *GetAssetSyncTaskInput, opts ...request.Option) (*GetAssetSyncTaskOutput, error) {
	req, out := c.GetAssetSyncTaskRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type BaseInfoForGetAssetSyncTaskOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EndTimeMilli *int64 `type:"int64" json:",omitempty"`

	ErrCode *string `type:"string" json:",omitempty"`

	ErrMsg *string `type:"string" json:",omitempty"`

	StartTimeMilli *int64 `type:"int64" json:",omitempty"`

	TaskID *string `type:"string" json:",omitempty"`

	TaskStatus *string `type:"string" json:",omitempty" enum:"EnumOfTaskStatusForGetAssetSyncTaskOutput"`

	TriggerType *string `type:"string" json:",omitempty" enum:"EnumOfTriggerTypeForGetAssetSyncTaskOutput"`
}

// String returns the string representation
func (s BaseInfoForGetAssetSyncTaskOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BaseInfoForGetAssetSyncTaskOutput) GoString() string {
	return s.String()
}

// SetEndTimeMilli sets the EndTimeMilli field's value.
func (s *BaseInfoForGetAssetSyncTaskOutput) SetEndTimeMilli(v int64) *BaseInfoForGetAssetSyncTaskOutput {
	s.EndTimeMilli = &v
	return s
}

// SetErrCode sets the ErrCode field's value.
func (s *BaseInfoForGetAssetSyncTaskOutput) SetErrCode(v string) *BaseInfoForGetAssetSyncTaskOutput {
	s.ErrCode = &v
	return s
}

// SetErrMsg sets the ErrMsg field's value.
func (s *BaseInfoForGetAssetSyncTaskOutput) SetErrMsg(v string) *BaseInfoForGetAssetSyncTaskOutput {
	s.ErrMsg = &v
	return s
}

// SetStartTimeMilli sets the StartTimeMilli field's value.
func (s *BaseInfoForGetAssetSyncTaskOutput) SetStartTimeMilli(v int64) *BaseInfoForGetAssetSyncTaskOutput {
	s.StartTimeMilli = &v
	return s
}

// SetTaskID sets the TaskID field's value.
func (s *BaseInfoForGetAssetSyncTaskOutput) SetTaskID(v string) *BaseInfoForGetAssetSyncTaskOutput {
	s.TaskID = &v
	return s
}

// SetTaskStatus sets the TaskStatus field's value.
func (s *BaseInfoForGetAssetSyncTaskOutput) SetTaskStatus(v string) *BaseInfoForGetAssetSyncTaskOutput {
	s.TaskStatus = &v
	return s
}

// SetTriggerType sets the TriggerType field's value.
func (s *BaseInfoForGetAssetSyncTaskOutput) SetTriggerType(v string) *BaseInfoForGetAssetSyncTaskOutput {
	s.TriggerType = &v
	return s
}

type GetAssetSyncTaskInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetAssetSyncTaskInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetAssetSyncTaskInput) GoString() string {
	return s.String()
}

type GetAssetSyncTaskOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	BaseInfo *BaseInfoForGetAssetSyncTaskOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetAssetSyncTaskOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetAssetSyncTaskOutput) GoString() string {
	return s.String()
}

// SetBaseInfo sets the BaseInfo field's value.
func (s *GetAssetSyncTaskOutput) SetBaseInfo(v *BaseInfoForGetAssetSyncTaskOutput) *GetAssetSyncTaskOutput {
	s.BaseInfo = v
	return s
}

const (
	// EnumOfTaskStatusForGetAssetSyncTaskOutputWaiting is a EnumOfTaskStatusForGetAssetSyncTaskOutput enum value
	EnumOfTaskStatusForGetAssetSyncTaskOutputWaiting = "waiting"

	// EnumOfTaskStatusForGetAssetSyncTaskOutputProcessing is a EnumOfTaskStatusForGetAssetSyncTaskOutput enum value
	EnumOfTaskStatusForGetAssetSyncTaskOutputProcessing = "processing"

	// EnumOfTaskStatusForGetAssetSyncTaskOutputSucceeded is a EnumOfTaskStatusForGetAssetSyncTaskOutput enum value
	EnumOfTaskStatusForGetAssetSyncTaskOutputSucceeded = "succeeded"

	// EnumOfTaskStatusForGetAssetSyncTaskOutputCanceled is a EnumOfTaskStatusForGetAssetSyncTaskOutput enum value
	EnumOfTaskStatusForGetAssetSyncTaskOutputCanceled = "canceled"

	// EnumOfTaskStatusForGetAssetSyncTaskOutputFailed is a EnumOfTaskStatusForGetAssetSyncTaskOutput enum value
	EnumOfTaskStatusForGetAssetSyncTaskOutputFailed = "failed"

	// EnumOfTaskStatusForGetAssetSyncTaskOutputTimeouted is a EnumOfTaskStatusForGetAssetSyncTaskOutput enum value
	EnumOfTaskStatusForGetAssetSyncTaskOutputTimeouted = "timeouted"
)

const (
	// EnumOfTriggerTypeForGetAssetSyncTaskOutputByUser is a EnumOfTriggerTypeForGetAssetSyncTaskOutput enum value
	EnumOfTriggerTypeForGetAssetSyncTaskOutputByUser = "by_user"

	// EnumOfTriggerTypeForGetAssetSyncTaskOutputByTimer is a EnumOfTriggerTypeForGetAssetSyncTaskOutput enum value
	EnumOfTriggerTypeForGetAssetSyncTaskOutputByTimer = "by_timer"
)
