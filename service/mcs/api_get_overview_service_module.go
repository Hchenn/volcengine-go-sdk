// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mcs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetOverviewServiceModuleCommon = "GetOverviewServiceModule"

// GetOverviewServiceModuleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetOverviewServiceModuleCommon operation. The "output" return
// value will be populated with the GetOverviewServiceModuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetOverviewServiceModuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetOverviewServiceModuleCommon Send returns without error.
//
// See GetOverviewServiceModuleCommon for more information on using the GetOverviewServiceModuleCommon
// API call, and error handling.
//
//    // Example sending a request using the GetOverviewServiceModuleCommonRequest method.
//    req, resp := client.GetOverviewServiceModuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCS) GetOverviewServiceModuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetOverviewServiceModuleCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetOverviewServiceModuleCommon API operation for MCS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCS's
// API operation GetOverviewServiceModuleCommon for usage and error information.
func (c *MCS) GetOverviewServiceModuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetOverviewServiceModuleCommonRequest(input)
	return out, req.Send()
}

// GetOverviewServiceModuleCommonWithContext is the same as GetOverviewServiceModuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetOverviewServiceModuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCS) GetOverviewServiceModuleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetOverviewServiceModuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetOverviewServiceModule = "GetOverviewServiceModule"

// GetOverviewServiceModuleRequest generates a "volcengine/request.Request" representing the
// client's request for the GetOverviewServiceModule operation. The "output" return
// value will be populated with the GetOverviewServiceModuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetOverviewServiceModuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetOverviewServiceModuleCommon Send returns without error.
//
// See GetOverviewServiceModule for more information on using the GetOverviewServiceModule
// API call, and error handling.
//
//    // Example sending a request using the GetOverviewServiceModuleRequest method.
//    req, resp := client.GetOverviewServiceModuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCS) GetOverviewServiceModuleRequest(input *GetOverviewServiceModuleInput) (req *request.Request, output *GetOverviewServiceModuleOutput) {
	op := &request.Operation{
		Name:       opGetOverviewServiceModule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetOverviewServiceModuleInput{}
	}

	output = &GetOverviewServiceModuleOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetOverviewServiceModule API operation for MCS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCS's
// API operation GetOverviewServiceModule for usage and error information.
func (c *MCS) GetOverviewServiceModule(input *GetOverviewServiceModuleInput) (*GetOverviewServiceModuleOutput, error) {
	req, out := c.GetOverviewServiceModuleRequest(input)
	return out, req.Send()
}

// GetOverviewServiceModuleWithContext is the same as GetOverviewServiceModule with the addition of
// the ability to pass a context and additional request options.
//
// See GetOverviewServiceModule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCS) GetOverviewServiceModuleWithContext(ctx volcengine.Context, input *GetOverviewServiceModuleInput, opts ...request.Option) (*GetOverviewServiceModuleOutput, error) {
	req, out := c.GetOverviewServiceModuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetOverviewServiceModuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetOverviewServiceModuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetOverviewServiceModuleInput) GoString() string {
	return s.String()
}

type GetOverviewServiceModuleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	NotReadySrvModules []*NotReadySrvModuleForGetOverviewServiceModuleOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s GetOverviewServiceModuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetOverviewServiceModuleOutput) GoString() string {
	return s.String()
}

// SetNotReadySrvModules sets the NotReadySrvModules field's value.
func (s *GetOverviewServiceModuleOutput) SetNotReadySrvModules(v []*NotReadySrvModuleForGetOverviewServiceModuleOutput) *GetOverviewServiceModuleOutput {
	s.NotReadySrvModules = v
	return s
}

type NotReadySrvModuleForGetOverviewServiceModuleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ServiceModuleCode *string `type:"string" json:",omitempty"`

	ServiceModuleNameCN *string `type:"string" json:",omitempty"`

	StatusStatement *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s NotReadySrvModuleForGetOverviewServiceModuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NotReadySrvModuleForGetOverviewServiceModuleOutput) GoString() string {
	return s.String()
}

// SetServiceModuleCode sets the ServiceModuleCode field's value.
func (s *NotReadySrvModuleForGetOverviewServiceModuleOutput) SetServiceModuleCode(v string) *NotReadySrvModuleForGetOverviewServiceModuleOutput {
	s.ServiceModuleCode = &v
	return s
}

// SetServiceModuleNameCN sets the ServiceModuleNameCN field's value.
func (s *NotReadySrvModuleForGetOverviewServiceModuleOutput) SetServiceModuleNameCN(v string) *NotReadySrvModuleForGetOverviewServiceModuleOutput {
	s.ServiceModuleNameCN = &v
	return s
}

// SetStatusStatement sets the StatusStatement field's value.
func (s *NotReadySrvModuleForGetOverviewServiceModuleOutput) SetStatusStatement(v string) *NotReadySrvModuleForGetOverviewServiceModuleOutput {
	s.StatusStatement = &v
	return s
}
