// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mcs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetRiskDetectionTaskCommon = "GetRiskDetectionTask"

// GetRiskDetectionTaskCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetRiskDetectionTaskCommon operation. The "output" return
// value will be populated with the GetRiskDetectionTaskCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetRiskDetectionTaskCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetRiskDetectionTaskCommon Send returns without error.
//
// See GetRiskDetectionTaskCommon for more information on using the GetRiskDetectionTaskCommon
// API call, and error handling.
//
//    // Example sending a request using the GetRiskDetectionTaskCommonRequest method.
//    req, resp := client.GetRiskDetectionTaskCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCS) GetRiskDetectionTaskCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetRiskDetectionTaskCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetRiskDetectionTaskCommon API operation for MCS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCS's
// API operation GetRiskDetectionTaskCommon for usage and error information.
func (c *MCS) GetRiskDetectionTaskCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetRiskDetectionTaskCommonRequest(input)
	return out, req.Send()
}

// GetRiskDetectionTaskCommonWithContext is the same as GetRiskDetectionTaskCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetRiskDetectionTaskCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCS) GetRiskDetectionTaskCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetRiskDetectionTaskCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetRiskDetectionTask = "GetRiskDetectionTask"

// GetRiskDetectionTaskRequest generates a "volcengine/request.Request" representing the
// client's request for the GetRiskDetectionTask operation. The "output" return
// value will be populated with the GetRiskDetectionTaskCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetRiskDetectionTaskCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetRiskDetectionTaskCommon Send returns without error.
//
// See GetRiskDetectionTask for more information on using the GetRiskDetectionTask
// API call, and error handling.
//
//    // Example sending a request using the GetRiskDetectionTaskRequest method.
//    req, resp := client.GetRiskDetectionTaskRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCS) GetRiskDetectionTaskRequest(input *GetRiskDetectionTaskInput) (req *request.Request, output *GetRiskDetectionTaskOutput) {
	op := &request.Operation{
		Name:       opGetRiskDetectionTask,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetRiskDetectionTaskInput{}
	}

	output = &GetRiskDetectionTaskOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetRiskDetectionTask API operation for MCS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCS's
// API operation GetRiskDetectionTask for usage and error information.
func (c *MCS) GetRiskDetectionTask(input *GetRiskDetectionTaskInput) (*GetRiskDetectionTaskOutput, error) {
	req, out := c.GetRiskDetectionTaskRequest(input)
	return out, req.Send()
}

// GetRiskDetectionTaskWithContext is the same as GetRiskDetectionTask with the addition of
// the ability to pass a context and additional request options.
//
// See GetRiskDetectionTask for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCS) GetRiskDetectionTaskWithContext(ctx volcengine.Context, input *GetRiskDetectionTaskInput, opts ...request.Option) (*GetRiskDetectionTaskOutput, error) {
	req, out := c.GetRiskDetectionTaskRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetRiskDetectionTaskInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetRiskDetectionTaskInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetRiskDetectionTaskInput) GoString() string {
	return s.String()
}

type GetRiskDetectionTaskOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ChecklistNum *int64 `type:"int64" json:",omitempty"`

	EndTimeMilli *int64 `type:"int64" json:",omitempty"`

	ErrCode *string `type:"string" json:",omitempty"`

	ErrMsg *string `type:"string" json:",omitempty"`

	ProcessRate *int64 `type:"int64" json:",omitempty"`

	ProjectedStartTimeMilli *int64 `type:"int64" json:",omitempty"`

	RiskDataStat *RiskDataStatForGetRiskDetectionTaskOutput `type:"structure" json:",omitempty"`

	StartTimeMilli *int64 `type:"int64" json:",omitempty"`

	TaskID *string `type:"string" json:",omitempty"`

	TaskStatus *string `type:"string" json:",omitempty"`

	TaskType *string `type:"string" json:",omitempty"`

	TriggerType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetRiskDetectionTaskOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetRiskDetectionTaskOutput) GoString() string {
	return s.String()
}

// SetChecklistNum sets the ChecklistNum field's value.
func (s *GetRiskDetectionTaskOutput) SetChecklistNum(v int64) *GetRiskDetectionTaskOutput {
	s.ChecklistNum = &v
	return s
}

// SetEndTimeMilli sets the EndTimeMilli field's value.
func (s *GetRiskDetectionTaskOutput) SetEndTimeMilli(v int64) *GetRiskDetectionTaskOutput {
	s.EndTimeMilli = &v
	return s
}

// SetErrCode sets the ErrCode field's value.
func (s *GetRiskDetectionTaskOutput) SetErrCode(v string) *GetRiskDetectionTaskOutput {
	s.ErrCode = &v
	return s
}

// SetErrMsg sets the ErrMsg field's value.
func (s *GetRiskDetectionTaskOutput) SetErrMsg(v string) *GetRiskDetectionTaskOutput {
	s.ErrMsg = &v
	return s
}

// SetProcessRate sets the ProcessRate field's value.
func (s *GetRiskDetectionTaskOutput) SetProcessRate(v int64) *GetRiskDetectionTaskOutput {
	s.ProcessRate = &v
	return s
}

// SetProjectedStartTimeMilli sets the ProjectedStartTimeMilli field's value.
func (s *GetRiskDetectionTaskOutput) SetProjectedStartTimeMilli(v int64) *GetRiskDetectionTaskOutput {
	s.ProjectedStartTimeMilli = &v
	return s
}

// SetRiskDataStat sets the RiskDataStat field's value.
func (s *GetRiskDetectionTaskOutput) SetRiskDataStat(v *RiskDataStatForGetRiskDetectionTaskOutput) *GetRiskDetectionTaskOutput {
	s.RiskDataStat = v
	return s
}

// SetStartTimeMilli sets the StartTimeMilli field's value.
func (s *GetRiskDetectionTaskOutput) SetStartTimeMilli(v int64) *GetRiskDetectionTaskOutput {
	s.StartTimeMilli = &v
	return s
}

// SetTaskID sets the TaskID field's value.
func (s *GetRiskDetectionTaskOutput) SetTaskID(v string) *GetRiskDetectionTaskOutput {
	s.TaskID = &v
	return s
}

// SetTaskStatus sets the TaskStatus field's value.
func (s *GetRiskDetectionTaskOutput) SetTaskStatus(v string) *GetRiskDetectionTaskOutput {
	s.TaskStatus = &v
	return s
}

// SetTaskType sets the TaskType field's value.
func (s *GetRiskDetectionTaskOutput) SetTaskType(v string) *GetRiskDetectionTaskOutput {
	s.TaskType = &v
	return s
}

// SetTriggerType sets the TriggerType field's value.
func (s *GetRiskDetectionTaskOutput) SetTriggerType(v string) *GetRiskDetectionTaskOutput {
	s.TriggerType = &v
	return s
}

type RiskDataStatForGetRiskDetectionTaskOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Critical *int64 `type:"int64" json:"critical,omitempty"`

	High *int64 `type:"int64" json:"high,omitempty"`

	Low *int64 `type:"int64" json:"low,omitempty"`

	Medium *int64 `type:"int64" json:"medium,omitempty"`

	Security *int64 `type:"int64" json:"security,omitempty"`

	Total *int64 `type:"int64" json:"total,omitempty"`
}

// String returns the string representation
func (s RiskDataStatForGetRiskDetectionTaskOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RiskDataStatForGetRiskDetectionTaskOutput) GoString() string {
	return s.String()
}

// SetCritical sets the Critical field's value.
func (s *RiskDataStatForGetRiskDetectionTaskOutput) SetCritical(v int64) *RiskDataStatForGetRiskDetectionTaskOutput {
	s.Critical = &v
	return s
}

// SetHigh sets the High field's value.
func (s *RiskDataStatForGetRiskDetectionTaskOutput) SetHigh(v int64) *RiskDataStatForGetRiskDetectionTaskOutput {
	s.High = &v
	return s
}

// SetLow sets the Low field's value.
func (s *RiskDataStatForGetRiskDetectionTaskOutput) SetLow(v int64) *RiskDataStatForGetRiskDetectionTaskOutput {
	s.Low = &v
	return s
}

// SetMedium sets the Medium field's value.
func (s *RiskDataStatForGetRiskDetectionTaskOutput) SetMedium(v int64) *RiskDataStatForGetRiskDetectionTaskOutput {
	s.Medium = &v
	return s
}

// SetSecurity sets the Security field's value.
func (s *RiskDataStatForGetRiskDetectionTaskOutput) SetSecurity(v int64) *RiskDataStatForGetRiskDetectionTaskOutput {
	s.Security = &v
	return s
}

// SetTotal sets the Total field's value.
func (s *RiskDataStatForGetRiskDetectionTaskOutput) SetTotal(v int64) *RiskDataStatForGetRiskDetectionTaskOutput {
	s.Total = &v
	return s
}
