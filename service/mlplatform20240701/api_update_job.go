// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mlplatform20240701

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateJobCommon = "UpdateJob"

// UpdateJobCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateJobCommon operation. The "output" return
// value will be populated with the UpdateJobCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateJobCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateJobCommon Send returns without error.
//
// See UpdateJobCommon for more information on using the UpdateJobCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateJobCommonRequest method.
//    req, resp := client.UpdateJobCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MLPLATFORM20240701) UpdateJobCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateJobCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateJobCommon API operation for ML_PLATFORM20240701.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ML_PLATFORM20240701's
// API operation UpdateJobCommon for usage and error information.
func (c *MLPLATFORM20240701) UpdateJobCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateJobCommonRequest(input)
	return out, req.Send()
}

// UpdateJobCommonWithContext is the same as UpdateJobCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateJobCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MLPLATFORM20240701) UpdateJobCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateJobCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateJob = "UpdateJob"

// UpdateJobRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateJob operation. The "output" return
// value will be populated with the UpdateJobCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateJobCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateJobCommon Send returns without error.
//
// See UpdateJob for more information on using the UpdateJob
// API call, and error handling.
//
//    // Example sending a request using the UpdateJobRequest method.
//    req, resp := client.UpdateJobRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MLPLATFORM20240701) UpdateJobRequest(input *UpdateJobInput) (req *request.Request, output *UpdateJobOutput) {
	op := &request.Operation{
		Name:       opUpdateJob,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateJobInput{}
	}

	output = &UpdateJobOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateJob API operation for ML_PLATFORM20240701.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ML_PLATFORM20240701's
// API operation UpdateJob for usage and error information.
func (c *MLPLATFORM20240701) UpdateJob(input *UpdateJobInput) (*UpdateJobOutput, error) {
	req, out := c.UpdateJobRequest(input)
	return out, req.Send()
}

// UpdateJobWithContext is the same as UpdateJob with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateJob for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MLPLATFORM20240701) UpdateJobWithContext(ctx volcengine.Context, input *UpdateJobInput, opts ...request.Option) (*UpdateJobOutput, error) {
	req, out := c.UpdateJobRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DiagnoseConfigForUpdateJobInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DetectionIntervalSeconds *int64 `type:"int64" json:",omitempty"`

	FirstDetectionWaitSeconds *int64 `type:"int64" json:",omitempty"`

	Name *string `type:"string" json:",omitempty" enum:"EnumOfNameForUpdateJobInput"`

	Triggers []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DiagnoseConfigForUpdateJobInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DiagnoseConfigForUpdateJobInput) GoString() string {
	return s.String()
}

// SetDetectionIntervalSeconds sets the DetectionIntervalSeconds field's value.
func (s *DiagnoseConfigForUpdateJobInput) SetDetectionIntervalSeconds(v int64) *DiagnoseConfigForUpdateJobInput {
	s.DetectionIntervalSeconds = &v
	return s
}

// SetFirstDetectionWaitSeconds sets the FirstDetectionWaitSeconds field's value.
func (s *DiagnoseConfigForUpdateJobInput) SetFirstDetectionWaitSeconds(v int64) *DiagnoseConfigForUpdateJobInput {
	s.FirstDetectionWaitSeconds = &v
	return s
}

// SetName sets the Name field's value.
func (s *DiagnoseConfigForUpdateJobInput) SetName(v string) *DiagnoseConfigForUpdateJobInput {
	s.Name = &v
	return s
}

// SetTriggers sets the Triggers field's value.
func (s *DiagnoseConfigForUpdateJobInput) SetTriggers(v []*string) *DiagnoseConfigForUpdateJobInput {
	s.Triggers = v
	return s
}

type ResourceConfigForUpdateJobInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	HoldingTimeSeconds *int64 `type:"int64" json:",omitempty"`

	MaxRuntimeSeconds *int64 `type:"int64" json:",omitempty"`

	Priority *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ResourceConfigForUpdateJobInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceConfigForUpdateJobInput) GoString() string {
	return s.String()
}

// SetHoldingTimeSeconds sets the HoldingTimeSeconds field's value.
func (s *ResourceConfigForUpdateJobInput) SetHoldingTimeSeconds(v int64) *ResourceConfigForUpdateJobInput {
	s.HoldingTimeSeconds = &v
	return s
}

// SetMaxRuntimeSeconds sets the MaxRuntimeSeconds field's value.
func (s *ResourceConfigForUpdateJobInput) SetMaxRuntimeSeconds(v int64) *ResourceConfigForUpdateJobInput {
	s.MaxRuntimeSeconds = &v
	return s
}

// SetPriority sets the Priority field's value.
func (s *ResourceConfigForUpdateJobInput) SetPriority(v int32) *ResourceConfigForUpdateJobInput {
	s.Priority = &v
	return s
}

type RetryConfigForUpdateJobInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	IntervalSeconds *int64 `type:"int64" json:",omitempty"`

	MaxRetryTimes *int64 `type:"int64" json:",omitempty"`

	Triggers []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s RetryConfigForUpdateJobInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RetryConfigForUpdateJobInput) GoString() string {
	return s.String()
}

// SetIntervalSeconds sets the IntervalSeconds field's value.
func (s *RetryConfigForUpdateJobInput) SetIntervalSeconds(v int64) *RetryConfigForUpdateJobInput {
	s.IntervalSeconds = &v
	return s
}

// SetMaxRetryTimes sets the MaxRetryTimes field's value.
func (s *RetryConfigForUpdateJobInput) SetMaxRetryTimes(v int64) *RetryConfigForUpdateJobInput {
	s.MaxRetryTimes = &v
	return s
}

// SetTriggers sets the Triggers field's value.
func (s *RetryConfigForUpdateJobInput) SetTriggers(v []*string) *RetryConfigForUpdateJobInput {
	s.Triggers = v
	return s
}

type UpdateJobInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	DiagnoseConfig []*DiagnoseConfigForUpdateJobInput `type:"list" json:",omitempty"`

	DryRun *bool `type:"boolean" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`

	Name *string `type:"string" json:",omitempty"`

	ResourceConfig *ResourceConfigForUpdateJobInput `type:"structure" json:",omitempty"`

	RetryConfig *RetryConfigForUpdateJobInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s UpdateJobInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateJobInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateJobInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateJobInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *UpdateJobInput) SetDescription(v string) *UpdateJobInput {
	s.Description = &v
	return s
}

// SetDiagnoseConfig sets the DiagnoseConfig field's value.
func (s *UpdateJobInput) SetDiagnoseConfig(v []*DiagnoseConfigForUpdateJobInput) *UpdateJobInput {
	s.DiagnoseConfig = v
	return s
}

// SetDryRun sets the DryRun field's value.
func (s *UpdateJobInput) SetDryRun(v bool) *UpdateJobInput {
	s.DryRun = &v
	return s
}

// SetId sets the Id field's value.
func (s *UpdateJobInput) SetId(v string) *UpdateJobInput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *UpdateJobInput) SetName(v string) *UpdateJobInput {
	s.Name = &v
	return s
}

// SetResourceConfig sets the ResourceConfig field's value.
func (s *UpdateJobInput) SetResourceConfig(v *ResourceConfigForUpdateJobInput) *UpdateJobInput {
	s.ResourceConfig = v
	return s
}

// SetRetryConfig sets the RetryConfig field's value.
func (s *UpdateJobInput) SetRetryConfig(v *RetryConfigForUpdateJobInput) *UpdateJobInput {
	s.RetryConfig = v
	return s
}

type UpdateJobOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateJobOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateJobOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *UpdateJobOutput) SetId(v string) *UpdateJobOutput {
	s.Id = &v
	return s
}

const (
	// EnumOfNameForUpdateJobInputEnvironmentalDiagnosis is a EnumOfNameForUpdateJobInput enum value
	EnumOfNameForUpdateJobInputEnvironmentalDiagnosis = "EnvironmentalDiagnosis"

	// EnumOfNameForUpdateJobInputPythonDetection is a EnumOfNameForUpdateJobInput enum value
	EnumOfNameForUpdateJobInputPythonDetection = "PythonDetection"

	// EnumOfNameForUpdateJobInputLogDetection is a EnumOfNameForUpdateJobInput enum value
	EnumOfNameForUpdateJobInputLogDetection = "LogDetection"
)

const (
	// EnumOfTriggerListForUpdateJobInputBeforeStart is a EnumOfTriggerListForUpdateJobInput enum value
	EnumOfTriggerListForUpdateJobInputBeforeStart = "BeforeStart"

	// EnumOfTriggerListForUpdateJobInputJobRunning is a EnumOfTriggerListForUpdateJobInput enum value
	EnumOfTriggerListForUpdateJobInputJobRunning = "JobRunning"

	// EnumOfTriggerListForUpdateJobInputJobFailed is a EnumOfTriggerListForUpdateJobInput enum value
	EnumOfTriggerListForUpdateJobInputJobFailed = "JobFailed"

	// EnumOfTriggerListForUpdateJobInputStopByUser is a EnumOfTriggerListForUpdateJobInput enum value
	EnumOfTriggerListForUpdateJobInputStopByUser = "StopByUser"
)
