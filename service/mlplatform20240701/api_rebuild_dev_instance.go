// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mlplatform20240701

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opRebuildDevInstanceCommon = "RebuildDevInstance"

// RebuildDevInstanceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the RebuildDevInstanceCommon operation. The "output" return
// value will be populated with the RebuildDevInstanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned RebuildDevInstanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after RebuildDevInstanceCommon Send returns without error.
//
// See RebuildDevInstanceCommon for more information on using the RebuildDevInstanceCommon
// API call, and error handling.
//
//    // Example sending a request using the RebuildDevInstanceCommonRequest method.
//    req, resp := client.RebuildDevInstanceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MLPLATFORM20240701) RebuildDevInstanceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opRebuildDevInstanceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// RebuildDevInstanceCommon API operation for ML_PLATFORM20240701.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ML_PLATFORM20240701's
// API operation RebuildDevInstanceCommon for usage and error information.
func (c *MLPLATFORM20240701) RebuildDevInstanceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.RebuildDevInstanceCommonRequest(input)
	return out, req.Send()
}

// RebuildDevInstanceCommonWithContext is the same as RebuildDevInstanceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See RebuildDevInstanceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MLPLATFORM20240701) RebuildDevInstanceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.RebuildDevInstanceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opRebuildDevInstance = "RebuildDevInstance"

// RebuildDevInstanceRequest generates a "volcengine/request.Request" representing the
// client's request for the RebuildDevInstance operation. The "output" return
// value will be populated with the RebuildDevInstanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned RebuildDevInstanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after RebuildDevInstanceCommon Send returns without error.
//
// See RebuildDevInstance for more information on using the RebuildDevInstance
// API call, and error handling.
//
//    // Example sending a request using the RebuildDevInstanceRequest method.
//    req, resp := client.RebuildDevInstanceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MLPLATFORM20240701) RebuildDevInstanceRequest(input *RebuildDevInstanceInput) (req *request.Request, output *RebuildDevInstanceOutput) {
	op := &request.Operation{
		Name:       opRebuildDevInstance,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &RebuildDevInstanceInput{}
	}

	output = &RebuildDevInstanceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// RebuildDevInstance API operation for ML_PLATFORM20240701.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ML_PLATFORM20240701's
// API operation RebuildDevInstance for usage and error information.
func (c *MLPLATFORM20240701) RebuildDevInstance(input *RebuildDevInstanceInput) (*RebuildDevInstanceOutput, error) {
	req, out := c.RebuildDevInstanceRequest(input)
	return out, req.Send()
}

// RebuildDevInstanceWithContext is the same as RebuildDevInstance with the addition of
// the ability to pass a context and additional request options.
//
// See RebuildDevInstance for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MLPLATFORM20240701) RebuildDevInstanceWithContext(ctx volcengine.Context, input *RebuildDevInstanceInput, opts ...request.Option) (*RebuildDevInstanceOutput, error) {
	req, out := c.RebuildDevInstanceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CredentialForRebuildDevInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	RegistryToken *string `type:"string" json:",omitempty"`

	RegistryUsername *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CredentialForRebuildDevInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CredentialForRebuildDevInstanceInput) GoString() string {
	return s.String()
}

// SetRegistryToken sets the RegistryToken field's value.
func (s *CredentialForRebuildDevInstanceInput) SetRegistryToken(v string) *CredentialForRebuildDevInstanceInput {
	s.RegistryToken = &v
	return s
}

// SetRegistryUsername sets the RegistryUsername field's value.
func (s *CredentialForRebuildDevInstanceInput) SetRegistryUsername(v string) *CredentialForRebuildDevInstanceInput {
	s.RegistryUsername = &v
	return s
}

type ImageForRebuildDevInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Credential *CredentialForRebuildDevInstanceInput `type:"structure" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	Url *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ImageForRebuildDevInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ImageForRebuildDevInstanceInput) GoString() string {
	return s.String()
}

// SetCredential sets the Credential field's value.
func (s *ImageForRebuildDevInstanceInput) SetCredential(v *CredentialForRebuildDevInstanceInput) *ImageForRebuildDevInstanceInput {
	s.Credential = v
	return s
}

// SetType sets the Type field's value.
func (s *ImageForRebuildDevInstanceInput) SetType(v string) *ImageForRebuildDevInstanceInput {
	s.Type = &v
	return s
}

// SetUrl sets the Url field's value.
func (s *ImageForRebuildDevInstanceInput) SetUrl(v string) *ImageForRebuildDevInstanceInput {
	s.Url = &v
	return s
}

type RebuildDevInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`

	Image *ImageForRebuildDevInstanceInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s RebuildDevInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RebuildDevInstanceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *RebuildDevInstanceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "RebuildDevInstanceInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetId sets the Id field's value.
func (s *RebuildDevInstanceInput) SetId(v string) *RebuildDevInstanceInput {
	s.Id = &v
	return s
}

// SetImage sets the Image field's value.
func (s *RebuildDevInstanceInput) SetImage(v *ImageForRebuildDevInstanceInput) *RebuildDevInstanceInput {
	s.Image = v
	return s
}

type RebuildDevInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RebuildDevInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RebuildDevInstanceOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *RebuildDevInstanceOutput) SetId(v string) *RebuildDevInstanceOutput {
	s.Id = &v
	return s
}
