// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mlplatform20240701

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListVolumeTypesCommon = "ListVolumeTypes"

// ListVolumeTypesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListVolumeTypesCommon operation. The "output" return
// value will be populated with the ListVolumeTypesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListVolumeTypesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListVolumeTypesCommon Send returns without error.
//
// See ListVolumeTypesCommon for more information on using the ListVolumeTypesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListVolumeTypesCommonRequest method.
//    req, resp := client.ListVolumeTypesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MLPLATFORM20240701) ListVolumeTypesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListVolumeTypesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListVolumeTypesCommon API operation for ML_PLATFORM20240701.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ML_PLATFORM20240701's
// API operation ListVolumeTypesCommon for usage and error information.
func (c *MLPLATFORM20240701) ListVolumeTypesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListVolumeTypesCommonRequest(input)
	return out, req.Send()
}

// ListVolumeTypesCommonWithContext is the same as ListVolumeTypesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListVolumeTypesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MLPLATFORM20240701) ListVolumeTypesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListVolumeTypesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListVolumeTypes = "ListVolumeTypes"

// ListVolumeTypesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListVolumeTypes operation. The "output" return
// value will be populated with the ListVolumeTypesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListVolumeTypesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListVolumeTypesCommon Send returns without error.
//
// See ListVolumeTypes for more information on using the ListVolumeTypes
// API call, and error handling.
//
//    // Example sending a request using the ListVolumeTypesRequest method.
//    req, resp := client.ListVolumeTypesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MLPLATFORM20240701) ListVolumeTypesRequest(input *ListVolumeTypesInput) (req *request.Request, output *ListVolumeTypesOutput) {
	op := &request.Operation{
		Name:       opListVolumeTypes,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListVolumeTypesInput{}
	}

	output = &ListVolumeTypesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListVolumeTypes API operation for ML_PLATFORM20240701.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ML_PLATFORM20240701's
// API operation ListVolumeTypes for usage and error information.
func (c *MLPLATFORM20240701) ListVolumeTypes(input *ListVolumeTypesInput) (*ListVolumeTypesOutput, error) {
	req, out := c.ListVolumeTypesRequest(input)
	return out, req.Send()
}

// ListVolumeTypesWithContext is the same as ListVolumeTypes with the addition of
// the ability to pass a context and additional request options.
//
// See ListVolumeTypes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MLPLATFORM20240701) ListVolumeTypesWithContext(ctx volcengine.Context, input *ListVolumeTypesInput, opts ...request.Option) (*ListVolumeTypesOutput, error) {
	req, out := c.ListVolumeTypesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ItemForListVolumeTypesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	MaximumBandwidthMbps *int32 `type:"int32" json:",omitempty"`

	MaximumIops *int32 `type:"int32" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	PriceByDay *float64 `type:"double" json:",omitempty"`

	PriceByHour *float64 `type:"double" json:",omitempty"`

	PriceByMonth *float64 `type:"double" json:",omitempty"`
}

// String returns the string representation
func (s ItemForListVolumeTypesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListVolumeTypesOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *ItemForListVolumeTypesOutput) SetId(v string) *ItemForListVolumeTypesOutput {
	s.Id = &v
	return s
}

// SetMaximumBandwidthMbps sets the MaximumBandwidthMbps field's value.
func (s *ItemForListVolumeTypesOutput) SetMaximumBandwidthMbps(v int32) *ItemForListVolumeTypesOutput {
	s.MaximumBandwidthMbps = &v
	return s
}

// SetMaximumIops sets the MaximumIops field's value.
func (s *ItemForListVolumeTypesOutput) SetMaximumIops(v int32) *ItemForListVolumeTypesOutput {
	s.MaximumIops = &v
	return s
}

// SetName sets the Name field's value.
func (s *ItemForListVolumeTypesOutput) SetName(v string) *ItemForListVolumeTypesOutput {
	s.Name = &v
	return s
}

// SetPriceByDay sets the PriceByDay field's value.
func (s *ItemForListVolumeTypesOutput) SetPriceByDay(v float64) *ItemForListVolumeTypesOutput {
	s.PriceByDay = &v
	return s
}

// SetPriceByHour sets the PriceByHour field's value.
func (s *ItemForListVolumeTypesOutput) SetPriceByHour(v float64) *ItemForListVolumeTypesOutput {
	s.PriceByHour = &v
	return s
}

// SetPriceByMonth sets the PriceByMonth field's value.
func (s *ItemForListVolumeTypesOutput) SetPriceByMonth(v float64) *ItemForListVolumeTypesOutput {
	s.PriceByMonth = &v
	return s
}

type ListVolumeTypesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	NameContains *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListVolumeTypesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListVolumeTypesInput) GoString() string {
	return s.String()
}

// SetNameContains sets the NameContains field's value.
func (s *ListVolumeTypesInput) SetNameContains(v string) *ListVolumeTypesInput {
	s.NameContains = &v
	return s
}

type ListVolumeTypesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListVolumeTypesOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListVolumeTypesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListVolumeTypesOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListVolumeTypesOutput) SetItems(v []*ItemForListVolumeTypesOutput) *ListVolumeTypesOutput {
	s.Items = v
	return s
}
