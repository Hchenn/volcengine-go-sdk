// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mlplatform20240701

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteServiceCommon = "DeleteService"

// DeleteServiceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteServiceCommon operation. The "output" return
// value will be populated with the DeleteServiceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteServiceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteServiceCommon Send returns without error.
//
// See DeleteServiceCommon for more information on using the DeleteServiceCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteServiceCommonRequest method.
//    req, resp := client.DeleteServiceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MLPLATFORM20240701) DeleteServiceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteServiceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteServiceCommon API operation for ML_PLATFORM20240701.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ML_PLATFORM20240701's
// API operation DeleteServiceCommon for usage and error information.
func (c *MLPLATFORM20240701) DeleteServiceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteServiceCommonRequest(input)
	return out, req.Send()
}

// DeleteServiceCommonWithContext is the same as DeleteServiceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteServiceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MLPLATFORM20240701) DeleteServiceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteServiceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteService = "DeleteService"

// DeleteServiceRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteService operation. The "output" return
// value will be populated with the DeleteServiceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteServiceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteServiceCommon Send returns without error.
//
// See DeleteService for more information on using the DeleteService
// API call, and error handling.
//
//    // Example sending a request using the DeleteServiceRequest method.
//    req, resp := client.DeleteServiceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MLPLATFORM20240701) DeleteServiceRequest(input *DeleteServiceInput) (req *request.Request, output *DeleteServiceOutput) {
	op := &request.Operation{
		Name:       opDeleteService,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteServiceInput{}
	}

	output = &DeleteServiceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteService API operation for ML_PLATFORM20240701.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ML_PLATFORM20240701's
// API operation DeleteService for usage and error information.
func (c *MLPLATFORM20240701) DeleteService(input *DeleteServiceInput) (*DeleteServiceOutput, error) {
	req, out := c.DeleteServiceRequest(input)
	return out, req.Send()
}

// DeleteServiceWithContext is the same as DeleteService with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteService for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MLPLATFORM20240701) DeleteServiceWithContext(ctx volcengine.Context, input *DeleteServiceInput, opts ...request.Option) (*DeleteServiceOutput, error) {
	req, out := c.DeleteServiceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteServiceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DryRun *bool `type:"boolean" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DeleteServiceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteServiceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteServiceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteServiceInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDryRun sets the DryRun field's value.
func (s *DeleteServiceInput) SetDryRun(v bool) *DeleteServiceInput {
	s.DryRun = &v
	return s
}

// SetId sets the Id field's value.
func (s *DeleteServiceInput) SetId(v string) *DeleteServiceInput {
	s.Id = &v
	return s
}

type DeleteServiceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:",omitempty"`

	Status *StatusForDeleteServiceOutput `type:"structure" json:",omitempty"`

	VersionId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DeleteServiceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteServiceOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *DeleteServiceOutput) SetId(v string) *DeleteServiceOutput {
	s.Id = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DeleteServiceOutput) SetStatus(v *StatusForDeleteServiceOutput) *DeleteServiceOutput {
	s.Status = v
	return s
}

// SetVersionId sets the VersionId field's value.
func (s *DeleteServiceOutput) SetVersionId(v string) *DeleteServiceOutput {
	s.VersionId = &v
	return s
}

type StatusForDeleteServiceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Message *string `type:"string" json:",omitempty"`

	SecondaryState *string `type:"string" json:",omitempty"`

	State *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s StatusForDeleteServiceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StatusForDeleteServiceOutput) GoString() string {
	return s.String()
}

// SetMessage sets the Message field's value.
func (s *StatusForDeleteServiceOutput) SetMessage(v string) *StatusForDeleteServiceOutput {
	s.Message = &v
	return s
}

// SetSecondaryState sets the SecondaryState field's value.
func (s *StatusForDeleteServiceOutput) SetSecondaryState(v string) *StatusForDeleteServiceOutput {
	s.SecondaryState = &v
	return s
}

// SetState sets the State field's value.
func (s *StatusForDeleteServiceOutput) SetState(v string) *StatusForDeleteServiceOutput {
	s.State = &v
	return s
}
