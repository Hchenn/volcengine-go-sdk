// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package directconnect

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeIpv6GatewaysCommon = "DescribeIpv6Gateways"

// DescribeIpv6GatewaysCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeIpv6GatewaysCommon operation. The "output" return
// value will be populated with the DescribeIpv6GatewaysCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeIpv6GatewaysCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeIpv6GatewaysCommon Send returns without error.
//
// See DescribeIpv6GatewaysCommon for more information on using the DescribeIpv6GatewaysCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeIpv6GatewaysCommonRequest method.
//    req, resp := client.DescribeIpv6GatewaysCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) DescribeIpv6GatewaysCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeIpv6GatewaysCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeIpv6GatewaysCommon API operation for DIRECTCONNECT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DIRECTCONNECT's
// API operation DescribeIpv6GatewaysCommon for usage and error information.
func (c *DIRECTCONNECT) DescribeIpv6GatewaysCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeIpv6GatewaysCommonRequest(input)
	return out, req.Send()
}

// DescribeIpv6GatewaysCommonWithContext is the same as DescribeIpv6GatewaysCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeIpv6GatewaysCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) DescribeIpv6GatewaysCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeIpv6GatewaysCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeIpv6Gateways = "DescribeIpv6Gateways"

// DescribeIpv6GatewaysRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeIpv6Gateways operation. The "output" return
// value will be populated with the DescribeIpv6GatewaysCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeIpv6GatewaysCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeIpv6GatewaysCommon Send returns without error.
//
// See DescribeIpv6Gateways for more information on using the DescribeIpv6Gateways
// API call, and error handling.
//
//    // Example sending a request using the DescribeIpv6GatewaysRequest method.
//    req, resp := client.DescribeIpv6GatewaysRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) DescribeIpv6GatewaysRequest(input *DescribeIpv6GatewaysInput) (req *request.Request, output *DescribeIpv6GatewaysOutput) {
	op := &request.Operation{
		Name:       opDescribeIpv6Gateways,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeIpv6GatewaysInput{}
	}

	output = &DescribeIpv6GatewaysOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeIpv6Gateways API operation for DIRECTCONNECT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DIRECTCONNECT's
// API operation DescribeIpv6Gateways for usage and error information.
func (c *DIRECTCONNECT) DescribeIpv6Gateways(input *DescribeIpv6GatewaysInput) (*DescribeIpv6GatewaysOutput, error) {
	req, out := c.DescribeIpv6GatewaysRequest(input)
	return out, req.Send()
}

// DescribeIpv6GatewaysWithContext is the same as DescribeIpv6Gateways with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeIpv6Gateways for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) DescribeIpv6GatewaysWithContext(ctx volcengine.Context, input *DescribeIpv6GatewaysInput, opts ...request.Option) (*DescribeIpv6GatewaysOutput, error) {
	req, out := c.DescribeIpv6GatewaysRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeIpv6GatewaysInput struct {
	_ struct{} `type:"structure"`

	Ipv6GatewayIds []*string `type:"list"`

	Name *string `type:"string"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `max:"100" type:"integer"`

	VpcIds []*string `type:"list"`
}

// String returns the string representation
func (s DescribeIpv6GatewaysInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeIpv6GatewaysInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeIpv6GatewaysInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeIpv6GatewaysInput"}
	if s.PageSize != nil && *s.PageSize > 100 {
		invalidParams.Add(request.NewErrParamMaxValue("PageSize", 100))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetIpv6GatewayIds sets the Ipv6GatewayIds field's value.
func (s *DescribeIpv6GatewaysInput) SetIpv6GatewayIds(v []*string) *DescribeIpv6GatewaysInput {
	s.Ipv6GatewayIds = v
	return s
}

// SetName sets the Name field's value.
func (s *DescribeIpv6GatewaysInput) SetName(v string) *DescribeIpv6GatewaysInput {
	s.Name = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeIpv6GatewaysInput) SetPageNumber(v int64) *DescribeIpv6GatewaysInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeIpv6GatewaysInput) SetPageSize(v int64) *DescribeIpv6GatewaysInput {
	s.PageSize = &v
	return s
}

// SetVpcIds sets the VpcIds field's value.
func (s *DescribeIpv6GatewaysInput) SetVpcIds(v []*string) *DescribeIpv6GatewaysInput {
	s.VpcIds = v
	return s
}

type DescribeIpv6GatewaysOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Ipv6Gateways []*Ipv6GatewayForDescribeIpv6GatewaysOutput `type:"list"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RequestId *string `type:"string"`

	TotalCount *int64 `type:"integer"`
}

// String returns the string representation
func (s DescribeIpv6GatewaysOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeIpv6GatewaysOutput) GoString() string {
	return s.String()
}

// SetIpv6Gateways sets the Ipv6Gateways field's value.
func (s *DescribeIpv6GatewaysOutput) SetIpv6Gateways(v []*Ipv6GatewayForDescribeIpv6GatewaysOutput) *DescribeIpv6GatewaysOutput {
	s.Ipv6Gateways = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeIpv6GatewaysOutput) SetPageNumber(v int64) *DescribeIpv6GatewaysOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeIpv6GatewaysOutput) SetPageSize(v int64) *DescribeIpv6GatewaysOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeIpv6GatewaysOutput) SetRequestId(v string) *DescribeIpv6GatewaysOutput {
	s.RequestId = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeIpv6GatewaysOutput) SetTotalCount(v int64) *DescribeIpv6GatewaysOutput {
	s.TotalCount = &v
	return s
}

type Ipv6GatewayForDescribeIpv6GatewaysOutput struct {
	_ struct{} `type:"structure"`

	CreationTime *string `type:"string"`

	Description *string `type:"string"`

	Ipv6GatewayId *string `type:"string"`

	Name *string `type:"string"`

	Status *string `type:"string"`

	UpdateTime *string `type:"string"`

	VpcId *string `type:"string"`
}

// String returns the string representation
func (s Ipv6GatewayForDescribeIpv6GatewaysOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Ipv6GatewayForDescribeIpv6GatewaysOutput) GoString() string {
	return s.String()
}

// SetCreationTime sets the CreationTime field's value.
func (s *Ipv6GatewayForDescribeIpv6GatewaysOutput) SetCreationTime(v string) *Ipv6GatewayForDescribeIpv6GatewaysOutput {
	s.CreationTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *Ipv6GatewayForDescribeIpv6GatewaysOutput) SetDescription(v string) *Ipv6GatewayForDescribeIpv6GatewaysOutput {
	s.Description = &v
	return s
}

// SetIpv6GatewayId sets the Ipv6GatewayId field's value.
func (s *Ipv6GatewayForDescribeIpv6GatewaysOutput) SetIpv6GatewayId(v string) *Ipv6GatewayForDescribeIpv6GatewaysOutput {
	s.Ipv6GatewayId = &v
	return s
}

// SetName sets the Name field's value.
func (s *Ipv6GatewayForDescribeIpv6GatewaysOutput) SetName(v string) *Ipv6GatewayForDescribeIpv6GatewaysOutput {
	s.Name = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *Ipv6GatewayForDescribeIpv6GatewaysOutput) SetStatus(v string) *Ipv6GatewayForDescribeIpv6GatewaysOutput {
	s.Status = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *Ipv6GatewayForDescribeIpv6GatewaysOutput) SetUpdateTime(v string) *Ipv6GatewayForDescribeIpv6GatewaysOutput {
	s.UpdateTime = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *Ipv6GatewayForDescribeIpv6GatewaysOutput) SetVpcId(v string) *Ipv6GatewayForDescribeIpv6GatewaysOutput {
	s.VpcId = &v
	return s
}
