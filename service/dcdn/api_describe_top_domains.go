// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package dcdn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeTopDomainsCommon = "DescribeTopDomains"

// DescribeTopDomainsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeTopDomainsCommon operation. The "output" return
// value will be populated with the DescribeTopDomainsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTopDomainsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTopDomainsCommon Send returns without error.
//
// See DescribeTopDomainsCommon for more information on using the DescribeTopDomainsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeTopDomainsCommonRequest method.
//    req, resp := client.DescribeTopDomainsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DCDN) DescribeTopDomainsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeTopDomainsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeTopDomainsCommon API operation for DCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DCDN's
// API operation DescribeTopDomainsCommon for usage and error information.
func (c *DCDN) DescribeTopDomainsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeTopDomainsCommonRequest(input)
	return out, req.Send()
}

// DescribeTopDomainsCommonWithContext is the same as DescribeTopDomainsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTopDomainsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DCDN) DescribeTopDomainsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeTopDomainsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeTopDomains = "DescribeTopDomains"

// DescribeTopDomainsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeTopDomains operation. The "output" return
// value will be populated with the DescribeTopDomainsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTopDomainsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTopDomainsCommon Send returns without error.
//
// See DescribeTopDomains for more information on using the DescribeTopDomains
// API call, and error handling.
//
//    // Example sending a request using the DescribeTopDomainsRequest method.
//    req, resp := client.DescribeTopDomainsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DCDN) DescribeTopDomainsRequest(input *DescribeTopDomainsInput) (req *request.Request, output *DescribeTopDomainsOutput) {
	op := &request.Operation{
		Name:       opDescribeTopDomains,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeTopDomainsInput{}
	}

	output = &DescribeTopDomainsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeTopDomains API operation for DCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DCDN's
// API operation DescribeTopDomains for usage and error information.
func (c *DCDN) DescribeTopDomains(input *DescribeTopDomainsInput) (*DescribeTopDomainsOutput, error) {
	req, out := c.DescribeTopDomainsRequest(input)
	return out, req.Send()
}

// DescribeTopDomainsWithContext is the same as DescribeTopDomains with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTopDomains for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DCDN) DescribeTopDomainsWithContext(ctx volcengine.Context, input *DescribeTopDomainsInput, opts ...request.Option) (*DescribeTopDomainsOutput, error) {
	req, out := c.DescribeTopDomainsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeTopDomainsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AcceleratingRegion *string `type:"string" json:",omitempty"`

	Area *string `type:"string" json:",omitempty"`

	Domains []*string `type:"list" json:",omitempty"`

	// EndTime is a required field
	EndTime *string `type:"string" json:",omitempty" required:"true"`

	IPVersion *string `type:"string" json:",omitempty"`

	IspNameEn []*string `type:"list" json:",omitempty"`

	Limit *int32 `type:"int32" json:",omitempty"`

	ProjectName []*string `type:"list" json:",omitempty"`

	Protocol []*string `type:"list" json:",omitempty"`

	Region []*string `type:"list" json:",omitempty"`

	// Sort is a required field
	Sort *string `type:"string" json:",omitempty" required:"true"`

	// StartTime is a required field
	StartTime *string `type:"string" json:",omitempty" required:"true"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeTopDomainsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTopDomainsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeTopDomainsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeTopDomainsInput"}
	if s.EndTime == nil {
		invalidParams.Add(request.NewErrParamRequired("EndTime"))
	}
	if s.Sort == nil {
		invalidParams.Add(request.NewErrParamRequired("Sort"))
	}
	if s.StartTime == nil {
		invalidParams.Add(request.NewErrParamRequired("StartTime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAcceleratingRegion sets the AcceleratingRegion field's value.
func (s *DescribeTopDomainsInput) SetAcceleratingRegion(v string) *DescribeTopDomainsInput {
	s.AcceleratingRegion = &v
	return s
}

// SetArea sets the Area field's value.
func (s *DescribeTopDomainsInput) SetArea(v string) *DescribeTopDomainsInput {
	s.Area = &v
	return s
}

// SetDomains sets the Domains field's value.
func (s *DescribeTopDomainsInput) SetDomains(v []*string) *DescribeTopDomainsInput {
	s.Domains = v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DescribeTopDomainsInput) SetEndTime(v string) *DescribeTopDomainsInput {
	s.EndTime = &v
	return s
}

// SetIPVersion sets the IPVersion field's value.
func (s *DescribeTopDomainsInput) SetIPVersion(v string) *DescribeTopDomainsInput {
	s.IPVersion = &v
	return s
}

// SetIspNameEn sets the IspNameEn field's value.
func (s *DescribeTopDomainsInput) SetIspNameEn(v []*string) *DescribeTopDomainsInput {
	s.IspNameEn = v
	return s
}

// SetLimit sets the Limit field's value.
func (s *DescribeTopDomainsInput) SetLimit(v int32) *DescribeTopDomainsInput {
	s.Limit = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeTopDomainsInput) SetProjectName(v []*string) *DescribeTopDomainsInput {
	s.ProjectName = v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *DescribeTopDomainsInput) SetProtocol(v []*string) *DescribeTopDomainsInput {
	s.Protocol = v
	return s
}

// SetRegion sets the Region field's value.
func (s *DescribeTopDomainsInput) SetRegion(v []*string) *DescribeTopDomainsInput {
	s.Region = v
	return s
}

// SetSort sets the Sort field's value.
func (s *DescribeTopDomainsInput) SetSort(v string) *DescribeTopDomainsInput {
	s.Sort = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DescribeTopDomainsInput) SetStartTime(v string) *DescribeTopDomainsInput {
	s.StartTime = &v
	return s
}

// SetType sets the Type field's value.
func (s *DescribeTopDomainsInput) SetType(v string) *DescribeTopDomainsInput {
	s.Type = &v
	return s
}

type DescribeTopDomainsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	DomainCount *int32 `type:"int32" json:",omitempty"`

	EndTime *string `type:"string" json:",omitempty"`

	StartTime *string `type:"string" json:",omitempty"`

	TopDomains []*TopDomainForDescribeTopDomainsOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeTopDomainsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTopDomainsOutput) GoString() string {
	return s.String()
}

// SetDomainCount sets the DomainCount field's value.
func (s *DescribeTopDomainsOutput) SetDomainCount(v int32) *DescribeTopDomainsOutput {
	s.DomainCount = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DescribeTopDomainsOutput) SetEndTime(v string) *DescribeTopDomainsOutput {
	s.EndTime = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DescribeTopDomainsOutput) SetStartTime(v string) *DescribeTopDomainsOutput {
	s.StartTime = &v
	return s
}

// SetTopDomains sets the TopDomains field's value.
func (s *DescribeTopDomainsOutput) SetTopDomains(v []*TopDomainForDescribeTopDomainsOutput) *DescribeTopDomainsOutput {
	s.TopDomains = v
	return s
}

type TopDomainForDescribeTopDomainsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Bandwidth *float64 `type:"float" json:",omitempty"`

	DomainName *string `type:"string" json:",omitempty"`

	QPS *float64 `type:"float" json:",omitempty"`

	Rank *float64 `type:"float" json:",omitempty"`

	Request *float64 `type:"float" json:",omitempty"`

	StatusCode2xx *float64 `type:"float" json:",omitempty"`

	StatusCode2xxRadio *float64 `type:"float" json:",omitempty"`

	StatusCode2xxRatio *float64 `type:"float" json:",omitempty"`

	StatusCode3xx *float64 `type:"float" json:",omitempty"`

	StatusCode3xxRadio *float64 `type:"float" json:",omitempty"`

	StatusCode3xxRatio *float64 `type:"float" json:",omitempty"`

	StatusCode4xx *float64 `type:"float" json:",omitempty"`

	StatusCode4xxRadio *float64 `type:"float" json:",omitempty"`

	StatusCode4xxRatio *float64 `type:"float" json:",omitempty"`

	StatusCode5xx *float64 `type:"float" json:",omitempty"`

	StatusCode5xxRadio *float64 `type:"float" json:",omitempty"`

	StatusCode5xxRatio *float64 `type:"float" json:",omitempty"`

	Traffic *float64 `type:"float" json:",omitempty"`
}

// String returns the string representation
func (s TopDomainForDescribeTopDomainsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TopDomainForDescribeTopDomainsOutput) GoString() string {
	return s.String()
}

// SetBandwidth sets the Bandwidth field's value.
func (s *TopDomainForDescribeTopDomainsOutput) SetBandwidth(v float64) *TopDomainForDescribeTopDomainsOutput {
	s.Bandwidth = &v
	return s
}

// SetDomainName sets the DomainName field's value.
func (s *TopDomainForDescribeTopDomainsOutput) SetDomainName(v string) *TopDomainForDescribeTopDomainsOutput {
	s.DomainName = &v
	return s
}

// SetQPS sets the QPS field's value.
func (s *TopDomainForDescribeTopDomainsOutput) SetQPS(v float64) *TopDomainForDescribeTopDomainsOutput {
	s.QPS = &v
	return s
}

// SetRank sets the Rank field's value.
func (s *TopDomainForDescribeTopDomainsOutput) SetRank(v float64) *TopDomainForDescribeTopDomainsOutput {
	s.Rank = &v
	return s
}

// SetRequest sets the Request field's value.
func (s *TopDomainForDescribeTopDomainsOutput) SetRequest(v float64) *TopDomainForDescribeTopDomainsOutput {
	s.Request = &v
	return s
}

// SetStatusCode2xx sets the StatusCode2xx field's value.
func (s *TopDomainForDescribeTopDomainsOutput) SetStatusCode2xx(v float64) *TopDomainForDescribeTopDomainsOutput {
	s.StatusCode2xx = &v
	return s
}

// SetStatusCode2xxRadio sets the StatusCode2xxRadio field's value.
func (s *TopDomainForDescribeTopDomainsOutput) SetStatusCode2xxRadio(v float64) *TopDomainForDescribeTopDomainsOutput {
	s.StatusCode2xxRadio = &v
	return s
}

// SetStatusCode2xxRatio sets the StatusCode2xxRatio field's value.
func (s *TopDomainForDescribeTopDomainsOutput) SetStatusCode2xxRatio(v float64) *TopDomainForDescribeTopDomainsOutput {
	s.StatusCode2xxRatio = &v
	return s
}

// SetStatusCode3xx sets the StatusCode3xx field's value.
func (s *TopDomainForDescribeTopDomainsOutput) SetStatusCode3xx(v float64) *TopDomainForDescribeTopDomainsOutput {
	s.StatusCode3xx = &v
	return s
}

// SetStatusCode3xxRadio sets the StatusCode3xxRadio field's value.
func (s *TopDomainForDescribeTopDomainsOutput) SetStatusCode3xxRadio(v float64) *TopDomainForDescribeTopDomainsOutput {
	s.StatusCode3xxRadio = &v
	return s
}

// SetStatusCode3xxRatio sets the StatusCode3xxRatio field's value.
func (s *TopDomainForDescribeTopDomainsOutput) SetStatusCode3xxRatio(v float64) *TopDomainForDescribeTopDomainsOutput {
	s.StatusCode3xxRatio = &v
	return s
}

// SetStatusCode4xx sets the StatusCode4xx field's value.
func (s *TopDomainForDescribeTopDomainsOutput) SetStatusCode4xx(v float64) *TopDomainForDescribeTopDomainsOutput {
	s.StatusCode4xx = &v
	return s
}

// SetStatusCode4xxRadio sets the StatusCode4xxRadio field's value.
func (s *TopDomainForDescribeTopDomainsOutput) SetStatusCode4xxRadio(v float64) *TopDomainForDescribeTopDomainsOutput {
	s.StatusCode4xxRadio = &v
	return s
}

// SetStatusCode4xxRatio sets the StatusCode4xxRatio field's value.
func (s *TopDomainForDescribeTopDomainsOutput) SetStatusCode4xxRatio(v float64) *TopDomainForDescribeTopDomainsOutput {
	s.StatusCode4xxRatio = &v
	return s
}

// SetStatusCode5xx sets the StatusCode5xx field's value.
func (s *TopDomainForDescribeTopDomainsOutput) SetStatusCode5xx(v float64) *TopDomainForDescribeTopDomainsOutput {
	s.StatusCode5xx = &v
	return s
}

// SetStatusCode5xxRadio sets the StatusCode5xxRadio field's value.
func (s *TopDomainForDescribeTopDomainsOutput) SetStatusCode5xxRadio(v float64) *TopDomainForDescribeTopDomainsOutput {
	s.StatusCode5xxRadio = &v
	return s
}

// SetStatusCode5xxRatio sets the StatusCode5xxRatio field's value.
func (s *TopDomainForDescribeTopDomainsOutput) SetStatusCode5xxRatio(v float64) *TopDomainForDescribeTopDomainsOutput {
	s.StatusCode5xxRatio = &v
	return s
}

// SetTraffic sets the Traffic field's value.
func (s *TopDomainForDescribeTopDomainsOutput) SetTraffic(v float64) *TopDomainForDescribeTopDomainsOutput {
	s.Traffic = &v
	return s
}
