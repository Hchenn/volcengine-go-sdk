// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package dcdn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeStatisticsDetailCommon = "DescribeStatisticsDetail"

// DescribeStatisticsDetailCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeStatisticsDetailCommon operation. The "output" return
// value will be populated with the DescribeStatisticsDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeStatisticsDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeStatisticsDetailCommon Send returns without error.
//
// See DescribeStatisticsDetailCommon for more information on using the DescribeStatisticsDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeStatisticsDetailCommonRequest method.
//    req, resp := client.DescribeStatisticsDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DCDN) DescribeStatisticsDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeStatisticsDetailCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeStatisticsDetailCommon API operation for DCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DCDN's
// API operation DescribeStatisticsDetailCommon for usage and error information.
func (c *DCDN) DescribeStatisticsDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeStatisticsDetailCommonRequest(input)
	return out, req.Send()
}

// DescribeStatisticsDetailCommonWithContext is the same as DescribeStatisticsDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeStatisticsDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DCDN) DescribeStatisticsDetailCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeStatisticsDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeStatisticsDetail = "DescribeStatisticsDetail"

// DescribeStatisticsDetailRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeStatisticsDetail operation. The "output" return
// value will be populated with the DescribeStatisticsDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeStatisticsDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeStatisticsDetailCommon Send returns without error.
//
// See DescribeStatisticsDetail for more information on using the DescribeStatisticsDetail
// API call, and error handling.
//
//    // Example sending a request using the DescribeStatisticsDetailRequest method.
//    req, resp := client.DescribeStatisticsDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DCDN) DescribeStatisticsDetailRequest(input *DescribeStatisticsDetailInput) (req *request.Request, output *DescribeStatisticsDetailOutput) {
	op := &request.Operation{
		Name:       opDescribeStatisticsDetail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeStatisticsDetailInput{}
	}

	output = &DescribeStatisticsDetailOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeStatisticsDetail API operation for DCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DCDN's
// API operation DescribeStatisticsDetail for usage and error information.
func (c *DCDN) DescribeStatisticsDetail(input *DescribeStatisticsDetailInput) (*DescribeStatisticsDetailOutput, error) {
	req, out := c.DescribeStatisticsDetailRequest(input)
	return out, req.Send()
}

// DescribeStatisticsDetailWithContext is the same as DescribeStatisticsDetail with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeStatisticsDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DCDN) DescribeStatisticsDetailWithContext(ctx volcengine.Context, input *DescribeStatisticsDetailInput, opts ...request.Option) (*DescribeStatisticsDetailOutput, error) {
	req, out := c.DescribeStatisticsDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeStatisticsDetailInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AcceleratingRegion *string `type:"string" json:",omitempty"`

	AcceleratingScope *string `type:"string" json:",omitempty"`

	Area *string `type:"string" json:",omitempty"`

	Domains []*string `type:"list" json:",omitempty"`

	// EndTime is a required field
	EndTime *string `type:"string" json:",omitempty" required:"true"`

	IPVersion *string `type:"string" json:",omitempty"`

	Interval *int32 `type:"int32" json:",omitempty"`

	IspNameEn []*string `type:"list" json:",omitempty"`

	Metrics []*string `type:"list" json:",omitempty"`

	ProjectName []*string `type:"list" json:",omitempty"`

	Protocol []*string `type:"list" json:",omitempty"`

	Region []*string `type:"list" json:",omitempty"`

	// StartTime is a required field
	StartTime *string `type:"string" json:",omitempty" required:"true"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeStatisticsDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeStatisticsDetailInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeStatisticsDetailInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeStatisticsDetailInput"}
	if s.EndTime == nil {
		invalidParams.Add(request.NewErrParamRequired("EndTime"))
	}
	if s.StartTime == nil {
		invalidParams.Add(request.NewErrParamRequired("StartTime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAcceleratingRegion sets the AcceleratingRegion field's value.
func (s *DescribeStatisticsDetailInput) SetAcceleratingRegion(v string) *DescribeStatisticsDetailInput {
	s.AcceleratingRegion = &v
	return s
}

// SetAcceleratingScope sets the AcceleratingScope field's value.
func (s *DescribeStatisticsDetailInput) SetAcceleratingScope(v string) *DescribeStatisticsDetailInput {
	s.AcceleratingScope = &v
	return s
}

// SetArea sets the Area field's value.
func (s *DescribeStatisticsDetailInput) SetArea(v string) *DescribeStatisticsDetailInput {
	s.Area = &v
	return s
}

// SetDomains sets the Domains field's value.
func (s *DescribeStatisticsDetailInput) SetDomains(v []*string) *DescribeStatisticsDetailInput {
	s.Domains = v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DescribeStatisticsDetailInput) SetEndTime(v string) *DescribeStatisticsDetailInput {
	s.EndTime = &v
	return s
}

// SetIPVersion sets the IPVersion field's value.
func (s *DescribeStatisticsDetailInput) SetIPVersion(v string) *DescribeStatisticsDetailInput {
	s.IPVersion = &v
	return s
}

// SetInterval sets the Interval field's value.
func (s *DescribeStatisticsDetailInput) SetInterval(v int32) *DescribeStatisticsDetailInput {
	s.Interval = &v
	return s
}

// SetIspNameEn sets the IspNameEn field's value.
func (s *DescribeStatisticsDetailInput) SetIspNameEn(v []*string) *DescribeStatisticsDetailInput {
	s.IspNameEn = v
	return s
}

// SetMetrics sets the Metrics field's value.
func (s *DescribeStatisticsDetailInput) SetMetrics(v []*string) *DescribeStatisticsDetailInput {
	s.Metrics = v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeStatisticsDetailInput) SetProjectName(v []*string) *DescribeStatisticsDetailInput {
	s.ProjectName = v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *DescribeStatisticsDetailInput) SetProtocol(v []*string) *DescribeStatisticsDetailInput {
	s.Protocol = v
	return s
}

// SetRegion sets the Region field's value.
func (s *DescribeStatisticsDetailInput) SetRegion(v []*string) *DescribeStatisticsDetailInput {
	s.Region = v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DescribeStatisticsDetailInput) SetStartTime(v string) *DescribeStatisticsDetailInput {
	s.StartTime = &v
	return s
}

// SetType sets the Type field's value.
func (s *DescribeStatisticsDetailInput) SetType(v string) *DescribeStatisticsDetailInput {
	s.Type = &v
	return s
}

type DescribeStatisticsDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	DomainCount *int32 `type:"int32" json:",omitempty"`

	EndTime *string `type:"string" json:",omitempty"`

	Metrics []*string `type:"list" json:",omitempty"`

	Results []*ResultForDescribeStatisticsDetailOutput `type:"list" json:",omitempty"`

	StartTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeStatisticsDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeStatisticsDetailOutput) GoString() string {
	return s.String()
}

// SetDomainCount sets the DomainCount field's value.
func (s *DescribeStatisticsDetailOutput) SetDomainCount(v int32) *DescribeStatisticsDetailOutput {
	s.DomainCount = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DescribeStatisticsDetailOutput) SetEndTime(v string) *DescribeStatisticsDetailOutput {
	s.EndTime = &v
	return s
}

// SetMetrics sets the Metrics field's value.
func (s *DescribeStatisticsDetailOutput) SetMetrics(v []*string) *DescribeStatisticsDetailOutput {
	s.Metrics = v
	return s
}

// SetResults sets the Results field's value.
func (s *DescribeStatisticsDetailOutput) SetResults(v []*ResultForDescribeStatisticsDetailOutput) *DescribeStatisticsDetailOutput {
	s.Results = v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DescribeStatisticsDetailOutput) SetStartTime(v string) *DescribeStatisticsDetailOutput {
	s.StartTime = &v
	return s
}

type DetailInfoForDescribeStatisticsDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Value *float64 `type:"float" json:",omitempty"`
}

// String returns the string representation
func (s DetailInfoForDescribeStatisticsDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DetailInfoForDescribeStatisticsDetailOutput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *DetailInfoForDescribeStatisticsDetailOutput) SetName(v string) *DetailInfoForDescribeStatisticsDetailOutput {
	s.Name = &v
	return s
}

// SetValue sets the Value field's value.
func (s *DetailInfoForDescribeStatisticsDetailOutput) SetValue(v float64) *DetailInfoForDescribeStatisticsDetailOutput {
	s.Value = &v
	return s
}

type RealTimeResultForDescribeStatisticsDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DetailInfo []*DetailInfoForDescribeStatisticsDetailOutput `type:"list" json:",omitempty"`

	DomainName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RealTimeResultForDescribeStatisticsDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RealTimeResultForDescribeStatisticsDetailOutput) GoString() string {
	return s.String()
}

// SetDetailInfo sets the DetailInfo field's value.
func (s *RealTimeResultForDescribeStatisticsDetailOutput) SetDetailInfo(v []*DetailInfoForDescribeStatisticsDetailOutput) *RealTimeResultForDescribeStatisticsDetailOutput {
	s.DetailInfo = v
	return s
}

// SetDomainName sets the DomainName field's value.
func (s *RealTimeResultForDescribeStatisticsDetailOutput) SetDomainName(v string) *RealTimeResultForDescribeStatisticsDetailOutput {
	s.DomainName = &v
	return s
}

type ResultForDescribeStatisticsDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	RealTimeResults []*RealTimeResultForDescribeStatisticsDetailOutput `type:"list" json:",omitempty"`

	TimeStamp *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ResultForDescribeStatisticsDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResultForDescribeStatisticsDetailOutput) GoString() string {
	return s.String()
}

// SetRealTimeResults sets the RealTimeResults field's value.
func (s *ResultForDescribeStatisticsDetailOutput) SetRealTimeResults(v []*RealTimeResultForDescribeStatisticsDetailOutput) *ResultForDescribeStatisticsDetailOutput {
	s.RealTimeResults = v
	return s
}

// SetTimeStamp sets the TimeStamp field's value.
func (s *ResultForDescribeStatisticsDetailOutput) SetTimeStamp(v string) *ResultForDescribeStatisticsDetailOutput {
	s.TimeStamp = &v
	return s
}
