// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package dcdn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDomainLogsCommon = "DescribeDomainLogs"

// DescribeDomainLogsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDomainLogsCommon operation. The "output" return
// value will be populated with the DescribeDomainLogsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDomainLogsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDomainLogsCommon Send returns without error.
//
// See DescribeDomainLogsCommon for more information on using the DescribeDomainLogsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDomainLogsCommonRequest method.
//    req, resp := client.DescribeDomainLogsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DCDN) DescribeDomainLogsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDomainLogsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDomainLogsCommon API operation for DCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DCDN's
// API operation DescribeDomainLogsCommon for usage and error information.
func (c *DCDN) DescribeDomainLogsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDomainLogsCommonRequest(input)
	return out, req.Send()
}

// DescribeDomainLogsCommonWithContext is the same as DescribeDomainLogsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDomainLogsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DCDN) DescribeDomainLogsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDomainLogsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDomainLogs = "DescribeDomainLogs"

// DescribeDomainLogsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDomainLogs operation. The "output" return
// value will be populated with the DescribeDomainLogsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDomainLogsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDomainLogsCommon Send returns without error.
//
// See DescribeDomainLogs for more information on using the DescribeDomainLogs
// API call, and error handling.
//
//    // Example sending a request using the DescribeDomainLogsRequest method.
//    req, resp := client.DescribeDomainLogsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DCDN) DescribeDomainLogsRequest(input *DescribeDomainLogsInput) (req *request.Request, output *DescribeDomainLogsOutput) {
	op := &request.Operation{
		Name:       opDescribeDomainLogs,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDomainLogsInput{}
	}

	output = &DescribeDomainLogsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDomainLogs API operation for DCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DCDN's
// API operation DescribeDomainLogs for usage and error information.
func (c *DCDN) DescribeDomainLogs(input *DescribeDomainLogsInput) (*DescribeDomainLogsOutput, error) {
	req, out := c.DescribeDomainLogsRequest(input)
	return out, req.Send()
}

// DescribeDomainLogsWithContext is the same as DescribeDomainLogs with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDomainLogs for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DCDN) DescribeDomainLogsWithContext(ctx volcengine.Context, input *DescribeDomainLogsInput, opts ...request.Option) (*DescribeDomainLogsOutput, error) {
	req, out := c.DescribeDomainLogsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeDomainLogsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Domain is a required field
	Domain *string `type:"string" json:",omitempty" required:"true"`

	// EndTime is a required field
	EndTime *string `type:"string" json:",omitempty" required:"true"`

	PageNum *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	ProjectName []*string `type:"list" json:",omitempty"`

	// StartTime is a required field
	StartTime *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeDomainLogsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDomainLogsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDomainLogsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDomainLogsInput"}
	if s.Domain == nil {
		invalidParams.Add(request.NewErrParamRequired("Domain"))
	}
	if s.EndTime == nil {
		invalidParams.Add(request.NewErrParamRequired("EndTime"))
	}
	if s.StartTime == nil {
		invalidParams.Add(request.NewErrParamRequired("StartTime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDomain sets the Domain field's value.
func (s *DescribeDomainLogsInput) SetDomain(v string) *DescribeDomainLogsInput {
	s.Domain = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DescribeDomainLogsInput) SetEndTime(v string) *DescribeDomainLogsInput {
	s.EndTime = &v
	return s
}

// SetPageNum sets the PageNum field's value.
func (s *DescribeDomainLogsInput) SetPageNum(v int32) *DescribeDomainLogsInput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeDomainLogsInput) SetPageSize(v int32) *DescribeDomainLogsInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeDomainLogsInput) SetProjectName(v []*string) *DescribeDomainLogsInput {
	s.ProjectName = v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DescribeDomainLogsInput) SetStartTime(v string) *DescribeDomainLogsInput {
	s.StartTime = &v
	return s
}

type DescribeDomainLogsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	FileLists []*FileListForDescribeDomainLogsOutput `type:"list" json:",omitempty"`

	FilesCount *int32 `type:"int32" json:",omitempty"`

	PageNum *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDomainLogsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDomainLogsOutput) GoString() string {
	return s.String()
}

// SetFileLists sets the FileLists field's value.
func (s *DescribeDomainLogsOutput) SetFileLists(v []*FileListForDescribeDomainLogsOutput) *DescribeDomainLogsOutput {
	s.FileLists = v
	return s
}

// SetFilesCount sets the FilesCount field's value.
func (s *DescribeDomainLogsOutput) SetFilesCount(v int32) *DescribeDomainLogsOutput {
	s.FilesCount = &v
	return s
}

// SetPageNum sets the PageNum field's value.
func (s *DescribeDomainLogsOutput) SetPageNum(v int32) *DescribeDomainLogsOutput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeDomainLogsOutput) SetPageSize(v int32) *DescribeDomainLogsOutput {
	s.PageSize = &v
	return s
}

type FileListForDescribeDomainLogsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DomainName *string `type:"string" json:",omitempty"`

	EndTime *string `type:"string" json:",omitempty"`

	FileName *string `type:"string" json:",omitempty"`

	FilePath *string `type:"string" json:",omitempty"`

	FileSize *int32 `type:"int32" json:",omitempty"`

	StartTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FileListForDescribeDomainLogsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FileListForDescribeDomainLogsOutput) GoString() string {
	return s.String()
}

// SetDomainName sets the DomainName field's value.
func (s *FileListForDescribeDomainLogsOutput) SetDomainName(v string) *FileListForDescribeDomainLogsOutput {
	s.DomainName = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *FileListForDescribeDomainLogsOutput) SetEndTime(v string) *FileListForDescribeDomainLogsOutput {
	s.EndTime = &v
	return s
}

// SetFileName sets the FileName field's value.
func (s *FileListForDescribeDomainLogsOutput) SetFileName(v string) *FileListForDescribeDomainLogsOutput {
	s.FileName = &v
	return s
}

// SetFilePath sets the FilePath field's value.
func (s *FileListForDescribeDomainLogsOutput) SetFilePath(v string) *FileListForDescribeDomainLogsOutput {
	s.FilePath = &v
	return s
}

// SetFileSize sets the FileSize field's value.
func (s *FileListForDescribeDomainLogsOutput) SetFileSize(v int32) *FileListForDescribeDomainLogsOutput {
	s.FileSize = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *FileListForDescribeDomainLogsOutput) SetStartTime(v string) *FileListForDescribeDomainLogsOutput {
	s.StartTime = &v
	return s
}
