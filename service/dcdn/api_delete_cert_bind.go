// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package dcdn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteCertBindCommon = "DeleteCertBind"

// DeleteCertBindCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteCertBindCommon operation. The "output" return
// value will be populated with the DeleteCertBindCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteCertBindCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteCertBindCommon Send returns without error.
//
// See DeleteCertBindCommon for more information on using the DeleteCertBindCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteCertBindCommonRequest method.
//    req, resp := client.DeleteCertBindCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DCDN) DeleteCertBindCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteCertBindCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteCertBindCommon API operation for DCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DCDN's
// API operation DeleteCertBindCommon for usage and error information.
func (c *DCDN) DeleteCertBindCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteCertBindCommonRequest(input)
	return out, req.Send()
}

// DeleteCertBindCommonWithContext is the same as DeleteCertBindCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteCertBindCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DCDN) DeleteCertBindCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteCertBindCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteCertBind = "DeleteCertBind"

// DeleteCertBindRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteCertBind operation. The "output" return
// value will be populated with the DeleteCertBindCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteCertBindCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteCertBindCommon Send returns without error.
//
// See DeleteCertBind for more information on using the DeleteCertBind
// API call, and error handling.
//
//    // Example sending a request using the DeleteCertBindRequest method.
//    req, resp := client.DeleteCertBindRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DCDN) DeleteCertBindRequest(input *DeleteCertBindInput) (req *request.Request, output *DeleteCertBindOutput) {
	op := &request.Operation{
		Name:       opDeleteCertBind,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteCertBindInput{}
	}

	output = &DeleteCertBindOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteCertBind API operation for DCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DCDN's
// API operation DeleteCertBind for usage and error information.
func (c *DCDN) DeleteCertBind(input *DeleteCertBindInput) (*DeleteCertBindOutput, error) {
	req, out := c.DeleteCertBindRequest(input)
	return out, req.Send()
}

// DeleteCertBindWithContext is the same as DeleteCertBind with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteCertBind for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DCDN) DeleteCertBindWithContext(ctx volcengine.Context, input *DeleteCertBindInput, opts ...request.Option) (*DeleteCertBindOutput, error) {
	req, out := c.DeleteCertBindRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteCertBindInput struct {
	_ struct{} `type:"structure"`

	DomainIds []*string `type:"list"`

	DomainNames []*string `type:"list"`
}

// String returns the string representation
func (s DeleteCertBindInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteCertBindInput) GoString() string {
	return s.String()
}

// SetDomainIds sets the DomainIds field's value.
func (s *DeleteCertBindInput) SetDomainIds(v []*string) *DeleteCertBindInput {
	s.DomainIds = v
	return s
}

// SetDomainNames sets the DomainNames field's value.
func (s *DeleteCertBindInput) SetDomainNames(v []*string) *DeleteCertBindInput {
	s.DomainNames = v
	return s
}

type DeleteCertBindOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteCertBindOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteCertBindOutput) GoString() string {
	return s.String()
}
