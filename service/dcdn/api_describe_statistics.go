// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package dcdn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeStatisticsCommon = "DescribeStatistics"

// DescribeStatisticsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeStatisticsCommon operation. The "output" return
// value will be populated with the DescribeStatisticsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeStatisticsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeStatisticsCommon Send returns without error.
//
// See DescribeStatisticsCommon for more information on using the DescribeStatisticsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeStatisticsCommonRequest method.
//    req, resp := client.DescribeStatisticsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DCDN) DescribeStatisticsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeStatisticsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeStatisticsCommon API operation for DCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DCDN's
// API operation DescribeStatisticsCommon for usage and error information.
func (c *DCDN) DescribeStatisticsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeStatisticsCommonRequest(input)
	return out, req.Send()
}

// DescribeStatisticsCommonWithContext is the same as DescribeStatisticsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeStatisticsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DCDN) DescribeStatisticsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeStatisticsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeStatistics = "DescribeStatistics"

// DescribeStatisticsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeStatistics operation. The "output" return
// value will be populated with the DescribeStatisticsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeStatisticsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeStatisticsCommon Send returns without error.
//
// See DescribeStatistics for more information on using the DescribeStatistics
// API call, and error handling.
//
//    // Example sending a request using the DescribeStatisticsRequest method.
//    req, resp := client.DescribeStatisticsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DCDN) DescribeStatisticsRequest(input *DescribeStatisticsInput) (req *request.Request, output *DescribeStatisticsOutput) {
	op := &request.Operation{
		Name:       opDescribeStatistics,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeStatisticsInput{}
	}

	output = &DescribeStatisticsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeStatistics API operation for DCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DCDN's
// API operation DescribeStatistics for usage and error information.
func (c *DCDN) DescribeStatistics(input *DescribeStatisticsInput) (*DescribeStatisticsOutput, error) {
	req, out := c.DescribeStatisticsRequest(input)
	return out, req.Send()
}

// DescribeStatisticsWithContext is the same as DescribeStatistics with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeStatistics for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DCDN) DescribeStatisticsWithContext(ctx volcengine.Context, input *DescribeStatisticsInput, opts ...request.Option) (*DescribeStatisticsOutput, error) {
	req, out := c.DescribeStatisticsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeStatisticsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AcceleratingRegion *string `type:"string" json:",omitempty"`

	AcceleratingScope *string `type:"string" json:",omitempty"`

	Area *string `type:"string" json:",omitempty"`

	Domains []*string `type:"list" json:",omitempty"`

	// EndTime is a required field
	EndTime *string `type:"string" json:",omitempty" required:"true"`

	IPVersion *string `type:"string" json:",omitempty"`

	Interval *int32 `type:"int32" json:",omitempty"`

	IspNameEn []*string `type:"list" json:",omitempty"`

	Metrics []*string `type:"list" json:",omitempty"`

	ProjectName []*string `type:"list" json:",omitempty"`

	Protocol []*string `type:"list" json:",omitempty"`

	Region []*string `type:"list" json:",omitempty"`

	// StartTime is a required field
	StartTime *string `type:"string" json:",omitempty" required:"true"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeStatisticsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeStatisticsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeStatisticsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeStatisticsInput"}
	if s.EndTime == nil {
		invalidParams.Add(request.NewErrParamRequired("EndTime"))
	}
	if s.StartTime == nil {
		invalidParams.Add(request.NewErrParamRequired("StartTime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAcceleratingRegion sets the AcceleratingRegion field's value.
func (s *DescribeStatisticsInput) SetAcceleratingRegion(v string) *DescribeStatisticsInput {
	s.AcceleratingRegion = &v
	return s
}

// SetAcceleratingScope sets the AcceleratingScope field's value.
func (s *DescribeStatisticsInput) SetAcceleratingScope(v string) *DescribeStatisticsInput {
	s.AcceleratingScope = &v
	return s
}

// SetArea sets the Area field's value.
func (s *DescribeStatisticsInput) SetArea(v string) *DescribeStatisticsInput {
	s.Area = &v
	return s
}

// SetDomains sets the Domains field's value.
func (s *DescribeStatisticsInput) SetDomains(v []*string) *DescribeStatisticsInput {
	s.Domains = v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DescribeStatisticsInput) SetEndTime(v string) *DescribeStatisticsInput {
	s.EndTime = &v
	return s
}

// SetIPVersion sets the IPVersion field's value.
func (s *DescribeStatisticsInput) SetIPVersion(v string) *DescribeStatisticsInput {
	s.IPVersion = &v
	return s
}

// SetInterval sets the Interval field's value.
func (s *DescribeStatisticsInput) SetInterval(v int32) *DescribeStatisticsInput {
	s.Interval = &v
	return s
}

// SetIspNameEn sets the IspNameEn field's value.
func (s *DescribeStatisticsInput) SetIspNameEn(v []*string) *DescribeStatisticsInput {
	s.IspNameEn = v
	return s
}

// SetMetrics sets the Metrics field's value.
func (s *DescribeStatisticsInput) SetMetrics(v []*string) *DescribeStatisticsInput {
	s.Metrics = v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeStatisticsInput) SetProjectName(v []*string) *DescribeStatisticsInput {
	s.ProjectName = v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *DescribeStatisticsInput) SetProtocol(v []*string) *DescribeStatisticsInput {
	s.Protocol = v
	return s
}

// SetRegion sets the Region field's value.
func (s *DescribeStatisticsInput) SetRegion(v []*string) *DescribeStatisticsInput {
	s.Region = v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DescribeStatisticsInput) SetStartTime(v string) *DescribeStatisticsInput {
	s.StartTime = &v
	return s
}

// SetType sets the Type field's value.
func (s *DescribeStatisticsInput) SetType(v string) *DescribeStatisticsInput {
	s.Type = &v
	return s
}

type DescribeStatisticsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	DomainCount *int32 `type:"int32" json:",omitempty"`

	EndTime *string `type:"string" json:",omitempty"`

	Metrics []*string `type:"list" json:",omitempty"`

	Results []*ResultForDescribeStatisticsOutput `type:"list" json:",omitempty"`

	StartTime *string `type:"string" json:",omitempty"`

	TotalStatistics *TotalStatisticsForDescribeStatisticsOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DescribeStatisticsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeStatisticsOutput) GoString() string {
	return s.String()
}

// SetDomainCount sets the DomainCount field's value.
func (s *DescribeStatisticsOutput) SetDomainCount(v int32) *DescribeStatisticsOutput {
	s.DomainCount = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DescribeStatisticsOutput) SetEndTime(v string) *DescribeStatisticsOutput {
	s.EndTime = &v
	return s
}

// SetMetrics sets the Metrics field's value.
func (s *DescribeStatisticsOutput) SetMetrics(v []*string) *DescribeStatisticsOutput {
	s.Metrics = v
	return s
}

// SetResults sets the Results field's value.
func (s *DescribeStatisticsOutput) SetResults(v []*ResultForDescribeStatisticsOutput) *DescribeStatisticsOutput {
	s.Results = v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DescribeStatisticsOutput) SetStartTime(v string) *DescribeStatisticsOutput {
	s.StartTime = &v
	return s
}

// SetTotalStatistics sets the TotalStatistics field's value.
func (s *DescribeStatisticsOutput) SetTotalStatistics(v *TotalStatisticsForDescribeStatisticsOutput) *DescribeStatisticsOutput {
	s.TotalStatistics = v
	return s
}

type DetailInfoForDescribeStatisticsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Value *float64 `type:"float" json:",omitempty"`
}

// String returns the string representation
func (s DetailInfoForDescribeStatisticsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DetailInfoForDescribeStatisticsOutput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *DetailInfoForDescribeStatisticsOutput) SetName(v string) *DetailInfoForDescribeStatisticsOutput {
	s.Name = &v
	return s
}

// SetValue sets the Value field's value.
func (s *DetailInfoForDescribeStatisticsOutput) SetValue(v float64) *DetailInfoForDescribeStatisticsOutput {
	s.Value = &v
	return s
}

type ResultForDescribeStatisticsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DetailInfo []*DetailInfoForDescribeStatisticsOutput `type:"list" json:",omitempty"`

	TimeStamp *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ResultForDescribeStatisticsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResultForDescribeStatisticsOutput) GoString() string {
	return s.String()
}

// SetDetailInfo sets the DetailInfo field's value.
func (s *ResultForDescribeStatisticsOutput) SetDetailInfo(v []*DetailInfoForDescribeStatisticsOutput) *ResultForDescribeStatisticsOutput {
	s.DetailInfo = v
	return s
}

// SetTimeStamp sets the TimeStamp field's value.
func (s *ResultForDescribeStatisticsOutput) SetTimeStamp(v string) *ResultForDescribeStatisticsOutput {
	s.TimeStamp = &v
	return s
}

type TotalStatisticsForDescribeStatisticsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Bandwidth *float64 `type:"float" json:",omitempty"`

	QPS *float64 `type:"float" json:",omitempty"`

	Request *float64 `type:"float" json:",omitempty"`

	RequestHitRate *float64 `type:"float" json:",omitempty"`

	ResponseTime *float64 `type:"float" json:",omitempty"`

	Traffic *float64 `type:"float" json:",omitempty"`

	TrafficHitRate *float64 `type:"float" json:",omitempty"`
}

// String returns the string representation
func (s TotalStatisticsForDescribeStatisticsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TotalStatisticsForDescribeStatisticsOutput) GoString() string {
	return s.String()
}

// SetBandwidth sets the Bandwidth field's value.
func (s *TotalStatisticsForDescribeStatisticsOutput) SetBandwidth(v float64) *TotalStatisticsForDescribeStatisticsOutput {
	s.Bandwidth = &v
	return s
}

// SetQPS sets the QPS field's value.
func (s *TotalStatisticsForDescribeStatisticsOutput) SetQPS(v float64) *TotalStatisticsForDescribeStatisticsOutput {
	s.QPS = &v
	return s
}

// SetRequest sets the Request field's value.
func (s *TotalStatisticsForDescribeStatisticsOutput) SetRequest(v float64) *TotalStatisticsForDescribeStatisticsOutput {
	s.Request = &v
	return s
}

// SetRequestHitRate sets the RequestHitRate field's value.
func (s *TotalStatisticsForDescribeStatisticsOutput) SetRequestHitRate(v float64) *TotalStatisticsForDescribeStatisticsOutput {
	s.RequestHitRate = &v
	return s
}

// SetResponseTime sets the ResponseTime field's value.
func (s *TotalStatisticsForDescribeStatisticsOutput) SetResponseTime(v float64) *TotalStatisticsForDescribeStatisticsOutput {
	s.ResponseTime = &v
	return s
}

// SetTraffic sets the Traffic field's value.
func (s *TotalStatisticsForDescribeStatisticsOutput) SetTraffic(v float64) *TotalStatisticsForDescribeStatisticsOutput {
	s.Traffic = &v
	return s
}

// SetTrafficHitRate sets the TrafficHitRate field's value.
func (s *TotalStatisticsForDescribeStatisticsOutput) SetTrafficHitRate(v float64) *TotalStatisticsForDescribeStatisticsOutput {
	s.TrafficHitRate = &v
	return s
}
