// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cdn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteCdnCertificateCommon = "DeleteCdnCertificate"

// DeleteCdnCertificateCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteCdnCertificateCommon operation. The "output" return
// value will be populated with the DeleteCdnCertificateCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteCdnCertificateCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteCdnCertificateCommon Send returns without error.
//
// See DeleteCdnCertificateCommon for more information on using the DeleteCdnCertificateCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteCdnCertificateCommonRequest method.
//    req, resp := client.DeleteCdnCertificateCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CDN) DeleteCdnCertificateCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteCdnCertificateCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteCdnCertificateCommon API operation for CDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CDN's
// API operation DeleteCdnCertificateCommon for usage and error information.
func (c *CDN) DeleteCdnCertificateCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteCdnCertificateCommonRequest(input)
	return out, req.Send()
}

// DeleteCdnCertificateCommonWithContext is the same as DeleteCdnCertificateCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteCdnCertificateCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CDN) DeleteCdnCertificateCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteCdnCertificateCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteCdnCertificate = "DeleteCdnCertificate"

// DeleteCdnCertificateRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteCdnCertificate operation. The "output" return
// value will be populated with the DeleteCdnCertificateCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteCdnCertificateCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteCdnCertificateCommon Send returns without error.
//
// See DeleteCdnCertificate for more information on using the DeleteCdnCertificate
// API call, and error handling.
//
//    // Example sending a request using the DeleteCdnCertificateRequest method.
//    req, resp := client.DeleteCdnCertificateRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CDN) DeleteCdnCertificateRequest(input *DeleteCdnCertificateInput) (req *request.Request, output *DeleteCdnCertificateOutput) {
	op := &request.Operation{
		Name:       opDeleteCdnCertificate,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteCdnCertificateInput{}
	}

	output = &DeleteCdnCertificateOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteCdnCertificate API operation for CDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CDN's
// API operation DeleteCdnCertificate for usage and error information.
func (c *CDN) DeleteCdnCertificate(input *DeleteCdnCertificateInput) (*DeleteCdnCertificateOutput, error) {
	req, out := c.DeleteCdnCertificateRequest(input)
	return out, req.Send()
}

// DeleteCdnCertificateWithContext is the same as DeleteCdnCertificate with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteCdnCertificate for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CDN) DeleteCdnCertificateWithContext(ctx volcengine.Context, input *DeleteCdnCertificateInput, opts ...request.Option) (*DeleteCdnCertificateOutput, error) {
	req, out := c.DeleteCdnCertificateRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteCdnCertificateInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// CertId is a required field
	CertId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DeleteCdnCertificateInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteCdnCertificateInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteCdnCertificateInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteCdnCertificateInput"}
	if s.CertId == nil {
		invalidParams.Add(request.NewErrParamRequired("CertId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCertId sets the CertId field's value.
func (s *DeleteCdnCertificateInput) SetCertId(v string) *DeleteCdnCertificateInput {
	s.CertId = &v
	return s
}

type DeleteCdnCertificateOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteCdnCertificateOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteCdnCertificateOutput) GoString() string {
	return s.String()
}
