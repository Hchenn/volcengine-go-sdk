// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cdn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeCdnAccessLogCommon = "DescribeCdnAccessLog"

// DescribeCdnAccessLogCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeCdnAccessLogCommon operation. The "output" return
// value will be populated with the DescribeCdnAccessLogCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeCdnAccessLogCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeCdnAccessLogCommon Send returns without error.
//
// See DescribeCdnAccessLogCommon for more information on using the DescribeCdnAccessLogCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeCdnAccessLogCommonRequest method.
//    req, resp := client.DescribeCdnAccessLogCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CDN) DescribeCdnAccessLogCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeCdnAccessLogCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeCdnAccessLogCommon API operation for CDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CDN's
// API operation DescribeCdnAccessLogCommon for usage and error information.
func (c *CDN) DescribeCdnAccessLogCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeCdnAccessLogCommonRequest(input)
	return out, req.Send()
}

// DescribeCdnAccessLogCommonWithContext is the same as DescribeCdnAccessLogCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCdnAccessLogCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CDN) DescribeCdnAccessLogCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeCdnAccessLogCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeCdnAccessLog = "DescribeCdnAccessLog"

// DescribeCdnAccessLogRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeCdnAccessLog operation. The "output" return
// value will be populated with the DescribeCdnAccessLogCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeCdnAccessLogCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeCdnAccessLogCommon Send returns without error.
//
// See DescribeCdnAccessLog for more information on using the DescribeCdnAccessLog
// API call, and error handling.
//
//    // Example sending a request using the DescribeCdnAccessLogRequest method.
//    req, resp := client.DescribeCdnAccessLogRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CDN) DescribeCdnAccessLogRequest(input *DescribeCdnAccessLogInput) (req *request.Request, output *DescribeCdnAccessLogOutput) {
	op := &request.Operation{
		Name:       opDescribeCdnAccessLog,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeCdnAccessLogInput{}
	}

	output = &DescribeCdnAccessLogOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeCdnAccessLog API operation for CDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CDN's
// API operation DescribeCdnAccessLog for usage and error information.
func (c *CDN) DescribeCdnAccessLog(input *DescribeCdnAccessLogInput) (*DescribeCdnAccessLogOutput, error) {
	req, out := c.DescribeCdnAccessLogRequest(input)
	return out, req.Send()
}

// DescribeCdnAccessLogWithContext is the same as DescribeCdnAccessLog with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCdnAccessLog for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CDN) DescribeCdnAccessLogWithContext(ctx volcengine.Context, input *DescribeCdnAccessLogInput, opts ...request.Option) (*DescribeCdnAccessLogOutput, error) {
	req, out := c.DescribeCdnAccessLogRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeCdnAccessLogInput struct {
	_ struct{} `type:"structure"`

	// Domain is a required field
	Domain *string `type:"string" required:"true"`

	// EndTime is a required field
	EndTime *int64 `type:"int64" required:"true"`

	PageNum *int64 `type:"int64"`

	PageSize *int64 `type:"int64"`

	ServiceRegion *string `type:"string"`

	// StartTime is a required field
	StartTime *int64 `type:"int64" required:"true"`
}

// String returns the string representation
func (s DescribeCdnAccessLogInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCdnAccessLogInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeCdnAccessLogInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeCdnAccessLogInput"}
	if s.Domain == nil {
		invalidParams.Add(request.NewErrParamRequired("Domain"))
	}
	if s.EndTime == nil {
		invalidParams.Add(request.NewErrParamRequired("EndTime"))
	}
	if s.StartTime == nil {
		invalidParams.Add(request.NewErrParamRequired("StartTime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDomain sets the Domain field's value.
func (s *DescribeCdnAccessLogInput) SetDomain(v string) *DescribeCdnAccessLogInput {
	s.Domain = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DescribeCdnAccessLogInput) SetEndTime(v int64) *DescribeCdnAccessLogInput {
	s.EndTime = &v
	return s
}

// SetPageNum sets the PageNum field's value.
func (s *DescribeCdnAccessLogInput) SetPageNum(v int64) *DescribeCdnAccessLogInput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeCdnAccessLogInput) SetPageSize(v int64) *DescribeCdnAccessLogInput {
	s.PageSize = &v
	return s
}

// SetServiceRegion sets the ServiceRegion field's value.
func (s *DescribeCdnAccessLogInput) SetServiceRegion(v string) *DescribeCdnAccessLogInput {
	s.ServiceRegion = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DescribeCdnAccessLogInput) SetStartTime(v int64) *DescribeCdnAccessLogInput {
	s.StartTime = &v
	return s
}

type DescribeCdnAccessLogOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Domain *string `type:"string"`

	DomainLogDetails []*DomainLogDetailForDescribeCdnAccessLogOutput `type:"list"`

	PageNum *int64 `type:"int64"`

	PageSize *int64 `type:"int64"`

	TotalCount *int64 `type:"int64"`
}

// String returns the string representation
func (s DescribeCdnAccessLogOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCdnAccessLogOutput) GoString() string {
	return s.String()
}

// SetDomain sets the Domain field's value.
func (s *DescribeCdnAccessLogOutput) SetDomain(v string) *DescribeCdnAccessLogOutput {
	s.Domain = &v
	return s
}

// SetDomainLogDetails sets the DomainLogDetails field's value.
func (s *DescribeCdnAccessLogOutput) SetDomainLogDetails(v []*DomainLogDetailForDescribeCdnAccessLogOutput) *DescribeCdnAccessLogOutput {
	s.DomainLogDetails = v
	return s
}

// SetPageNum sets the PageNum field's value.
func (s *DescribeCdnAccessLogOutput) SetPageNum(v int64) *DescribeCdnAccessLogOutput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeCdnAccessLogOutput) SetPageSize(v int64) *DescribeCdnAccessLogOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeCdnAccessLogOutput) SetTotalCount(v int64) *DescribeCdnAccessLogOutput {
	s.TotalCount = &v
	return s
}

type DomainLogDetailForDescribeCdnAccessLogOutput struct {
	_ struct{} `type:"structure"`

	EndTime *int64 `type:"int64"`

	LogName *string `type:"string"`

	LogPath *string `type:"string"`

	LogSize *int64 `type:"int64"`

	StartTime *int64 `type:"int64"`
}

// String returns the string representation
func (s DomainLogDetailForDescribeCdnAccessLogOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DomainLogDetailForDescribeCdnAccessLogOutput) GoString() string {
	return s.String()
}

// SetEndTime sets the EndTime field's value.
func (s *DomainLogDetailForDescribeCdnAccessLogOutput) SetEndTime(v int64) *DomainLogDetailForDescribeCdnAccessLogOutput {
	s.EndTime = &v
	return s
}

// SetLogName sets the LogName field's value.
func (s *DomainLogDetailForDescribeCdnAccessLogOutput) SetLogName(v string) *DomainLogDetailForDescribeCdnAccessLogOutput {
	s.LogName = &v
	return s
}

// SetLogPath sets the LogPath field's value.
func (s *DomainLogDetailForDescribeCdnAccessLogOutput) SetLogPath(v string) *DomainLogDetailForDescribeCdnAccessLogOutput {
	s.LogPath = &v
	return s
}

// SetLogSize sets the LogSize field's value.
func (s *DomainLogDetailForDescribeCdnAccessLogOutput) SetLogSize(v int64) *DomainLogDetailForDescribeCdnAccessLogOutput {
	s.LogSize = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DomainLogDetailForDescribeCdnAccessLogOutput) SetStartTime(v int64) *DomainLogDetailForDescribeCdnAccessLogOutput {
	s.StartTime = &v
	return s
}
