// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cdn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeCdnServiceCommon = "DescribeCdnService"

// DescribeCdnServiceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeCdnServiceCommon operation. The "output" return
// value will be populated with the DescribeCdnServiceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeCdnServiceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeCdnServiceCommon Send returns without error.
//
// See DescribeCdnServiceCommon for more information on using the DescribeCdnServiceCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeCdnServiceCommonRequest method.
//    req, resp := client.DescribeCdnServiceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CDN) DescribeCdnServiceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeCdnServiceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeCdnServiceCommon API operation for CDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CDN's
// API operation DescribeCdnServiceCommon for usage and error information.
func (c *CDN) DescribeCdnServiceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeCdnServiceCommonRequest(input)
	return out, req.Send()
}

// DescribeCdnServiceCommonWithContext is the same as DescribeCdnServiceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCdnServiceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CDN) DescribeCdnServiceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeCdnServiceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeCdnService = "DescribeCdnService"

// DescribeCdnServiceRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeCdnService operation. The "output" return
// value will be populated with the DescribeCdnServiceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeCdnServiceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeCdnServiceCommon Send returns without error.
//
// See DescribeCdnService for more information on using the DescribeCdnService
// API call, and error handling.
//
//    // Example sending a request using the DescribeCdnServiceRequest method.
//    req, resp := client.DescribeCdnServiceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CDN) DescribeCdnServiceRequest(input *DescribeCdnServiceInput) (req *request.Request, output *DescribeCdnServiceOutput) {
	op := &request.Operation{
		Name:       opDescribeCdnService,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeCdnServiceInput{}
	}

	output = &DescribeCdnServiceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeCdnService API operation for CDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CDN's
// API operation DescribeCdnService for usage and error information.
func (c *CDN) DescribeCdnService(input *DescribeCdnServiceInput) (*DescribeCdnServiceOutput, error) {
	req, out := c.DescribeCdnServiceRequest(input)
	return out, req.Send()
}

// DescribeCdnServiceWithContext is the same as DescribeCdnService with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCdnService for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CDN) DescribeCdnServiceWithContext(ctx volcengine.Context, input *DescribeCdnServiceInput, opts ...request.Option) (*DescribeCdnServiceOutput, error) {
	req, out := c.DescribeCdnServiceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeCdnServiceInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DescribeCdnServiceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCdnServiceInput) GoString() string {
	return s.String()
}

type DescribeCdnServiceOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	ServiceInfos []*ServiceInfoForDescribeCdnServiceOutput `type:"list"`
}

// String returns the string representation
func (s DescribeCdnServiceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCdnServiceOutput) GoString() string {
	return s.String()
}

// SetServiceInfos sets the ServiceInfos field's value.
func (s *DescribeCdnServiceOutput) SetServiceInfos(v []*ServiceInfoForDescribeCdnServiceOutput) *DescribeCdnServiceOutput {
	s.ServiceInfos = v
	return s
}

type ServiceInfoForDescribeCdnServiceOutput struct {
	_ struct{} `type:"structure"`

	BeginTime *string `type:"string"`

	BillingCode *string `type:"string"`

	BillingCycle *string `type:"string"`

	BillingData *string `type:"string"`

	BillingDesc *string `type:"string"`

	CreateTime *string `type:"string"`

	InstanceCategory *string `type:"string"`

	InstanceNo *string `type:"string"`

	InstanceType *string `type:"string"`

	MetricType *string `type:"string"`

	ServiceRegion *string `type:"string"`

	StartTime *string `type:"string"`

	Status *string `type:"string"`
}

// String returns the string representation
func (s ServiceInfoForDescribeCdnServiceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ServiceInfoForDescribeCdnServiceOutput) GoString() string {
	return s.String()
}

// SetBeginTime sets the BeginTime field's value.
func (s *ServiceInfoForDescribeCdnServiceOutput) SetBeginTime(v string) *ServiceInfoForDescribeCdnServiceOutput {
	s.BeginTime = &v
	return s
}

// SetBillingCode sets the BillingCode field's value.
func (s *ServiceInfoForDescribeCdnServiceOutput) SetBillingCode(v string) *ServiceInfoForDescribeCdnServiceOutput {
	s.BillingCode = &v
	return s
}

// SetBillingCycle sets the BillingCycle field's value.
func (s *ServiceInfoForDescribeCdnServiceOutput) SetBillingCycle(v string) *ServiceInfoForDescribeCdnServiceOutput {
	s.BillingCycle = &v
	return s
}

// SetBillingData sets the BillingData field's value.
func (s *ServiceInfoForDescribeCdnServiceOutput) SetBillingData(v string) *ServiceInfoForDescribeCdnServiceOutput {
	s.BillingData = &v
	return s
}

// SetBillingDesc sets the BillingDesc field's value.
func (s *ServiceInfoForDescribeCdnServiceOutput) SetBillingDesc(v string) *ServiceInfoForDescribeCdnServiceOutput {
	s.BillingDesc = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *ServiceInfoForDescribeCdnServiceOutput) SetCreateTime(v string) *ServiceInfoForDescribeCdnServiceOutput {
	s.CreateTime = &v
	return s
}

// SetInstanceCategory sets the InstanceCategory field's value.
func (s *ServiceInfoForDescribeCdnServiceOutput) SetInstanceCategory(v string) *ServiceInfoForDescribeCdnServiceOutput {
	s.InstanceCategory = &v
	return s
}

// SetInstanceNo sets the InstanceNo field's value.
func (s *ServiceInfoForDescribeCdnServiceOutput) SetInstanceNo(v string) *ServiceInfoForDescribeCdnServiceOutput {
	s.InstanceNo = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *ServiceInfoForDescribeCdnServiceOutput) SetInstanceType(v string) *ServiceInfoForDescribeCdnServiceOutput {
	s.InstanceType = &v
	return s
}

// SetMetricType sets the MetricType field's value.
func (s *ServiceInfoForDescribeCdnServiceOutput) SetMetricType(v string) *ServiceInfoForDescribeCdnServiceOutput {
	s.MetricType = &v
	return s
}

// SetServiceRegion sets the ServiceRegion field's value.
func (s *ServiceInfoForDescribeCdnServiceOutput) SetServiceRegion(v string) *ServiceInfoForDescribeCdnServiceOutput {
	s.ServiceRegion = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *ServiceInfoForDescribeCdnServiceOutput) SetStartTime(v string) *ServiceInfoForDescribeCdnServiceOutput {
	s.StartTime = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ServiceInfoForDescribeCdnServiceOutput) SetStatus(v string) *ServiceInfoForDescribeCdnServiceOutput {
	s.Status = &v
	return s
}
