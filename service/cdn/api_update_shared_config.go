// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cdn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateSharedConfigCommon = "UpdateSharedConfig"

// UpdateSharedConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateSharedConfigCommon operation. The "output" return
// value will be populated with the UpdateSharedConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateSharedConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateSharedConfigCommon Send returns without error.
//
// See UpdateSharedConfigCommon for more information on using the UpdateSharedConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateSharedConfigCommonRequest method.
//    req, resp := client.UpdateSharedConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CDN) UpdateSharedConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateSharedConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateSharedConfigCommon API operation for CDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CDN's
// API operation UpdateSharedConfigCommon for usage and error information.
func (c *CDN) UpdateSharedConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateSharedConfigCommonRequest(input)
	return out, req.Send()
}

// UpdateSharedConfigCommonWithContext is the same as UpdateSharedConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateSharedConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CDN) UpdateSharedConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateSharedConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateSharedConfig = "UpdateSharedConfig"

// UpdateSharedConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateSharedConfig operation. The "output" return
// value will be populated with the UpdateSharedConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateSharedConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateSharedConfigCommon Send returns without error.
//
// See UpdateSharedConfig for more information on using the UpdateSharedConfig
// API call, and error handling.
//
//    // Example sending a request using the UpdateSharedConfigRequest method.
//    req, resp := client.UpdateSharedConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CDN) UpdateSharedConfigRequest(input *UpdateSharedConfigInput) (req *request.Request, output *UpdateSharedConfigOutput) {
	op := &request.Operation{
		Name:       opUpdateSharedConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateSharedConfigInput{}
	}

	output = &UpdateSharedConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateSharedConfig API operation for CDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CDN's
// API operation UpdateSharedConfig for usage and error information.
func (c *CDN) UpdateSharedConfig(input *UpdateSharedConfigInput) (*UpdateSharedConfigOutput, error) {
	req, out := c.UpdateSharedConfigRequest(input)
	return out, req.Send()
}

// UpdateSharedConfigWithContext is the same as UpdateSharedConfig with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateSharedConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CDN) UpdateSharedConfigWithContext(ctx volcengine.Context, input *UpdateSharedConfigInput, opts ...request.Option) (*UpdateSharedConfigOutput, error) {
	req, out := c.UpdateSharedConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AllowIpAccessRuleForUpdateSharedConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Option *string `type:"string" json:",omitempty"`

	Rules []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s AllowIpAccessRuleForUpdateSharedConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AllowIpAccessRuleForUpdateSharedConfigInput) GoString() string {
	return s.String()
}

// SetOption sets the Option field's value.
func (s *AllowIpAccessRuleForUpdateSharedConfigInput) SetOption(v string) *AllowIpAccessRuleForUpdateSharedConfigInput {
	s.Option = &v
	return s
}

// SetRules sets the Rules field's value.
func (s *AllowIpAccessRuleForUpdateSharedConfigInput) SetRules(v []*string) *AllowIpAccessRuleForUpdateSharedConfigInput {
	s.Rules = v
	return s
}

type AllowRefererAccessRuleForUpdateSharedConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AllowEmpty *bool `type:"boolean" json:",omitempty"`

	CommonType *CommonTypeForUpdateSharedConfigInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s AllowRefererAccessRuleForUpdateSharedConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AllowRefererAccessRuleForUpdateSharedConfigInput) GoString() string {
	return s.String()
}

// SetAllowEmpty sets the AllowEmpty field's value.
func (s *AllowRefererAccessRuleForUpdateSharedConfigInput) SetAllowEmpty(v bool) *AllowRefererAccessRuleForUpdateSharedConfigInput {
	s.AllowEmpty = &v
	return s
}

// SetCommonType sets the CommonType field's value.
func (s *AllowRefererAccessRuleForUpdateSharedConfigInput) SetCommonType(v *CommonTypeForUpdateSharedConfigInput) *AllowRefererAccessRuleForUpdateSharedConfigInput {
	s.CommonType = v
	return s
}

type CommonMatchListForUpdateSharedConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CommonType *CommonTypeForUpdateSharedConfigInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s CommonMatchListForUpdateSharedConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CommonMatchListForUpdateSharedConfigInput) GoString() string {
	return s.String()
}

// SetCommonType sets the CommonType field's value.
func (s *CommonMatchListForUpdateSharedConfigInput) SetCommonType(v *CommonTypeForUpdateSharedConfigInput) *CommonMatchListForUpdateSharedConfigInput {
	s.CommonType = v
	return s
}

type CommonTypeForUpdateSharedConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	IgnoreCase *bool `type:"boolean" json:",omitempty"`

	Option *string `type:"string" json:",omitempty"`

	Rules []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s CommonTypeForUpdateSharedConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CommonTypeForUpdateSharedConfigInput) GoString() string {
	return s.String()
}

// SetIgnoreCase sets the IgnoreCase field's value.
func (s *CommonTypeForUpdateSharedConfigInput) SetIgnoreCase(v bool) *CommonTypeForUpdateSharedConfigInput {
	s.IgnoreCase = &v
	return s
}

// SetOption sets the Option field's value.
func (s *CommonTypeForUpdateSharedConfigInput) SetOption(v string) *CommonTypeForUpdateSharedConfigInput {
	s.Option = &v
	return s
}

// SetRules sets the Rules field's value.
func (s *CommonTypeForUpdateSharedConfigInput) SetRules(v []*string) *CommonTypeForUpdateSharedConfigInput {
	s.Rules = v
	return s
}

type DenyIpAccessRuleForUpdateSharedConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Option *string `type:"string" json:",omitempty"`

	Rules []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DenyIpAccessRuleForUpdateSharedConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DenyIpAccessRuleForUpdateSharedConfigInput) GoString() string {
	return s.String()
}

// SetOption sets the Option field's value.
func (s *DenyIpAccessRuleForUpdateSharedConfigInput) SetOption(v string) *DenyIpAccessRuleForUpdateSharedConfigInput {
	s.Option = &v
	return s
}

// SetRules sets the Rules field's value.
func (s *DenyIpAccessRuleForUpdateSharedConfigInput) SetRules(v []*string) *DenyIpAccessRuleForUpdateSharedConfigInput {
	s.Rules = v
	return s
}

type DenyRefererAccessRuleForUpdateSharedConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AllowEmpty *bool `type:"boolean" json:",omitempty"`

	CommonType *CommonTypeForUpdateSharedConfigInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DenyRefererAccessRuleForUpdateSharedConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DenyRefererAccessRuleForUpdateSharedConfigInput) GoString() string {
	return s.String()
}

// SetAllowEmpty sets the AllowEmpty field's value.
func (s *DenyRefererAccessRuleForUpdateSharedConfigInput) SetAllowEmpty(v bool) *DenyRefererAccessRuleForUpdateSharedConfigInput {
	s.AllowEmpty = &v
	return s
}

// SetCommonType sets the CommonType field's value.
func (s *DenyRefererAccessRuleForUpdateSharedConfigInput) SetCommonType(v *CommonTypeForUpdateSharedConfigInput) *DenyRefererAccessRuleForUpdateSharedConfigInput {
	s.CommonType = v
	return s
}

type UpdateSharedConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AllowIpAccessRule *AllowIpAccessRuleForUpdateSharedConfigInput `type:"structure" json:",omitempty"`

	AllowRefererAccessRule *AllowRefererAccessRuleForUpdateSharedConfigInput `type:"structure" json:",omitempty"`

	CommonMatchList *CommonMatchListForUpdateSharedConfigInput `type:"structure" json:",omitempty"`

	// ConfigName is a required field
	ConfigName *string `type:"string" json:",omitempty" required:"true"`

	DenyIpAccessRule *DenyIpAccessRuleForUpdateSharedConfigInput `type:"structure" json:",omitempty"`

	DenyRefererAccessRule *DenyRefererAccessRuleForUpdateSharedConfigInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s UpdateSharedConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateSharedConfigInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateSharedConfigInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateSharedConfigInput"}
	if s.ConfigName == nil {
		invalidParams.Add(request.NewErrParamRequired("ConfigName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAllowIpAccessRule sets the AllowIpAccessRule field's value.
func (s *UpdateSharedConfigInput) SetAllowIpAccessRule(v *AllowIpAccessRuleForUpdateSharedConfigInput) *UpdateSharedConfigInput {
	s.AllowIpAccessRule = v
	return s
}

// SetAllowRefererAccessRule sets the AllowRefererAccessRule field's value.
func (s *UpdateSharedConfigInput) SetAllowRefererAccessRule(v *AllowRefererAccessRuleForUpdateSharedConfigInput) *UpdateSharedConfigInput {
	s.AllowRefererAccessRule = v
	return s
}

// SetCommonMatchList sets the CommonMatchList field's value.
func (s *UpdateSharedConfigInput) SetCommonMatchList(v *CommonMatchListForUpdateSharedConfigInput) *UpdateSharedConfigInput {
	s.CommonMatchList = v
	return s
}

// SetConfigName sets the ConfigName field's value.
func (s *UpdateSharedConfigInput) SetConfigName(v string) *UpdateSharedConfigInput {
	s.ConfigName = &v
	return s
}

// SetDenyIpAccessRule sets the DenyIpAccessRule field's value.
func (s *UpdateSharedConfigInput) SetDenyIpAccessRule(v *DenyIpAccessRuleForUpdateSharedConfigInput) *UpdateSharedConfigInput {
	s.DenyIpAccessRule = v
	return s
}

// SetDenyRefererAccessRule sets the DenyRefererAccessRule field's value.
func (s *UpdateSharedConfigInput) SetDenyRefererAccessRule(v *DenyRefererAccessRuleForUpdateSharedConfigInput) *UpdateSharedConfigInput {
	s.DenyRefererAccessRule = v
	return s
}

type UpdateSharedConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateSharedConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateSharedConfigOutput) GoString() string {
	return s.String()
}
