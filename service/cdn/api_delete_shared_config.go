// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cdn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteSharedConfigCommon = "DeleteSharedConfig"

// DeleteSharedConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteSharedConfigCommon operation. The "output" return
// value will be populated with the DeleteSharedConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteSharedConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteSharedConfigCommon Send returns without error.
//
// See DeleteSharedConfigCommon for more information on using the DeleteSharedConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteSharedConfigCommonRequest method.
//    req, resp := client.DeleteSharedConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CDN) DeleteSharedConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteSharedConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteSharedConfigCommon API operation for CDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CDN's
// API operation DeleteSharedConfigCommon for usage and error information.
func (c *CDN) DeleteSharedConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteSharedConfigCommonRequest(input)
	return out, req.Send()
}

// DeleteSharedConfigCommonWithContext is the same as DeleteSharedConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteSharedConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CDN) DeleteSharedConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteSharedConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteSharedConfig = "DeleteSharedConfig"

// DeleteSharedConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteSharedConfig operation. The "output" return
// value will be populated with the DeleteSharedConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteSharedConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteSharedConfigCommon Send returns without error.
//
// See DeleteSharedConfig for more information on using the DeleteSharedConfig
// API call, and error handling.
//
//    // Example sending a request using the DeleteSharedConfigRequest method.
//    req, resp := client.DeleteSharedConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CDN) DeleteSharedConfigRequest(input *DeleteSharedConfigInput) (req *request.Request, output *DeleteSharedConfigOutput) {
	op := &request.Operation{
		Name:       opDeleteSharedConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteSharedConfigInput{}
	}

	output = &DeleteSharedConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteSharedConfig API operation for CDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CDN's
// API operation DeleteSharedConfig for usage and error information.
func (c *CDN) DeleteSharedConfig(input *DeleteSharedConfigInput) (*DeleteSharedConfigOutput, error) {
	req, out := c.DeleteSharedConfigRequest(input)
	return out, req.Send()
}

// DeleteSharedConfigWithContext is the same as DeleteSharedConfig with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteSharedConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CDN) DeleteSharedConfigWithContext(ctx volcengine.Context, input *DeleteSharedConfigInput, opts ...request.Option) (*DeleteSharedConfigOutput, error) {
	req, out := c.DeleteSharedConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteSharedConfigInput struct {
	_ struct{} `type:"structure"`

	// ConfigName is a required field
	ConfigName *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteSharedConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteSharedConfigInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteSharedConfigInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteSharedConfigInput"}
	if s.ConfigName == nil {
		invalidParams.Add(request.NewErrParamRequired("ConfigName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetConfigName sets the ConfigName field's value.
func (s *DeleteSharedConfigInput) SetConfigName(v string) *DeleteSharedConfigInput {
	s.ConfigName = &v
	return s
}

type DeleteSharedConfigOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteSharedConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteSharedConfigOutput) GoString() string {
	return s.String()
}
