// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package privatezone

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateBindVPCCommon = "UpdateBindVPC"

// UpdateBindVPCCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateBindVPCCommon operation. The "output" return
// value will be populated with the UpdateBindVPCCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateBindVPCCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateBindVPCCommon Send returns without error.
//
// See UpdateBindVPCCommon for more information on using the UpdateBindVPCCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateBindVPCCommonRequest method.
//    req, resp := client.UpdateBindVPCCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATEZONE) UpdateBindVPCCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateBindVPCCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateBindVPCCommon API operation for PRIVATE_ZONE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATE_ZONE's
// API operation UpdateBindVPCCommon for usage and error information.
func (c *PRIVATEZONE) UpdateBindVPCCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateBindVPCCommonRequest(input)
	return out, req.Send()
}

// UpdateBindVPCCommonWithContext is the same as UpdateBindVPCCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateBindVPCCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATEZONE) UpdateBindVPCCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateBindVPCCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateBindVPC = "UpdateBindVPC"

// UpdateBindVPCRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateBindVPC operation. The "output" return
// value will be populated with the UpdateBindVPCCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateBindVPCCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateBindVPCCommon Send returns without error.
//
// See UpdateBindVPC for more information on using the UpdateBindVPC
// API call, and error handling.
//
//    // Example sending a request using the UpdateBindVPCRequest method.
//    req, resp := client.UpdateBindVPCRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATEZONE) UpdateBindVPCRequest(input *UpdateBindVPCInput) (req *request.Request, output *UpdateBindVPCOutput) {
	op := &request.Operation{
		Name:       opUpdateBindVPC,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateBindVPCInput{}
	}

	output = &UpdateBindVPCOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateBindVPC API operation for PRIVATE_ZONE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATE_ZONE's
// API operation UpdateBindVPC for usage and error information.
func (c *PRIVATEZONE) UpdateBindVPC(input *UpdateBindVPCInput) (*UpdateBindVPCOutput, error) {
	req, out := c.UpdateBindVPCRequest(input)
	return out, req.Send()
}

// UpdateBindVPCWithContext is the same as UpdateBindVPC with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateBindVPC for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATEZONE) UpdateBindVPCWithContext(ctx volcengine.Context, input *UpdateBindVPCInput, opts ...request.Option) (*UpdateBindVPCOutput, error) {
	req, out := c.UpdateBindVPCRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type BindForUpdateBindVPCInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`

	VpcId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s BindForUpdateBindVPCInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BindForUpdateBindVPCInput) GoString() string {
	return s.String()
}

// SetRegion sets the Region field's value.
func (s *BindForUpdateBindVPCInput) SetRegion(v string) *BindForUpdateBindVPCInput {
	s.Region = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *BindForUpdateBindVPCInput) SetVpcId(v string) *BindForUpdateBindVPCInput {
	s.VpcId = &v
	return s
}

type UnbindForUpdateBindVPCInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`

	VpcId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UnbindForUpdateBindVPCInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UnbindForUpdateBindVPCInput) GoString() string {
	return s.String()
}

// SetRegion sets the Region field's value.
func (s *UnbindForUpdateBindVPCInput) SetRegion(v string) *UnbindForUpdateBindVPCInput {
	s.Region = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *UnbindForUpdateBindVPCInput) SetVpcId(v string) *UnbindForUpdateBindVPCInput {
	s.VpcId = &v
	return s
}

type UpdateBindVPCInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Binds []*BindForUpdateBindVPCInput `type:"list" json:",omitempty"`

	Unbinds []*UnbindForUpdateBindVPCInput `type:"list" json:",omitempty"`

	VpcTrns []*string `type:"list" json:",omitempty"`

	// ZID is a required field
	ZID *int64 `type:"int64" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s UpdateBindVPCInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateBindVPCInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateBindVPCInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateBindVPCInput"}
	if s.ZID == nil {
		invalidParams.Add(request.NewErrParamRequired("ZID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBinds sets the Binds field's value.
func (s *UpdateBindVPCInput) SetBinds(v []*BindForUpdateBindVPCInput) *UpdateBindVPCInput {
	s.Binds = v
	return s
}

// SetUnbinds sets the Unbinds field's value.
func (s *UpdateBindVPCInput) SetUnbinds(v []*UnbindForUpdateBindVPCInput) *UpdateBindVPCInput {
	s.Unbinds = v
	return s
}

// SetVpcTrns sets the VpcTrns field's value.
func (s *UpdateBindVPCInput) SetVpcTrns(v []*string) *UpdateBindVPCInput {
	s.VpcTrns = v
	return s
}

// SetZID sets the ZID field's value.
func (s *UpdateBindVPCInput) SetZID(v int64) *UpdateBindVPCInput {
	s.ZID = &v
	return s
}

type UpdateBindVPCOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateBindVPCOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateBindVPCOutput) GoString() string {
	return s.String()
}
