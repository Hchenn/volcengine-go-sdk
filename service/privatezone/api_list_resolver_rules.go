// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package privatezone

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListResolverRulesCommon = "ListResolverRules"

// ListResolverRulesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListResolverRulesCommon operation. The "output" return
// value will be populated with the ListResolverRulesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListResolverRulesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListResolverRulesCommon Send returns without error.
//
// See ListResolverRulesCommon for more information on using the ListResolverRulesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListResolverRulesCommonRequest method.
//    req, resp := client.ListResolverRulesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATEZONE) ListResolverRulesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListResolverRulesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListResolverRulesCommon API operation for PRIVATE_ZONE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATE_ZONE's
// API operation ListResolverRulesCommon for usage and error information.
func (c *PRIVATEZONE) ListResolverRulesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListResolverRulesCommonRequest(input)
	return out, req.Send()
}

// ListResolverRulesCommonWithContext is the same as ListResolverRulesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListResolverRulesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATEZONE) ListResolverRulesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListResolverRulesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListResolverRules = "ListResolverRules"

// ListResolverRulesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListResolverRules operation. The "output" return
// value will be populated with the ListResolverRulesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListResolverRulesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListResolverRulesCommon Send returns without error.
//
// See ListResolverRules for more information on using the ListResolverRules
// API call, and error handling.
//
//    // Example sending a request using the ListResolverRulesRequest method.
//    req, resp := client.ListResolverRulesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATEZONE) ListResolverRulesRequest(input *ListResolverRulesInput) (req *request.Request, output *ListResolverRulesOutput) {
	op := &request.Operation{
		Name:       opListResolverRules,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListResolverRulesInput{}
	}

	output = &ListResolverRulesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListResolverRules API operation for PRIVATE_ZONE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATE_ZONE's
// API operation ListResolverRules for usage and error information.
func (c *PRIVATEZONE) ListResolverRules(input *ListResolverRulesInput) (*ListResolverRulesOutput, error) {
	req, out := c.ListResolverRulesRequest(input)
	return out, req.Send()
}

// ListResolverRulesWithContext is the same as ListResolverRules with the addition of
// the ability to pass a context and additional request options.
//
// See ListResolverRules for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATEZONE) ListResolverRulesWithContext(ctx volcengine.Context, input *ListResolverRulesInput, opts ...request.Option) (*ListResolverRulesOutput, error) {
	req, out := c.ListResolverRulesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ForwardIPForListResolverRulesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	IP *string `type:"string" json:",omitempty"`

	Port *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ForwardIPForListResolverRulesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ForwardIPForListResolverRulesOutput) GoString() string {
	return s.String()
}

// SetIP sets the IP field's value.
func (s *ForwardIPForListResolverRulesOutput) SetIP(v string) *ForwardIPForListResolverRulesOutput {
	s.IP = &v
	return s
}

// SetPort sets the Port field's value.
func (s *ForwardIPForListResolverRulesOutput) SetPort(v int32) *ForwardIPForListResolverRulesOutput {
	s.Port = &v
	return s
}

type ListResolverRulesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EndpointID *int32 `type:"int32" json:",omitempty"`

	EndpointTrn *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	TagFilters []*TagFilterForListResolverRulesInput `type:"list" json:",omitempty"`

	ZoneName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListResolverRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListResolverRulesInput) GoString() string {
	return s.String()
}

// SetEndpointID sets the EndpointID field's value.
func (s *ListResolverRulesInput) SetEndpointID(v int32) *ListResolverRulesInput {
	s.EndpointID = &v
	return s
}

// SetEndpointTrn sets the EndpointTrn field's value.
func (s *ListResolverRulesInput) SetEndpointTrn(v string) *ListResolverRulesInput {
	s.EndpointTrn = &v
	return s
}

// SetName sets the Name field's value.
func (s *ListResolverRulesInput) SetName(v string) *ListResolverRulesInput {
	s.Name = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListResolverRulesInput) SetPageNumber(v int32) *ListResolverRulesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListResolverRulesInput) SetPageSize(v int32) *ListResolverRulesInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ListResolverRulesInput) SetProjectName(v string) *ListResolverRulesInput {
	s.ProjectName = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *ListResolverRulesInput) SetTagFilters(v []*TagFilterForListResolverRulesInput) *ListResolverRulesInput {
	s.TagFilters = v
	return s
}

// SetZoneName sets the ZoneName field's value.
func (s *ListResolverRulesInput) SetZoneName(v string) *ListResolverRulesInput {
	s.ZoneName = &v
	return s
}

type ListResolverRulesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	Rules []*RuleForListResolverRulesOutput `type:"list" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListResolverRulesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListResolverRulesOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListResolverRulesOutput) SetPageNumber(v int32) *ListResolverRulesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListResolverRulesOutput) SetPageSize(v int32) *ListResolverRulesOutput {
	s.PageSize = &v
	return s
}

// SetRules sets the Rules field's value.
func (s *ListResolverRulesOutput) SetRules(v []*RuleForListResolverRulesOutput) *ListResolverRulesOutput {
	s.Rules = v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListResolverRulesOutput) SetTotal(v int32) *ListResolverRulesOutput {
	s.Total = &v
	return s
}

type RuleForListResolverRulesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	EndpointID *int32 `type:"int32" json:",omitempty"`

	ForwardIPs []*ForwardIPForListResolverRulesOutput `type:"list" json:",omitempty"`

	ID *int32 `type:"int32" json:",omitempty"`

	LastOperator *string `type:"string" json:",omitempty"`

	Line *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	Tags []*TagForListResolverRulesOutput `type:"list" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`

	ZoneName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RuleForListResolverRulesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RuleForListResolverRulesOutput) GoString() string {
	return s.String()
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *RuleForListResolverRulesOutput) SetCreatedAt(v string) *RuleForListResolverRulesOutput {
	s.CreatedAt = &v
	return s
}

// SetEndpointID sets the EndpointID field's value.
func (s *RuleForListResolverRulesOutput) SetEndpointID(v int32) *RuleForListResolverRulesOutput {
	s.EndpointID = &v
	return s
}

// SetForwardIPs sets the ForwardIPs field's value.
func (s *RuleForListResolverRulesOutput) SetForwardIPs(v []*ForwardIPForListResolverRulesOutput) *RuleForListResolverRulesOutput {
	s.ForwardIPs = v
	return s
}

// SetID sets the ID field's value.
func (s *RuleForListResolverRulesOutput) SetID(v int32) *RuleForListResolverRulesOutput {
	s.ID = &v
	return s
}

// SetLastOperator sets the LastOperator field's value.
func (s *RuleForListResolverRulesOutput) SetLastOperator(v string) *RuleForListResolverRulesOutput {
	s.LastOperator = &v
	return s
}

// SetLine sets the Line field's value.
func (s *RuleForListResolverRulesOutput) SetLine(v string) *RuleForListResolverRulesOutput {
	s.Line = &v
	return s
}

// SetName sets the Name field's value.
func (s *RuleForListResolverRulesOutput) SetName(v string) *RuleForListResolverRulesOutput {
	s.Name = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *RuleForListResolverRulesOutput) SetProjectName(v string) *RuleForListResolverRulesOutput {
	s.ProjectName = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *RuleForListResolverRulesOutput) SetTags(v []*TagForListResolverRulesOutput) *RuleForListResolverRulesOutput {
	s.Tags = v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *RuleForListResolverRulesOutput) SetUpdatedAt(v string) *RuleForListResolverRulesOutput {
	s.UpdatedAt = &v
	return s
}

// SetZoneName sets the ZoneName field's value.
func (s *RuleForListResolverRulesOutput) SetZoneName(v string) *RuleForListResolverRulesOutput {
	s.ZoneName = &v
	return s
}

type TagFilterForListResolverRulesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Values []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s TagFilterForListResolverRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForListResolverRulesInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForListResolverRulesInput) SetKey(v string) *TagFilterForListResolverRulesInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagFilterForListResolverRulesInput) SetValues(v []*string) *TagFilterForListResolverRulesInput {
	s.Values = v
	return s
}

type TagForListResolverRulesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `max:"128" type:"string" json:",omitempty"`

	Value *string `max:"256" type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForListResolverRulesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForListResolverRulesOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForListResolverRulesOutput) SetKey(v string) *TagForListResolverRulesOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForListResolverRulesOutput) SetValue(v string) *TagForListResolverRulesOutput {
	s.Value = &v
	return s
}
