// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package privatezone

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opQueryPrivateZoneCommon = "QueryPrivateZone"

// QueryPrivateZoneCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the QueryPrivateZoneCommon operation. The "output" return
// value will be populated with the QueryPrivateZoneCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned QueryPrivateZoneCommon Request to send the API call to the service.
// the "output" return value is not valid until after QueryPrivateZoneCommon Send returns without error.
//
// See QueryPrivateZoneCommon for more information on using the QueryPrivateZoneCommon
// API call, and error handling.
//
//    // Example sending a request using the QueryPrivateZoneCommonRequest method.
//    req, resp := client.QueryPrivateZoneCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATEZONE) QueryPrivateZoneCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opQueryPrivateZoneCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// QueryPrivateZoneCommon API operation for PRIVATE_ZONE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATE_ZONE's
// API operation QueryPrivateZoneCommon for usage and error information.
func (c *PRIVATEZONE) QueryPrivateZoneCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.QueryPrivateZoneCommonRequest(input)
	return out, req.Send()
}

// QueryPrivateZoneCommonWithContext is the same as QueryPrivateZoneCommon with the addition of
// the ability to pass a context and additional request options.
//
// See QueryPrivateZoneCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATEZONE) QueryPrivateZoneCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.QueryPrivateZoneCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opQueryPrivateZone = "QueryPrivateZone"

// QueryPrivateZoneRequest generates a "volcengine/request.Request" representing the
// client's request for the QueryPrivateZone operation. The "output" return
// value will be populated with the QueryPrivateZoneCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned QueryPrivateZoneCommon Request to send the API call to the service.
// the "output" return value is not valid until after QueryPrivateZoneCommon Send returns without error.
//
// See QueryPrivateZone for more information on using the QueryPrivateZone
// API call, and error handling.
//
//    // Example sending a request using the QueryPrivateZoneRequest method.
//    req, resp := client.QueryPrivateZoneRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATEZONE) QueryPrivateZoneRequest(input *QueryPrivateZoneInput) (req *request.Request, output *QueryPrivateZoneOutput) {
	op := &request.Operation{
		Name:       opQueryPrivateZone,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &QueryPrivateZoneInput{}
	}

	output = &QueryPrivateZoneOutput{}
	req = c.newRequest(op, input, output)

	return
}

// QueryPrivateZone API operation for PRIVATE_ZONE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATE_ZONE's
// API operation QueryPrivateZone for usage and error information.
func (c *PRIVATEZONE) QueryPrivateZone(input *QueryPrivateZoneInput) (*QueryPrivateZoneOutput, error) {
	req, out := c.QueryPrivateZoneRequest(input)
	return out, req.Send()
}

// QueryPrivateZoneWithContext is the same as QueryPrivateZone with the addition of
// the ability to pass a context and additional request options.
//
// See QueryPrivateZone for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATEZONE) QueryPrivateZoneWithContext(ctx volcengine.Context, input *QueryPrivateZoneInput, opts ...request.Option) (*QueryPrivateZoneOutput, error) {
	req, out := c.QueryPrivateZoneRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type BindVPCForQueryPrivateZoneOutput struct {
	_ struct{} `type:"structure"`

	AccountID *string `type:"string"`

	ID *string `type:"string"`

	Region *string `type:"string"`

	RegionName *string `type:"string"`
}

// String returns the string representation
func (s BindVPCForQueryPrivateZoneOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BindVPCForQueryPrivateZoneOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *BindVPCForQueryPrivateZoneOutput) SetAccountID(v string) *BindVPCForQueryPrivateZoneOutput {
	s.AccountID = &v
	return s
}

// SetID sets the ID field's value.
func (s *BindVPCForQueryPrivateZoneOutput) SetID(v string) *BindVPCForQueryPrivateZoneOutput {
	s.ID = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *BindVPCForQueryPrivateZoneOutput) SetRegion(v string) *BindVPCForQueryPrivateZoneOutput {
	s.Region = &v
	return s
}

// SetRegionName sets the RegionName field's value.
func (s *BindVPCForQueryPrivateZoneOutput) SetRegionName(v string) *BindVPCForQueryPrivateZoneOutput {
	s.RegionName = &v
	return s
}

type QueryPrivateZoneInput struct {
	_ struct{} `type:"structure"`

	// ZID is a required field
	ZID *int64 `type:"int64" required:"true"`
}

// String returns the string representation
func (s QueryPrivateZoneInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s QueryPrivateZoneInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *QueryPrivateZoneInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "QueryPrivateZoneInput"}
	if s.ZID == nil {
		invalidParams.Add(request.NewErrParamRequired("ZID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetZID sets the ZID field's value.
func (s *QueryPrivateZoneInput) SetZID(v int64) *QueryPrivateZoneInput {
	s.ZID = &v
	return s
}

type QueryPrivateZoneOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	BindVPCs []*BindVPCForQueryPrivateZoneOutput `type:"list"`

	CreatedAt *string `type:"string"`

	LastOperator *string `type:"string"`

	LineMode *int32 `type:"int32"`

	ProjectName *string `type:"string"`

	RecordCount *int32 `type:"int32"`

	RecursionMode *bool `type:"boolean"`

	Region []*string `type:"list"`

	Remark *string `type:"string"`

	Tags []*TagForQueryPrivateZoneOutput `type:"list"`

	UpdatedAt *string `type:"string"`

	ZID *int32 `type:"int32"`

	ZoneName *string `type:"string"`
}

// String returns the string representation
func (s QueryPrivateZoneOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s QueryPrivateZoneOutput) GoString() string {
	return s.String()
}

// SetBindVPCs sets the BindVPCs field's value.
func (s *QueryPrivateZoneOutput) SetBindVPCs(v []*BindVPCForQueryPrivateZoneOutput) *QueryPrivateZoneOutput {
	s.BindVPCs = v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *QueryPrivateZoneOutput) SetCreatedAt(v string) *QueryPrivateZoneOutput {
	s.CreatedAt = &v
	return s
}

// SetLastOperator sets the LastOperator field's value.
func (s *QueryPrivateZoneOutput) SetLastOperator(v string) *QueryPrivateZoneOutput {
	s.LastOperator = &v
	return s
}

// SetLineMode sets the LineMode field's value.
func (s *QueryPrivateZoneOutput) SetLineMode(v int32) *QueryPrivateZoneOutput {
	s.LineMode = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *QueryPrivateZoneOutput) SetProjectName(v string) *QueryPrivateZoneOutput {
	s.ProjectName = &v
	return s
}

// SetRecordCount sets the RecordCount field's value.
func (s *QueryPrivateZoneOutput) SetRecordCount(v int32) *QueryPrivateZoneOutput {
	s.RecordCount = &v
	return s
}

// SetRecursionMode sets the RecursionMode field's value.
func (s *QueryPrivateZoneOutput) SetRecursionMode(v bool) *QueryPrivateZoneOutput {
	s.RecursionMode = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *QueryPrivateZoneOutput) SetRegion(v []*string) *QueryPrivateZoneOutput {
	s.Region = v
	return s
}

// SetRemark sets the Remark field's value.
func (s *QueryPrivateZoneOutput) SetRemark(v string) *QueryPrivateZoneOutput {
	s.Remark = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *QueryPrivateZoneOutput) SetTags(v []*TagForQueryPrivateZoneOutput) *QueryPrivateZoneOutput {
	s.Tags = v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *QueryPrivateZoneOutput) SetUpdatedAt(v string) *QueryPrivateZoneOutput {
	s.UpdatedAt = &v
	return s
}

// SetZID sets the ZID field's value.
func (s *QueryPrivateZoneOutput) SetZID(v int32) *QueryPrivateZoneOutput {
	s.ZID = &v
	return s
}

// SetZoneName sets the ZoneName field's value.
func (s *QueryPrivateZoneOutput) SetZoneName(v string) *QueryPrivateZoneOutput {
	s.ZoneName = &v
	return s
}

type TagForQueryPrivateZoneOutput struct {
	_ struct{} `type:"structure"`

	Key *string `max:"128" type:"string"`

	Value *string `max:"256" type:"string"`
}

// String returns the string representation
func (s TagForQueryPrivateZoneOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForQueryPrivateZoneOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForQueryPrivateZoneOutput) SetKey(v string) *TagForQueryPrivateZoneOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForQueryPrivateZoneOutput) SetValue(v string) *TagForQueryPrivateZoneOutput {
	s.Value = &v
	return s
}
