// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package privatezone

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListResolverEndpointsCommon = "ListResolverEndpoints"

// ListResolverEndpointsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListResolverEndpointsCommon operation. The "output" return
// value will be populated with the ListResolverEndpointsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListResolverEndpointsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListResolverEndpointsCommon Send returns without error.
//
// See ListResolverEndpointsCommon for more information on using the ListResolverEndpointsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListResolverEndpointsCommonRequest method.
//    req, resp := client.ListResolverEndpointsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATEZONE) ListResolverEndpointsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListResolverEndpointsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListResolverEndpointsCommon API operation for PRIVATE_ZONE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATE_ZONE's
// API operation ListResolverEndpointsCommon for usage and error information.
func (c *PRIVATEZONE) ListResolverEndpointsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListResolverEndpointsCommonRequest(input)
	return out, req.Send()
}

// ListResolverEndpointsCommonWithContext is the same as ListResolverEndpointsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListResolverEndpointsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATEZONE) ListResolverEndpointsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListResolverEndpointsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListResolverEndpoints = "ListResolverEndpoints"

// ListResolverEndpointsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListResolverEndpoints operation. The "output" return
// value will be populated with the ListResolverEndpointsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListResolverEndpointsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListResolverEndpointsCommon Send returns without error.
//
// See ListResolverEndpoints for more information on using the ListResolverEndpoints
// API call, and error handling.
//
//    // Example sending a request using the ListResolverEndpointsRequest method.
//    req, resp := client.ListResolverEndpointsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATEZONE) ListResolverEndpointsRequest(input *ListResolverEndpointsInput) (req *request.Request, output *ListResolverEndpointsOutput) {
	op := &request.Operation{
		Name:       opListResolverEndpoints,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListResolverEndpointsInput{}
	}

	output = &ListResolverEndpointsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListResolverEndpoints API operation for PRIVATE_ZONE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATE_ZONE's
// API operation ListResolverEndpoints for usage and error information.
func (c *PRIVATEZONE) ListResolverEndpoints(input *ListResolverEndpointsInput) (*ListResolverEndpointsOutput, error) {
	req, out := c.ListResolverEndpointsRequest(input)
	return out, req.Send()
}

// ListResolverEndpointsWithContext is the same as ListResolverEndpoints with the addition of
// the ability to pass a context and additional request options.
//
// See ListResolverEndpoints for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATEZONE) ListResolverEndpointsWithContext(ctx volcengine.Context, input *ListResolverEndpointsInput, opts ...request.Option) (*ListResolverEndpointsOutput, error) {
	req, out := c.ListResolverEndpointsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type EndpointForListResolverEndpointsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	Direction *string `type:"string" json:",omitempty"`

	ID *int32 `type:"int32" json:",omitempty"`

	IpConfigs []*IpConfigForListResolverEndpointsOutput `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	SecurityGroupID *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	Tags []*TagForListResolverEndpointsOutput `type:"list" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`

	VpcID *string `type:"string" json:",omitempty"`

	VpcRegion *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s EndpointForListResolverEndpointsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EndpointForListResolverEndpointsOutput) GoString() string {
	return s.String()
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *EndpointForListResolverEndpointsOutput) SetCreatedAt(v string) *EndpointForListResolverEndpointsOutput {
	s.CreatedAt = &v
	return s
}

// SetDirection sets the Direction field's value.
func (s *EndpointForListResolverEndpointsOutput) SetDirection(v string) *EndpointForListResolverEndpointsOutput {
	s.Direction = &v
	return s
}

// SetID sets the ID field's value.
func (s *EndpointForListResolverEndpointsOutput) SetID(v int32) *EndpointForListResolverEndpointsOutput {
	s.ID = &v
	return s
}

// SetIpConfigs sets the IpConfigs field's value.
func (s *EndpointForListResolverEndpointsOutput) SetIpConfigs(v []*IpConfigForListResolverEndpointsOutput) *EndpointForListResolverEndpointsOutput {
	s.IpConfigs = v
	return s
}

// SetName sets the Name field's value.
func (s *EndpointForListResolverEndpointsOutput) SetName(v string) *EndpointForListResolverEndpointsOutput {
	s.Name = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *EndpointForListResolverEndpointsOutput) SetProjectName(v string) *EndpointForListResolverEndpointsOutput {
	s.ProjectName = &v
	return s
}

// SetSecurityGroupID sets the SecurityGroupID field's value.
func (s *EndpointForListResolverEndpointsOutput) SetSecurityGroupID(v string) *EndpointForListResolverEndpointsOutput {
	s.SecurityGroupID = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *EndpointForListResolverEndpointsOutput) SetStatus(v string) *EndpointForListResolverEndpointsOutput {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *EndpointForListResolverEndpointsOutput) SetTags(v []*TagForListResolverEndpointsOutput) *EndpointForListResolverEndpointsOutput {
	s.Tags = v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *EndpointForListResolverEndpointsOutput) SetUpdatedAt(v string) *EndpointForListResolverEndpointsOutput {
	s.UpdatedAt = &v
	return s
}

// SetVpcID sets the VpcID field's value.
func (s *EndpointForListResolverEndpointsOutput) SetVpcID(v string) *EndpointForListResolverEndpointsOutput {
	s.VpcID = &v
	return s
}

// SetVpcRegion sets the VpcRegion field's value.
func (s *EndpointForListResolverEndpointsOutput) SetVpcRegion(v string) *EndpointForListResolverEndpointsOutput {
	s.VpcRegion = &v
	return s
}

type IpConfigForListResolverEndpointsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AzID *string `type:"string" json:",omitempty"`

	IP *string `type:"string" json:",omitempty"`

	IPv6 *string `type:"string" json:",omitempty"`

	SubnetID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s IpConfigForListResolverEndpointsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s IpConfigForListResolverEndpointsOutput) GoString() string {
	return s.String()
}

// SetAzID sets the AzID field's value.
func (s *IpConfigForListResolverEndpointsOutput) SetAzID(v string) *IpConfigForListResolverEndpointsOutput {
	s.AzID = &v
	return s
}

// SetIP sets the IP field's value.
func (s *IpConfigForListResolverEndpointsOutput) SetIP(v string) *IpConfigForListResolverEndpointsOutput {
	s.IP = &v
	return s
}

// SetIPv6 sets the IPv6 field's value.
func (s *IpConfigForListResolverEndpointsOutput) SetIPv6(v string) *IpConfigForListResolverEndpointsOutput {
	s.IPv6 = &v
	return s
}

// SetSubnetID sets the SubnetID field's value.
func (s *IpConfigForListResolverEndpointsOutput) SetSubnetID(v string) *IpConfigForListResolverEndpointsOutput {
	s.SubnetID = &v
	return s
}

type ListResolverEndpointsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Direction *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	TagFilters []*TagFilterForListResolverEndpointsInput `type:"list" json:",omitempty"`

	VpcID *string `type:"string" json:",omitempty"`

	VpcTrns []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListResolverEndpointsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListResolverEndpointsInput) GoString() string {
	return s.String()
}

// SetDirection sets the Direction field's value.
func (s *ListResolverEndpointsInput) SetDirection(v string) *ListResolverEndpointsInput {
	s.Direction = &v
	return s
}

// SetName sets the Name field's value.
func (s *ListResolverEndpointsInput) SetName(v string) *ListResolverEndpointsInput {
	s.Name = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListResolverEndpointsInput) SetPageNumber(v int32) *ListResolverEndpointsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListResolverEndpointsInput) SetPageSize(v int32) *ListResolverEndpointsInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ListResolverEndpointsInput) SetProjectName(v string) *ListResolverEndpointsInput {
	s.ProjectName = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ListResolverEndpointsInput) SetStatus(v string) *ListResolverEndpointsInput {
	s.Status = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *ListResolverEndpointsInput) SetTagFilters(v []*TagFilterForListResolverEndpointsInput) *ListResolverEndpointsInput {
	s.TagFilters = v
	return s
}

// SetVpcID sets the VpcID field's value.
func (s *ListResolverEndpointsInput) SetVpcID(v string) *ListResolverEndpointsInput {
	s.VpcID = &v
	return s
}

// SetVpcTrns sets the VpcTrns field's value.
func (s *ListResolverEndpointsInput) SetVpcTrns(v []*string) *ListResolverEndpointsInput {
	s.VpcTrns = v
	return s
}

type ListResolverEndpointsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Endpoints []*EndpointForListResolverEndpointsOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListResolverEndpointsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListResolverEndpointsOutput) GoString() string {
	return s.String()
}

// SetEndpoints sets the Endpoints field's value.
func (s *ListResolverEndpointsOutput) SetEndpoints(v []*EndpointForListResolverEndpointsOutput) *ListResolverEndpointsOutput {
	s.Endpoints = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListResolverEndpointsOutput) SetPageNumber(v int32) *ListResolverEndpointsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListResolverEndpointsOutput) SetPageSize(v int32) *ListResolverEndpointsOutput {
	s.PageSize = &v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListResolverEndpointsOutput) SetTotal(v int32) *ListResolverEndpointsOutput {
	s.Total = &v
	return s
}

type TagFilterForListResolverEndpointsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Values []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s TagFilterForListResolverEndpointsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForListResolverEndpointsInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForListResolverEndpointsInput) SetKey(v string) *TagFilterForListResolverEndpointsInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagFilterForListResolverEndpointsInput) SetValues(v []*string) *TagFilterForListResolverEndpointsInput {
	s.Values = v
	return s
}

type TagForListResolverEndpointsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `max:"128" type:"string" json:",omitempty"`

	Value *string `max:"256" type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForListResolverEndpointsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForListResolverEndpointsOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForListResolverEndpointsOutput) SetKey(v string) *TagForListResolverEndpointsOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForListResolverEndpointsOutput) SetValue(v string) *TagForListResolverEndpointsOutput {
	s.Value = &v
	return s
}
