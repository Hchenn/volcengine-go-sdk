// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package privatezone

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAuthorizedUsersCommon = "ListAuthorizedUsers"

// ListAuthorizedUsersCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAuthorizedUsersCommon operation. The "output" return
// value will be populated with the ListAuthorizedUsersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAuthorizedUsersCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAuthorizedUsersCommon Send returns without error.
//
// See ListAuthorizedUsersCommon for more information on using the ListAuthorizedUsersCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAuthorizedUsersCommonRequest method.
//    req, resp := client.ListAuthorizedUsersCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATEZONE) ListAuthorizedUsersCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAuthorizedUsersCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAuthorizedUsersCommon API operation for PRIVATE_ZONE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATE_ZONE's
// API operation ListAuthorizedUsersCommon for usage and error information.
func (c *PRIVATEZONE) ListAuthorizedUsersCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAuthorizedUsersCommonRequest(input)
	return out, req.Send()
}

// ListAuthorizedUsersCommonWithContext is the same as ListAuthorizedUsersCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAuthorizedUsersCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATEZONE) ListAuthorizedUsersCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAuthorizedUsersCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAuthorizedUsers = "ListAuthorizedUsers"

// ListAuthorizedUsersRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAuthorizedUsers operation. The "output" return
// value will be populated with the ListAuthorizedUsersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAuthorizedUsersCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAuthorizedUsersCommon Send returns without error.
//
// See ListAuthorizedUsers for more information on using the ListAuthorizedUsers
// API call, and error handling.
//
//    // Example sending a request using the ListAuthorizedUsersRequest method.
//    req, resp := client.ListAuthorizedUsersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATEZONE) ListAuthorizedUsersRequest(input *ListAuthorizedUsersInput) (req *request.Request, output *ListAuthorizedUsersOutput) {
	op := &request.Operation{
		Name:       opListAuthorizedUsers,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAuthorizedUsersInput{}
	}

	output = &ListAuthorizedUsersOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAuthorizedUsers API operation for PRIVATE_ZONE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATE_ZONE's
// API operation ListAuthorizedUsers for usage and error information.
func (c *PRIVATEZONE) ListAuthorizedUsers(input *ListAuthorizedUsersInput) (*ListAuthorizedUsersOutput, error) {
	req, out := c.ListAuthorizedUsersRequest(input)
	return out, req.Send()
}

// ListAuthorizedUsersWithContext is the same as ListAuthorizedUsers with the addition of
// the ability to pass a context and additional request options.
//
// See ListAuthorizedUsers for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATEZONE) ListAuthorizedUsersWithContext(ctx volcengine.Context, input *ListAuthorizedUsersInput, opts ...request.Option) (*ListAuthorizedUsersOutput, error) {
	req, out := c.ListAuthorizedUsersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListAuthorizedUsersInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ListAuthorizedUsersInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAuthorizedUsersInput) GoString() string {
	return s.String()
}

type ListAuthorizedUsersOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Users []*UserForListAuthorizedUsersOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListAuthorizedUsersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAuthorizedUsersOutput) GoString() string {
	return s.String()
}

// SetUsers sets the Users field's value.
func (s *ListAuthorizedUsersOutput) SetUsers(v []*UserForListAuthorizedUsersOutput) *ListAuthorizedUsersOutput {
	s.Users = v
	return s
}

type UserForListAuthorizedUsersOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountID *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UserForListAuthorizedUsersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UserForListAuthorizedUsersOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *UserForListAuthorizedUsersOutput) SetAccountID(v string) *UserForListAuthorizedUsersOutput {
	s.AccountID = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *UserForListAuthorizedUsersOutput) SetStatus(v string) *UserForListAuthorizedUsersOutput {
	s.Status = &v
	return s
}
