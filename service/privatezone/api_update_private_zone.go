// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package privatezone

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdatePrivateZoneCommon = "UpdatePrivateZone"

// UpdatePrivateZoneCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdatePrivateZoneCommon operation. The "output" return
// value will be populated with the UpdatePrivateZoneCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdatePrivateZoneCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdatePrivateZoneCommon Send returns without error.
//
// See UpdatePrivateZoneCommon for more information on using the UpdatePrivateZoneCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdatePrivateZoneCommonRequest method.
//    req, resp := client.UpdatePrivateZoneCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATEZONE) UpdatePrivateZoneCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdatePrivateZoneCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdatePrivateZoneCommon API operation for PRIVATE_ZONE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATE_ZONE's
// API operation UpdatePrivateZoneCommon for usage and error information.
func (c *PRIVATEZONE) UpdatePrivateZoneCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdatePrivateZoneCommonRequest(input)
	return out, req.Send()
}

// UpdatePrivateZoneCommonWithContext is the same as UpdatePrivateZoneCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdatePrivateZoneCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATEZONE) UpdatePrivateZoneCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdatePrivateZoneCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdatePrivateZone = "UpdatePrivateZone"

// UpdatePrivateZoneRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdatePrivateZone operation. The "output" return
// value will be populated with the UpdatePrivateZoneCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdatePrivateZoneCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdatePrivateZoneCommon Send returns without error.
//
// See UpdatePrivateZone for more information on using the UpdatePrivateZone
// API call, and error handling.
//
//    // Example sending a request using the UpdatePrivateZoneRequest method.
//    req, resp := client.UpdatePrivateZoneRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATEZONE) UpdatePrivateZoneRequest(input *UpdatePrivateZoneInput) (req *request.Request, output *UpdatePrivateZoneOutput) {
	op := &request.Operation{
		Name:       opUpdatePrivateZone,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdatePrivateZoneInput{}
	}

	output = &UpdatePrivateZoneOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdatePrivateZone API operation for PRIVATE_ZONE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATE_ZONE's
// API operation UpdatePrivateZone for usage and error information.
func (c *PRIVATEZONE) UpdatePrivateZone(input *UpdatePrivateZoneInput) (*UpdatePrivateZoneOutput, error) {
	req, out := c.UpdatePrivateZoneRequest(input)
	return out, req.Send()
}

// UpdatePrivateZoneWithContext is the same as UpdatePrivateZone with the addition of
// the ability to pass a context and additional request options.
//
// See UpdatePrivateZone for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATEZONE) UpdatePrivateZoneWithContext(ctx volcengine.Context, input *UpdatePrivateZoneInput, opts ...request.Option) (*UpdatePrivateZoneOutput, error) {
	req, out := c.UpdatePrivateZoneRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type UpdatePrivateZoneInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	LoadBalance *bool `type:"boolean" json:",omitempty"`

	RecursionMode *bool `type:"boolean" json:",omitempty"`

	Remark *string `type:"string" json:",omitempty"`

	// ZID is a required field
	ZID *int64 `type:"int64" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s UpdatePrivateZoneInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdatePrivateZoneInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdatePrivateZoneInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdatePrivateZoneInput"}
	if s.ZID == nil {
		invalidParams.Add(request.NewErrParamRequired("ZID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetLoadBalance sets the LoadBalance field's value.
func (s *UpdatePrivateZoneInput) SetLoadBalance(v bool) *UpdatePrivateZoneInput {
	s.LoadBalance = &v
	return s
}

// SetRecursionMode sets the RecursionMode field's value.
func (s *UpdatePrivateZoneInput) SetRecursionMode(v bool) *UpdatePrivateZoneInput {
	s.RecursionMode = &v
	return s
}

// SetRemark sets the Remark field's value.
func (s *UpdatePrivateZoneInput) SetRemark(v string) *UpdatePrivateZoneInput {
	s.Remark = &v
	return s
}

// SetZID sets the ZID field's value.
func (s *UpdatePrivateZoneInput) SetZID(v int64) *UpdatePrivateZoneInput {
	s.ZID = &v
	return s
}

type UpdatePrivateZoneOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	CreatedAt *string `type:"string" json:",omitempty"`

	LastOperator *string `type:"string" json:",omitempty"`

	LineMode *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	RecordCount *int32 `type:"int32" json:",omitempty"`

	RecursionMode *bool `type:"boolean" json:",omitempty"`

	Region []*string `type:"list" json:",omitempty"`

	Remark *string `type:"string" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`

	ZID *int64 `type:"int64" json:",omitempty"`

	ZoneName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdatePrivateZoneOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdatePrivateZoneOutput) GoString() string {
	return s.String()
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *UpdatePrivateZoneOutput) SetCreatedAt(v string) *UpdatePrivateZoneOutput {
	s.CreatedAt = &v
	return s
}

// SetLastOperator sets the LastOperator field's value.
func (s *UpdatePrivateZoneOutput) SetLastOperator(v string) *UpdatePrivateZoneOutput {
	s.LastOperator = &v
	return s
}

// SetLineMode sets the LineMode field's value.
func (s *UpdatePrivateZoneOutput) SetLineMode(v int32) *UpdatePrivateZoneOutput {
	s.LineMode = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *UpdatePrivateZoneOutput) SetProjectName(v string) *UpdatePrivateZoneOutput {
	s.ProjectName = &v
	return s
}

// SetRecordCount sets the RecordCount field's value.
func (s *UpdatePrivateZoneOutput) SetRecordCount(v int32) *UpdatePrivateZoneOutput {
	s.RecordCount = &v
	return s
}

// SetRecursionMode sets the RecursionMode field's value.
func (s *UpdatePrivateZoneOutput) SetRecursionMode(v bool) *UpdatePrivateZoneOutput {
	s.RecursionMode = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *UpdatePrivateZoneOutput) SetRegion(v []*string) *UpdatePrivateZoneOutput {
	s.Region = v
	return s
}

// SetRemark sets the Remark field's value.
func (s *UpdatePrivateZoneOutput) SetRemark(v string) *UpdatePrivateZoneOutput {
	s.Remark = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *UpdatePrivateZoneOutput) SetUpdatedAt(v string) *UpdatePrivateZoneOutput {
	s.UpdatedAt = &v
	return s
}

// SetZID sets the ZID field's value.
func (s *UpdatePrivateZoneOutput) SetZID(v int64) *UpdatePrivateZoneOutput {
	s.ZID = &v
	return s
}

// SetZoneName sets the ZoneName field's value.
func (s *UpdatePrivateZoneOutput) SetZoneName(v string) *UpdatePrivateZoneOutput {
	s.ZoneName = &v
	return s
}
