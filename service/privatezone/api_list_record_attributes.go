// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package privatezone

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListRecordAttributesCommon = "ListRecordAttributes"

// ListRecordAttributesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListRecordAttributesCommon operation. The "output" return
// value will be populated with the ListRecordAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRecordAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRecordAttributesCommon Send returns without error.
//
// See ListRecordAttributesCommon for more information on using the ListRecordAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListRecordAttributesCommonRequest method.
//    req, resp := client.ListRecordAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATEZONE) ListRecordAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListRecordAttributesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRecordAttributesCommon API operation for PRIVATE_ZONE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATE_ZONE's
// API operation ListRecordAttributesCommon for usage and error information.
func (c *PRIVATEZONE) ListRecordAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListRecordAttributesCommonRequest(input)
	return out, req.Send()
}

// ListRecordAttributesCommonWithContext is the same as ListRecordAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListRecordAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATEZONE) ListRecordAttributesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListRecordAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListRecordAttributes = "ListRecordAttributes"

// ListRecordAttributesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListRecordAttributes operation. The "output" return
// value will be populated with the ListRecordAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRecordAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRecordAttributesCommon Send returns without error.
//
// See ListRecordAttributes for more information on using the ListRecordAttributes
// API call, and error handling.
//
//    // Example sending a request using the ListRecordAttributesRequest method.
//    req, resp := client.ListRecordAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATEZONE) ListRecordAttributesRequest(input *ListRecordAttributesInput) (req *request.Request, output *ListRecordAttributesOutput) {
	op := &request.Operation{
		Name:       opListRecordAttributes,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListRecordAttributesInput{}
	}

	output = &ListRecordAttributesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRecordAttributes API operation for PRIVATE_ZONE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATE_ZONE's
// API operation ListRecordAttributes for usage and error information.
func (c *PRIVATEZONE) ListRecordAttributes(input *ListRecordAttributesInput) (*ListRecordAttributesOutput, error) {
	req, out := c.ListRecordAttributesRequest(input)
	return out, req.Send()
}

// ListRecordAttributesWithContext is the same as ListRecordAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See ListRecordAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATEZONE) ListRecordAttributesWithContext(ctx volcengine.Context, input *ListRecordAttributesInput, opts ...request.Option) (*ListRecordAttributesOutput, error) {
	req, out := c.ListRecordAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListRecordAttributesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ListRecordAttributesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRecordAttributesInput) GoString() string {
	return s.String()
}

type ListRecordAttributesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	TTLs []*int32 `type:"list" json:",omitempty"`

	Types []*string `type:"list" json:",omitempty"`

	WeightLimit *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListRecordAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRecordAttributesOutput) GoString() string {
	return s.String()
}

// SetTTLs sets the TTLs field's value.
func (s *ListRecordAttributesOutput) SetTTLs(v []*int32) *ListRecordAttributesOutput {
	s.TTLs = v
	return s
}

// SetTypes sets the Types field's value.
func (s *ListRecordAttributesOutput) SetTypes(v []*string) *ListRecordAttributesOutput {
	s.Types = v
	return s
}

// SetWeightLimit sets the WeightLimit field's value.
func (s *ListRecordAttributesOutput) SetWeightLimit(v int32) *ListRecordAttributesOutput {
	s.WeightLimit = &v
	return s
}
