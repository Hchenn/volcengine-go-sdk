// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package privatezone

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListBindVPCCommon = "ListBindVPC"

// ListBindVPCCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBindVPCCommon operation. The "output" return
// value will be populated with the ListBindVPCCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBindVPCCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBindVPCCommon Send returns without error.
//
// See ListBindVPCCommon for more information on using the ListBindVPCCommon
// API call, and error handling.
//
//    // Example sending a request using the ListBindVPCCommonRequest method.
//    req, resp := client.ListBindVPCCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATEZONE) ListBindVPCCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListBindVPCCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ListBindVPCCommon API operation for PRIVATE_ZONE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATE_ZONE's
// API operation ListBindVPCCommon for usage and error information.
func (c *PRIVATEZONE) ListBindVPCCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListBindVPCCommonRequest(input)
	return out, req.Send()
}

// ListBindVPCCommonWithContext is the same as ListBindVPCCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListBindVPCCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATEZONE) ListBindVPCCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListBindVPCCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListBindVPC = "ListBindVPC"

// ListBindVPCRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBindVPC operation. The "output" return
// value will be populated with the ListBindVPCCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBindVPCCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBindVPCCommon Send returns without error.
//
// See ListBindVPC for more information on using the ListBindVPC
// API call, and error handling.
//
//    // Example sending a request using the ListBindVPCRequest method.
//    req, resp := client.ListBindVPCRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATEZONE) ListBindVPCRequest(input *ListBindVPCInput) (req *request.Request, output *ListBindVPCOutput) {
	op := &request.Operation{
		Name:       opListBindVPC,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListBindVPCInput{}
	}

	output = &ListBindVPCOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ListBindVPC API operation for PRIVATE_ZONE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATE_ZONE's
// API operation ListBindVPC for usage and error information.
func (c *PRIVATEZONE) ListBindVPC(input *ListBindVPCInput) (*ListBindVPCOutput, error) {
	req, out := c.ListBindVPCRequest(input)
	return out, req.Send()
}

// ListBindVPCWithContext is the same as ListBindVPC with the addition of
// the ability to pass a context and additional request options.
//
// See ListBindVPC for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATEZONE) ListBindVPCWithContext(ctx volcengine.Context, input *ListBindVPCInput, opts ...request.Option) (*ListBindVPCOutput, error) {
	req, out := c.ListBindVPCRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type BindVPCForListBindVPCOutput struct {
	_ struct{} `type:"structure"`

	AccountID *string `type:"string"`

	ID *string `type:"string"`

	Region *string `type:"string"`

	RegionName *string `type:"string"`
}

// String returns the string representation
func (s BindVPCForListBindVPCOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BindVPCForListBindVPCOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *BindVPCForListBindVPCOutput) SetAccountID(v string) *BindVPCForListBindVPCOutput {
	s.AccountID = &v
	return s
}

// SetID sets the ID field's value.
func (s *BindVPCForListBindVPCOutput) SetID(v string) *BindVPCForListBindVPCOutput {
	s.ID = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *BindVPCForListBindVPCOutput) SetRegion(v string) *BindVPCForListBindVPCOutput {
	s.Region = &v
	return s
}

// SetRegionName sets the RegionName field's value.
func (s *BindVPCForListBindVPCOutput) SetRegionName(v string) *BindVPCForListBindVPCOutput {
	s.RegionName = &v
	return s
}

type ListBindVPCInput struct {
	_ struct{} `type:"structure"`

	Region *string `type:"string"`

	// ZID is a required field
	ZID *int64 `type:"int64" required:"true"`
}

// String returns the string representation
func (s ListBindVPCInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBindVPCInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListBindVPCInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListBindVPCInput"}
	if s.ZID == nil {
		invalidParams.Add(request.NewErrParamRequired("ZID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetRegion sets the Region field's value.
func (s *ListBindVPCInput) SetRegion(v string) *ListBindVPCInput {
	s.Region = &v
	return s
}

// SetZID sets the ZID field's value.
func (s *ListBindVPCInput) SetZID(v int64) *ListBindVPCInput {
	s.ZID = &v
	return s
}

type ListBindVPCOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	BindVPCs []*BindVPCForListBindVPCOutput `type:"list"`

	Total *int32 `type:"int32"`
}

// String returns the string representation
func (s ListBindVPCOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBindVPCOutput) GoString() string {
	return s.String()
}

// SetBindVPCs sets the BindVPCs field's value.
func (s *ListBindVPCOutput) SetBindVPCs(v []*BindVPCForListBindVPCOutput) *ListBindVPCOutput {
	s.BindVPCs = v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListBindVPCOutput) SetTotal(v int32) *ListBindVPCOutput {
	s.Total = &v
	return s
}
