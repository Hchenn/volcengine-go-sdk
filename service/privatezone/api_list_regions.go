// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package privatezone

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListRegionsCommon = "ListRegions"

// ListRegionsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListRegionsCommon operation. The "output" return
// value will be populated with the ListRegionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRegionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRegionsCommon Send returns without error.
//
// See ListRegionsCommon for more information on using the ListRegionsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListRegionsCommonRequest method.
//    req, resp := client.ListRegionsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATEZONE) ListRegionsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListRegionsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ListRegionsCommon API operation for PRIVATE_ZONE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATE_ZONE's
// API operation ListRegionsCommon for usage and error information.
func (c *PRIVATEZONE) ListRegionsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListRegionsCommonRequest(input)
	return out, req.Send()
}

// ListRegionsCommonWithContext is the same as ListRegionsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListRegionsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATEZONE) ListRegionsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListRegionsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListRegions = "ListRegions"

// ListRegionsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListRegions operation. The "output" return
// value will be populated with the ListRegionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRegionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRegionsCommon Send returns without error.
//
// See ListRegions for more information on using the ListRegions
// API call, and error handling.
//
//    // Example sending a request using the ListRegionsRequest method.
//    req, resp := client.ListRegionsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *PRIVATEZONE) ListRegionsRequest(input *ListRegionsInput) (req *request.Request, output *ListRegionsOutput) {
	op := &request.Operation{
		Name:       opListRegions,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListRegionsInput{}
	}

	output = &ListRegionsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ListRegions API operation for PRIVATE_ZONE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for PRIVATE_ZONE's
// API operation ListRegions for usage and error information.
func (c *PRIVATEZONE) ListRegions(input *ListRegionsInput) (*ListRegionsOutput, error) {
	req, out := c.ListRegionsRequest(input)
	return out, req.Send()
}

// ListRegionsWithContext is the same as ListRegions with the addition of
// the ability to pass a context and additional request options.
//
// See ListRegions for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PRIVATEZONE) ListRegionsWithContext(ctx volcengine.Context, input *ListRegionsInput, opts ...request.Option) (*ListRegionsOutput, error) {
	req, out := c.ListRegionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListRegionsInput struct {
	_ struct{} `type:"structure"`

	ProjectName *string `type:"string"`

	Tag *string `type:"string"`
}

// String returns the string representation
func (s ListRegionsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRegionsInput) GoString() string {
	return s.String()
}

// SetProjectName sets the ProjectName field's value.
func (s *ListRegionsInput) SetProjectName(v string) *ListRegionsInput {
	s.ProjectName = &v
	return s
}

// SetTag sets the Tag field's value.
func (s *ListRegionsInput) SetTag(v string) *ListRegionsInput {
	s.Tag = &v
	return s
}

type ListRegionsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Regions []*RegionForListRegionsOutput `type:"list"`
}

// String returns the string representation
func (s ListRegionsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRegionsOutput) GoString() string {
	return s.String()
}

// SetRegions sets the Regions field's value.
func (s *ListRegionsOutput) SetRegions(v []*RegionForListRegionsOutput) *ListRegionsOutput {
	s.Regions = v
	return s
}

type RegionForListRegionsOutput struct {
	_ struct{} `type:"structure"`

	Name *string `type:"string"`

	RegionCode *string `type:"string"`
}

// String returns the string representation
func (s RegionForListRegionsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RegionForListRegionsOutput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *RegionForListRegionsOutput) SetName(v string) *RegionForListRegionsOutput {
	s.Name = &v
	return s
}

// SetRegionCode sets the RegionCode field's value.
func (s *RegionForListRegionsOutput) SetRegionCode(v string) *RegionForListRegionsOutput {
	s.RegionCode = &v
	return s
}
