// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vod20250101

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opStartExecutionCommon = "StartExecution"

// StartExecutionCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the StartExecutionCommon operation. The "output" return
// value will be populated with the StartExecutionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned StartExecutionCommon Request to send the API call to the service.
// the "output" return value is not valid until after StartExecutionCommon Send returns without error.
//
// See StartExecutionCommon for more information on using the StartExecutionCommon
// API call, and error handling.
//
//    // Example sending a request using the StartExecutionCommonRequest method.
//    req, resp := client.StartExecutionCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOD20250101) StartExecutionCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opStartExecutionCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// StartExecutionCommon API operation for VOD20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOD20250101's
// API operation StartExecutionCommon for usage and error information.
func (c *VOD20250101) StartExecutionCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.StartExecutionCommonRequest(input)
	return out, req.Send()
}

// StartExecutionCommonWithContext is the same as StartExecutionCommon with the addition of
// the ability to pass a context and additional request options.
//
// See StartExecutionCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOD20250101) StartExecutionCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.StartExecutionCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opStartExecution = "StartExecution"

// StartExecutionRequest generates a "volcengine/request.Request" representing the
// client's request for the StartExecution operation. The "output" return
// value will be populated with the StartExecutionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned StartExecutionCommon Request to send the API call to the service.
// the "output" return value is not valid until after StartExecutionCommon Send returns without error.
//
// See StartExecution for more information on using the StartExecution
// API call, and error handling.
//
//    // Example sending a request using the StartExecutionRequest method.
//    req, resp := client.StartExecutionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOD20250101) StartExecutionRequest(input *StartExecutionInput) (req *request.Request, output *StartExecutionOutput) {
	op := &request.Operation{
		Name:       opStartExecution,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &StartExecutionInput{}
	}

	output = &StartExecutionOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// StartExecution API operation for VOD20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOD20250101's
// API operation StartExecution for usage and error information.
func (c *VOD20250101) StartExecution(input *StartExecutionInput) (*StartExecutionOutput, error) {
	req, out := c.StartExecutionRequest(input)
	return out, req.Send()
}

// StartExecutionWithContext is the same as StartExecution with the addition of
// the ability to pass a context and additional request options.
//
// See StartExecution for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOD20250101) StartExecutionWithContext(ctx volcengine.Context, input *StartExecutionInput, opts ...request.Option) (*StartExecutionOutput, error) {
	req, out := c.StartExecutionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AdAuditForStartExecutionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AdvertiserId *string `type:"string" json:",omitempty"`

	BusinessType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AdAuditForStartExecutionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AdAuditForStartExecutionInput) GoString() string {
	return s.String()
}

// SetAdvertiserId sets the AdvertiserId field's value.
func (s *AdAuditForStartExecutionInput) SetAdvertiserId(v string) *AdAuditForStartExecutionInput {
	s.AdvertiserId = &v
	return s
}

// SetBusinessType sets the BusinessType field's value.
func (s *AdAuditForStartExecutionInput) SetBusinessType(v string) *AdAuditForStartExecutionInput {
	s.BusinessType = &v
	return s
}

type AsrForStartExecutionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Language *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	WithConfidence *bool `type:"boolean" json:",omitempty"`

	WithSpeakerInfo *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s AsrForStartExecutionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AsrForStartExecutionInput) GoString() string {
	return s.String()
}

// SetLanguage sets the Language field's value.
func (s *AsrForStartExecutionInput) SetLanguage(v string) *AsrForStartExecutionInput {
	s.Language = &v
	return s
}

// SetType sets the Type field's value.
func (s *AsrForStartExecutionInput) SetType(v string) *AsrForStartExecutionInput {
	s.Type = &v
	return s
}

// SetWithConfidence sets the WithConfidence field's value.
func (s *AsrForStartExecutionInput) SetWithConfidence(v bool) *AsrForStartExecutionInput {
	s.WithConfidence = &v
	return s
}

// SetWithSpeakerInfo sets the WithSpeakerInfo field's value.
func (s *AsrForStartExecutionInput) SetWithSpeakerInfo(v bool) *AsrForStartExecutionInput {
	s.WithSpeakerInfo = &v
	return s
}

type AudioExtractForStartExecutionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Voice *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s AudioExtractForStartExecutionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AudioExtractForStartExecutionInput) GoString() string {
	return s.String()
}

// SetVoice sets the Voice field's value.
func (s *AudioExtractForStartExecutionInput) SetVoice(v bool) *AudioExtractForStartExecutionInput {
	s.Voice = &v
	return s
}

type ByteHDForStartExecutionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	TemplateId *string `type:"string" json:",omitempty"`

	WatermarkTemplateId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ByteHDForStartExecutionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ByteHDForStartExecutionInput) GoString() string {
	return s.String()
}

// SetTemplateId sets the TemplateId field's value.
func (s *ByteHDForStartExecutionInput) SetTemplateId(v string) *ByteHDForStartExecutionInput {
	s.TemplateId = &v
	return s
}

// SetWatermarkTemplateId sets the WatermarkTemplateId field's value.
func (s *ByteHDForStartExecutionInput) SetWatermarkTemplateId(v string) *ByteHDForStartExecutionInput {
	s.WatermarkTemplateId = &v
	return s
}

type ControlForStartExecutionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CallbackArgs *string `type:"string" json:",omitempty"`

	ClientToken *string `type:"string" json:",omitempty"`

	EnableLowPriority *bool `type:"boolean" json:",omitempty"`

	Priority *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ControlForStartExecutionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ControlForStartExecutionInput) GoString() string {
	return s.String()
}

// SetCallbackArgs sets the CallbackArgs field's value.
func (s *ControlForStartExecutionInput) SetCallbackArgs(v string) *ControlForStartExecutionInput {
	s.CallbackArgs = &v
	return s
}

// SetClientToken sets the ClientToken field's value.
func (s *ControlForStartExecutionInput) SetClientToken(v string) *ControlForStartExecutionInput {
	s.ClientToken = &v
	return s
}

// SetEnableLowPriority sets the EnableLowPriority field's value.
func (s *ControlForStartExecutionInput) SetEnableLowPriority(v bool) *ControlForStartExecutionInput {
	s.EnableLowPriority = &v
	return s
}

// SetPriority sets the Priority field's value.
func (s *ControlForStartExecutionInput) SetPriority(v int32) *ControlForStartExecutionInput {
	s.Priority = &v
	return s
}

type DirectUrlForStartExecutionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BucketName *string `type:"string" json:",omitempty"`

	FileName *string `type:"string" json:",omitempty"`

	SpaceName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DirectUrlForStartExecutionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DirectUrlForStartExecutionInput) GoString() string {
	return s.String()
}

// SetBucketName sets the BucketName field's value.
func (s *DirectUrlForStartExecutionInput) SetBucketName(v string) *DirectUrlForStartExecutionInput {
	s.BucketName = &v
	return s
}

// SetFileName sets the FileName field's value.
func (s *DirectUrlForStartExecutionInput) SetFileName(v string) *DirectUrlForStartExecutionInput {
	s.FileName = &v
	return s
}

// SetSpaceName sets the SpaceName field's value.
func (s *DirectUrlForStartExecutionInput) SetSpaceName(v string) *DirectUrlForStartExecutionInput {
	s.SpaceName = &v
	return s
}

type EnhanceForStartExecutionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	TemplateId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s EnhanceForStartExecutionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EnhanceForStartExecutionInput) GoString() string {
	return s.String()
}

// SetTemplateId sets the TemplateId field's value.
func (s *EnhanceForStartExecutionInput) SetTemplateId(v string) *EnhanceForStartExecutionInput {
	s.TemplateId = &v
	return s
}

type FileIdForStartExecutionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FileId *string `type:"string" json:",omitempty"`

	Vid *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FileIdForStartExecutionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FileIdForStartExecutionInput) GoString() string {
	return s.String()
}

// SetFileId sets the FileId field's value.
func (s *FileIdForStartExecutionInput) SetFileId(v string) *FileIdForStartExecutionInput {
	s.FileId = &v
	return s
}

// SetVid sets the Vid field's value.
func (s *FileIdForStartExecutionInput) SetVid(v string) *FileIdForStartExecutionInput {
	s.Vid = &v
	return s
}

type HighlightForStartExecutionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s HighlightForStartExecutionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HighlightForStartExecutionInput) GoString() string {
	return s.String()
}

type InputForStartExecutionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DirectUrl *DirectUrlForStartExecutionInput `type:"structure" json:",omitempty"`

	FileId *FileIdForStartExecutionInput `type:"structure" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	Vid *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s InputForStartExecutionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InputForStartExecutionInput) GoString() string {
	return s.String()
}

// SetDirectUrl sets the DirectUrl field's value.
func (s *InputForStartExecutionInput) SetDirectUrl(v *DirectUrlForStartExecutionInput) *InputForStartExecutionInput {
	s.DirectUrl = v
	return s
}

// SetFileId sets the FileId field's value.
func (s *InputForStartExecutionInput) SetFileId(v *FileIdForStartExecutionInput) *InputForStartExecutionInput {
	s.FileId = v
	return s
}

// SetType sets the Type field's value.
func (s *InputForStartExecutionInput) SetType(v string) *InputForStartExecutionInput {
	s.Type = &v
	return s
}

// SetVid sets the Vid field's value.
func (s *InputForStartExecutionInput) SetVid(v string) *InputForStartExecutionInput {
	s.Vid = &v
	return s
}

type ModelForStartExecutionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AsrAppId *string `type:"string" json:",omitempty"`

	AsrAppType *string `type:"string" json:",omitempty"`

	DoubaoVisionEndpoint *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ModelForStartExecutionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModelForStartExecutionInput) GoString() string {
	return s.String()
}

// SetAsrAppId sets the AsrAppId field's value.
func (s *ModelForStartExecutionInput) SetAsrAppId(v string) *ModelForStartExecutionInput {
	s.AsrAppId = &v
	return s
}

// SetAsrAppType sets the AsrAppType field's value.
func (s *ModelForStartExecutionInput) SetAsrAppType(v string) *ModelForStartExecutionInput {
	s.AsrAppType = &v
	return s
}

// SetDoubaoVisionEndpoint sets the DoubaoVisionEndpoint field's value.
func (s *ModelForStartExecutionInput) SetDoubaoVisionEndpoint(v string) *ModelForStartExecutionInput {
	s.DoubaoVisionEndpoint = &v
	return s
}

type OperationForStartExecutionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Task *TaskForStartExecutionInput `type:"structure" json:",omitempty"`

	Template *TemplateForStartExecutionInput `type:"structure" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s OperationForStartExecutionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OperationForStartExecutionInput) GoString() string {
	return s.String()
}

// SetTask sets the Task field's value.
func (s *OperationForStartExecutionInput) SetTask(v *TaskForStartExecutionInput) *OperationForStartExecutionInput {
	s.Task = v
	return s
}

// SetTemplate sets the Template field's value.
func (s *OperationForStartExecutionInput) SetTemplate(v *TemplateForStartExecutionInput) *OperationForStartExecutionInput {
	s.Template = v
	return s
}

// SetType sets the Type field's value.
func (s *OperationForStartExecutionInput) SetType(v string) *OperationForStartExecutionInput {
	s.Type = &v
	return s
}

type StartExecutionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Control *ControlForStartExecutionInput `type:"structure" json:",omitempty"`

	Input *InputForStartExecutionInput `type:"structure" json:",omitempty"`

	Operation *OperationForStartExecutionInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s StartExecutionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StartExecutionInput) GoString() string {
	return s.String()
}

// SetControl sets the Control field's value.
func (s *StartExecutionInput) SetControl(v *ControlForStartExecutionInput) *StartExecutionInput {
	s.Control = v
	return s
}

// SetInput sets the Input field's value.
func (s *StartExecutionInput) SetInput(v *InputForStartExecutionInput) *StartExecutionInput {
	s.Input = v
	return s
}

// SetOperation sets the Operation field's value.
func (s *StartExecutionInput) SetOperation(v *OperationForStartExecutionInput) *StartExecutionInput {
	s.Operation = v
	return s
}

type StartExecutionOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	RunId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s StartExecutionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StartExecutionOutput) GoString() string {
	return s.String()
}

// SetRunId sets the RunId field's value.
func (s *StartExecutionOutput) SetRunId(v string) *StartExecutionOutput {
	s.RunId = &v
	return s
}

type TaskForStartExecutionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AdAudit *AdAuditForStartExecutionInput `type:"structure" json:",omitempty"`

	Asr *AsrForStartExecutionInput `type:"structure" json:",omitempty"`

	AudioExtract *AudioExtractForStartExecutionInput `type:"structure" json:",omitempty"`

	Highlight *HighlightForStartExecutionInput `type:"structure" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	Vision *VisionForStartExecutionInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s TaskForStartExecutionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TaskForStartExecutionInput) GoString() string {
	return s.String()
}

// SetAdAudit sets the AdAudit field's value.
func (s *TaskForStartExecutionInput) SetAdAudit(v *AdAuditForStartExecutionInput) *TaskForStartExecutionInput {
	s.AdAudit = v
	return s
}

// SetAsr sets the Asr field's value.
func (s *TaskForStartExecutionInput) SetAsr(v *AsrForStartExecutionInput) *TaskForStartExecutionInput {
	s.Asr = v
	return s
}

// SetAudioExtract sets the AudioExtract field's value.
func (s *TaskForStartExecutionInput) SetAudioExtract(v *AudioExtractForStartExecutionInput) *TaskForStartExecutionInput {
	s.AudioExtract = v
	return s
}

// SetHighlight sets the Highlight field's value.
func (s *TaskForStartExecutionInput) SetHighlight(v *HighlightForStartExecutionInput) *TaskForStartExecutionInput {
	s.Highlight = v
	return s
}

// SetType sets the Type field's value.
func (s *TaskForStartExecutionInput) SetType(v string) *TaskForStartExecutionInput {
	s.Type = &v
	return s
}

// SetVision sets the Vision field's value.
func (s *TaskForStartExecutionInput) SetVision(v *VisionForStartExecutionInput) *TaskForStartExecutionInput {
	s.Vision = v
	return s
}

type TemplateForStartExecutionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ByteHD *ByteHDForStartExecutionInput `type:"structure" json:",omitempty"`

	Enhance *EnhanceForStartExecutionInput `type:"structure" json:",omitempty"`

	TranscodeAudio *TranscodeAudioForStartExecutionInput `type:"structure" json:",omitempty"`

	TranscodeVideo *TranscodeVideoForStartExecutionInput `type:"structure" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TemplateForStartExecutionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TemplateForStartExecutionInput) GoString() string {
	return s.String()
}

// SetByteHD sets the ByteHD field's value.
func (s *TemplateForStartExecutionInput) SetByteHD(v *ByteHDForStartExecutionInput) *TemplateForStartExecutionInput {
	s.ByteHD = v
	return s
}

// SetEnhance sets the Enhance field's value.
func (s *TemplateForStartExecutionInput) SetEnhance(v *EnhanceForStartExecutionInput) *TemplateForStartExecutionInput {
	s.Enhance = v
	return s
}

// SetTranscodeAudio sets the TranscodeAudio field's value.
func (s *TemplateForStartExecutionInput) SetTranscodeAudio(v *TranscodeAudioForStartExecutionInput) *TemplateForStartExecutionInput {
	s.TranscodeAudio = v
	return s
}

// SetTranscodeVideo sets the TranscodeVideo field's value.
func (s *TemplateForStartExecutionInput) SetTranscodeVideo(v *TranscodeVideoForStartExecutionInput) *TemplateForStartExecutionInput {
	s.TranscodeVideo = v
	return s
}

// SetType sets the Type field's value.
func (s *TemplateForStartExecutionInput) SetType(v string) *TemplateForStartExecutionInput {
	s.Type = &v
	return s
}

type TranscodeAudioForStartExecutionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	TemplateId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TranscodeAudioForStartExecutionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TranscodeAudioForStartExecutionInput) GoString() string {
	return s.String()
}

// SetTemplateId sets the TemplateId field's value.
func (s *TranscodeAudioForStartExecutionInput) SetTemplateId(v string) *TranscodeAudioForStartExecutionInput {
	s.TemplateId = &v
	return s
}

type TranscodeVideoForStartExecutionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	TemplateId *string `type:"string" json:",omitempty"`

	WatermarkTemplateId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TranscodeVideoForStartExecutionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TranscodeVideoForStartExecutionInput) GoString() string {
	return s.String()
}

// SetTemplateId sets the TemplateId field's value.
func (s *TranscodeVideoForStartExecutionInput) SetTemplateId(v string) *TranscodeVideoForStartExecutionInput {
	s.TemplateId = &v
	return s
}

// SetWatermarkTemplateId sets the WatermarkTemplateId field's value.
func (s *TranscodeVideoForStartExecutionInput) SetWatermarkTemplateId(v string) *TranscodeVideoForStartExecutionInput {
	s.WatermarkTemplateId = &v
	return s
}

type VisionForStartExecutionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Model *ModelForStartExecutionInput `type:"structure" json:",omitempty"`

	Prompt *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s VisionForStartExecutionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VisionForStartExecutionInput) GoString() string {
	return s.String()
}

// SetModel sets the Model field's value.
func (s *VisionForStartExecutionInput) SetModel(v *ModelForStartExecutionInput) *VisionForStartExecutionInput {
	s.Model = v
	return s
}

// SetPrompt sets the Prompt field's value.
func (s *VisionForStartExecutionInput) SetPrompt(v string) *VisionForStartExecutionInput {
	s.Prompt = &v
	return s
}
