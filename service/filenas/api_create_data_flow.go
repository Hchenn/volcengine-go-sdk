// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package filenas

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateDataFlowCommon = "CreateDataFlow"

// CreateDataFlowCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateDataFlowCommon operation. The "output" return
// value will be populated with the CreateDataFlowCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateDataFlowCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateDataFlowCommon Send returns without error.
//
// See CreateDataFlowCommon for more information on using the CreateDataFlowCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateDataFlowCommonRequest method.
//    req, resp := client.CreateDataFlowCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FILENAS) CreateDataFlowCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateDataFlowCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateDataFlowCommon API operation for FILENAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FILENAS's
// API operation CreateDataFlowCommon for usage and error information.
func (c *FILENAS) CreateDataFlowCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateDataFlowCommonRequest(input)
	return out, req.Send()
}

// CreateDataFlowCommonWithContext is the same as CreateDataFlowCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateDataFlowCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FILENAS) CreateDataFlowCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateDataFlowCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateDataFlow = "CreateDataFlow"

// CreateDataFlowRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateDataFlow operation. The "output" return
// value will be populated with the CreateDataFlowCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateDataFlowCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateDataFlowCommon Send returns without error.
//
// See CreateDataFlow for more information on using the CreateDataFlow
// API call, and error handling.
//
//    // Example sending a request using the CreateDataFlowRequest method.
//    req, resp := client.CreateDataFlowRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FILENAS) CreateDataFlowRequest(input *CreateDataFlowInput) (req *request.Request, output *CreateDataFlowOutput) {
	op := &request.Operation{
		Name:       opCreateDataFlow,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateDataFlowInput{}
	}

	output = &CreateDataFlowOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateDataFlow API operation for FILENAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FILENAS's
// API operation CreateDataFlow for usage and error information.
func (c *FILENAS) CreateDataFlow(input *CreateDataFlowInput) (*CreateDataFlowOutput, error) {
	req, out := c.CreateDataFlowRequest(input)
	return out, req.Send()
}

// CreateDataFlowWithContext is the same as CreateDataFlow with the addition of
// the ability to pass a context and additional request options.
//
// See CreateDataFlow for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FILENAS) CreateDataFlowWithContext(ctx volcengine.Context, input *CreateDataFlowInput, opts ...request.Option) (*CreateDataFlowOutput, error) {
	req, out := c.CreateDataFlowRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateDataFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// BucketName is a required field
	BucketName *string `type:"string" json:",omitempty" required:"true"`

	BucketPrefix *string `type:"string" json:",omitempty"`

	EnableTlsLog *bool `type:"boolean" json:",omitempty"`

	EvictPolicy *EvictPolicyForCreateDataFlowInput `type:"structure" json:",omitempty"`

	ExportPolicy *ExportPolicyForCreateDataFlowInput `type:"structure" json:",omitempty"`

	// FileSystemId is a required field
	FileSystemId *string `type:"string" json:",omitempty" required:"true"`

	// FileSystemPath is a required field
	FileSystemPath *string `type:"string" json:",omitempty" required:"true"`

	ImportPolicy *ImportPolicyForCreateDataFlowInput `type:"structure" json:",omitempty"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	// SameNameFilePolicy is a required field
	SameNameFilePolicy *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfSameNameFilePolicyForCreateDataFlowInput"`
}

// String returns the string representation
func (s CreateDataFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateDataFlowInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateDataFlowInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateDataFlowInput"}
	if s.BucketName == nil {
		invalidParams.Add(request.NewErrParamRequired("BucketName"))
	}
	if s.FileSystemId == nil {
		invalidParams.Add(request.NewErrParamRequired("FileSystemId"))
	}
	if s.FileSystemPath == nil {
		invalidParams.Add(request.NewErrParamRequired("FileSystemPath"))
	}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}
	if s.SameNameFilePolicy == nil {
		invalidParams.Add(request.NewErrParamRequired("SameNameFilePolicy"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBucketName sets the BucketName field's value.
func (s *CreateDataFlowInput) SetBucketName(v string) *CreateDataFlowInput {
	s.BucketName = &v
	return s
}

// SetBucketPrefix sets the BucketPrefix field's value.
func (s *CreateDataFlowInput) SetBucketPrefix(v string) *CreateDataFlowInput {
	s.BucketPrefix = &v
	return s
}

// SetEnableTlsLog sets the EnableTlsLog field's value.
func (s *CreateDataFlowInput) SetEnableTlsLog(v bool) *CreateDataFlowInput {
	s.EnableTlsLog = &v
	return s
}

// SetEvictPolicy sets the EvictPolicy field's value.
func (s *CreateDataFlowInput) SetEvictPolicy(v *EvictPolicyForCreateDataFlowInput) *CreateDataFlowInput {
	s.EvictPolicy = v
	return s
}

// SetExportPolicy sets the ExportPolicy field's value.
func (s *CreateDataFlowInput) SetExportPolicy(v *ExportPolicyForCreateDataFlowInput) *CreateDataFlowInput {
	s.ExportPolicy = v
	return s
}

// SetFileSystemId sets the FileSystemId field's value.
func (s *CreateDataFlowInput) SetFileSystemId(v string) *CreateDataFlowInput {
	s.FileSystemId = &v
	return s
}

// SetFileSystemPath sets the FileSystemPath field's value.
func (s *CreateDataFlowInput) SetFileSystemPath(v string) *CreateDataFlowInput {
	s.FileSystemPath = &v
	return s
}

// SetImportPolicy sets the ImportPolicy field's value.
func (s *CreateDataFlowInput) SetImportPolicy(v *ImportPolicyForCreateDataFlowInput) *CreateDataFlowInput {
	s.ImportPolicy = v
	return s
}

// SetName sets the Name field's value.
func (s *CreateDataFlowInput) SetName(v string) *CreateDataFlowInput {
	s.Name = &v
	return s
}

// SetSameNameFilePolicy sets the SameNameFilePolicy field's value.
func (s *CreateDataFlowInput) SetSameNameFilePolicy(v string) *CreateDataFlowInput {
	s.SameNameFilePolicy = &v
	return s
}

type CreateDataFlowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateDataFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateDataFlowOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *CreateDataFlowOutput) SetId(v string) *CreateDataFlowOutput {
	s.Id = &v
	return s
}

type DimensionForCreateDataFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Attr *string `type:"string" json:",omitempty" enum:"EnumOfAttrForCreateDataFlowInput"`

	StaticValues []*StaticValueForCreateDataFlowInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DimensionForCreateDataFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DimensionForCreateDataFlowInput) GoString() string {
	return s.String()
}

// SetAttr sets the Attr field's value.
func (s *DimensionForCreateDataFlowInput) SetAttr(v string) *DimensionForCreateDataFlowInput {
	s.Attr = &v
	return s
}

// SetStaticValues sets the StaticValues field's value.
func (s *DimensionForCreateDataFlowInput) SetStaticValues(v []*StaticValueForCreateDataFlowInput) *DimensionForCreateDataFlowInput {
	s.StaticValues = v
	return s
}

type EvictPolicyForCreateDataFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FilterInfo *FilterInfoForCreateDataFlowInput `type:"structure" json:",omitempty"`

	Status *string `type:"string" json:",omitempty" enum:"EnumOfStatusForCreateDataFlowInput"`

	Type *string `type:"string" json:",omitempty" enum:"EnumOfTypeForCreateDataFlowInput"`
}

// String returns the string representation
func (s EvictPolicyForCreateDataFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EvictPolicyForCreateDataFlowInput) GoString() string {
	return s.String()
}

// SetFilterInfo sets the FilterInfo field's value.
func (s *EvictPolicyForCreateDataFlowInput) SetFilterInfo(v *FilterInfoForCreateDataFlowInput) *EvictPolicyForCreateDataFlowInput {
	s.FilterInfo = v
	return s
}

// SetStatus sets the Status field's value.
func (s *EvictPolicyForCreateDataFlowInput) SetStatus(v string) *EvictPolicyForCreateDataFlowInput {
	s.Status = &v
	return s
}

// SetType sets the Type field's value.
func (s *EvictPolicyForCreateDataFlowInput) SetType(v string) *EvictPolicyForCreateDataFlowInput {
	s.Type = &v
	return s
}

type ExportPolicyForCreateDataFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FilterInfo *FilterInfoForCreateDataFlowInput `type:"structure" json:",omitempty"`

	Status *string `type:"string" json:",omitempty" enum:"EnumOfStatusForCreateDataFlowInput"`

	Type *string `type:"string" json:",omitempty" enum:"EnumOfTypeForCreateDataFlowInput"`
}

// String returns the string representation
func (s ExportPolicyForCreateDataFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ExportPolicyForCreateDataFlowInput) GoString() string {
	return s.String()
}

// SetFilterInfo sets the FilterInfo field's value.
func (s *ExportPolicyForCreateDataFlowInput) SetFilterInfo(v *FilterInfoForCreateDataFlowInput) *ExportPolicyForCreateDataFlowInput {
	s.FilterInfo = v
	return s
}

// SetStatus sets the Status field's value.
func (s *ExportPolicyForCreateDataFlowInput) SetStatus(v string) *ExportPolicyForCreateDataFlowInput {
	s.Status = &v
	return s
}

// SetType sets the Type field's value.
func (s *ExportPolicyForCreateDataFlowInput) SetType(v string) *ExportPolicyForCreateDataFlowInput {
	s.Type = &v
	return s
}

type FilterInfoForCreateDataFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Dimensions []*DimensionForCreateDataFlowInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s FilterInfoForCreateDataFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterInfoForCreateDataFlowInput) GoString() string {
	return s.String()
}

// SetDimensions sets the Dimensions field's value.
func (s *FilterInfoForCreateDataFlowInput) SetDimensions(v []*DimensionForCreateDataFlowInput) *FilterInfoForCreateDataFlowInput {
	s.Dimensions = v
	return s
}

type ImportPolicyForCreateDataFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FilterInfo *FilterInfoForCreateDataFlowInput `type:"structure" json:",omitempty"`

	Status *string `type:"string" json:",omitempty" enum:"EnumOfStatusForCreateDataFlowInput"`

	Type *string `type:"string" json:",omitempty" enum:"ConvertEnumOfTypeForCreateDataFlowInput"`
}

// String returns the string representation
func (s ImportPolicyForCreateDataFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ImportPolicyForCreateDataFlowInput) GoString() string {
	return s.String()
}

// SetFilterInfo sets the FilterInfo field's value.
func (s *ImportPolicyForCreateDataFlowInput) SetFilterInfo(v *FilterInfoForCreateDataFlowInput) *ImportPolicyForCreateDataFlowInput {
	s.FilterInfo = v
	return s
}

// SetStatus sets the Status field's value.
func (s *ImportPolicyForCreateDataFlowInput) SetStatus(v string) *ImportPolicyForCreateDataFlowInput {
	s.Status = &v
	return s
}

// SetType sets the Type field's value.
func (s *ImportPolicyForCreateDataFlowInput) SetType(v string) *ImportPolicyForCreateDataFlowInput {
	s.Type = &v
	return s
}

type StaticValueForCreateDataFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Relationship *string `type:"string" json:",omitempty" enum:"EnumOfRelationshipForCreateDataFlowInput"`

	Unit *string `type:"string" json:",omitempty" enum:"EnumOfUnitForCreateDataFlowInput"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s StaticValueForCreateDataFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StaticValueForCreateDataFlowInput) GoString() string {
	return s.String()
}

// SetRelationship sets the Relationship field's value.
func (s *StaticValueForCreateDataFlowInput) SetRelationship(v string) *StaticValueForCreateDataFlowInput {
	s.Relationship = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *StaticValueForCreateDataFlowInput) SetUnit(v string) *StaticValueForCreateDataFlowInput {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *StaticValueForCreateDataFlowInput) SetValue(v string) *StaticValueForCreateDataFlowInput {
	s.Value = &v
	return s
}

const (
	// ConvertEnumOfTypeForCreateDataFlowInputNone is a ConvertEnumOfTypeForCreateDataFlowInput enum value
	ConvertEnumOfTypeForCreateDataFlowInputNone = "None"

	// ConvertEnumOfTypeForCreateDataFlowInputMetadata is a ConvertEnumOfTypeForCreateDataFlowInput enum value
	ConvertEnumOfTypeForCreateDataFlowInputMetadata = "Metadata"

	// ConvertEnumOfTypeForCreateDataFlowInputMetaAndData is a ConvertEnumOfTypeForCreateDataFlowInput enum value
	ConvertEnumOfTypeForCreateDataFlowInputMetaAndData = "MetaAndData"
)

const (
	// EnumOfAttrForCreateDataFlowInputFileSize is a EnumOfAttrForCreateDataFlowInput enum value
	EnumOfAttrForCreateDataFlowInputFileSize = "FileSize"

	// EnumOfAttrForCreateDataFlowInputFileSuffix is a EnumOfAttrForCreateDataFlowInput enum value
	EnumOfAttrForCreateDataFlowInputFileSuffix = "FileSuffix"

	// EnumOfAttrForCreateDataFlowInputSubDirectory is a EnumOfAttrForCreateDataFlowInput enum value
	EnumOfAttrForCreateDataFlowInputSubDirectory = "SubDirectory"

	// EnumOfAttrForCreateDataFlowInputModifyTime is a EnumOfAttrForCreateDataFlowInput enum value
	EnumOfAttrForCreateDataFlowInputModifyTime = "ModifyTime"

	// EnumOfAttrForCreateDataFlowInputAccessTime is a EnumOfAttrForCreateDataFlowInput enum value
	EnumOfAttrForCreateDataFlowInputAccessTime = "AccessTime"
)

const (
	// EnumOfRelationshipForCreateDataFlowInputGe is a EnumOfRelationshipForCreateDataFlowInput enum value
	EnumOfRelationshipForCreateDataFlowInputGe = "GE"

	// EnumOfRelationshipForCreateDataFlowInputCt is a EnumOfRelationshipForCreateDataFlowInput enum value
	EnumOfRelationshipForCreateDataFlowInputCt = "CT"

	// EnumOfRelationshipForCreateDataFlowInputNc is a EnumOfRelationshipForCreateDataFlowInput enum value
	EnumOfRelationshipForCreateDataFlowInputNc = "NC"
)

const (
	// EnumOfSameNameFilePolicyForCreateDataFlowInputSkip is a EnumOfSameNameFilePolicyForCreateDataFlowInput enum value
	EnumOfSameNameFilePolicyForCreateDataFlowInputSkip = "Skip"

	// EnumOfSameNameFilePolicyForCreateDataFlowInputKeepLatest is a EnumOfSameNameFilePolicyForCreateDataFlowInput enum value
	EnumOfSameNameFilePolicyForCreateDataFlowInputKeepLatest = "KeepLatest"

	// EnumOfSameNameFilePolicyForCreateDataFlowInputOverWrite is a EnumOfSameNameFilePolicyForCreateDataFlowInput enum value
	EnumOfSameNameFilePolicyForCreateDataFlowInputOverWrite = "OverWrite"
)

const (
	// EnumOfStatusForCreateDataFlowInputStarting is a EnumOfStatusForCreateDataFlowInput enum value
	EnumOfStatusForCreateDataFlowInputStarting = "Starting"

	// EnumOfStatusForCreateDataFlowInputRunning is a EnumOfStatusForCreateDataFlowInput enum value
	EnumOfStatusForCreateDataFlowInputRunning = "Running"

	// EnumOfStatusForCreateDataFlowInputStopping is a EnumOfStatusForCreateDataFlowInput enum value
	EnumOfStatusForCreateDataFlowInputStopping = "Stopping"

	// EnumOfStatusForCreateDataFlowInputStopped is a EnumOfStatusForCreateDataFlowInput enum value
	EnumOfStatusForCreateDataFlowInputStopped = "Stopped"

	// EnumOfStatusForCreateDataFlowInputError is a EnumOfStatusForCreateDataFlowInput enum value
	EnumOfStatusForCreateDataFlowInputError = "Error"
)

const (
	// EnumOfTypeForCreateDataFlowInputNone is a EnumOfTypeForCreateDataFlowInput enum value
	EnumOfTypeForCreateDataFlowInputNone = "None"

	// EnumOfTypeForCreateDataFlowInputCustomize is a EnumOfTypeForCreateDataFlowInput enum value
	EnumOfTypeForCreateDataFlowInputCustomize = "Customize"
)

const (
	// EnumOfUnitForCreateDataFlowInputHour is a EnumOfUnitForCreateDataFlowInput enum value
	EnumOfUnitForCreateDataFlowInputHour = "Hour"

	// EnumOfUnitForCreateDataFlowInputDay is a EnumOfUnitForCreateDataFlowInput enum value
	EnumOfUnitForCreateDataFlowInputDay = "Day"

	// EnumOfUnitForCreateDataFlowInputWeek is a EnumOfUnitForCreateDataFlowInput enum value
	EnumOfUnitForCreateDataFlowInputWeek = "Week"

	// EnumOfUnitForCreateDataFlowInputMonth is a EnumOfUnitForCreateDataFlowInput enum value
	EnumOfUnitForCreateDataFlowInputMonth = "Month"

	// EnumOfUnitForCreateDataFlowInputYear is a EnumOfUnitForCreateDataFlowInput enum value
	EnumOfUnitForCreateDataFlowInputYear = "Year"
)
