// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package filenas

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeSnapshotsCommon = "DescribeSnapshots"

// DescribeSnapshotsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeSnapshotsCommon operation. The "output" return
// value will be populated with the DescribeSnapshotsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeSnapshotsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeSnapshotsCommon Send returns without error.
//
// See DescribeSnapshotsCommon for more information on using the DescribeSnapshotsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeSnapshotsCommonRequest method.
//    req, resp := client.DescribeSnapshotsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FILENAS) DescribeSnapshotsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeSnapshotsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeSnapshotsCommon API operation for FILENAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FILENAS's
// API operation DescribeSnapshotsCommon for usage and error information.
func (c *FILENAS) DescribeSnapshotsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeSnapshotsCommonRequest(input)
	return out, req.Send()
}

// DescribeSnapshotsCommonWithContext is the same as DescribeSnapshotsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeSnapshotsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FILENAS) DescribeSnapshotsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeSnapshotsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeSnapshots = "DescribeSnapshots"

// DescribeSnapshotsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeSnapshots operation. The "output" return
// value will be populated with the DescribeSnapshotsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeSnapshotsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeSnapshotsCommon Send returns without error.
//
// See DescribeSnapshots for more information on using the DescribeSnapshots
// API call, and error handling.
//
//    // Example sending a request using the DescribeSnapshotsRequest method.
//    req, resp := client.DescribeSnapshotsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FILENAS) DescribeSnapshotsRequest(input *DescribeSnapshotsInput) (req *request.Request, output *DescribeSnapshotsOutput) {
	op := &request.Operation{
		Name:       opDescribeSnapshots,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeSnapshotsInput{}
	}

	output = &DescribeSnapshotsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeSnapshots API operation for FILENAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FILENAS's
// API operation DescribeSnapshots for usage and error information.
func (c *FILENAS) DescribeSnapshots(input *DescribeSnapshotsInput) (*DescribeSnapshotsOutput, error) {
	req, out := c.DescribeSnapshotsRequest(input)
	return out, req.Send()
}

// DescribeSnapshotsWithContext is the same as DescribeSnapshots with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeSnapshots for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FILENAS) DescribeSnapshotsWithContext(ctx volcengine.Context, input *DescribeSnapshotsInput, opts ...request.Option) (*DescribeSnapshotsOutput, error) {
	req, out := c.DescribeSnapshotsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeSnapshotsInput struct {
	_ struct{} `type:"structure"`

	FileSystemId *string `type:"string"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	SnapshotIds *string `type:"string"`

	SnapshotName *string `type:"string"`

	SnapshotType *string `type:"string"`

	Status *string `type:"string"`
}

// String returns the string representation
func (s DescribeSnapshotsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSnapshotsInput) GoString() string {
	return s.String()
}

// SetFileSystemId sets the FileSystemId field's value.
func (s *DescribeSnapshotsInput) SetFileSystemId(v string) *DescribeSnapshotsInput {
	s.FileSystemId = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeSnapshotsInput) SetPageNumber(v int32) *DescribeSnapshotsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeSnapshotsInput) SetPageSize(v int32) *DescribeSnapshotsInput {
	s.PageSize = &v
	return s
}

// SetSnapshotIds sets the SnapshotIds field's value.
func (s *DescribeSnapshotsInput) SetSnapshotIds(v string) *DescribeSnapshotsInput {
	s.SnapshotIds = &v
	return s
}

// SetSnapshotName sets the SnapshotName field's value.
func (s *DescribeSnapshotsInput) SetSnapshotName(v string) *DescribeSnapshotsInput {
	s.SnapshotName = &v
	return s
}

// SetSnapshotType sets the SnapshotType field's value.
func (s *DescribeSnapshotsInput) SetSnapshotType(v string) *DescribeSnapshotsInput {
	s.SnapshotType = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeSnapshotsInput) SetStatus(v string) *DescribeSnapshotsInput {
	s.Status = &v
	return s
}

type DescribeSnapshotsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	Snapshots []*SnapshotForDescribeSnapshotsOutput `type:"list"`

	TotalCount *int32 `type:"int32"`
}

// String returns the string representation
func (s DescribeSnapshotsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSnapshotsOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeSnapshotsOutput) SetPageNumber(v int32) *DescribeSnapshotsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeSnapshotsOutput) SetPageSize(v int32) *DescribeSnapshotsOutput {
	s.PageSize = &v
	return s
}

// SetSnapshots sets the Snapshots field's value.
func (s *DescribeSnapshotsOutput) SetSnapshots(v []*SnapshotForDescribeSnapshotsOutput) *DescribeSnapshotsOutput {
	s.Snapshots = v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeSnapshotsOutput) SetTotalCount(v int32) *DescribeSnapshotsOutput {
	s.TotalCount = &v
	return s
}

type SnapshotForDescribeSnapshotsOutput struct {
	_ struct{} `type:"structure"`

	CreateTime *string `type:"string"`

	Description *string `type:"string"`

	FileSystemId *string `type:"string"`

	FileSystemName *string `type:"string"`

	IsEncrypt *bool `type:"boolean"`

	Progress *string `type:"string"`

	RetentionDays *int32 `type:"int32"`

	SnapshotId *string `type:"string"`

	SnapshotName *string `type:"string"`

	SnapshotType *string `type:"string"`

	SourceSize *int32 `type:"int32"`

	SourceVersion *string `type:"string"`

	Status *string `type:"string"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s SnapshotForDescribeSnapshotsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SnapshotForDescribeSnapshotsOutput) GoString() string {
	return s.String()
}

// SetCreateTime sets the CreateTime field's value.
func (s *SnapshotForDescribeSnapshotsOutput) SetCreateTime(v string) *SnapshotForDescribeSnapshotsOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *SnapshotForDescribeSnapshotsOutput) SetDescription(v string) *SnapshotForDescribeSnapshotsOutput {
	s.Description = &v
	return s
}

// SetFileSystemId sets the FileSystemId field's value.
func (s *SnapshotForDescribeSnapshotsOutput) SetFileSystemId(v string) *SnapshotForDescribeSnapshotsOutput {
	s.FileSystemId = &v
	return s
}

// SetFileSystemName sets the FileSystemName field's value.
func (s *SnapshotForDescribeSnapshotsOutput) SetFileSystemName(v string) *SnapshotForDescribeSnapshotsOutput {
	s.FileSystemName = &v
	return s
}

// SetIsEncrypt sets the IsEncrypt field's value.
func (s *SnapshotForDescribeSnapshotsOutput) SetIsEncrypt(v bool) *SnapshotForDescribeSnapshotsOutput {
	s.IsEncrypt = &v
	return s
}

// SetProgress sets the Progress field's value.
func (s *SnapshotForDescribeSnapshotsOutput) SetProgress(v string) *SnapshotForDescribeSnapshotsOutput {
	s.Progress = &v
	return s
}

// SetRetentionDays sets the RetentionDays field's value.
func (s *SnapshotForDescribeSnapshotsOutput) SetRetentionDays(v int32) *SnapshotForDescribeSnapshotsOutput {
	s.RetentionDays = &v
	return s
}

// SetSnapshotId sets the SnapshotId field's value.
func (s *SnapshotForDescribeSnapshotsOutput) SetSnapshotId(v string) *SnapshotForDescribeSnapshotsOutput {
	s.SnapshotId = &v
	return s
}

// SetSnapshotName sets the SnapshotName field's value.
func (s *SnapshotForDescribeSnapshotsOutput) SetSnapshotName(v string) *SnapshotForDescribeSnapshotsOutput {
	s.SnapshotName = &v
	return s
}

// SetSnapshotType sets the SnapshotType field's value.
func (s *SnapshotForDescribeSnapshotsOutput) SetSnapshotType(v string) *SnapshotForDescribeSnapshotsOutput {
	s.SnapshotType = &v
	return s
}

// SetSourceSize sets the SourceSize field's value.
func (s *SnapshotForDescribeSnapshotsOutput) SetSourceSize(v int32) *SnapshotForDescribeSnapshotsOutput {
	s.SourceSize = &v
	return s
}

// SetSourceVersion sets the SourceVersion field's value.
func (s *SnapshotForDescribeSnapshotsOutput) SetSourceVersion(v string) *SnapshotForDescribeSnapshotsOutput {
	s.SourceVersion = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *SnapshotForDescribeSnapshotsOutput) SetStatus(v string) *SnapshotForDescribeSnapshotsOutput {
	s.Status = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *SnapshotForDescribeSnapshotsOutput) SetZoneId(v string) *SnapshotForDescribeSnapshotsOutput {
	s.ZoneId = &v
	return s
}
