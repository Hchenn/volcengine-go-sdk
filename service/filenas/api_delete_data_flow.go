// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package filenas

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteDataFlowCommon = "DeleteDataFlow"

// DeleteDataFlowCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteDataFlowCommon operation. The "output" return
// value will be populated with the DeleteDataFlowCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteDataFlowCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteDataFlowCommon Send returns without error.
//
// See DeleteDataFlowCommon for more information on using the DeleteDataFlowCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteDataFlowCommonRequest method.
//    req, resp := client.DeleteDataFlowCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FILENAS) DeleteDataFlowCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteDataFlowCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteDataFlowCommon API operation for FILENAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FILENAS's
// API operation DeleteDataFlowCommon for usage and error information.
func (c *FILENAS) DeleteDataFlowCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteDataFlowCommonRequest(input)
	return out, req.Send()
}

// DeleteDataFlowCommonWithContext is the same as DeleteDataFlowCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteDataFlowCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FILENAS) DeleteDataFlowCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteDataFlowCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteDataFlow = "DeleteDataFlow"

// DeleteDataFlowRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteDataFlow operation. The "output" return
// value will be populated with the DeleteDataFlowCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteDataFlowCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteDataFlowCommon Send returns without error.
//
// See DeleteDataFlow for more information on using the DeleteDataFlow
// API call, and error handling.
//
//    // Example sending a request using the DeleteDataFlowRequest method.
//    req, resp := client.DeleteDataFlowRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FILENAS) DeleteDataFlowRequest(input *DeleteDataFlowInput) (req *request.Request, output *DeleteDataFlowOutput) {
	op := &request.Operation{
		Name:       opDeleteDataFlow,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteDataFlowInput{}
	}

	output = &DeleteDataFlowOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteDataFlow API operation for FILENAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FILENAS's
// API operation DeleteDataFlow for usage and error information.
func (c *FILENAS) DeleteDataFlow(input *DeleteDataFlowInput) (*DeleteDataFlowOutput, error) {
	req, out := c.DeleteDataFlowRequest(input)
	return out, req.Send()
}

// DeleteDataFlowWithContext is the same as DeleteDataFlow with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteDataFlow for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FILENAS) DeleteDataFlowWithContext(ctx volcengine.Context, input *DeleteDataFlowInput, opts ...request.Option) (*DeleteDataFlowOutput, error) {
	req, out := c.DeleteDataFlowRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteDataFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EnableDeleteTlsLogTopic *bool `type:"boolean" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`

	Policy *PolicyForDeleteDataFlowInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DeleteDataFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteDataFlowInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteDataFlowInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteDataFlowInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetEnableDeleteTlsLogTopic sets the EnableDeleteTlsLogTopic field's value.
func (s *DeleteDataFlowInput) SetEnableDeleteTlsLogTopic(v bool) *DeleteDataFlowInput {
	s.EnableDeleteTlsLogTopic = &v
	return s
}

// SetId sets the Id field's value.
func (s *DeleteDataFlowInput) SetId(v string) *DeleteDataFlowInput {
	s.Id = &v
	return s
}

// SetPolicy sets the Policy field's value.
func (s *DeleteDataFlowInput) SetPolicy(v *PolicyForDeleteDataFlowInput) *DeleteDataFlowInput {
	s.Policy = v
	return s
}

type DeleteDataFlowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteDataFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteDataFlowOutput) GoString() string {
	return s.String()
}

type DimensionForDeleteDataFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Attr *string `type:"string" json:",omitempty" enum:"EnumOfAttrForDeleteDataFlowInput"`

	StaticValues []*StaticValueForDeleteDataFlowInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DimensionForDeleteDataFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DimensionForDeleteDataFlowInput) GoString() string {
	return s.String()
}

// SetAttr sets the Attr field's value.
func (s *DimensionForDeleteDataFlowInput) SetAttr(v string) *DimensionForDeleteDataFlowInput {
	s.Attr = &v
	return s
}

// SetStaticValues sets the StaticValues field's value.
func (s *DimensionForDeleteDataFlowInput) SetStaticValues(v []*StaticValueForDeleteDataFlowInput) *DimensionForDeleteDataFlowInput {
	s.StaticValues = v
	return s
}

type FilterInfoForDeleteDataFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Dimensions []*DimensionForDeleteDataFlowInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s FilterInfoForDeleteDataFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterInfoForDeleteDataFlowInput) GoString() string {
	return s.String()
}

// SetDimensions sets the Dimensions field's value.
func (s *FilterInfoForDeleteDataFlowInput) SetDimensions(v []*DimensionForDeleteDataFlowInput) *FilterInfoForDeleteDataFlowInput {
	s.Dimensions = v
	return s
}

type PolicyForDeleteDataFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FilterInfo *FilterInfoForDeleteDataFlowInput `type:"structure" json:",omitempty"`

	Type *string `type:"string" json:",omitempty" enum:"EnumOfTypeForDeleteDataFlowInput"`
}

// String returns the string representation
func (s PolicyForDeleteDataFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PolicyForDeleteDataFlowInput) GoString() string {
	return s.String()
}

// SetFilterInfo sets the FilterInfo field's value.
func (s *PolicyForDeleteDataFlowInput) SetFilterInfo(v *FilterInfoForDeleteDataFlowInput) *PolicyForDeleteDataFlowInput {
	s.FilterInfo = v
	return s
}

// SetType sets the Type field's value.
func (s *PolicyForDeleteDataFlowInput) SetType(v string) *PolicyForDeleteDataFlowInput {
	s.Type = &v
	return s
}

type StaticValueForDeleteDataFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Relationship *string `type:"string" json:",omitempty" enum:"EnumOfRelationshipForDeleteDataFlowInput"`

	Unit *string `type:"string" json:",omitempty" enum:"EnumOfUnitForDeleteDataFlowInput"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s StaticValueForDeleteDataFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StaticValueForDeleteDataFlowInput) GoString() string {
	return s.String()
}

// SetRelationship sets the Relationship field's value.
func (s *StaticValueForDeleteDataFlowInput) SetRelationship(v string) *StaticValueForDeleteDataFlowInput {
	s.Relationship = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *StaticValueForDeleteDataFlowInput) SetUnit(v string) *StaticValueForDeleteDataFlowInput {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *StaticValueForDeleteDataFlowInput) SetValue(v string) *StaticValueForDeleteDataFlowInput {
	s.Value = &v
	return s
}

const (
	// EnumOfAttrForDeleteDataFlowInputFileSize is a EnumOfAttrForDeleteDataFlowInput enum value
	EnumOfAttrForDeleteDataFlowInputFileSize = "FileSize"

	// EnumOfAttrForDeleteDataFlowInputFileSuffix is a EnumOfAttrForDeleteDataFlowInput enum value
	EnumOfAttrForDeleteDataFlowInputFileSuffix = "FileSuffix"

	// EnumOfAttrForDeleteDataFlowInputSubDirectory is a EnumOfAttrForDeleteDataFlowInput enum value
	EnumOfAttrForDeleteDataFlowInputSubDirectory = "SubDirectory"

	// EnumOfAttrForDeleteDataFlowInputModifyTime is a EnumOfAttrForDeleteDataFlowInput enum value
	EnumOfAttrForDeleteDataFlowInputModifyTime = "ModifyTime"

	// EnumOfAttrForDeleteDataFlowInputAccessTime is a EnumOfAttrForDeleteDataFlowInput enum value
	EnumOfAttrForDeleteDataFlowInputAccessTime = "AccessTime"
)

const (
	// EnumOfRelationshipForDeleteDataFlowInputGe is a EnumOfRelationshipForDeleteDataFlowInput enum value
	EnumOfRelationshipForDeleteDataFlowInputGe = "GE"

	// EnumOfRelationshipForDeleteDataFlowInputCt is a EnumOfRelationshipForDeleteDataFlowInput enum value
	EnumOfRelationshipForDeleteDataFlowInputCt = "CT"

	// EnumOfRelationshipForDeleteDataFlowInputNc is a EnumOfRelationshipForDeleteDataFlowInput enum value
	EnumOfRelationshipForDeleteDataFlowInputNc = "NC"
)

const (
	// EnumOfTypeForDeleteDataFlowInputRetain is a EnumOfTypeForDeleteDataFlowInput enum value
	EnumOfTypeForDeleteDataFlowInputRetain = "Retain"

	// EnumOfTypeForDeleteDataFlowInputDelete is a EnumOfTypeForDeleteDataFlowInput enum value
	EnumOfTypeForDeleteDataFlowInputDelete = "Delete"
)

const (
	// EnumOfUnitForDeleteDataFlowInputHour is a EnumOfUnitForDeleteDataFlowInput enum value
	EnumOfUnitForDeleteDataFlowInputHour = "Hour"

	// EnumOfUnitForDeleteDataFlowInputDay is a EnumOfUnitForDeleteDataFlowInput enum value
	EnumOfUnitForDeleteDataFlowInputDay = "Day"

	// EnumOfUnitForDeleteDataFlowInputWeek is a EnumOfUnitForDeleteDataFlowInput enum value
	EnumOfUnitForDeleteDataFlowInputWeek = "Week"

	// EnumOfUnitForDeleteDataFlowInputMonth is a EnumOfUnitForDeleteDataFlowInput enum value
	EnumOfUnitForDeleteDataFlowInputMonth = "Month"

	// EnumOfUnitForDeleteDataFlowInputYear is a EnumOfUnitForDeleteDataFlowInput enum value
	EnumOfUnitForDeleteDataFlowInputYear = "Year"
)
