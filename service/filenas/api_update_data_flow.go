// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package filenas

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateDataFlowCommon = "UpdateDataFlow"

// UpdateDataFlowCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateDataFlowCommon operation. The "output" return
// value will be populated with the UpdateDataFlowCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateDataFlowCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateDataFlowCommon Send returns without error.
//
// See UpdateDataFlowCommon for more information on using the UpdateDataFlowCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateDataFlowCommonRequest method.
//    req, resp := client.UpdateDataFlowCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FILENAS) UpdateDataFlowCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateDataFlowCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateDataFlowCommon API operation for FILENAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FILENAS's
// API operation UpdateDataFlowCommon for usage and error information.
func (c *FILENAS) UpdateDataFlowCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateDataFlowCommonRequest(input)
	return out, req.Send()
}

// UpdateDataFlowCommonWithContext is the same as UpdateDataFlowCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateDataFlowCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FILENAS) UpdateDataFlowCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateDataFlowCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateDataFlow = "UpdateDataFlow"

// UpdateDataFlowRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateDataFlow operation. The "output" return
// value will be populated with the UpdateDataFlowCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateDataFlowCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateDataFlowCommon Send returns without error.
//
// See UpdateDataFlow for more information on using the UpdateDataFlow
// API call, and error handling.
//
//    // Example sending a request using the UpdateDataFlowRequest method.
//    req, resp := client.UpdateDataFlowRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FILENAS) UpdateDataFlowRequest(input *UpdateDataFlowInput) (req *request.Request, output *UpdateDataFlowOutput) {
	op := &request.Operation{
		Name:       opUpdateDataFlow,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateDataFlowInput{}
	}

	output = &UpdateDataFlowOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateDataFlow API operation for FILENAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FILENAS's
// API operation UpdateDataFlow for usage and error information.
func (c *FILENAS) UpdateDataFlow(input *UpdateDataFlowInput) (*UpdateDataFlowOutput, error) {
	req, out := c.UpdateDataFlowRequest(input)
	return out, req.Send()
}

// UpdateDataFlowWithContext is the same as UpdateDataFlow with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateDataFlow for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FILENAS) UpdateDataFlowWithContext(ctx volcengine.Context, input *UpdateDataFlowInput, opts ...request.Option) (*UpdateDataFlowOutput, error) {
	req, out := c.UpdateDataFlowRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DimensionForUpdateDataFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Attr *string `type:"string" json:",omitempty" enum:"EnumOfAttrForUpdateDataFlowInput"`

	StaticValues []*StaticValueForUpdateDataFlowInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DimensionForUpdateDataFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DimensionForUpdateDataFlowInput) GoString() string {
	return s.String()
}

// SetAttr sets the Attr field's value.
func (s *DimensionForUpdateDataFlowInput) SetAttr(v string) *DimensionForUpdateDataFlowInput {
	s.Attr = &v
	return s
}

// SetStaticValues sets the StaticValues field's value.
func (s *DimensionForUpdateDataFlowInput) SetStaticValues(v []*StaticValueForUpdateDataFlowInput) *DimensionForUpdateDataFlowInput {
	s.StaticValues = v
	return s
}

type EvictPolicyForUpdateDataFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FilterInfo *FilterInfoForUpdateDataFlowInput `type:"structure" json:",omitempty"`

	Status *string `type:"string" json:",omitempty" enum:"EnumOfStatusForUpdateDataFlowInput"`

	Type *string `type:"string" json:",omitempty" enum:"EnumOfTypeForUpdateDataFlowInput"`
}

// String returns the string representation
func (s EvictPolicyForUpdateDataFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EvictPolicyForUpdateDataFlowInput) GoString() string {
	return s.String()
}

// SetFilterInfo sets the FilterInfo field's value.
func (s *EvictPolicyForUpdateDataFlowInput) SetFilterInfo(v *FilterInfoForUpdateDataFlowInput) *EvictPolicyForUpdateDataFlowInput {
	s.FilterInfo = v
	return s
}

// SetStatus sets the Status field's value.
func (s *EvictPolicyForUpdateDataFlowInput) SetStatus(v string) *EvictPolicyForUpdateDataFlowInput {
	s.Status = &v
	return s
}

// SetType sets the Type field's value.
func (s *EvictPolicyForUpdateDataFlowInput) SetType(v string) *EvictPolicyForUpdateDataFlowInput {
	s.Type = &v
	return s
}

type ExportPolicyForUpdateDataFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FilterInfo *FilterInfoForUpdateDataFlowInput `type:"structure" json:",omitempty"`

	Status *string `type:"string" json:",omitempty" enum:"EnumOfStatusForUpdateDataFlowInput"`

	Type *string `type:"string" json:",omitempty" enum:"EnumOfTypeForUpdateDataFlowInput"`
}

// String returns the string representation
func (s ExportPolicyForUpdateDataFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ExportPolicyForUpdateDataFlowInput) GoString() string {
	return s.String()
}

// SetFilterInfo sets the FilterInfo field's value.
func (s *ExportPolicyForUpdateDataFlowInput) SetFilterInfo(v *FilterInfoForUpdateDataFlowInput) *ExportPolicyForUpdateDataFlowInput {
	s.FilterInfo = v
	return s
}

// SetStatus sets the Status field's value.
func (s *ExportPolicyForUpdateDataFlowInput) SetStatus(v string) *ExportPolicyForUpdateDataFlowInput {
	s.Status = &v
	return s
}

// SetType sets the Type field's value.
func (s *ExportPolicyForUpdateDataFlowInput) SetType(v string) *ExportPolicyForUpdateDataFlowInput {
	s.Type = &v
	return s
}

type FilterInfoForUpdateDataFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Dimensions []*DimensionForUpdateDataFlowInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s FilterInfoForUpdateDataFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterInfoForUpdateDataFlowInput) GoString() string {
	return s.String()
}

// SetDimensions sets the Dimensions field's value.
func (s *FilterInfoForUpdateDataFlowInput) SetDimensions(v []*DimensionForUpdateDataFlowInput) *FilterInfoForUpdateDataFlowInput {
	s.Dimensions = v
	return s
}

type ImportPolicyForUpdateDataFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FilterInfo *FilterInfoForUpdateDataFlowInput `type:"structure" json:",omitempty"`

	Status *string `type:"string" json:",omitempty" enum:"EnumOfStatusForUpdateDataFlowInput"`

	Type *string `type:"string" json:",omitempty" enum:"ConvertEnumOfTypeForUpdateDataFlowInput"`
}

// String returns the string representation
func (s ImportPolicyForUpdateDataFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ImportPolicyForUpdateDataFlowInput) GoString() string {
	return s.String()
}

// SetFilterInfo sets the FilterInfo field's value.
func (s *ImportPolicyForUpdateDataFlowInput) SetFilterInfo(v *FilterInfoForUpdateDataFlowInput) *ImportPolicyForUpdateDataFlowInput {
	s.FilterInfo = v
	return s
}

// SetStatus sets the Status field's value.
func (s *ImportPolicyForUpdateDataFlowInput) SetStatus(v string) *ImportPolicyForUpdateDataFlowInput {
	s.Status = &v
	return s
}

// SetType sets the Type field's value.
func (s *ImportPolicyForUpdateDataFlowInput) SetType(v string) *ImportPolicyForUpdateDataFlowInput {
	s.Type = &v
	return s
}

type StaticValueForUpdateDataFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Relationship *string `type:"string" json:",omitempty" enum:"EnumOfRelationshipForUpdateDataFlowInput"`

	Unit *string `type:"string" json:",omitempty" enum:"EnumOfUnitForUpdateDataFlowInput"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s StaticValueForUpdateDataFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StaticValueForUpdateDataFlowInput) GoString() string {
	return s.String()
}

// SetRelationship sets the Relationship field's value.
func (s *StaticValueForUpdateDataFlowInput) SetRelationship(v string) *StaticValueForUpdateDataFlowInput {
	s.Relationship = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *StaticValueForUpdateDataFlowInput) SetUnit(v string) *StaticValueForUpdateDataFlowInput {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *StaticValueForUpdateDataFlowInput) SetValue(v string) *StaticValueForUpdateDataFlowInput {
	s.Value = &v
	return s
}

type UpdateDataFlowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EvictPolicy *EvictPolicyForUpdateDataFlowInput `type:"structure" json:",omitempty"`

	ExportPolicy *ExportPolicyForUpdateDataFlowInput `type:"structure" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`

	ImportPolicy *ImportPolicyForUpdateDataFlowInput `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	SameNameFilePolicy *string `type:"string" json:",omitempty" enum:"EnumOfSameNameFilePolicyForUpdateDataFlowInput"`
}

// String returns the string representation
func (s UpdateDataFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateDataFlowInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateDataFlowInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateDataFlowInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetEvictPolicy sets the EvictPolicy field's value.
func (s *UpdateDataFlowInput) SetEvictPolicy(v *EvictPolicyForUpdateDataFlowInput) *UpdateDataFlowInput {
	s.EvictPolicy = v
	return s
}

// SetExportPolicy sets the ExportPolicy field's value.
func (s *UpdateDataFlowInput) SetExportPolicy(v *ExportPolicyForUpdateDataFlowInput) *UpdateDataFlowInput {
	s.ExportPolicy = v
	return s
}

// SetId sets the Id field's value.
func (s *UpdateDataFlowInput) SetId(v string) *UpdateDataFlowInput {
	s.Id = &v
	return s
}

// SetImportPolicy sets the ImportPolicy field's value.
func (s *UpdateDataFlowInput) SetImportPolicy(v *ImportPolicyForUpdateDataFlowInput) *UpdateDataFlowInput {
	s.ImportPolicy = v
	return s
}

// SetName sets the Name field's value.
func (s *UpdateDataFlowInput) SetName(v string) *UpdateDataFlowInput {
	s.Name = &v
	return s
}

// SetSameNameFilePolicy sets the SameNameFilePolicy field's value.
func (s *UpdateDataFlowInput) SetSameNameFilePolicy(v string) *UpdateDataFlowInput {
	s.SameNameFilePolicy = &v
	return s
}

type UpdateDataFlowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateDataFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateDataFlowOutput) GoString() string {
	return s.String()
}

const (
	// ConvertEnumOfTypeForUpdateDataFlowInputNone is a ConvertEnumOfTypeForUpdateDataFlowInput enum value
	ConvertEnumOfTypeForUpdateDataFlowInputNone = "None"

	// ConvertEnumOfTypeForUpdateDataFlowInputMetadata is a ConvertEnumOfTypeForUpdateDataFlowInput enum value
	ConvertEnumOfTypeForUpdateDataFlowInputMetadata = "Metadata"

	// ConvertEnumOfTypeForUpdateDataFlowInputMetaAndData is a ConvertEnumOfTypeForUpdateDataFlowInput enum value
	ConvertEnumOfTypeForUpdateDataFlowInputMetaAndData = "MetaAndData"
)

const (
	// EnumOfAttrForUpdateDataFlowInputFileSize is a EnumOfAttrForUpdateDataFlowInput enum value
	EnumOfAttrForUpdateDataFlowInputFileSize = "FileSize"

	// EnumOfAttrForUpdateDataFlowInputFileSuffix is a EnumOfAttrForUpdateDataFlowInput enum value
	EnumOfAttrForUpdateDataFlowInputFileSuffix = "FileSuffix"

	// EnumOfAttrForUpdateDataFlowInputSubDirectory is a EnumOfAttrForUpdateDataFlowInput enum value
	EnumOfAttrForUpdateDataFlowInputSubDirectory = "SubDirectory"

	// EnumOfAttrForUpdateDataFlowInputModifyTime is a EnumOfAttrForUpdateDataFlowInput enum value
	EnumOfAttrForUpdateDataFlowInputModifyTime = "ModifyTime"

	// EnumOfAttrForUpdateDataFlowInputAccessTime is a EnumOfAttrForUpdateDataFlowInput enum value
	EnumOfAttrForUpdateDataFlowInputAccessTime = "AccessTime"
)

const (
	// EnumOfRelationshipForUpdateDataFlowInputGe is a EnumOfRelationshipForUpdateDataFlowInput enum value
	EnumOfRelationshipForUpdateDataFlowInputGe = "GE"

	// EnumOfRelationshipForUpdateDataFlowInputCt is a EnumOfRelationshipForUpdateDataFlowInput enum value
	EnumOfRelationshipForUpdateDataFlowInputCt = "CT"

	// EnumOfRelationshipForUpdateDataFlowInputNc is a EnumOfRelationshipForUpdateDataFlowInput enum value
	EnumOfRelationshipForUpdateDataFlowInputNc = "NC"
)

const (
	// EnumOfSameNameFilePolicyForUpdateDataFlowInputSkip is a EnumOfSameNameFilePolicyForUpdateDataFlowInput enum value
	EnumOfSameNameFilePolicyForUpdateDataFlowInputSkip = "Skip"

	// EnumOfSameNameFilePolicyForUpdateDataFlowInputKeepLatest is a EnumOfSameNameFilePolicyForUpdateDataFlowInput enum value
	EnumOfSameNameFilePolicyForUpdateDataFlowInputKeepLatest = "KeepLatest"

	// EnumOfSameNameFilePolicyForUpdateDataFlowInputOverWrite is a EnumOfSameNameFilePolicyForUpdateDataFlowInput enum value
	EnumOfSameNameFilePolicyForUpdateDataFlowInputOverWrite = "OverWrite"
)

const (
	// EnumOfStatusForUpdateDataFlowInputStarting is a EnumOfStatusForUpdateDataFlowInput enum value
	EnumOfStatusForUpdateDataFlowInputStarting = "Starting"

	// EnumOfStatusForUpdateDataFlowInputRunning is a EnumOfStatusForUpdateDataFlowInput enum value
	EnumOfStatusForUpdateDataFlowInputRunning = "Running"

	// EnumOfStatusForUpdateDataFlowInputStopping is a EnumOfStatusForUpdateDataFlowInput enum value
	EnumOfStatusForUpdateDataFlowInputStopping = "Stopping"

	// EnumOfStatusForUpdateDataFlowInputStopped is a EnumOfStatusForUpdateDataFlowInput enum value
	EnumOfStatusForUpdateDataFlowInputStopped = "Stopped"

	// EnumOfStatusForUpdateDataFlowInputError is a EnumOfStatusForUpdateDataFlowInput enum value
	EnumOfStatusForUpdateDataFlowInputError = "Error"
)

const (
	// EnumOfTypeForUpdateDataFlowInputNone is a EnumOfTypeForUpdateDataFlowInput enum value
	EnumOfTypeForUpdateDataFlowInputNone = "None"

	// EnumOfTypeForUpdateDataFlowInputCustomize is a EnumOfTypeForUpdateDataFlowInput enum value
	EnumOfTypeForUpdateDataFlowInputCustomize = "Customize"
)

const (
	// EnumOfUnitForUpdateDataFlowInputHour is a EnumOfUnitForUpdateDataFlowInput enum value
	EnumOfUnitForUpdateDataFlowInputHour = "Hour"

	// EnumOfUnitForUpdateDataFlowInputDay is a EnumOfUnitForUpdateDataFlowInput enum value
	EnumOfUnitForUpdateDataFlowInputDay = "Day"

	// EnumOfUnitForUpdateDataFlowInputWeek is a EnumOfUnitForUpdateDataFlowInput enum value
	EnumOfUnitForUpdateDataFlowInputWeek = "Week"

	// EnumOfUnitForUpdateDataFlowInputMonth is a EnumOfUnitForUpdateDataFlowInput enum value
	EnumOfUnitForUpdateDataFlowInputMonth = "Month"

	// EnumOfUnitForUpdateDataFlowInputYear is a EnumOfUnitForUpdateDataFlowInput enum value
	EnumOfUnitForUpdateDataFlowInputYear = "Year"
)
