// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdspostgresql

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDBInstanceDetailCommon = "DescribeDBInstanceDetail"

// DescribeDBInstanceDetailCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstanceDetailCommon operation. The "output" return
// value will be populated with the DescribeDBInstanceDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstanceDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstanceDetailCommon Send returns without error.
//
// See DescribeDBInstanceDetailCommon for more information on using the DescribeDBInstanceDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstanceDetailCommonRequest method.
//    req, resp := client.DescribeDBInstanceDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSPOSTGRESQL) DescribeDBInstanceDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDBInstanceDetailCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstanceDetailCommon API operation for RDS_POSTGRESQL.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_POSTGRESQL's
// API operation DescribeDBInstanceDetailCommon for usage and error information.
func (c *RDSPOSTGRESQL) DescribeDBInstanceDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstanceDetailCommonRequest(input)
	return out, req.Send()
}

// DescribeDBInstanceDetailCommonWithContext is the same as DescribeDBInstanceDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstanceDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSPOSTGRESQL) DescribeDBInstanceDetailCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstanceDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDBInstanceDetail = "DescribeDBInstanceDetail"

// DescribeDBInstanceDetailRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstanceDetail operation. The "output" return
// value will be populated with the DescribeDBInstanceDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstanceDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstanceDetailCommon Send returns without error.
//
// See DescribeDBInstanceDetail for more information on using the DescribeDBInstanceDetail
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstanceDetailRequest method.
//    req, resp := client.DescribeDBInstanceDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSPOSTGRESQL) DescribeDBInstanceDetailRequest(input *DescribeDBInstanceDetailInput) (req *request.Request, output *DescribeDBInstanceDetailOutput) {
	op := &request.Operation{
		Name:       opDescribeDBInstanceDetail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDBInstanceDetailInput{}
	}

	output = &DescribeDBInstanceDetailOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstanceDetail API operation for RDS_POSTGRESQL.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_POSTGRESQL's
// API operation DescribeDBInstanceDetail for usage and error information.
func (c *RDSPOSTGRESQL) DescribeDBInstanceDetail(input *DescribeDBInstanceDetailInput) (*DescribeDBInstanceDetailOutput, error) {
	req, out := c.DescribeDBInstanceDetailRequest(input)
	return out, req.Send()
}

// DescribeDBInstanceDetailWithContext is the same as DescribeDBInstanceDetail with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstanceDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSPOSTGRESQL) DescribeDBInstanceDetailWithContext(ctx volcengine.Context, input *DescribeDBInstanceDetailInput, opts ...request.Option) (*DescribeDBInstanceDetailOutput, error) {
	req, out := c.DescribeDBInstanceDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AddressForDescribeDBInstanceDetailOutput struct {
	_ struct{} `type:"structure"`

	DNSVisibility *bool `type:"boolean"`

	Domain *string `type:"string"`

	EipId *string `type:"string"`

	IPAddress *string `type:"string"`

	NetworkType *string `type:"string" enum:"EnumOfNetworkTypeForDescribeDBInstanceDetailOutput"`

	Port *string `type:"string"`

	SubnetId *string `type:"string"`
}

// String returns the string representation
func (s AddressForDescribeDBInstanceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddressForDescribeDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetDNSVisibility sets the DNSVisibility field's value.
func (s *AddressForDescribeDBInstanceDetailOutput) SetDNSVisibility(v bool) *AddressForDescribeDBInstanceDetailOutput {
	s.DNSVisibility = &v
	return s
}

// SetDomain sets the Domain field's value.
func (s *AddressForDescribeDBInstanceDetailOutput) SetDomain(v string) *AddressForDescribeDBInstanceDetailOutput {
	s.Domain = &v
	return s
}

// SetEipId sets the EipId field's value.
func (s *AddressForDescribeDBInstanceDetailOutput) SetEipId(v string) *AddressForDescribeDBInstanceDetailOutput {
	s.EipId = &v
	return s
}

// SetIPAddress sets the IPAddress field's value.
func (s *AddressForDescribeDBInstanceDetailOutput) SetIPAddress(v string) *AddressForDescribeDBInstanceDetailOutput {
	s.IPAddress = &v
	return s
}

// SetNetworkType sets the NetworkType field's value.
func (s *AddressForDescribeDBInstanceDetailOutput) SetNetworkType(v string) *AddressForDescribeDBInstanceDetailOutput {
	s.NetworkType = &v
	return s
}

// SetPort sets the Port field's value.
func (s *AddressForDescribeDBInstanceDetailOutput) SetPort(v string) *AddressForDescribeDBInstanceDetailOutput {
	s.Port = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *AddressForDescribeDBInstanceDetailOutput) SetSubnetId(v string) *AddressForDescribeDBInstanceDetailOutput {
	s.SubnetId = &v
	return s
}

type BasicInfoForDescribeDBInstanceDetailOutput struct {
	_ struct{} `type:"structure"`

	AllowListVersion *string `type:"string" enum:"EnumOfAllowListVersionForDescribeDBInstanceDetailOutput"`

	CreateTime *string `type:"string"`

	DBEngineVersion *string `type:"string" enum:"EnumOfDBEngineVersionForDescribeDBInstanceDetailOutput"`

	DataSyncMode *string `type:"string" enum:"EnumOfDataSyncModeForDescribeDBInstanceDetailOutput"`

	InstanceId *string `type:"string"`

	InstanceName *string `type:"string"`

	InstanceStatus *string `type:"string" enum:"EnumOfInstanceStatusForDescribeDBInstanceDetailOutput"`

	InstanceTag []*InstanceTagForDescribeDBInstanceDetailOutput `type:"list"`

	InstanceType *string `type:"string" enum:"EnumOfInstanceTypeForDescribeDBInstanceDetailOutput"`

	Memory *int32 `type:"int32"`

	NodeNumber *string `type:"string"`

	NodeSpec *string `type:"string"`

	ProjectName *string `type:"string"`

	RegionId *string `type:"string"`

	StorageDataUse *int64 `type:"int64"`

	StorageLogUse *int64 `type:"int64"`

	StorageSpace *int32 `type:"int32"`

	StorageTempUse *int64 `type:"int64"`

	StorageType *string `type:"string" enum:"EnumOfStorageTypeForDescribeDBInstanceDetailOutput"`

	StorageUse *int64 `type:"int64"`

	StorageWALUse *int64 `type:"int64"`

	SubnetId *string `type:"string"`

	UpdateTime *string `type:"string"`

	VCPU *int32 `type:"int32"`

	VpcID *string `type:"string"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s BasicInfoForDescribeDBInstanceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BasicInfoForDescribeDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetAllowListVersion sets the AllowListVersion field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetAllowListVersion(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.AllowListVersion = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetCreateTime(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.CreateTime = &v
	return s
}

// SetDBEngineVersion sets the DBEngineVersion field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetDBEngineVersion(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.DBEngineVersion = &v
	return s
}

// SetDataSyncMode sets the DataSyncMode field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetDataSyncMode(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.DataSyncMode = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetInstanceId(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetInstanceName(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.InstanceName = &v
	return s
}

// SetInstanceStatus sets the InstanceStatus field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetInstanceStatus(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.InstanceStatus = &v
	return s
}

// SetInstanceTag sets the InstanceTag field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetInstanceTag(v []*InstanceTagForDescribeDBInstanceDetailOutput) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.InstanceTag = v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetInstanceType(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.InstanceType = &v
	return s
}

// SetMemory sets the Memory field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetMemory(v int32) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.Memory = &v
	return s
}

// SetNodeNumber sets the NodeNumber field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetNodeNumber(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.NodeNumber = &v
	return s
}

// SetNodeSpec sets the NodeSpec field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetNodeSpec(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.NodeSpec = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetProjectName(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.ProjectName = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetRegionId(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.RegionId = &v
	return s
}

// SetStorageDataUse sets the StorageDataUse field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetStorageDataUse(v int64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.StorageDataUse = &v
	return s
}

// SetStorageLogUse sets the StorageLogUse field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetStorageLogUse(v int64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.StorageLogUse = &v
	return s
}

// SetStorageSpace sets the StorageSpace field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetStorageSpace(v int32) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.StorageSpace = &v
	return s
}

// SetStorageTempUse sets the StorageTempUse field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetStorageTempUse(v int64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.StorageTempUse = &v
	return s
}

// SetStorageType sets the StorageType field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetStorageType(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.StorageType = &v
	return s
}

// SetStorageUse sets the StorageUse field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetStorageUse(v int64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.StorageUse = &v
	return s
}

// SetStorageWALUse sets the StorageWALUse field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetStorageWALUse(v int64) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.StorageWALUse = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetSubnetId(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.SubnetId = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetUpdateTime(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.UpdateTime = &v
	return s
}

// SetVCPU sets the VCPU field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetVCPU(v int32) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.VCPU = &v
	return s
}

// SetVpcID sets the VpcID field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetVpcID(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.VpcID = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *BasicInfoForDescribeDBInstanceDetailOutput) SetZoneId(v string) *BasicInfoForDescribeDBInstanceDetailOutput {
	s.ZoneId = &v
	return s
}

type ChargeDetailForDescribeDBInstanceDetailOutput struct {
	_ struct{} `type:"structure"`

	AutoRenew *bool `type:"boolean"`

	ChargeEndTime *string `type:"string"`

	ChargeStartTime *string `type:"string"`

	ChargeStatus *string `type:"string" enum:"EnumOfChargeStatusForDescribeDBInstanceDetailOutput"`

	ChargeType *string `type:"string" enum:"EnumOfChargeTypeForDescribeDBInstanceDetailOutput"`

	Number *int32 `type:"int32"`

	OverdueReclaimTime *string `type:"string"`

	OverdueTime *string `type:"string"`

	Period *int32 `type:"int32"`

	PeriodUnit *string `type:"string" enum:"EnumOfPeriodUnitForDescribeDBInstanceDetailOutput"`

	TempModifyEndTime *string `type:"string"`

	TempModifyStartTime *string `type:"string"`
}

// String returns the string representation
func (s ChargeDetailForDescribeDBInstanceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ChargeDetailForDescribeDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetAutoRenew sets the AutoRenew field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetAutoRenew(v bool) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.AutoRenew = &v
	return s
}

// SetChargeEndTime sets the ChargeEndTime field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetChargeEndTime(v string) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.ChargeEndTime = &v
	return s
}

// SetChargeStartTime sets the ChargeStartTime field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetChargeStartTime(v string) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.ChargeStartTime = &v
	return s
}

// SetChargeStatus sets the ChargeStatus field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetChargeStatus(v string) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.ChargeStatus = &v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetChargeType(v string) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.ChargeType = &v
	return s
}

// SetNumber sets the Number field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetNumber(v int32) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.Number = &v
	return s
}

// SetOverdueReclaimTime sets the OverdueReclaimTime field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetOverdueReclaimTime(v string) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.OverdueReclaimTime = &v
	return s
}

// SetOverdueTime sets the OverdueTime field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetOverdueTime(v string) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.OverdueTime = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetPeriod(v int32) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.Period = &v
	return s
}

// SetPeriodUnit sets the PeriodUnit field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetPeriodUnit(v string) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.PeriodUnit = &v
	return s
}

// SetTempModifyEndTime sets the TempModifyEndTime field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetTempModifyEndTime(v string) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.TempModifyEndTime = &v
	return s
}

// SetTempModifyStartTime sets the TempModifyStartTime field's value.
func (s *ChargeDetailForDescribeDBInstanceDetailOutput) SetTempModifyStartTime(v string) *ChargeDetailForDescribeDBInstanceDetailOutput {
	s.TempModifyStartTime = &v
	return s
}

type DescribeDBInstanceDetailInput struct {
	_ struct{} `type:"structure"`

	// InstanceId is a required field
	InstanceId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeDBInstanceDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstanceDetailInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDBInstanceDetailInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDBInstanceDetailInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDBInstanceDetailInput) SetInstanceId(v string) *DescribeDBInstanceDetailInput {
	s.InstanceId = &v
	return s
}

type DescribeDBInstanceDetailOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	BasicInfo *BasicInfoForDescribeDBInstanceDetailOutput `type:"structure"`

	ChargeDetail *ChargeDetailForDescribeDBInstanceDetailOutput `type:"structure"`

	Endpoints []*EndpointForDescribeDBInstanceDetailOutput `type:"list"`

	Nodes []*NodeForDescribeDBInstanceDetailOutput `type:"list"`
}

// String returns the string representation
func (s DescribeDBInstanceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetBasicInfo sets the BasicInfo field's value.
func (s *DescribeDBInstanceDetailOutput) SetBasicInfo(v *BasicInfoForDescribeDBInstanceDetailOutput) *DescribeDBInstanceDetailOutput {
	s.BasicInfo = v
	return s
}

// SetChargeDetail sets the ChargeDetail field's value.
func (s *DescribeDBInstanceDetailOutput) SetChargeDetail(v *ChargeDetailForDescribeDBInstanceDetailOutput) *DescribeDBInstanceDetailOutput {
	s.ChargeDetail = v
	return s
}

// SetEndpoints sets the Endpoints field's value.
func (s *DescribeDBInstanceDetailOutput) SetEndpoints(v []*EndpointForDescribeDBInstanceDetailOutput) *DescribeDBInstanceDetailOutput {
	s.Endpoints = v
	return s
}

// SetNodes sets the Nodes field's value.
func (s *DescribeDBInstanceDetailOutput) SetNodes(v []*NodeForDescribeDBInstanceDetailOutput) *DescribeDBInstanceDetailOutput {
	s.Nodes = v
	return s
}

type EndpointForDescribeDBInstanceDetailOutput struct {
	_ struct{} `type:"structure"`

	Address []*AddressForDescribeDBInstanceDetailOutput `type:"list"`

	AutoAddNewNodes *string `type:"string" enum:"EnumOfAutoAddNewNodesForDescribeDBInstanceDetailOutput"`

	Description *string `type:"string"`

	EnableReadOnly *string `type:"string" enum:"EnumOfEnableReadOnlyForDescribeDBInstanceDetailOutput"`

	EnableReadWriteSplitting *string `type:"string" enum:"EnumOfEnableReadWriteSplittingForDescribeDBInstanceDetailOutput"`

	EndpointId *string `type:"string"`

	EndpointName *string `type:"string"`

	EndpointType *string `type:"string" enum:"EnumOfEndpointTypeForDescribeDBInstanceDetailOutput"`

	ReadOnlyNodeDistributionType *string `type:"string" enum:"EnumOfReadOnlyNodeDistributionTypeForDescribeDBInstanceDetailOutput"`

	ReadOnlyNodeMaxDelayTime *int32 `type:"int32"`

	ReadOnlyNodeWeight []*ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput `type:"list"`

	ReadWriteMode *string `type:"string" enum:"EnumOfReadWriteModeForDescribeDBInstanceDetailOutput"`
}

// String returns the string representation
func (s EndpointForDescribeDBInstanceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EndpointForDescribeDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *EndpointForDescribeDBInstanceDetailOutput) SetAddress(v []*AddressForDescribeDBInstanceDetailOutput) *EndpointForDescribeDBInstanceDetailOutput {
	s.Address = v
	return s
}

// SetAutoAddNewNodes sets the AutoAddNewNodes field's value.
func (s *EndpointForDescribeDBInstanceDetailOutput) SetAutoAddNewNodes(v string) *EndpointForDescribeDBInstanceDetailOutput {
	s.AutoAddNewNodes = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *EndpointForDescribeDBInstanceDetailOutput) SetDescription(v string) *EndpointForDescribeDBInstanceDetailOutput {
	s.Description = &v
	return s
}

// SetEnableReadOnly sets the EnableReadOnly field's value.
func (s *EndpointForDescribeDBInstanceDetailOutput) SetEnableReadOnly(v string) *EndpointForDescribeDBInstanceDetailOutput {
	s.EnableReadOnly = &v
	return s
}

// SetEnableReadWriteSplitting sets the EnableReadWriteSplitting field's value.
func (s *EndpointForDescribeDBInstanceDetailOutput) SetEnableReadWriteSplitting(v string) *EndpointForDescribeDBInstanceDetailOutput {
	s.EnableReadWriteSplitting = &v
	return s
}

// SetEndpointId sets the EndpointId field's value.
func (s *EndpointForDescribeDBInstanceDetailOutput) SetEndpointId(v string) *EndpointForDescribeDBInstanceDetailOutput {
	s.EndpointId = &v
	return s
}

// SetEndpointName sets the EndpointName field's value.
func (s *EndpointForDescribeDBInstanceDetailOutput) SetEndpointName(v string) *EndpointForDescribeDBInstanceDetailOutput {
	s.EndpointName = &v
	return s
}

// SetEndpointType sets the EndpointType field's value.
func (s *EndpointForDescribeDBInstanceDetailOutput) SetEndpointType(v string) *EndpointForDescribeDBInstanceDetailOutput {
	s.EndpointType = &v
	return s
}

// SetReadOnlyNodeDistributionType sets the ReadOnlyNodeDistributionType field's value.
func (s *EndpointForDescribeDBInstanceDetailOutput) SetReadOnlyNodeDistributionType(v string) *EndpointForDescribeDBInstanceDetailOutput {
	s.ReadOnlyNodeDistributionType = &v
	return s
}

// SetReadOnlyNodeMaxDelayTime sets the ReadOnlyNodeMaxDelayTime field's value.
func (s *EndpointForDescribeDBInstanceDetailOutput) SetReadOnlyNodeMaxDelayTime(v int32) *EndpointForDescribeDBInstanceDetailOutput {
	s.ReadOnlyNodeMaxDelayTime = &v
	return s
}

// SetReadOnlyNodeWeight sets the ReadOnlyNodeWeight field's value.
func (s *EndpointForDescribeDBInstanceDetailOutput) SetReadOnlyNodeWeight(v []*ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput) *EndpointForDescribeDBInstanceDetailOutput {
	s.ReadOnlyNodeWeight = v
	return s
}

// SetReadWriteMode sets the ReadWriteMode field's value.
func (s *EndpointForDescribeDBInstanceDetailOutput) SetReadWriteMode(v string) *EndpointForDescribeDBInstanceDetailOutput {
	s.ReadWriteMode = &v
	return s
}

type InstanceTagForDescribeDBInstanceDetailOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s InstanceTagForDescribeDBInstanceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceTagForDescribeDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *InstanceTagForDescribeDBInstanceDetailOutput) SetKey(v string) *InstanceTagForDescribeDBInstanceDetailOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *InstanceTagForDescribeDBInstanceDetailOutput) SetValue(v string) *InstanceTagForDescribeDBInstanceDetailOutput {
	s.Value = &v
	return s
}

type NodeForDescribeDBInstanceDetailOutput struct {
	_ struct{} `type:"structure"`

	CreateTime *string `type:"string"`

	InstanceId *string `type:"string"`

	Memory *int32 `type:"int32"`

	NodeId *string `type:"string"`

	NodeSpec *string `type:"string"`

	NodeStatus *string `type:"string" enum:"EnumOfNodeStatusForDescribeDBInstanceDetailOutput"`

	NodeType *string `type:"string" enum:"ConvertEnumOfNodeTypeForDescribeDBInstanceDetailOutput"`

	RegionId *string `type:"string"`

	UpdateTime *string `type:"string"`

	VCPU *int32 `type:"int32"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s NodeForDescribeDBInstanceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NodeForDescribeDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetCreateTime sets the CreateTime field's value.
func (s *NodeForDescribeDBInstanceDetailOutput) SetCreateTime(v string) *NodeForDescribeDBInstanceDetailOutput {
	s.CreateTime = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *NodeForDescribeDBInstanceDetailOutput) SetInstanceId(v string) *NodeForDescribeDBInstanceDetailOutput {
	s.InstanceId = &v
	return s
}

// SetMemory sets the Memory field's value.
func (s *NodeForDescribeDBInstanceDetailOutput) SetMemory(v int32) *NodeForDescribeDBInstanceDetailOutput {
	s.Memory = &v
	return s
}

// SetNodeId sets the NodeId field's value.
func (s *NodeForDescribeDBInstanceDetailOutput) SetNodeId(v string) *NodeForDescribeDBInstanceDetailOutput {
	s.NodeId = &v
	return s
}

// SetNodeSpec sets the NodeSpec field's value.
func (s *NodeForDescribeDBInstanceDetailOutput) SetNodeSpec(v string) *NodeForDescribeDBInstanceDetailOutput {
	s.NodeSpec = &v
	return s
}

// SetNodeStatus sets the NodeStatus field's value.
func (s *NodeForDescribeDBInstanceDetailOutput) SetNodeStatus(v string) *NodeForDescribeDBInstanceDetailOutput {
	s.NodeStatus = &v
	return s
}

// SetNodeType sets the NodeType field's value.
func (s *NodeForDescribeDBInstanceDetailOutput) SetNodeType(v string) *NodeForDescribeDBInstanceDetailOutput {
	s.NodeType = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *NodeForDescribeDBInstanceDetailOutput) SetRegionId(v string) *NodeForDescribeDBInstanceDetailOutput {
	s.RegionId = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *NodeForDescribeDBInstanceDetailOutput) SetUpdateTime(v string) *NodeForDescribeDBInstanceDetailOutput {
	s.UpdateTime = &v
	return s
}

// SetVCPU sets the VCPU field's value.
func (s *NodeForDescribeDBInstanceDetailOutput) SetVCPU(v int32) *NodeForDescribeDBInstanceDetailOutput {
	s.VCPU = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *NodeForDescribeDBInstanceDetailOutput) SetZoneId(v string) *NodeForDescribeDBInstanceDetailOutput {
	s.ZoneId = &v
	return s
}

type ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput struct {
	_ struct{} `type:"structure"`

	NodeId *string `type:"string"`

	NodeType *string `type:"string" enum:"EnumOfNodeTypeForDescribeDBInstanceDetailOutput"`

	Weight *int32 `type:"int32"`
}

// String returns the string representation
func (s ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetNodeId sets the NodeId field's value.
func (s *ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput) SetNodeId(v string) *ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput {
	s.NodeId = &v
	return s
}

// SetNodeType sets the NodeType field's value.
func (s *ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput) SetNodeType(v string) *ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput {
	s.NodeType = &v
	return s
}

// SetWeight sets the Weight field's value.
func (s *ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput) SetWeight(v int32) *ReadOnlyNodeWeightForDescribeDBInstanceDetailOutput {
	s.Weight = &v
	return s
}

const (
	// ConvertEnumOfNodeTypeForDescribeDBInstanceDetailOutputPrimary is a ConvertEnumOfNodeTypeForDescribeDBInstanceDetailOutput enum value
	ConvertEnumOfNodeTypeForDescribeDBInstanceDetailOutputPrimary = "Primary"

	// ConvertEnumOfNodeTypeForDescribeDBInstanceDetailOutputSecondary is a ConvertEnumOfNodeTypeForDescribeDBInstanceDetailOutput enum value
	ConvertEnumOfNodeTypeForDescribeDBInstanceDetailOutputSecondary = "Secondary"

	// ConvertEnumOfNodeTypeForDescribeDBInstanceDetailOutputReadOnly is a ConvertEnumOfNodeTypeForDescribeDBInstanceDetailOutput enum value
	ConvertEnumOfNodeTypeForDescribeDBInstanceDetailOutputReadOnly = "ReadOnly"
)

const (
	// EnumOfAllowListVersionForDescribeDBInstanceDetailOutputInitial is a EnumOfAllowListVersionForDescribeDBInstanceDetailOutput enum value
	EnumOfAllowListVersionForDescribeDBInstanceDetailOutputInitial = "initial"

	// EnumOfAllowListVersionForDescribeDBInstanceDetailOutputV1 is a EnumOfAllowListVersionForDescribeDBInstanceDetailOutput enum value
	EnumOfAllowListVersionForDescribeDBInstanceDetailOutputV1 = "v1"

	// EnumOfAllowListVersionForDescribeDBInstanceDetailOutputV2 is a EnumOfAllowListVersionForDescribeDBInstanceDetailOutput enum value
	EnumOfAllowListVersionForDescribeDBInstanceDetailOutputV2 = "v2"
)

const (
	// EnumOfAutoAddNewNodesForDescribeDBInstanceDetailOutputEnable is a EnumOfAutoAddNewNodesForDescribeDBInstanceDetailOutput enum value
	EnumOfAutoAddNewNodesForDescribeDBInstanceDetailOutputEnable = "Enable"

	// EnumOfAutoAddNewNodesForDescribeDBInstanceDetailOutputDisable is a EnumOfAutoAddNewNodesForDescribeDBInstanceDetailOutput enum value
	EnumOfAutoAddNewNodesForDescribeDBInstanceDetailOutputDisable = "Disable"
)

const (
	// EnumOfChargeStatusForDescribeDBInstanceDetailOutputNormal is a EnumOfChargeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfChargeStatusForDescribeDBInstanceDetailOutputNormal = "Normal"

	// EnumOfChargeStatusForDescribeDBInstanceDetailOutputOverdue is a EnumOfChargeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfChargeStatusForDescribeDBInstanceDetailOutputOverdue = "Overdue"

	// EnumOfChargeStatusForDescribeDBInstanceDetailOutputUnpaid is a EnumOfChargeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfChargeStatusForDescribeDBInstanceDetailOutputUnpaid = "Unpaid"
)

const (
	// EnumOfChargeTypeForDescribeDBInstanceDetailOutputPostPaid is a EnumOfChargeTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfChargeTypeForDescribeDBInstanceDetailOutputPostPaid = "PostPaid"

	// EnumOfChargeTypeForDescribeDBInstanceDetailOutputPrePaid is a EnumOfChargeTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfChargeTypeForDescribeDBInstanceDetailOutputPrePaid = "PrePaid"
)

const (
	// EnumOfDBEngineVersionForDescribeDBInstanceDetailOutputPostgreSql11 is a EnumOfDBEngineVersionForDescribeDBInstanceDetailOutput enum value
	EnumOfDBEngineVersionForDescribeDBInstanceDetailOutputPostgreSql11 = "PostgreSQL_11"

	// EnumOfDBEngineVersionForDescribeDBInstanceDetailOutputPostgreSql12 is a EnumOfDBEngineVersionForDescribeDBInstanceDetailOutput enum value
	EnumOfDBEngineVersionForDescribeDBInstanceDetailOutputPostgreSql12 = "PostgreSQL_12"

	// EnumOfDBEngineVersionForDescribeDBInstanceDetailOutputPostgreSql13 is a EnumOfDBEngineVersionForDescribeDBInstanceDetailOutput enum value
	EnumOfDBEngineVersionForDescribeDBInstanceDetailOutputPostgreSql13 = "PostgreSQL_13"
)

const (
	// EnumOfDataSyncModeForDescribeDBInstanceDetailOutputSemiSync is a EnumOfDataSyncModeForDescribeDBInstanceDetailOutput enum value
	EnumOfDataSyncModeForDescribeDBInstanceDetailOutputSemiSync = "SemiSync"

	// EnumOfDataSyncModeForDescribeDBInstanceDetailOutputAsync is a EnumOfDataSyncModeForDescribeDBInstanceDetailOutput enum value
	EnumOfDataSyncModeForDescribeDBInstanceDetailOutputAsync = "Async"

	// EnumOfDataSyncModeForDescribeDBInstanceDetailOutputSync is a EnumOfDataSyncModeForDescribeDBInstanceDetailOutput enum value
	EnumOfDataSyncModeForDescribeDBInstanceDetailOutputSync = "Sync"
)

const (
	// EnumOfEnableReadOnlyForDescribeDBInstanceDetailOutputEnable is a EnumOfEnableReadOnlyForDescribeDBInstanceDetailOutput enum value
	EnumOfEnableReadOnlyForDescribeDBInstanceDetailOutputEnable = "Enable"

	// EnumOfEnableReadOnlyForDescribeDBInstanceDetailOutputDisable is a EnumOfEnableReadOnlyForDescribeDBInstanceDetailOutput enum value
	EnumOfEnableReadOnlyForDescribeDBInstanceDetailOutputDisable = "Disable"
)

const (
	// EnumOfEnableReadWriteSplittingForDescribeDBInstanceDetailOutputEnable is a EnumOfEnableReadWriteSplittingForDescribeDBInstanceDetailOutput enum value
	EnumOfEnableReadWriteSplittingForDescribeDBInstanceDetailOutputEnable = "Enable"

	// EnumOfEnableReadWriteSplittingForDescribeDBInstanceDetailOutputDisable is a EnumOfEnableReadWriteSplittingForDescribeDBInstanceDetailOutput enum value
	EnumOfEnableReadWriteSplittingForDescribeDBInstanceDetailOutputDisable = "Disable"
)

const (
	// EnumOfEndpointTypeForDescribeDBInstanceDetailOutputCluster is a EnumOfEndpointTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfEndpointTypeForDescribeDBInstanceDetailOutputCluster = "Cluster"

	// EnumOfEndpointTypeForDescribeDBInstanceDetailOutputCustom is a EnumOfEndpointTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfEndpointTypeForDescribeDBInstanceDetailOutputCustom = "Custom"
)

const (
	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputRunning is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputRunning = "Running"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputCreating is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputCreating = "Creating"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputDeleting is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputDeleting = "Deleting"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputRestarting is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputRestarting = "Restarting"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputRestoring is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputRestoring = "Restoring"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputUpdating is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputUpdating = "Updating"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputUpgrading is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputUpgrading = "Upgrading"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputError is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputError = "Error"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputReleased is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputReleased = "Released"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputCreateError is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputCreateError = "CreateError"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputMasterChanging is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputMasterChanging = "MasterChanging"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputDeleted is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputDeleted = "Deleted"

	// EnumOfInstanceStatusForDescribeDBInstanceDetailOutputRecycled is a EnumOfInstanceStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceStatusForDescribeDBInstanceDetailOutputRecycled = "Recycled"
)

const (
	// EnumOfInstanceTypeForDescribeDBInstanceDetailOutputHa is a EnumOfInstanceTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfInstanceTypeForDescribeDBInstanceDetailOutputHa = "HA"
)

const (
	// EnumOfNetworkTypeForDescribeDBInstanceDetailOutputPrivate is a EnumOfNetworkTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfNetworkTypeForDescribeDBInstanceDetailOutputPrivate = "Private"

	// EnumOfNetworkTypeForDescribeDBInstanceDetailOutputPublic is a EnumOfNetworkTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfNetworkTypeForDescribeDBInstanceDetailOutputPublic = "Public"

	// EnumOfNetworkTypeForDescribeDBInstanceDetailOutputInner is a EnumOfNetworkTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfNetworkTypeForDescribeDBInstanceDetailOutputInner = "Inner"
)

const (
	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputRunning is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputRunning = "Running"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputCreating is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputCreating = "Creating"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputDeleting is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputDeleting = "Deleting"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputRestarting is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputRestarting = "Restarting"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputRestoring is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputRestoring = "Restoring"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputUpdating is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputUpdating = "Updating"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputUpgrading is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputUpgrading = "Upgrading"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputError is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputError = "Error"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputReleased is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputReleased = "Released"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputCreateError is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputCreateError = "CreateError"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputMasterChanging is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputMasterChanging = "MasterChanging"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputDeleted is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputDeleted = "Deleted"

	// EnumOfNodeStatusForDescribeDBInstanceDetailOutputRecycled is a EnumOfNodeStatusForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeStatusForDescribeDBInstanceDetailOutputRecycled = "Recycled"
)

const (
	// EnumOfNodeTypeForDescribeDBInstanceDetailOutputPrimary is a EnumOfNodeTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeTypeForDescribeDBInstanceDetailOutputPrimary = "Primary"

	// EnumOfNodeTypeForDescribeDBInstanceDetailOutputReadOnly is a EnumOfNodeTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfNodeTypeForDescribeDBInstanceDetailOutputReadOnly = "ReadOnly"
)

const (
	// EnumOfPeriodUnitForDescribeDBInstanceDetailOutputMonth is a EnumOfPeriodUnitForDescribeDBInstanceDetailOutput enum value
	EnumOfPeriodUnitForDescribeDBInstanceDetailOutputMonth = "Month"

	// EnumOfPeriodUnitForDescribeDBInstanceDetailOutputYear is a EnumOfPeriodUnitForDescribeDBInstanceDetailOutput enum value
	EnumOfPeriodUnitForDescribeDBInstanceDetailOutputYear = "Year"
)

const (
	// EnumOfReadOnlyNodeDistributionTypeForDescribeDBInstanceDetailOutputDefault is a EnumOfReadOnlyNodeDistributionTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfReadOnlyNodeDistributionTypeForDescribeDBInstanceDetailOutputDefault = "Default"

	// EnumOfReadOnlyNodeDistributionTypeForDescribeDBInstanceDetailOutputCustom is a EnumOfReadOnlyNodeDistributionTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfReadOnlyNodeDistributionTypeForDescribeDBInstanceDetailOutputCustom = "Custom"
)

const (
	// EnumOfReadWriteModeForDescribeDBInstanceDetailOutputReadOnly is a EnumOfReadWriteModeForDescribeDBInstanceDetailOutput enum value
	EnumOfReadWriteModeForDescribeDBInstanceDetailOutputReadOnly = "ReadOnly"

	// EnumOfReadWriteModeForDescribeDBInstanceDetailOutputReadWrite is a EnumOfReadWriteModeForDescribeDBInstanceDetailOutput enum value
	EnumOfReadWriteModeForDescribeDBInstanceDetailOutputReadWrite = "ReadWrite"
)

const (
	// EnumOfStorageTypeForDescribeDBInstanceDetailOutputLocalSsd is a EnumOfStorageTypeForDescribeDBInstanceDetailOutput enum value
	EnumOfStorageTypeForDescribeDBInstanceDetailOutputLocalSsd = "LocalSSD"
)
