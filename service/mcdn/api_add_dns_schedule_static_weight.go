// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mcdn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opAddDnsScheduleStaticWeightCommon = "AddDnsScheduleStaticWeight"

// AddDnsScheduleStaticWeightCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the AddDnsScheduleStaticWeightCommon operation. The "output" return
// value will be populated with the AddDnsScheduleStaticWeightCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AddDnsScheduleStaticWeightCommon Request to send the API call to the service.
// the "output" return value is not valid until after AddDnsScheduleStaticWeightCommon Send returns without error.
//
// See AddDnsScheduleStaticWeightCommon for more information on using the AddDnsScheduleStaticWeightCommon
// API call, and error handling.
//
//    // Example sending a request using the AddDnsScheduleStaticWeightCommonRequest method.
//    req, resp := client.AddDnsScheduleStaticWeightCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCDN) AddDnsScheduleStaticWeightCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opAddDnsScheduleStaticWeightCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AddDnsScheduleStaticWeightCommon API operation for MCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCDN's
// API operation AddDnsScheduleStaticWeightCommon for usage and error information.
func (c *MCDN) AddDnsScheduleStaticWeightCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.AddDnsScheduleStaticWeightCommonRequest(input)
	return out, req.Send()
}

// AddDnsScheduleStaticWeightCommonWithContext is the same as AddDnsScheduleStaticWeightCommon with the addition of
// the ability to pass a context and additional request options.
//
// See AddDnsScheduleStaticWeightCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCDN) AddDnsScheduleStaticWeightCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.AddDnsScheduleStaticWeightCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAddDnsScheduleStaticWeight = "AddDnsScheduleStaticWeight"

// AddDnsScheduleStaticWeightRequest generates a "volcengine/request.Request" representing the
// client's request for the AddDnsScheduleStaticWeight operation. The "output" return
// value will be populated with the AddDnsScheduleStaticWeightCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AddDnsScheduleStaticWeightCommon Request to send the API call to the service.
// the "output" return value is not valid until after AddDnsScheduleStaticWeightCommon Send returns without error.
//
// See AddDnsScheduleStaticWeight for more information on using the AddDnsScheduleStaticWeight
// API call, and error handling.
//
//    // Example sending a request using the AddDnsScheduleStaticWeightRequest method.
//    req, resp := client.AddDnsScheduleStaticWeightRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCDN) AddDnsScheduleStaticWeightRequest(input *AddDnsScheduleStaticWeightInput) (req *request.Request, output *AddDnsScheduleStaticWeightOutput) {
	op := &request.Operation{
		Name:       opAddDnsScheduleStaticWeight,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AddDnsScheduleStaticWeightInput{}
	}

	output = &AddDnsScheduleStaticWeightOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AddDnsScheduleStaticWeight API operation for MCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCDN's
// API operation AddDnsScheduleStaticWeight for usage and error information.
func (c *MCDN) AddDnsScheduleStaticWeight(input *AddDnsScheduleStaticWeightInput) (*AddDnsScheduleStaticWeightOutput, error) {
	req, out := c.AddDnsScheduleStaticWeightRequest(input)
	return out, req.Send()
}

// AddDnsScheduleStaticWeightWithContext is the same as AddDnsScheduleStaticWeight with the addition of
// the ability to pass a context and additional request options.
//
// See AddDnsScheduleStaticWeight for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCDN) AddDnsScheduleStaticWeightWithContext(ctx volcengine.Context, input *AddDnsScheduleStaticWeightInput, opts ...request.Option) (*AddDnsScheduleStaticWeightOutput, error) {
	req, out := c.AddDnsScheduleStaticWeightRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AddDnsScheduleStaticWeightInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Country is a required field
	Country *string `type:"string" json:",omitempty" required:"true"`

	// DnsScheduleId is a required field
	DnsScheduleId *string `type:"string" json:",omitempty" required:"true"`

	// Isp is a required field
	Isp *string `type:"string" json:",omitempty" required:"true"`

	// Province is a required field
	Province *string `type:"string" json:",omitempty" required:"true"`

	WeightItems []*WeightItemForAddDnsScheduleStaticWeightInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s AddDnsScheduleStaticWeightInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddDnsScheduleStaticWeightInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AddDnsScheduleStaticWeightInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "AddDnsScheduleStaticWeightInput"}
	if s.Country == nil {
		invalidParams.Add(request.NewErrParamRequired("Country"))
	}
	if s.DnsScheduleId == nil {
		invalidParams.Add(request.NewErrParamRequired("DnsScheduleId"))
	}
	if s.Isp == nil {
		invalidParams.Add(request.NewErrParamRequired("Isp"))
	}
	if s.Province == nil {
		invalidParams.Add(request.NewErrParamRequired("Province"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCountry sets the Country field's value.
func (s *AddDnsScheduleStaticWeightInput) SetCountry(v string) *AddDnsScheduleStaticWeightInput {
	s.Country = &v
	return s
}

// SetDnsScheduleId sets the DnsScheduleId field's value.
func (s *AddDnsScheduleStaticWeightInput) SetDnsScheduleId(v string) *AddDnsScheduleStaticWeightInput {
	s.DnsScheduleId = &v
	return s
}

// SetIsp sets the Isp field's value.
func (s *AddDnsScheduleStaticWeightInput) SetIsp(v string) *AddDnsScheduleStaticWeightInput {
	s.Isp = &v
	return s
}

// SetProvince sets the Province field's value.
func (s *AddDnsScheduleStaticWeightInput) SetProvince(v string) *AddDnsScheduleStaticWeightInput {
	s.Province = &v
	return s
}

// SetWeightItems sets the WeightItems field's value.
func (s *AddDnsScheduleStaticWeightInput) SetWeightItems(v []*WeightItemForAddDnsScheduleStaticWeightInput) *AddDnsScheduleStaticWeightInput {
	s.WeightItems = v
	return s
}

type AddDnsScheduleStaticWeightOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	StaticWeight *StaticWeightForAddDnsScheduleStaticWeightOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s AddDnsScheduleStaticWeightOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddDnsScheduleStaticWeightOutput) GoString() string {
	return s.String()
}

// SetStaticWeight sets the StaticWeight field's value.
func (s *AddDnsScheduleStaticWeightOutput) SetStaticWeight(v *StaticWeightForAddDnsScheduleStaticWeightOutput) *AddDnsScheduleStaticWeightOutput {
	s.StaticWeight = v
	return s
}

type StaticWeightForAddDnsScheduleStaticWeightOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Country *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Isp *string `type:"string" json:",omitempty"`

	Province *string `type:"string" json:",omitempty"`

	WeightItems []*WeightItemForAddDnsScheduleStaticWeightOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s StaticWeightForAddDnsScheduleStaticWeightOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StaticWeightForAddDnsScheduleStaticWeightOutput) GoString() string {
	return s.String()
}

// SetCountry sets the Country field's value.
func (s *StaticWeightForAddDnsScheduleStaticWeightOutput) SetCountry(v string) *StaticWeightForAddDnsScheduleStaticWeightOutput {
	s.Country = &v
	return s
}

// SetId sets the Id field's value.
func (s *StaticWeightForAddDnsScheduleStaticWeightOutput) SetId(v string) *StaticWeightForAddDnsScheduleStaticWeightOutput {
	s.Id = &v
	return s
}

// SetIsp sets the Isp field's value.
func (s *StaticWeightForAddDnsScheduleStaticWeightOutput) SetIsp(v string) *StaticWeightForAddDnsScheduleStaticWeightOutput {
	s.Isp = &v
	return s
}

// SetProvince sets the Province field's value.
func (s *StaticWeightForAddDnsScheduleStaticWeightOutput) SetProvince(v string) *StaticWeightForAddDnsScheduleStaticWeightOutput {
	s.Province = &v
	return s
}

// SetWeightItems sets the WeightItems field's value.
func (s *StaticWeightForAddDnsScheduleStaticWeightOutput) SetWeightItems(v []*WeightItemForAddDnsScheduleStaticWeightOutput) *StaticWeightForAddDnsScheduleStaticWeightOutput {
	s.WeightItems = v
	return s
}

type WeightItemForAddDnsScheduleStaticWeightInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DomainId *string `type:"string" json:",omitempty"`

	Value *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s WeightItemForAddDnsScheduleStaticWeightInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s WeightItemForAddDnsScheduleStaticWeightInput) GoString() string {
	return s.String()
}

// SetDomainId sets the DomainId field's value.
func (s *WeightItemForAddDnsScheduleStaticWeightInput) SetDomainId(v string) *WeightItemForAddDnsScheduleStaticWeightInput {
	s.DomainId = &v
	return s
}

// SetValue sets the Value field's value.
func (s *WeightItemForAddDnsScheduleStaticWeightInput) SetValue(v int32) *WeightItemForAddDnsScheduleStaticWeightInput {
	s.Value = &v
	return s
}

type WeightItemForAddDnsScheduleStaticWeightOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DomainId *string `type:"string" json:",omitempty"`

	Value *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s WeightItemForAddDnsScheduleStaticWeightOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s WeightItemForAddDnsScheduleStaticWeightOutput) GoString() string {
	return s.String()
}

// SetDomainId sets the DomainId field's value.
func (s *WeightItemForAddDnsScheduleStaticWeightOutput) SetDomainId(v string) *WeightItemForAddDnsScheduleStaticWeightOutput {
	s.DomainId = &v
	return s
}

// SetValue sets the Value field's value.
func (s *WeightItemForAddDnsScheduleStaticWeightOutput) SetValue(v int32) *WeightItemForAddDnsScheduleStaticWeightOutput {
	s.Value = &v
	return s
}
