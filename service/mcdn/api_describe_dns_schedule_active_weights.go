// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mcdn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDnsScheduleActiveWeightsCommon = "DescribeDnsScheduleActiveWeights"

// DescribeDnsScheduleActiveWeightsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDnsScheduleActiveWeightsCommon operation. The "output" return
// value will be populated with the DescribeDnsScheduleActiveWeightsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDnsScheduleActiveWeightsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDnsScheduleActiveWeightsCommon Send returns without error.
//
// See DescribeDnsScheduleActiveWeightsCommon for more information on using the DescribeDnsScheduleActiveWeightsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDnsScheduleActiveWeightsCommonRequest method.
//    req, resp := client.DescribeDnsScheduleActiveWeightsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCDN) DescribeDnsScheduleActiveWeightsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDnsScheduleActiveWeightsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDnsScheduleActiveWeightsCommon API operation for MCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCDN's
// API operation DescribeDnsScheduleActiveWeightsCommon for usage and error information.
func (c *MCDN) DescribeDnsScheduleActiveWeightsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDnsScheduleActiveWeightsCommonRequest(input)
	return out, req.Send()
}

// DescribeDnsScheduleActiveWeightsCommonWithContext is the same as DescribeDnsScheduleActiveWeightsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDnsScheduleActiveWeightsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCDN) DescribeDnsScheduleActiveWeightsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDnsScheduleActiveWeightsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDnsScheduleActiveWeights = "DescribeDnsScheduleActiveWeights"

// DescribeDnsScheduleActiveWeightsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDnsScheduleActiveWeights operation. The "output" return
// value will be populated with the DescribeDnsScheduleActiveWeightsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDnsScheduleActiveWeightsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDnsScheduleActiveWeightsCommon Send returns without error.
//
// See DescribeDnsScheduleActiveWeights for more information on using the DescribeDnsScheduleActiveWeights
// API call, and error handling.
//
//    // Example sending a request using the DescribeDnsScheduleActiveWeightsRequest method.
//    req, resp := client.DescribeDnsScheduleActiveWeightsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCDN) DescribeDnsScheduleActiveWeightsRequest(input *DescribeDnsScheduleActiveWeightsInput) (req *request.Request, output *DescribeDnsScheduleActiveWeightsOutput) {
	op := &request.Operation{
		Name:       opDescribeDnsScheduleActiveWeights,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDnsScheduleActiveWeightsInput{}
	}

	output = &DescribeDnsScheduleActiveWeightsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDnsScheduleActiveWeights API operation for MCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCDN's
// API operation DescribeDnsScheduleActiveWeights for usage and error information.
func (c *MCDN) DescribeDnsScheduleActiveWeights(input *DescribeDnsScheduleActiveWeightsInput) (*DescribeDnsScheduleActiveWeightsOutput, error) {
	req, out := c.DescribeDnsScheduleActiveWeightsRequest(input)
	return out, req.Send()
}

// DescribeDnsScheduleActiveWeightsWithContext is the same as DescribeDnsScheduleActiveWeights with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDnsScheduleActiveWeights for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCDN) DescribeDnsScheduleActiveWeightsWithContext(ctx volcengine.Context, input *DescribeDnsScheduleActiveWeightsInput, opts ...request.Option) (*DescribeDnsScheduleActiveWeightsOutput, error) {
	req, out := c.DescribeDnsScheduleActiveWeightsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ActiveWeightForDescribeDnsScheduleActiveWeightsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Country *string `type:"string" json:",omitempty"`

	IsFailover *bool `type:"boolean" json:",omitempty"`

	Isp *string `type:"string" json:",omitempty"`

	Province *string `type:"string" json:",omitempty"`

	RelatedStrategyId *string `type:"string" json:",omitempty"`

	Strategy *string `type:"string" json:",omitempty"`

	WeightFailoverInfos []*WeightFailoverInfoForDescribeDnsScheduleActiveWeightsOutput `type:"list" json:",omitempty"`

	WeightInfoItems []*WeightInfoItemForDescribeDnsScheduleActiveWeightsOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ActiveWeightForDescribeDnsScheduleActiveWeightsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ActiveWeightForDescribeDnsScheduleActiveWeightsOutput) GoString() string {
	return s.String()
}

// SetCountry sets the Country field's value.
func (s *ActiveWeightForDescribeDnsScheduleActiveWeightsOutput) SetCountry(v string) *ActiveWeightForDescribeDnsScheduleActiveWeightsOutput {
	s.Country = &v
	return s
}

// SetIsFailover sets the IsFailover field's value.
func (s *ActiveWeightForDescribeDnsScheduleActiveWeightsOutput) SetIsFailover(v bool) *ActiveWeightForDescribeDnsScheduleActiveWeightsOutput {
	s.IsFailover = &v
	return s
}

// SetIsp sets the Isp field's value.
func (s *ActiveWeightForDescribeDnsScheduleActiveWeightsOutput) SetIsp(v string) *ActiveWeightForDescribeDnsScheduleActiveWeightsOutput {
	s.Isp = &v
	return s
}

// SetProvince sets the Province field's value.
func (s *ActiveWeightForDescribeDnsScheduleActiveWeightsOutput) SetProvince(v string) *ActiveWeightForDescribeDnsScheduleActiveWeightsOutput {
	s.Province = &v
	return s
}

// SetRelatedStrategyId sets the RelatedStrategyId field's value.
func (s *ActiveWeightForDescribeDnsScheduleActiveWeightsOutput) SetRelatedStrategyId(v string) *ActiveWeightForDescribeDnsScheduleActiveWeightsOutput {
	s.RelatedStrategyId = &v
	return s
}

// SetStrategy sets the Strategy field's value.
func (s *ActiveWeightForDescribeDnsScheduleActiveWeightsOutput) SetStrategy(v string) *ActiveWeightForDescribeDnsScheduleActiveWeightsOutput {
	s.Strategy = &v
	return s
}

// SetWeightFailoverInfos sets the WeightFailoverInfos field's value.
func (s *ActiveWeightForDescribeDnsScheduleActiveWeightsOutput) SetWeightFailoverInfos(v []*WeightFailoverInfoForDescribeDnsScheduleActiveWeightsOutput) *ActiveWeightForDescribeDnsScheduleActiveWeightsOutput {
	s.WeightFailoverInfos = v
	return s
}

// SetWeightInfoItems sets the WeightInfoItems field's value.
func (s *ActiveWeightForDescribeDnsScheduleActiveWeightsOutput) SetWeightInfoItems(v []*WeightInfoItemForDescribeDnsScheduleActiveWeightsOutput) *ActiveWeightForDescribeDnsScheduleActiveWeightsOutput {
	s.WeightInfoItems = v
	return s
}

type DescribeDnsScheduleActiveWeightsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// DnsScheduleId is a required field
	DnsScheduleId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeDnsScheduleActiveWeightsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDnsScheduleActiveWeightsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDnsScheduleActiveWeightsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDnsScheduleActiveWeightsInput"}
	if s.DnsScheduleId == nil {
		invalidParams.Add(request.NewErrParamRequired("DnsScheduleId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDnsScheduleId sets the DnsScheduleId field's value.
func (s *DescribeDnsScheduleActiveWeightsInput) SetDnsScheduleId(v string) *DescribeDnsScheduleActiveWeightsInput {
	s.DnsScheduleId = &v
	return s
}

type DescribeDnsScheduleActiveWeightsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ActiveWeights []*ActiveWeightForDescribeDnsScheduleActiveWeightsOutput `type:"list" json:",omitempty"`

	TimeAt *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDnsScheduleActiveWeightsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDnsScheduleActiveWeightsOutput) GoString() string {
	return s.String()
}

// SetActiveWeights sets the ActiveWeights field's value.
func (s *DescribeDnsScheduleActiveWeightsOutput) SetActiveWeights(v []*ActiveWeightForDescribeDnsScheduleActiveWeightsOutput) *DescribeDnsScheduleActiveWeightsOutput {
	s.ActiveWeights = v
	return s
}

// SetTimeAt sets the TimeAt field's value.
func (s *DescribeDnsScheduleActiveWeightsOutput) SetTimeAt(v int64) *DescribeDnsScheduleActiveWeightsOutput {
	s.TimeAt = &v
	return s
}

type WeightFailoverInfoForDescribeDnsScheduleActiveWeightsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AlarmId *string `type:"string" json:",omitempty"`

	Vendor *string `type:"string" json:",omitempty"`

	WeightFailoverId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s WeightFailoverInfoForDescribeDnsScheduleActiveWeightsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s WeightFailoverInfoForDescribeDnsScheduleActiveWeightsOutput) GoString() string {
	return s.String()
}

// SetAlarmId sets the AlarmId field's value.
func (s *WeightFailoverInfoForDescribeDnsScheduleActiveWeightsOutput) SetAlarmId(v string) *WeightFailoverInfoForDescribeDnsScheduleActiveWeightsOutput {
	s.AlarmId = &v
	return s
}

// SetVendor sets the Vendor field's value.
func (s *WeightFailoverInfoForDescribeDnsScheduleActiveWeightsOutput) SetVendor(v string) *WeightFailoverInfoForDescribeDnsScheduleActiveWeightsOutput {
	s.Vendor = &v
	return s
}

// SetWeightFailoverId sets the WeightFailoverId field's value.
func (s *WeightFailoverInfoForDescribeDnsScheduleActiveWeightsOutput) SetWeightFailoverId(v string) *WeightFailoverInfoForDescribeDnsScheduleActiveWeightsOutput {
	s.WeightFailoverId = &v
	return s
}

type WeightInfoItemForDescribeDnsScheduleActiveWeightsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ActualValue *int32 `type:"int32" json:",omitempty"`

	DomainId *string `type:"string" json:",omitempty"`

	Value *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s WeightInfoItemForDescribeDnsScheduleActiveWeightsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s WeightInfoItemForDescribeDnsScheduleActiveWeightsOutput) GoString() string {
	return s.String()
}

// SetActualValue sets the ActualValue field's value.
func (s *WeightInfoItemForDescribeDnsScheduleActiveWeightsOutput) SetActualValue(v int32) *WeightInfoItemForDescribeDnsScheduleActiveWeightsOutput {
	s.ActualValue = &v
	return s
}

// SetDomainId sets the DomainId field's value.
func (s *WeightInfoItemForDescribeDnsScheduleActiveWeightsOutput) SetDomainId(v string) *WeightInfoItemForDescribeDnsScheduleActiveWeightsOutput {
	s.DomainId = &v
	return s
}

// SetValue sets the Value field's value.
func (s *WeightInfoItemForDescribeDnsScheduleActiveWeightsOutput) SetValue(v int32) *WeightInfoItemForDescribeDnsScheduleActiveWeightsOutput {
	s.Value = &v
	return s
}
