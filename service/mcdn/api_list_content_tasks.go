// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mcdn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListContentTasksCommon = "ListContentTasks"

// ListContentTasksCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListContentTasksCommon operation. The "output" return
// value will be populated with the ListContentTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListContentTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListContentTasksCommon Send returns without error.
//
// See ListContentTasksCommon for more information on using the ListContentTasksCommon
// API call, and error handling.
//
//    // Example sending a request using the ListContentTasksCommonRequest method.
//    req, resp := client.ListContentTasksCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCDN) ListContentTasksCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListContentTasksCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListContentTasksCommon API operation for MCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCDN's
// API operation ListContentTasksCommon for usage and error information.
func (c *MCDN) ListContentTasksCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListContentTasksCommonRequest(input)
	return out, req.Send()
}

// ListContentTasksCommonWithContext is the same as ListContentTasksCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListContentTasksCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCDN) ListContentTasksCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListContentTasksCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListContentTasks = "ListContentTasks"

// ListContentTasksRequest generates a "volcengine/request.Request" representing the
// client's request for the ListContentTasks operation. The "output" return
// value will be populated with the ListContentTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListContentTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListContentTasksCommon Send returns without error.
//
// See ListContentTasks for more information on using the ListContentTasks
// API call, and error handling.
//
//    // Example sending a request using the ListContentTasksRequest method.
//    req, resp := client.ListContentTasksRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCDN) ListContentTasksRequest(input *ListContentTasksInput) (req *request.Request, output *ListContentTasksOutput) {
	op := &request.Operation{
		Name:       opListContentTasks,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListContentTasksInput{}
	}

	output = &ListContentTasksOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListContentTasks API operation for MCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCDN's
// API operation ListContentTasks for usage and error information.
func (c *MCDN) ListContentTasks(input *ListContentTasksInput) (*ListContentTasksOutput, error) {
	req, out := c.ListContentTasksRequest(input)
	return out, req.Send()
}

// ListContentTasksWithContext is the same as ListContentTasks with the addition of
// the ability to pass a context and additional request options.
//
// See ListContentTasks for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCDN) ListContentTasksWithContext(ctx volcengine.Context, input *ListContentTasksInput, opts ...request.Option) (*ListContentTasksOutput, error) {
	req, out := c.ListContentTasksRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListContentTasksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Domain *string `type:"string" json:",omitempty"`

	EndTime *int64 `type:"int64" json:",omitempty"`

	Pagination *PaginationForListContentTasksInput `type:"structure" json:",omitempty"`

	StartTime *int64 `type:"int64" json:",omitempty"`

	TaskId *string `type:"string" json:",omitempty"`

	TaskStatus *string `type:"string" json:",omitempty"`

	TaskType *string `type:"string" json:",omitempty"`

	Url *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListContentTasksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListContentTasksInput) GoString() string {
	return s.String()
}

// SetDomain sets the Domain field's value.
func (s *ListContentTasksInput) SetDomain(v string) *ListContentTasksInput {
	s.Domain = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *ListContentTasksInput) SetEndTime(v int64) *ListContentTasksInput {
	s.EndTime = &v
	return s
}

// SetPagination sets the Pagination field's value.
func (s *ListContentTasksInput) SetPagination(v *PaginationForListContentTasksInput) *ListContentTasksInput {
	s.Pagination = v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *ListContentTasksInput) SetStartTime(v int64) *ListContentTasksInput {
	s.StartTime = &v
	return s
}

// SetTaskId sets the TaskId field's value.
func (s *ListContentTasksInput) SetTaskId(v string) *ListContentTasksInput {
	s.TaskId = &v
	return s
}

// SetTaskStatus sets the TaskStatus field's value.
func (s *ListContentTasksInput) SetTaskStatus(v string) *ListContentTasksInput {
	s.TaskStatus = &v
	return s
}

// SetTaskType sets the TaskType field's value.
func (s *ListContentTasksInput) SetTaskType(v string) *ListContentTasksInput {
	s.TaskType = &v
	return s
}

// SetUrl sets the Url field's value.
func (s *ListContentTasksInput) SetUrl(v string) *ListContentTasksInput {
	s.Url = &v
	return s
}

type ListContentTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Pagination *PaginationForListContentTasksOutput `type:"structure" json:",omitempty"`

	Tasks []*TaskForListContentTasksOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListContentTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListContentTasksOutput) GoString() string {
	return s.String()
}

// SetPagination sets the Pagination field's value.
func (s *ListContentTasksOutput) SetPagination(v *PaginationForListContentTasksOutput) *ListContentTasksOutput {
	s.Pagination = v
	return s
}

// SetTasks sets the Tasks field's value.
func (s *ListContentTasksOutput) SetTasks(v []*TaskForListContentTasksOutput) *ListContentTasksOutput {
	s.Tasks = v
	return s
}

type PaginationForListContentTasksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	PageNum *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s PaginationForListContentTasksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PaginationForListContentTasksInput) GoString() string {
	return s.String()
}

// SetPageNum sets the PageNum field's value.
func (s *PaginationForListContentTasksInput) SetPageNum(v int64) *PaginationForListContentTasksInput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *PaginationForListContentTasksInput) SetPageSize(v int64) *PaginationForListContentTasksInput {
	s.PageSize = &v
	return s
}

type PaginationForListContentTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	PageNum *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	Total *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s PaginationForListContentTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PaginationForListContentTasksOutput) GoString() string {
	return s.String()
}

// SetPageNum sets the PageNum field's value.
func (s *PaginationForListContentTasksOutput) SetPageNum(v int64) *PaginationForListContentTasksOutput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *PaginationForListContentTasksOutput) SetPageSize(v int64) *PaginationForListContentTasksOutput {
	s.PageSize = &v
	return s
}

// SetTotal sets the Total field's value.
func (s *PaginationForListContentTasksOutput) SetTotal(v int64) *PaginationForListContentTasksOutput {
	s.Total = &v
	return s
}

type SubTaskForListContentTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CloudAccountId *string `type:"string" json:",omitempty"`

	CloudAccountName *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	ProductType *string `type:"string" json:",omitempty"`

	SubProduct *string `type:"string" json:",omitempty"`

	SubmitAt *int64 `type:"int64" json:",omitempty"`

	SubmitStatus *string `type:"string" json:",omitempty"`

	Url []*string `type:"list" json:",omitempty"`

	Vendor *string `type:"string" json:",omitempty"`

	VendorTaskIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s SubTaskForListContentTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SubTaskForListContentTasksOutput) GoString() string {
	return s.String()
}

// SetCloudAccountId sets the CloudAccountId field's value.
func (s *SubTaskForListContentTasksOutput) SetCloudAccountId(v string) *SubTaskForListContentTasksOutput {
	s.CloudAccountId = &v
	return s
}

// SetCloudAccountName sets the CloudAccountName field's value.
func (s *SubTaskForListContentTasksOutput) SetCloudAccountName(v string) *SubTaskForListContentTasksOutput {
	s.CloudAccountName = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *SubTaskForListContentTasksOutput) SetDescription(v string) *SubTaskForListContentTasksOutput {
	s.Description = &v
	return s
}

// SetProductType sets the ProductType field's value.
func (s *SubTaskForListContentTasksOutput) SetProductType(v string) *SubTaskForListContentTasksOutput {
	s.ProductType = &v
	return s
}

// SetSubProduct sets the SubProduct field's value.
func (s *SubTaskForListContentTasksOutput) SetSubProduct(v string) *SubTaskForListContentTasksOutput {
	s.SubProduct = &v
	return s
}

// SetSubmitAt sets the SubmitAt field's value.
func (s *SubTaskForListContentTasksOutput) SetSubmitAt(v int64) *SubTaskForListContentTasksOutput {
	s.SubmitAt = &v
	return s
}

// SetSubmitStatus sets the SubmitStatus field's value.
func (s *SubTaskForListContentTasksOutput) SetSubmitStatus(v string) *SubTaskForListContentTasksOutput {
	s.SubmitStatus = &v
	return s
}

// SetUrl sets the Url field's value.
func (s *SubTaskForListContentTasksOutput) SetUrl(v []*string) *SubTaskForListContentTasksOutput {
	s.Url = v
	return s
}

// SetVendor sets the Vendor field's value.
func (s *SubTaskForListContentTasksOutput) SetVendor(v string) *SubTaskForListContentTasksOutput {
	s.Vendor = &v
	return s
}

// SetVendorTaskIds sets the VendorTaskIds field's value.
func (s *SubTaskForListContentTasksOutput) SetVendorTaskIds(v []*string) *SubTaskForListContentTasksOutput {
	s.VendorTaskIds = v
	return s
}

type TaskForListContentTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreatedAt *int64 `type:"int64" json:",omitempty"`

	EndAt *int64 `type:"int64" json:",omitempty"`

	SubTasks []*SubTaskForListContentTasksOutput `type:"list" json:",omitempty"`

	TaskId *string `type:"string" json:",omitempty"`

	TaskStatus *string `type:"string" json:",omitempty"`

	TaskType *string `type:"string" json:",omitempty"`

	Vendor *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TaskForListContentTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TaskForListContentTasksOutput) GoString() string {
	return s.String()
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *TaskForListContentTasksOutput) SetCreatedAt(v int64) *TaskForListContentTasksOutput {
	s.CreatedAt = &v
	return s
}

// SetEndAt sets the EndAt field's value.
func (s *TaskForListContentTasksOutput) SetEndAt(v int64) *TaskForListContentTasksOutput {
	s.EndAt = &v
	return s
}

// SetSubTasks sets the SubTasks field's value.
func (s *TaskForListContentTasksOutput) SetSubTasks(v []*SubTaskForListContentTasksOutput) *TaskForListContentTasksOutput {
	s.SubTasks = v
	return s
}

// SetTaskId sets the TaskId field's value.
func (s *TaskForListContentTasksOutput) SetTaskId(v string) *TaskForListContentTasksOutput {
	s.TaskId = &v
	return s
}

// SetTaskStatus sets the TaskStatus field's value.
func (s *TaskForListContentTasksOutput) SetTaskStatus(v string) *TaskForListContentTasksOutput {
	s.TaskStatus = &v
	return s
}

// SetTaskType sets the TaskType field's value.
func (s *TaskForListContentTasksOutput) SetTaskType(v string) *TaskForListContentTasksOutput {
	s.TaskType = &v
	return s
}

// SetVendor sets the Vendor field's value.
func (s *TaskForListContentTasksOutput) SetVendor(v string) *TaskForListContentTasksOutput {
	s.Vendor = &v
	return s
}
