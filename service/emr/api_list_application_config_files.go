// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package emr

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListApplicationConfigFilesCommon = "ListApplicationConfigFiles"

// ListApplicationConfigFilesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListApplicationConfigFilesCommon operation. The "output" return
// value will be populated with the ListApplicationConfigFilesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListApplicationConfigFilesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListApplicationConfigFilesCommon Send returns without error.
//
// See ListApplicationConfigFilesCommon for more information on using the ListApplicationConfigFilesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListApplicationConfigFilesCommonRequest method.
//    req, resp := client.ListApplicationConfigFilesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *EMR) ListApplicationConfigFilesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListApplicationConfigFilesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListApplicationConfigFilesCommon API operation for EMR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for EMR's
// API operation ListApplicationConfigFilesCommon for usage and error information.
func (c *EMR) ListApplicationConfigFilesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListApplicationConfigFilesCommonRequest(input)
	return out, req.Send()
}

// ListApplicationConfigFilesCommonWithContext is the same as ListApplicationConfigFilesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListApplicationConfigFilesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *EMR) ListApplicationConfigFilesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListApplicationConfigFilesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListApplicationConfigFiles = "ListApplicationConfigFiles"

// ListApplicationConfigFilesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListApplicationConfigFiles operation. The "output" return
// value will be populated with the ListApplicationConfigFilesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListApplicationConfigFilesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListApplicationConfigFilesCommon Send returns without error.
//
// See ListApplicationConfigFiles for more information on using the ListApplicationConfigFiles
// API call, and error handling.
//
//    // Example sending a request using the ListApplicationConfigFilesRequest method.
//    req, resp := client.ListApplicationConfigFilesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *EMR) ListApplicationConfigFilesRequest(input *ListApplicationConfigFilesInput) (req *request.Request, output *ListApplicationConfigFilesOutput) {
	op := &request.Operation{
		Name:       opListApplicationConfigFiles,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListApplicationConfigFilesInput{}
	}

	output = &ListApplicationConfigFilesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListApplicationConfigFiles API operation for EMR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for EMR's
// API operation ListApplicationConfigFiles for usage and error information.
func (c *EMR) ListApplicationConfigFiles(input *ListApplicationConfigFilesInput) (*ListApplicationConfigFilesOutput, error) {
	req, out := c.ListApplicationConfigFilesRequest(input)
	return out, req.Send()
}

// ListApplicationConfigFilesWithContext is the same as ListApplicationConfigFiles with the addition of
// the ability to pass a context and additional request options.
//
// See ListApplicationConfigFiles for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *EMR) ListApplicationConfigFilesWithContext(ctx volcengine.Context, input *ListApplicationConfigFilesInput, opts ...request.Option) (*ListApplicationConfigFilesOutput, error) {
	req, out := c.ListApplicationConfigFilesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ItemForListApplicationConfigFilesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ApplicationName *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	FileGroup *string `type:"string" json:",omitempty"`

	FileMode *string `type:"string" json:",omitempty"`

	FileName *string `type:"string" json:",omitempty"`

	FilePath *string `type:"string" json:",omitempty"`

	FileUser *string `type:"string" json:",omitempty"`

	SupportCustomConfigItem *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ItemForListApplicationConfigFilesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListApplicationConfigFilesOutput) GoString() string {
	return s.String()
}

// SetApplicationName sets the ApplicationName field's value.
func (s *ItemForListApplicationConfigFilesOutput) SetApplicationName(v string) *ItemForListApplicationConfigFilesOutput {
	s.ApplicationName = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ItemForListApplicationConfigFilesOutput) SetDescription(v string) *ItemForListApplicationConfigFilesOutput {
	s.Description = &v
	return s
}

// SetFileGroup sets the FileGroup field's value.
func (s *ItemForListApplicationConfigFilesOutput) SetFileGroup(v string) *ItemForListApplicationConfigFilesOutput {
	s.FileGroup = &v
	return s
}

// SetFileMode sets the FileMode field's value.
func (s *ItemForListApplicationConfigFilesOutput) SetFileMode(v string) *ItemForListApplicationConfigFilesOutput {
	s.FileMode = &v
	return s
}

// SetFileName sets the FileName field's value.
func (s *ItemForListApplicationConfigFilesOutput) SetFileName(v string) *ItemForListApplicationConfigFilesOutput {
	s.FileName = &v
	return s
}

// SetFilePath sets the FilePath field's value.
func (s *ItemForListApplicationConfigFilesOutput) SetFilePath(v string) *ItemForListApplicationConfigFilesOutput {
	s.FilePath = &v
	return s
}

// SetFileUser sets the FileUser field's value.
func (s *ItemForListApplicationConfigFilesOutput) SetFileUser(v string) *ItemForListApplicationConfigFilesOutput {
	s.FileUser = &v
	return s
}

// SetSupportCustomConfigItem sets the SupportCustomConfigItem field's value.
func (s *ItemForListApplicationConfigFilesOutput) SetSupportCustomConfigItem(v string) *ItemForListApplicationConfigFilesOutput {
	s.SupportCustomConfigItem = &v
	return s
}

type ListApplicationConfigFilesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// ApplicationName is a required field
	ApplicationName *string `type:"string" json:",omitempty" required:"true"`

	// ClusterId is a required field
	ClusterId *string `type:"string" json:",omitempty" required:"true"`

	MaxResults *int32 `type:"int32" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListApplicationConfigFilesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListApplicationConfigFilesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListApplicationConfigFilesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListApplicationConfigFilesInput"}
	if s.ApplicationName == nil {
		invalidParams.Add(request.NewErrParamRequired("ApplicationName"))
	}
	if s.ClusterId == nil {
		invalidParams.Add(request.NewErrParamRequired("ClusterId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetApplicationName sets the ApplicationName field's value.
func (s *ListApplicationConfigFilesInput) SetApplicationName(v string) *ListApplicationConfigFilesInput {
	s.ApplicationName = &v
	return s
}

// SetClusterId sets the ClusterId field's value.
func (s *ListApplicationConfigFilesInput) SetClusterId(v string) *ListApplicationConfigFilesInput {
	s.ClusterId = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListApplicationConfigFilesInput) SetMaxResults(v int32) *ListApplicationConfigFilesInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListApplicationConfigFilesInput) SetNextToken(v string) *ListApplicationConfigFilesInput {
	s.NextToken = &v
	return s
}

type ListApplicationConfigFilesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListApplicationConfigFilesOutput `type:"list" json:",omitempty"`

	MaxResults *int32 `type:"int32" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListApplicationConfigFilesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListApplicationConfigFilesOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListApplicationConfigFilesOutput) SetItems(v []*ItemForListApplicationConfigFilesOutput) *ListApplicationConfigFilesOutput {
	s.Items = v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListApplicationConfigFilesOutput) SetMaxResults(v int32) *ListApplicationConfigFilesOutput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListApplicationConfigFilesOutput) SetNextToken(v string) *ListApplicationConfigFilesOutput {
	s.NextToken = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListApplicationConfigFilesOutput) SetTotalCount(v int32) *ListApplicationConfigFilesOutput {
	s.TotalCount = &v
	return s
}
