// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package emr

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetApplicationConfigFileCommon = "GetApplicationConfigFile"

// GetApplicationConfigFileCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetApplicationConfigFileCommon operation. The "output" return
// value will be populated with the GetApplicationConfigFileCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetApplicationConfigFileCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetApplicationConfigFileCommon Send returns without error.
//
// See GetApplicationConfigFileCommon for more information on using the GetApplicationConfigFileCommon
// API call, and error handling.
//
//    // Example sending a request using the GetApplicationConfigFileCommonRequest method.
//    req, resp := client.GetApplicationConfigFileCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *EMR) GetApplicationConfigFileCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetApplicationConfigFileCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetApplicationConfigFileCommon API operation for EMR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for EMR's
// API operation GetApplicationConfigFileCommon for usage and error information.
func (c *EMR) GetApplicationConfigFileCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetApplicationConfigFileCommonRequest(input)
	return out, req.Send()
}

// GetApplicationConfigFileCommonWithContext is the same as GetApplicationConfigFileCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetApplicationConfigFileCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *EMR) GetApplicationConfigFileCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetApplicationConfigFileCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetApplicationConfigFile = "GetApplicationConfigFile"

// GetApplicationConfigFileRequest generates a "volcengine/request.Request" representing the
// client's request for the GetApplicationConfigFile operation. The "output" return
// value will be populated with the GetApplicationConfigFileCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetApplicationConfigFileCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetApplicationConfigFileCommon Send returns without error.
//
// See GetApplicationConfigFile for more information on using the GetApplicationConfigFile
// API call, and error handling.
//
//    // Example sending a request using the GetApplicationConfigFileRequest method.
//    req, resp := client.GetApplicationConfigFileRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *EMR) GetApplicationConfigFileRequest(input *GetApplicationConfigFileInput) (req *request.Request, output *GetApplicationConfigFileOutput) {
	op := &request.Operation{
		Name:       opGetApplicationConfigFile,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetApplicationConfigFileInput{}
	}

	output = &GetApplicationConfigFileOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetApplicationConfigFile API operation for EMR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for EMR's
// API operation GetApplicationConfigFile for usage and error information.
func (c *EMR) GetApplicationConfigFile(input *GetApplicationConfigFileInput) (*GetApplicationConfigFileOutput, error) {
	req, out := c.GetApplicationConfigFileRequest(input)
	return out, req.Send()
}

// GetApplicationConfigFileWithContext is the same as GetApplicationConfigFile with the addition of
// the ability to pass a context and additional request options.
//
// See GetApplicationConfigFile for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *EMR) GetApplicationConfigFileWithContext(ctx volcengine.Context, input *GetApplicationConfigFileInput, opts ...request.Option) (*GetApplicationConfigFileOutput, error) {
	req, out := c.GetApplicationConfigFileRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetApplicationConfigFileInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// ApplicationName is a required field
	ApplicationName *string `type:"string" json:",omitempty" required:"true"`

	// ClusterId is a required field
	ClusterId *string `type:"string" json:",omitempty" required:"true"`

	// ConfigFileName is a required field
	ConfigFileName *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetApplicationConfigFileInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetApplicationConfigFileInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetApplicationConfigFileInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetApplicationConfigFileInput"}
	if s.ApplicationName == nil {
		invalidParams.Add(request.NewErrParamRequired("ApplicationName"))
	}
	if s.ClusterId == nil {
		invalidParams.Add(request.NewErrParamRequired("ClusterId"))
	}
	if s.ConfigFileName == nil {
		invalidParams.Add(request.NewErrParamRequired("ConfigFileName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetApplicationName sets the ApplicationName field's value.
func (s *GetApplicationConfigFileInput) SetApplicationName(v string) *GetApplicationConfigFileInput {
	s.ApplicationName = &v
	return s
}

// SetClusterId sets the ClusterId field's value.
func (s *GetApplicationConfigFileInput) SetClusterId(v string) *GetApplicationConfigFileInput {
	s.ClusterId = &v
	return s
}

// SetConfigFileName sets the ConfigFileName field's value.
func (s *GetApplicationConfigFileInput) SetConfigFileName(v string) *GetApplicationConfigFileInput {
	s.ConfigFileName = &v
	return s
}

type GetApplicationConfigFileOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ApplicationName *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	FileContent *string `type:"string" json:",omitempty"`

	FileGroup *string `type:"string" json:",omitempty"`

	FileName *string `type:"string" json:",omitempty"`

	FilePath *string `type:"string" json:",omitempty"`

	FileUser *string `type:"string" json:",omitempty"`

	SupportCustomConfigItem *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s GetApplicationConfigFileOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetApplicationConfigFileOutput) GoString() string {
	return s.String()
}

// SetApplicationName sets the ApplicationName field's value.
func (s *GetApplicationConfigFileOutput) SetApplicationName(v string) *GetApplicationConfigFileOutput {
	s.ApplicationName = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *GetApplicationConfigFileOutput) SetDescription(v string) *GetApplicationConfigFileOutput {
	s.Description = &v
	return s
}

// SetFileContent sets the FileContent field's value.
func (s *GetApplicationConfigFileOutput) SetFileContent(v string) *GetApplicationConfigFileOutput {
	s.FileContent = &v
	return s
}

// SetFileGroup sets the FileGroup field's value.
func (s *GetApplicationConfigFileOutput) SetFileGroup(v string) *GetApplicationConfigFileOutput {
	s.FileGroup = &v
	return s
}

// SetFileName sets the FileName field's value.
func (s *GetApplicationConfigFileOutput) SetFileName(v string) *GetApplicationConfigFileOutput {
	s.FileName = &v
	return s
}

// SetFilePath sets the FilePath field's value.
func (s *GetApplicationConfigFileOutput) SetFilePath(v string) *GetApplicationConfigFileOutput {
	s.FilePath = &v
	return s
}

// SetFileUser sets the FileUser field's value.
func (s *GetApplicationConfigFileOutput) SetFileUser(v string) *GetApplicationConfigFileOutput {
	s.FileUser = &v
	return s
}

// SetSupportCustomConfigItem sets the SupportCustomConfigItem field's value.
func (s *GetApplicationConfigFileOutput) SetSupportCustomConfigItem(v bool) *GetApplicationConfigFileOutput {
	s.SupportCustomConfigItem = &v
	return s
}
