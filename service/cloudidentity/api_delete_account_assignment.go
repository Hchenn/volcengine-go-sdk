// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudidentity

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteAccountAssignmentCommon = "DeleteAccountAssignment"

// DeleteAccountAssignmentCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteAccountAssignmentCommon operation. The "output" return
// value will be populated with the DeleteAccountAssignmentCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteAccountAssignmentCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteAccountAssignmentCommon Send returns without error.
//
// See DeleteAccountAssignmentCommon for more information on using the DeleteAccountAssignmentCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteAccountAssignmentCommonRequest method.
//    req, resp := client.DeleteAccountAssignmentCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) DeleteAccountAssignmentCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteAccountAssignmentCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteAccountAssignmentCommon API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation DeleteAccountAssignmentCommon for usage and error information.
func (c *CLOUDIDENTITY) DeleteAccountAssignmentCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteAccountAssignmentCommonRequest(input)
	return out, req.Send()
}

// DeleteAccountAssignmentCommonWithContext is the same as DeleteAccountAssignmentCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteAccountAssignmentCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) DeleteAccountAssignmentCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteAccountAssignmentCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteAccountAssignment = "DeleteAccountAssignment"

// DeleteAccountAssignmentRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteAccountAssignment operation. The "output" return
// value will be populated with the DeleteAccountAssignmentCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteAccountAssignmentCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteAccountAssignmentCommon Send returns without error.
//
// See DeleteAccountAssignment for more information on using the DeleteAccountAssignment
// API call, and error handling.
//
//    // Example sending a request using the DeleteAccountAssignmentRequest method.
//    req, resp := client.DeleteAccountAssignmentRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) DeleteAccountAssignmentRequest(input *DeleteAccountAssignmentInput) (req *request.Request, output *DeleteAccountAssignmentOutput) {
	op := &request.Operation{
		Name:       opDeleteAccountAssignment,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteAccountAssignmentInput{}
	}

	output = &DeleteAccountAssignmentOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteAccountAssignment API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation DeleteAccountAssignment for usage and error information.
func (c *CLOUDIDENTITY) DeleteAccountAssignment(input *DeleteAccountAssignmentInput) (*DeleteAccountAssignmentOutput, error) {
	req, out := c.DeleteAccountAssignmentRequest(input)
	return out, req.Send()
}

// DeleteAccountAssignmentWithContext is the same as DeleteAccountAssignment with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteAccountAssignment for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) DeleteAccountAssignmentWithContext(ctx volcengine.Context, input *DeleteAccountAssignmentInput, opts ...request.Option) (*DeleteAccountAssignmentOutput, error) {
	req, out := c.DeleteAccountAssignmentRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteAccountAssignmentInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DeprovisionStrategy *string `type:"string" json:",omitempty" enum:"EnumOfDeprovisionStrategyForDeleteAccountAssignmentInput"`

	// PermissionSetId is a required field
	PermissionSetId *string `type:"string" json:",omitempty" required:"true"`

	// PrincipalId is a required field
	PrincipalId *string `type:"string" json:",omitempty" required:"true"`

	// PrincipalType is a required field
	PrincipalType *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfPrincipalTypeForDeleteAccountAssignmentInput"`

	// TargetId is a required field
	TargetId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DeleteAccountAssignmentInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAccountAssignmentInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteAccountAssignmentInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteAccountAssignmentInput"}
	if s.PermissionSetId == nil {
		invalidParams.Add(request.NewErrParamRequired("PermissionSetId"))
	}
	if s.PrincipalId == nil {
		invalidParams.Add(request.NewErrParamRequired("PrincipalId"))
	}
	if s.PrincipalType == nil {
		invalidParams.Add(request.NewErrParamRequired("PrincipalType"))
	}
	if s.TargetId == nil {
		invalidParams.Add(request.NewErrParamRequired("TargetId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDeprovisionStrategy sets the DeprovisionStrategy field's value.
func (s *DeleteAccountAssignmentInput) SetDeprovisionStrategy(v string) *DeleteAccountAssignmentInput {
	s.DeprovisionStrategy = &v
	return s
}

// SetPermissionSetId sets the PermissionSetId field's value.
func (s *DeleteAccountAssignmentInput) SetPermissionSetId(v string) *DeleteAccountAssignmentInput {
	s.PermissionSetId = &v
	return s
}

// SetPrincipalId sets the PrincipalId field's value.
func (s *DeleteAccountAssignmentInput) SetPrincipalId(v string) *DeleteAccountAssignmentInput {
	s.PrincipalId = &v
	return s
}

// SetPrincipalType sets the PrincipalType field's value.
func (s *DeleteAccountAssignmentInput) SetPrincipalType(v string) *DeleteAccountAssignmentInput {
	s.PrincipalType = &v
	return s
}

// SetTargetId sets the TargetId field's value.
func (s *DeleteAccountAssignmentInput) SetTargetId(v string) *DeleteAccountAssignmentInput {
	s.TargetId = &v
	return s
}

type DeleteAccountAssignmentOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	TaskId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DeleteAccountAssignmentOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAccountAssignmentOutput) GoString() string {
	return s.String()
}

// SetTaskId sets the TaskId field's value.
func (s *DeleteAccountAssignmentOutput) SetTaskId(v string) *DeleteAccountAssignmentOutput {
	s.TaskId = &v
	return s
}

const (
	// EnumOfDeprovisionStrategyForDeleteAccountAssignmentInputDeprovisionForLastPermissionSetOnAccount is a EnumOfDeprovisionStrategyForDeleteAccountAssignmentInput enum value
	EnumOfDeprovisionStrategyForDeleteAccountAssignmentInputDeprovisionForLastPermissionSetOnAccount = "DeprovisionForLastPermissionSetOnAccount"

	// EnumOfDeprovisionStrategyForDeleteAccountAssignmentInputNone is a EnumOfDeprovisionStrategyForDeleteAccountAssignmentInput enum value
	EnumOfDeprovisionStrategyForDeleteAccountAssignmentInputNone = "None"
)

const (
	// EnumOfPrincipalTypeForDeleteAccountAssignmentInputUser is a EnumOfPrincipalTypeForDeleteAccountAssignmentInput enum value
	EnumOfPrincipalTypeForDeleteAccountAssignmentInputUser = "User"

	// EnumOfPrincipalTypeForDeleteAccountAssignmentInputGroup is a EnumOfPrincipalTypeForDeleteAccountAssignmentInput enum value
	EnumOfPrincipalTypeForDeleteAccountAssignmentInputGroup = "Group"
)
