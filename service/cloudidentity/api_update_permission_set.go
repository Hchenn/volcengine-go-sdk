// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudidentity

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdatePermissionSetCommon = "UpdatePermissionSet"

// UpdatePermissionSetCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdatePermissionSetCommon operation. The "output" return
// value will be populated with the UpdatePermissionSetCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdatePermissionSetCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdatePermissionSetCommon Send returns without error.
//
// See UpdatePermissionSetCommon for more information on using the UpdatePermissionSetCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdatePermissionSetCommonRequest method.
//    req, resp := client.UpdatePermissionSetCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) UpdatePermissionSetCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdatePermissionSetCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdatePermissionSetCommon API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation UpdatePermissionSetCommon for usage and error information.
func (c *CLOUDIDENTITY) UpdatePermissionSetCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdatePermissionSetCommonRequest(input)
	return out, req.Send()
}

// UpdatePermissionSetCommonWithContext is the same as UpdatePermissionSetCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdatePermissionSetCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) UpdatePermissionSetCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdatePermissionSetCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdatePermissionSet = "UpdatePermissionSet"

// UpdatePermissionSetRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdatePermissionSet operation. The "output" return
// value will be populated with the UpdatePermissionSetCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdatePermissionSetCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdatePermissionSetCommon Send returns without error.
//
// See UpdatePermissionSet for more information on using the UpdatePermissionSet
// API call, and error handling.
//
//    // Example sending a request using the UpdatePermissionSetRequest method.
//    req, resp := client.UpdatePermissionSetRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) UpdatePermissionSetRequest(input *UpdatePermissionSetInput) (req *request.Request, output *UpdatePermissionSetOutput) {
	op := &request.Operation{
		Name:       opUpdatePermissionSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdatePermissionSetInput{}
	}

	output = &UpdatePermissionSetOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdatePermissionSet API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation UpdatePermissionSet for usage and error information.
func (c *CLOUDIDENTITY) UpdatePermissionSet(input *UpdatePermissionSetInput) (*UpdatePermissionSetOutput, error) {
	req, out := c.UpdatePermissionSetRequest(input)
	return out, req.Send()
}

// UpdatePermissionSetWithContext is the same as UpdatePermissionSet with the addition of
// the ability to pass a context and additional request options.
//
// See UpdatePermissionSet for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) UpdatePermissionSetWithContext(ctx volcengine.Context, input *UpdatePermissionSetInput, opts ...request.Option) (*UpdatePermissionSetOutput, error) {
	req, out := c.UpdatePermissionSetRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type UpdatePermissionSetInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Description *string `max:"255" type:"string" json:",omitempty"`

	// PermissionSetId is a required field
	PermissionSetId *string `type:"string" json:",omitempty" required:"true"`

	RelayState *string `type:"string" json:",omitempty"`

	SessionDuration *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s UpdatePermissionSetInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdatePermissionSetInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdatePermissionSetInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdatePermissionSetInput"}
	if s.Description != nil && len(*s.Description) > 255 {
		invalidParams.Add(request.NewErrParamMaxLen("Description", 255, *s.Description))
	}
	if s.PermissionSetId == nil {
		invalidParams.Add(request.NewErrParamRequired("PermissionSetId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *UpdatePermissionSetInput) SetDescription(v string) *UpdatePermissionSetInput {
	s.Description = &v
	return s
}

// SetPermissionSetId sets the PermissionSetId field's value.
func (s *UpdatePermissionSetInput) SetPermissionSetId(v string) *UpdatePermissionSetInput {
	s.PermissionSetId = &v
	return s
}

// SetRelayState sets the RelayState field's value.
func (s *UpdatePermissionSetInput) SetRelayState(v string) *UpdatePermissionSetInput {
	s.RelayState = &v
	return s
}

// SetSessionDuration sets the SessionDuration field's value.
func (s *UpdatePermissionSetInput) SetSessionDuration(v int64) *UpdatePermissionSetInput {
	s.SessionDuration = &v
	return s
}

type UpdatePermissionSetOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdatePermissionSetOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdatePermissionSetOutput) GoString() string {
	return s.String()
}
