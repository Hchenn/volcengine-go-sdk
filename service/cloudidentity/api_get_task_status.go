// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudidentity

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetTaskStatusCommon = "GetTaskStatus"

// GetTaskStatusCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetTaskStatusCommon operation. The "output" return
// value will be populated with the GetTaskStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetTaskStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetTaskStatusCommon Send returns without error.
//
// See GetTaskStatusCommon for more information on using the GetTaskStatusCommon
// API call, and error handling.
//
//    // Example sending a request using the GetTaskStatusCommonRequest method.
//    req, resp := client.GetTaskStatusCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) GetTaskStatusCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetTaskStatusCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetTaskStatusCommon API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation GetTaskStatusCommon for usage and error information.
func (c *CLOUDIDENTITY) GetTaskStatusCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetTaskStatusCommonRequest(input)
	return out, req.Send()
}

// GetTaskStatusCommonWithContext is the same as GetTaskStatusCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetTaskStatusCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) GetTaskStatusCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetTaskStatusCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetTaskStatus = "GetTaskStatus"

// GetTaskStatusRequest generates a "volcengine/request.Request" representing the
// client's request for the GetTaskStatus operation. The "output" return
// value will be populated with the GetTaskStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetTaskStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetTaskStatusCommon Send returns without error.
//
// See GetTaskStatus for more information on using the GetTaskStatus
// API call, and error handling.
//
//    // Example sending a request using the GetTaskStatusRequest method.
//    req, resp := client.GetTaskStatusRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) GetTaskStatusRequest(input *GetTaskStatusInput) (req *request.Request, output *GetTaskStatusOutput) {
	op := &request.Operation{
		Name:       opGetTaskStatus,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetTaskStatusInput{}
	}

	output = &GetTaskStatusOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetTaskStatus API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation GetTaskStatus for usage and error information.
func (c *CLOUDIDENTITY) GetTaskStatus(input *GetTaskStatusInput) (*GetTaskStatusOutput, error) {
	req, out := c.GetTaskStatusRequest(input)
	return out, req.Send()
}

// GetTaskStatusWithContext is the same as GetTaskStatus with the addition of
// the ability to pass a context and additional request options.
//
// See GetTaskStatus for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) GetTaskStatusWithContext(ctx volcengine.Context, input *GetTaskStatusInput, opts ...request.Option) (*GetTaskStatusOutput, error) {
	req, out := c.GetTaskStatusRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetTaskStatusInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// TaskId is a required field
	TaskId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetTaskStatusInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTaskStatusInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetTaskStatusInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetTaskStatusInput"}
	if s.TaskId == nil {
		invalidParams.Add(request.NewErrParamRequired("TaskId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetTaskId sets the TaskId field's value.
func (s *GetTaskStatusInput) SetTaskId(v string) *GetTaskStatusInput {
	s.TaskId = &v
	return s
}

type GetTaskStatusOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	CreatedTime *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	TaskId *string `type:"string" json:",omitempty"`

	TaskType *string `type:"string" json:",omitempty"`

	UpdatedTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetTaskStatusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTaskStatusOutput) GoString() string {
	return s.String()
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *GetTaskStatusOutput) SetCreatedTime(v string) *GetTaskStatusOutput {
	s.CreatedTime = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *GetTaskStatusOutput) SetStatus(v string) *GetTaskStatusOutput {
	s.Status = &v
	return s
}

// SetTaskId sets the TaskId field's value.
func (s *GetTaskStatusOutput) SetTaskId(v string) *GetTaskStatusOutput {
	s.TaskId = &v
	return s
}

// SetTaskType sets the TaskType field's value.
func (s *GetTaskStatusOutput) SetTaskType(v string) *GetTaskStatusOutput {
	s.TaskType = &v
	return s
}

// SetUpdatedTime sets the UpdatedTime field's value.
func (s *GetTaskStatusOutput) SetUpdatedTime(v string) *GetTaskStatusOutput {
	s.UpdatedTime = &v
	return s
}
