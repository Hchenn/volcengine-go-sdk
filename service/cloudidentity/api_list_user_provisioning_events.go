// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudidentity

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListUserProvisioningEventsCommon = "ListUserProvisioningEvents"

// ListUserProvisioningEventsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListUserProvisioningEventsCommon operation. The "output" return
// value will be populated with the ListUserProvisioningEventsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListUserProvisioningEventsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListUserProvisioningEventsCommon Send returns without error.
//
// See ListUserProvisioningEventsCommon for more information on using the ListUserProvisioningEventsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListUserProvisioningEventsCommonRequest method.
//    req, resp := client.ListUserProvisioningEventsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) ListUserProvisioningEventsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListUserProvisioningEventsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListUserProvisioningEventsCommon API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation ListUserProvisioningEventsCommon for usage and error information.
func (c *CLOUDIDENTITY) ListUserProvisioningEventsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListUserProvisioningEventsCommonRequest(input)
	return out, req.Send()
}

// ListUserProvisioningEventsCommonWithContext is the same as ListUserProvisioningEventsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListUserProvisioningEventsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) ListUserProvisioningEventsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListUserProvisioningEventsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListUserProvisioningEvents = "ListUserProvisioningEvents"

// ListUserProvisioningEventsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListUserProvisioningEvents operation. The "output" return
// value will be populated with the ListUserProvisioningEventsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListUserProvisioningEventsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListUserProvisioningEventsCommon Send returns without error.
//
// See ListUserProvisioningEvents for more information on using the ListUserProvisioningEvents
// API call, and error handling.
//
//    // Example sending a request using the ListUserProvisioningEventsRequest method.
//    req, resp := client.ListUserProvisioningEventsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) ListUserProvisioningEventsRequest(input *ListUserProvisioningEventsInput) (req *request.Request, output *ListUserProvisioningEventsOutput) {
	op := &request.Operation{
		Name:       opListUserProvisioningEvents,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListUserProvisioningEventsInput{}
	}

	output = &ListUserProvisioningEventsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListUserProvisioningEvents API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation ListUserProvisioningEvents for usage and error information.
func (c *CLOUDIDENTITY) ListUserProvisioningEvents(input *ListUserProvisioningEventsInput) (*ListUserProvisioningEventsOutput, error) {
	req, out := c.ListUserProvisioningEventsRequest(input)
	return out, req.Send()
}

// ListUserProvisioningEventsWithContext is the same as ListUserProvisioningEvents with the addition of
// the ability to pass a context and additional request options.
//
// See ListUserProvisioningEvents for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) ListUserProvisioningEventsWithContext(ctx volcengine.Context, input *ListUserProvisioningEventsInput, opts ...request.Option) (*ListUserProvisioningEventsOutput, error) {
	req, out := c.ListUserProvisioningEventsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListUserProvisioningEventsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EventStatus []*string `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	QueryString *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListUserProvisioningEventsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListUserProvisioningEventsInput) GoString() string {
	return s.String()
}

// SetEventStatus sets the EventStatus field's value.
func (s *ListUserProvisioningEventsInput) SetEventStatus(v []*string) *ListUserProvisioningEventsInput {
	s.EventStatus = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListUserProvisioningEventsInput) SetPageNumber(v int32) *ListUserProvisioningEventsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListUserProvisioningEventsInput) SetPageSize(v int32) *ListUserProvisioningEventsInput {
	s.PageSize = &v
	return s
}

// SetQueryString sets the QueryString field's value.
func (s *ListUserProvisioningEventsInput) SetQueryString(v string) *ListUserProvisioningEventsInput {
	s.QueryString = &v
	return s
}

type ListUserProvisioningEventsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	Total *int64 `type:"int64" json:",omitempty"`

	UserProvisioningEvent []*UserProvisioningEventForListUserProvisioningEventsOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListUserProvisioningEventsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListUserProvisioningEventsOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListUserProvisioningEventsOutput) SetPageNumber(v int64) *ListUserProvisioningEventsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListUserProvisioningEventsOutput) SetPageSize(v int32) *ListUserProvisioningEventsOutput {
	s.PageSize = &v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListUserProvisioningEventsOutput) SetTotal(v int64) *ListUserProvisioningEventsOutput {
	s.Total = &v
	return s
}

// SetUserProvisioningEvent sets the UserProvisioningEvent field's value.
func (s *ListUserProvisioningEventsOutput) SetUserProvisioningEvent(v []*UserProvisioningEventForListUserProvisioningEventsOutput) *ListUserProvisioningEventsOutput {
	s.UserProvisioningEvent = v
	return s
}

type UserProvisioningEventForListUserProvisioningEventsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreatedTime *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	EventStatus *string `type:"string" json:",omitempty"`

	FailureReason *string `type:"string" json:",omitempty"`

	PrincipalType *string `type:"string" json:",omitempty"`

	TargetId *string `type:"string" json:",omitempty"`

	TargetName *string `type:"string" json:",omitempty"`

	UpdatedTime *string `type:"string" json:",omitempty"`

	UserId *string `type:"string" json:",omitempty"`

	UserName *string `type:"string" json:",omitempty"`

	UserProvisioningEventId *string `type:"string" json:",omitempty"`

	UserProvisioningId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UserProvisioningEventForListUserProvisioningEventsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UserProvisioningEventForListUserProvisioningEventsOutput) GoString() string {
	return s.String()
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *UserProvisioningEventForListUserProvisioningEventsOutput) SetCreatedTime(v string) *UserProvisioningEventForListUserProvisioningEventsOutput {
	s.CreatedTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *UserProvisioningEventForListUserProvisioningEventsOutput) SetDescription(v string) *UserProvisioningEventForListUserProvisioningEventsOutput {
	s.Description = &v
	return s
}

// SetEventStatus sets the EventStatus field's value.
func (s *UserProvisioningEventForListUserProvisioningEventsOutput) SetEventStatus(v string) *UserProvisioningEventForListUserProvisioningEventsOutput {
	s.EventStatus = &v
	return s
}

// SetFailureReason sets the FailureReason field's value.
func (s *UserProvisioningEventForListUserProvisioningEventsOutput) SetFailureReason(v string) *UserProvisioningEventForListUserProvisioningEventsOutput {
	s.FailureReason = &v
	return s
}

// SetPrincipalType sets the PrincipalType field's value.
func (s *UserProvisioningEventForListUserProvisioningEventsOutput) SetPrincipalType(v string) *UserProvisioningEventForListUserProvisioningEventsOutput {
	s.PrincipalType = &v
	return s
}

// SetTargetId sets the TargetId field's value.
func (s *UserProvisioningEventForListUserProvisioningEventsOutput) SetTargetId(v string) *UserProvisioningEventForListUserProvisioningEventsOutput {
	s.TargetId = &v
	return s
}

// SetTargetName sets the TargetName field's value.
func (s *UserProvisioningEventForListUserProvisioningEventsOutput) SetTargetName(v string) *UserProvisioningEventForListUserProvisioningEventsOutput {
	s.TargetName = &v
	return s
}

// SetUpdatedTime sets the UpdatedTime field's value.
func (s *UserProvisioningEventForListUserProvisioningEventsOutput) SetUpdatedTime(v string) *UserProvisioningEventForListUserProvisioningEventsOutput {
	s.UpdatedTime = &v
	return s
}

// SetUserId sets the UserId field's value.
func (s *UserProvisioningEventForListUserProvisioningEventsOutput) SetUserId(v string) *UserProvisioningEventForListUserProvisioningEventsOutput {
	s.UserId = &v
	return s
}

// SetUserName sets the UserName field's value.
func (s *UserProvisioningEventForListUserProvisioningEventsOutput) SetUserName(v string) *UserProvisioningEventForListUserProvisioningEventsOutput {
	s.UserName = &v
	return s
}

// SetUserProvisioningEventId sets the UserProvisioningEventId field's value.
func (s *UserProvisioningEventForListUserProvisioningEventsOutput) SetUserProvisioningEventId(v string) *UserProvisioningEventForListUserProvisioningEventsOutput {
	s.UserProvisioningEventId = &v
	return s
}

// SetUserProvisioningId sets the UserProvisioningId field's value.
func (s *UserProvisioningEventForListUserProvisioningEventsOutput) SetUserProvisioningId(v string) *UserProvisioningEventForListUserProvisioningEventsOutput {
	s.UserProvisioningId = &v
	return s
}

const (
	// EnumOfEventStatusListForListUserProvisioningEventsInputProvisionFailed is a EnumOfEventStatusListForListUserProvisioningEventsInput enum value
	EnumOfEventStatusListForListUserProvisioningEventsInputProvisionFailed = "ProvisionFailed"

	// EnumOfEventStatusListForListUserProvisioningEventsInputDeleteProvisionFailed is a EnumOfEventStatusListForListUserProvisioningEventsInput enum value
	EnumOfEventStatusListForListUserProvisioningEventsInputDeleteProvisionFailed = "DeleteProvisionFailed"
)
