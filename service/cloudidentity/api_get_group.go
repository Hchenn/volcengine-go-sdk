// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudidentity

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetGroupCommon = "GetGroup"

// GetGroupCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetGroupCommon operation. The "output" return
// value will be populated with the GetGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetGroupCommon Send returns without error.
//
// See GetGroupCommon for more information on using the GetGroupCommon
// API call, and error handling.
//
//    // Example sending a request using the GetGroupCommonRequest method.
//    req, resp := client.GetGroupCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) GetGroupCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetGroupCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetGroupCommon API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation GetGroupCommon for usage and error information.
func (c *CLOUDIDENTITY) GetGroupCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetGroupCommonRequest(input)
	return out, req.Send()
}

// GetGroupCommonWithContext is the same as GetGroupCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetGroupCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) GetGroupCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetGroupCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetGroup = "GetGroup"

// GetGroupRequest generates a "volcengine/request.Request" representing the
// client's request for the GetGroup operation. The "output" return
// value will be populated with the GetGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetGroupCommon Send returns without error.
//
// See GetGroup for more information on using the GetGroup
// API call, and error handling.
//
//    // Example sending a request using the GetGroupRequest method.
//    req, resp := client.GetGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) GetGroupRequest(input *GetGroupInput) (req *request.Request, output *GetGroupOutput) {
	op := &request.Operation{
		Name:       opGetGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetGroupInput{}
	}

	output = &GetGroupOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetGroup API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation GetGroup for usage and error information.
func (c *CLOUDIDENTITY) GetGroup(input *GetGroupInput) (*GetGroupOutput, error) {
	req, out := c.GetGroupRequest(input)
	return out, req.Send()
}

// GetGroupWithContext is the same as GetGroup with the addition of
// the ability to pass a context and additional request options.
//
// See GetGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) GetGroupWithContext(ctx volcengine.Context, input *GetGroupInput, opts ...request.Option) (*GetGroupOutput, error) {
	req, out := c.GetGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetGroupInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// GroupId is a required field
	GroupId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetGroupInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetGroupInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetGroupInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetGroupInput"}
	if s.GroupId == nil {
		invalidParams.Add(request.NewErrParamRequired("GroupId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetGroupId sets the GroupId field's value.
func (s *GetGroupInput) SetGroupId(v string) *GetGroupInput {
	s.GroupId = &v
	return s
}

type GetGroupOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	CreatedTime *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	DisplayName *string `type:"string" json:",omitempty"`

	GroupId *string `type:"string" json:",omitempty"`

	GroupName *string `type:"string" json:",omitempty"`

	JoinType *string `type:"string" json:",omitempty"`

	Source *string `type:"string" json:",omitempty"`

	UpdatedTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetGroupOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetGroupOutput) GoString() string {
	return s.String()
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *GetGroupOutput) SetCreatedTime(v string) *GetGroupOutput {
	s.CreatedTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *GetGroupOutput) SetDescription(v string) *GetGroupOutput {
	s.Description = &v
	return s
}

// SetDisplayName sets the DisplayName field's value.
func (s *GetGroupOutput) SetDisplayName(v string) *GetGroupOutput {
	s.DisplayName = &v
	return s
}

// SetGroupId sets the GroupId field's value.
func (s *GetGroupOutput) SetGroupId(v string) *GetGroupOutput {
	s.GroupId = &v
	return s
}

// SetGroupName sets the GroupName field's value.
func (s *GetGroupOutput) SetGroupName(v string) *GetGroupOutput {
	s.GroupName = &v
	return s
}

// SetJoinType sets the JoinType field's value.
func (s *GetGroupOutput) SetJoinType(v string) *GetGroupOutput {
	s.JoinType = &v
	return s
}

// SetSource sets the Source field's value.
func (s *GetGroupOutput) SetSource(v string) *GetGroupOutput {
	s.Source = &v
	return s
}

// SetUpdatedTime sets the UpdatedTime field's value.
func (s *GetGroupOutput) SetUpdatedTime(v string) *GetGroupOutput {
	s.UpdatedTime = &v
	return s
}
