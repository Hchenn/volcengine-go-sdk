// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudidentity

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opAddSystemPolicyToPermissionSetCommon = "AddSystemPolicyToPermissionSet"

// AddSystemPolicyToPermissionSetCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the AddSystemPolicyToPermissionSetCommon operation. The "output" return
// value will be populated with the AddSystemPolicyToPermissionSetCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AddSystemPolicyToPermissionSetCommon Request to send the API call to the service.
// the "output" return value is not valid until after AddSystemPolicyToPermissionSetCommon Send returns without error.
//
// See AddSystemPolicyToPermissionSetCommon for more information on using the AddSystemPolicyToPermissionSetCommon
// API call, and error handling.
//
//    // Example sending a request using the AddSystemPolicyToPermissionSetCommonRequest method.
//    req, resp := client.AddSystemPolicyToPermissionSetCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) AddSystemPolicyToPermissionSetCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opAddSystemPolicyToPermissionSetCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AddSystemPolicyToPermissionSetCommon API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation AddSystemPolicyToPermissionSetCommon for usage and error information.
func (c *CLOUDIDENTITY) AddSystemPolicyToPermissionSetCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.AddSystemPolicyToPermissionSetCommonRequest(input)
	return out, req.Send()
}

// AddSystemPolicyToPermissionSetCommonWithContext is the same as AddSystemPolicyToPermissionSetCommon with the addition of
// the ability to pass a context and additional request options.
//
// See AddSystemPolicyToPermissionSetCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) AddSystemPolicyToPermissionSetCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.AddSystemPolicyToPermissionSetCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAddSystemPolicyToPermissionSet = "AddSystemPolicyToPermissionSet"

// AddSystemPolicyToPermissionSetRequest generates a "volcengine/request.Request" representing the
// client's request for the AddSystemPolicyToPermissionSet operation. The "output" return
// value will be populated with the AddSystemPolicyToPermissionSetCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AddSystemPolicyToPermissionSetCommon Request to send the API call to the service.
// the "output" return value is not valid until after AddSystemPolicyToPermissionSetCommon Send returns without error.
//
// See AddSystemPolicyToPermissionSet for more information on using the AddSystemPolicyToPermissionSet
// API call, and error handling.
//
//    // Example sending a request using the AddSystemPolicyToPermissionSetRequest method.
//    req, resp := client.AddSystemPolicyToPermissionSetRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) AddSystemPolicyToPermissionSetRequest(input *AddSystemPolicyToPermissionSetInput) (req *request.Request, output *AddSystemPolicyToPermissionSetOutput) {
	op := &request.Operation{
		Name:       opAddSystemPolicyToPermissionSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AddSystemPolicyToPermissionSetInput{}
	}

	output = &AddSystemPolicyToPermissionSetOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AddSystemPolicyToPermissionSet API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation AddSystemPolicyToPermissionSet for usage and error information.
func (c *CLOUDIDENTITY) AddSystemPolicyToPermissionSet(input *AddSystemPolicyToPermissionSetInput) (*AddSystemPolicyToPermissionSetOutput, error) {
	req, out := c.AddSystemPolicyToPermissionSetRequest(input)
	return out, req.Send()
}

// AddSystemPolicyToPermissionSetWithContext is the same as AddSystemPolicyToPermissionSet with the addition of
// the ability to pass a context and additional request options.
//
// See AddSystemPolicyToPermissionSet for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) AddSystemPolicyToPermissionSetWithContext(ctx volcengine.Context, input *AddSystemPolicyToPermissionSetInput, opts ...request.Option) (*AddSystemPolicyToPermissionSetOutput, error) {
	req, out := c.AddSystemPolicyToPermissionSetRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AddSystemPolicyToPermissionSetInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// PermissionPolicyName is a required field
	PermissionPolicyName *string `type:"string" json:",omitempty" required:"true"`

	// PermissionSetId is a required field
	PermissionSetId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s AddSystemPolicyToPermissionSetInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddSystemPolicyToPermissionSetInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AddSystemPolicyToPermissionSetInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "AddSystemPolicyToPermissionSetInput"}
	if s.PermissionPolicyName == nil {
		invalidParams.Add(request.NewErrParamRequired("PermissionPolicyName"))
	}
	if s.PermissionSetId == nil {
		invalidParams.Add(request.NewErrParamRequired("PermissionSetId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetPermissionPolicyName sets the PermissionPolicyName field's value.
func (s *AddSystemPolicyToPermissionSetInput) SetPermissionPolicyName(v string) *AddSystemPolicyToPermissionSetInput {
	s.PermissionPolicyName = &v
	return s
}

// SetPermissionSetId sets the PermissionSetId field's value.
func (s *AddSystemPolicyToPermissionSetInput) SetPermissionSetId(v string) *AddSystemPolicyToPermissionSetInput {
	s.PermissionSetId = &v
	return s
}

type AddSystemPolicyToPermissionSetOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s AddSystemPolicyToPermissionSetOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddSystemPolicyToPermissionSetOutput) GoString() string {
	return s.String()
}
