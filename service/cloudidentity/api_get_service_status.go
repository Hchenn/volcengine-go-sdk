// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudidentity

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetServiceStatusCommon = "GetServiceStatus"

// GetServiceStatusCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetServiceStatusCommon operation. The "output" return
// value will be populated with the GetServiceStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetServiceStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetServiceStatusCommon Send returns without error.
//
// See GetServiceStatusCommon for more information on using the GetServiceStatusCommon
// API call, and error handling.
//
//    // Example sending a request using the GetServiceStatusCommonRequest method.
//    req, resp := client.GetServiceStatusCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) GetServiceStatusCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetServiceStatusCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetServiceStatusCommon API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation GetServiceStatusCommon for usage and error information.
func (c *CLOUDIDENTITY) GetServiceStatusCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetServiceStatusCommonRequest(input)
	return out, req.Send()
}

// GetServiceStatusCommonWithContext is the same as GetServiceStatusCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetServiceStatusCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) GetServiceStatusCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetServiceStatusCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetServiceStatus = "GetServiceStatus"

// GetServiceStatusRequest generates a "volcengine/request.Request" representing the
// client's request for the GetServiceStatus operation. The "output" return
// value will be populated with the GetServiceStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetServiceStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetServiceStatusCommon Send returns without error.
//
// See GetServiceStatus for more information on using the GetServiceStatus
// API call, and error handling.
//
//    // Example sending a request using the GetServiceStatusRequest method.
//    req, resp := client.GetServiceStatusRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) GetServiceStatusRequest(input *GetServiceStatusInput) (req *request.Request, output *GetServiceStatusOutput) {
	op := &request.Operation{
		Name:       opGetServiceStatus,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetServiceStatusInput{}
	}

	output = &GetServiceStatusOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetServiceStatus API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation GetServiceStatus for usage and error information.
func (c *CLOUDIDENTITY) GetServiceStatus(input *GetServiceStatusInput) (*GetServiceStatusOutput, error) {
	req, out := c.GetServiceStatusRequest(input)
	return out, req.Send()
}

// GetServiceStatusWithContext is the same as GetServiceStatus with the addition of
// the ability to pass a context and additional request options.
//
// See GetServiceStatus for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) GetServiceStatusWithContext(ctx volcengine.Context, input *GetServiceStatusInput, opts ...request.Option) (*GetServiceStatusOutput, error) {
	req, out := c.GetServiceStatusRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetServiceStatusInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetServiceStatusInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetServiceStatusInput) GoString() string {
	return s.String()
}

type GetServiceStatusOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Instances []*InstanceForGetServiceStatusOutput `type:"list" json:",omitempty"`

	PrerequisiteCheckResult *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetServiceStatusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetServiceStatusOutput) GoString() string {
	return s.String()
}

// SetInstances sets the Instances field's value.
func (s *GetServiceStatusOutput) SetInstances(v []*InstanceForGetServiceStatusOutput) *GetServiceStatusOutput {
	s.Instances = v
	return s
}

// SetPrerequisiteCheckResult sets the PrerequisiteCheckResult field's value.
func (s *GetServiceStatusOutput) SetPrerequisiteCheckResult(v string) *GetServiceStatusOutput {
	s.PrerequisiteCheckResult = &v
	return s
}

type InstanceForGetServiceStatusOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreatedTime *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty" enum:"EnumOfStatusForGetServiceStatusOutput"`
}

// String returns the string representation
func (s InstanceForGetServiceStatusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceForGetServiceStatusOutput) GoString() string {
	return s.String()
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *InstanceForGetServiceStatusOutput) SetCreatedTime(v string) *InstanceForGetServiceStatusOutput {
	s.CreatedTime = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *InstanceForGetServiceStatusOutput) SetInstanceId(v string) *InstanceForGetServiceStatusOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *InstanceForGetServiceStatusOutput) SetInstanceName(v string) *InstanceForGetServiceStatusOutput {
	s.InstanceName = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *InstanceForGetServiceStatusOutput) SetRegion(v string) *InstanceForGetServiceStatusOutput {
	s.Region = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *InstanceForGetServiceStatusOutput) SetStatus(v string) *InstanceForGetServiceStatusOutput {
	s.Status = &v
	return s
}

const (
	// EnumOfStatusForGetServiceStatusOutputEnable is a EnumOfStatusForGetServiceStatusOutput enum value
	EnumOfStatusForGetServiceStatusOutputEnable = "Enable"

	// EnumOfStatusForGetServiceStatusOutputPendingDisable is a EnumOfStatusForGetServiceStatusOutput enum value
	EnumOfStatusForGetServiceStatusOutputPendingDisable = "PendingDisable"
)
