// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudidentity

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetSAMLServiceProviderCommon = "GetSAMLServiceProvider"

// GetSAMLServiceProviderCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetSAMLServiceProviderCommon operation. The "output" return
// value will be populated with the GetSAMLServiceProviderCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetSAMLServiceProviderCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetSAMLServiceProviderCommon Send returns without error.
//
// See GetSAMLServiceProviderCommon for more information on using the GetSAMLServiceProviderCommon
// API call, and error handling.
//
//    // Example sending a request using the GetSAMLServiceProviderCommonRequest method.
//    req, resp := client.GetSAMLServiceProviderCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) GetSAMLServiceProviderCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetSAMLServiceProviderCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetSAMLServiceProviderCommon API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation GetSAMLServiceProviderCommon for usage and error information.
func (c *CLOUDIDENTITY) GetSAMLServiceProviderCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetSAMLServiceProviderCommonRequest(input)
	return out, req.Send()
}

// GetSAMLServiceProviderCommonWithContext is the same as GetSAMLServiceProviderCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetSAMLServiceProviderCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) GetSAMLServiceProviderCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetSAMLServiceProviderCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetSAMLServiceProvider = "GetSAMLServiceProvider"

// GetSAMLServiceProviderRequest generates a "volcengine/request.Request" representing the
// client's request for the GetSAMLServiceProvider operation. The "output" return
// value will be populated with the GetSAMLServiceProviderCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetSAMLServiceProviderCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetSAMLServiceProviderCommon Send returns without error.
//
// See GetSAMLServiceProvider for more information on using the GetSAMLServiceProvider
// API call, and error handling.
//
//    // Example sending a request using the GetSAMLServiceProviderRequest method.
//    req, resp := client.GetSAMLServiceProviderRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) GetSAMLServiceProviderRequest(input *GetSAMLServiceProviderInput) (req *request.Request, output *GetSAMLServiceProviderOutput) {
	op := &request.Operation{
		Name:       opGetSAMLServiceProvider,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetSAMLServiceProviderInput{}
	}

	output = &GetSAMLServiceProviderOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetSAMLServiceProvider API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation GetSAMLServiceProvider for usage and error information.
func (c *CLOUDIDENTITY) GetSAMLServiceProvider(input *GetSAMLServiceProviderInput) (*GetSAMLServiceProviderOutput, error) {
	req, out := c.GetSAMLServiceProviderRequest(input)
	return out, req.Send()
}

// GetSAMLServiceProviderWithContext is the same as GetSAMLServiceProvider with the addition of
// the ability to pass a context and additional request options.
//
// See GetSAMLServiceProvider for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) GetSAMLServiceProviderWithContext(ctx volcengine.Context, input *GetSAMLServiceProviderInput, opts ...request.Option) (*GetSAMLServiceProviderOutput, error) {
	req, out := c.GetSAMLServiceProviderRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetSAMLServiceProviderInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetSAMLServiceProviderInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetSAMLServiceProviderInput) GoString() string {
	return s.String()
}

type GetSAMLServiceProviderOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AcsUrl *string `type:"string" json:",omitempty"`

	EncodedMetadataDocument *string `type:"string" json:",omitempty"`

	EntityId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetSAMLServiceProviderOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetSAMLServiceProviderOutput) GoString() string {
	return s.String()
}

// SetAcsUrl sets the AcsUrl field's value.
func (s *GetSAMLServiceProviderOutput) SetAcsUrl(v string) *GetSAMLServiceProviderOutput {
	s.AcsUrl = &v
	return s
}

// SetEncodedMetadataDocument sets the EncodedMetadataDocument field's value.
func (s *GetSAMLServiceProviderOutput) SetEncodedMetadataDocument(v string) *GetSAMLServiceProviderOutput {
	s.EncodedMetadataDocument = &v
	return s
}

// SetEntityId sets the EntityId field's value.
func (s *GetSAMLServiceProviderOutput) SetEntityId(v string) *GetSAMLServiceProviderOutput {
	s.EntityId = &v
	return s
}
