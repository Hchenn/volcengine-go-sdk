// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package waf

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListLoadBalancerCommon = "ListLoadBalancer"

// ListLoadBalancerCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListLoadBalancerCommon operation. The "output" return
// value will be populated with the ListLoadBalancerCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListLoadBalancerCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListLoadBalancerCommon Send returns without error.
//
// See ListLoadBalancerCommon for more information on using the ListLoadBalancerCommon
// API call, and error handling.
//
//    // Example sending a request using the ListLoadBalancerCommonRequest method.
//    req, resp := client.ListLoadBalancerCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) ListLoadBalancerCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListLoadBalancerCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListLoadBalancerCommon API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation ListLoadBalancerCommon for usage and error information.
func (c *WAF) ListLoadBalancerCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListLoadBalancerCommonRequest(input)
	return out, req.Send()
}

// ListLoadBalancerCommonWithContext is the same as ListLoadBalancerCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListLoadBalancerCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) ListLoadBalancerCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListLoadBalancerCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListLoadBalancer = "ListLoadBalancer"

// ListLoadBalancerRequest generates a "volcengine/request.Request" representing the
// client's request for the ListLoadBalancer operation. The "output" return
// value will be populated with the ListLoadBalancerCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListLoadBalancerCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListLoadBalancerCommon Send returns without error.
//
// See ListLoadBalancer for more information on using the ListLoadBalancer
// API call, and error handling.
//
//    // Example sending a request using the ListLoadBalancerRequest method.
//    req, resp := client.ListLoadBalancerRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) ListLoadBalancerRequest(input *ListLoadBalancerInput) (req *request.Request, output *ListLoadBalancerOutput) {
	op := &request.Operation{
		Name:       opListLoadBalancer,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListLoadBalancerInput{}
	}

	output = &ListLoadBalancerOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListLoadBalancer API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation ListLoadBalancer for usage and error information.
func (c *WAF) ListLoadBalancer(input *ListLoadBalancerInput) (*ListLoadBalancerOutput, error) {
	req, out := c.ListLoadBalancerRequest(input)
	return out, req.Send()
}

// ListLoadBalancerWithContext is the same as ListLoadBalancer with the addition of
// the ability to pass a context and additional request options.
//
// See ListLoadBalancer for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) ListLoadBalancerWithContext(ctx volcengine.Context, input *ListLoadBalancerInput, opts ...request.Option) (*ListLoadBalancerOutput, error) {
	req, out := c.ListLoadBalancerRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListLoadBalancerOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EipAddress *string `type:"string" json:",omitempty"`

	EniAddress *string `type:"string" json:",omitempty"`

	EniIpv6Address *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	ListenerID *string `type:"string" json:",omitempty"`

	ListenerName *string `type:"string" json:",omitempty"`

	LoadBalancerType *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Port *int32 `type:"int32" json:",omitempty"`

	Protocol *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForListLoadBalancerOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListLoadBalancerOutput) GoString() string {
	return s.String()
}

// SetEipAddress sets the EipAddress field's value.
func (s *DataForListLoadBalancerOutput) SetEipAddress(v string) *DataForListLoadBalancerOutput {
	s.EipAddress = &v
	return s
}

// SetEniAddress sets the EniAddress field's value.
func (s *DataForListLoadBalancerOutput) SetEniAddress(v string) *DataForListLoadBalancerOutput {
	s.EniAddress = &v
	return s
}

// SetEniIpv6Address sets the EniIpv6Address field's value.
func (s *DataForListLoadBalancerOutput) SetEniIpv6Address(v string) *DataForListLoadBalancerOutput {
	s.EniIpv6Address = &v
	return s
}

// SetId sets the Id field's value.
func (s *DataForListLoadBalancerOutput) SetId(v string) *DataForListLoadBalancerOutput {
	s.Id = &v
	return s
}

// SetListenerID sets the ListenerID field's value.
func (s *DataForListLoadBalancerOutput) SetListenerID(v string) *DataForListLoadBalancerOutput {
	s.ListenerID = &v
	return s
}

// SetListenerName sets the ListenerName field's value.
func (s *DataForListLoadBalancerOutput) SetListenerName(v string) *DataForListLoadBalancerOutput {
	s.ListenerName = &v
	return s
}

// SetLoadBalancerType sets the LoadBalancerType field's value.
func (s *DataForListLoadBalancerOutput) SetLoadBalancerType(v string) *DataForListLoadBalancerOutput {
	s.LoadBalancerType = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForListLoadBalancerOutput) SetName(v string) *DataForListLoadBalancerOutput {
	s.Name = &v
	return s
}

// SetPort sets the Port field's value.
func (s *DataForListLoadBalancerOutput) SetPort(v int32) *DataForListLoadBalancerOutput {
	s.Port = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *DataForListLoadBalancerOutput) SetProtocol(v string) *DataForListLoadBalancerOutput {
	s.Protocol = &v
	return s
}

type ListLoadBalancerInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Host *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListLoadBalancerInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListLoadBalancerInput) GoString() string {
	return s.String()
}

// SetHost sets the Host field's value.
func (s *ListLoadBalancerInput) SetHost(v string) *ListLoadBalancerInput {
	s.Host = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ListLoadBalancerInput) SetProjectName(v string) *ListLoadBalancerInput {
	s.ProjectName = &v
	return s
}

// SetType sets the Type field's value.
func (s *ListLoadBalancerInput) SetType(v string) *ListLoadBalancerInput {
	s.Type = &v
	return s
}

type ListLoadBalancerOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListLoadBalancerOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListLoadBalancerOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListLoadBalancerOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListLoadBalancerOutput) SetData(v []*DataForListLoadBalancerOutput) *ListLoadBalancerOutput {
	s.Data = v
	return s
}
