// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package waf

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteBotAnalyseProtectRuleCommon = "DeleteBotAnalyseProtectRule"

// DeleteBotAnalyseProtectRuleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteBotAnalyseProtectRuleCommon operation. The "output" return
// value will be populated with the DeleteBotAnalyseProtectRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteBotAnalyseProtectRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteBotAnalyseProtectRuleCommon Send returns without error.
//
// See DeleteBotAnalyseProtectRuleCommon for more information on using the DeleteBotAnalyseProtectRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteBotAnalyseProtectRuleCommonRequest method.
//    req, resp := client.DeleteBotAnalyseProtectRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) DeleteBotAnalyseProtectRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteBotAnalyseProtectRuleCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteBotAnalyseProtectRuleCommon API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation DeleteBotAnalyseProtectRuleCommon for usage and error information.
func (c *WAF) DeleteBotAnalyseProtectRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteBotAnalyseProtectRuleCommonRequest(input)
	return out, req.Send()
}

// DeleteBotAnalyseProtectRuleCommonWithContext is the same as DeleteBotAnalyseProtectRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteBotAnalyseProtectRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) DeleteBotAnalyseProtectRuleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteBotAnalyseProtectRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteBotAnalyseProtectRule = "DeleteBotAnalyseProtectRule"

// DeleteBotAnalyseProtectRuleRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteBotAnalyseProtectRule operation. The "output" return
// value will be populated with the DeleteBotAnalyseProtectRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteBotAnalyseProtectRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteBotAnalyseProtectRuleCommon Send returns without error.
//
// See DeleteBotAnalyseProtectRule for more information on using the DeleteBotAnalyseProtectRule
// API call, and error handling.
//
//    // Example sending a request using the DeleteBotAnalyseProtectRuleRequest method.
//    req, resp := client.DeleteBotAnalyseProtectRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) DeleteBotAnalyseProtectRuleRequest(input *DeleteBotAnalyseProtectRuleInput) (req *request.Request, output *DeleteBotAnalyseProtectRuleOutput) {
	op := &request.Operation{
		Name:       opDeleteBotAnalyseProtectRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteBotAnalyseProtectRuleInput{}
	}

	output = &DeleteBotAnalyseProtectRuleOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteBotAnalyseProtectRule API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation DeleteBotAnalyseProtectRule for usage and error information.
func (c *WAF) DeleteBotAnalyseProtectRule(input *DeleteBotAnalyseProtectRuleInput) (*DeleteBotAnalyseProtectRuleOutput, error) {
	req, out := c.DeleteBotAnalyseProtectRuleRequest(input)
	return out, req.Send()
}

// DeleteBotAnalyseProtectRuleWithContext is the same as DeleteBotAnalyseProtectRule with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteBotAnalyseProtectRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) DeleteBotAnalyseProtectRuleWithContext(ctx volcengine.Context, input *DeleteBotAnalyseProtectRuleInput, opts ...request.Option) (*DeleteBotAnalyseProtectRuleOutput, error) {
	req, out := c.DeleteBotAnalyseProtectRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteBotAnalyseProtectRuleInput struct {
	_ struct{} `type:"structure"`

	// Id is a required field
	Id *int32 `type:"int32" required:"true"`
}

// String returns the string representation
func (s DeleteBotAnalyseProtectRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteBotAnalyseProtectRuleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteBotAnalyseProtectRuleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteBotAnalyseProtectRuleInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetId sets the Id field's value.
func (s *DeleteBotAnalyseProtectRuleInput) SetId(v int32) *DeleteBotAnalyseProtectRuleInput {
	s.Id = &v
	return s
}

type DeleteBotAnalyseProtectRuleOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteBotAnalyseProtectRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteBotAnalyseProtectRuleOutput) GoString() string {
	return s.String()
}
