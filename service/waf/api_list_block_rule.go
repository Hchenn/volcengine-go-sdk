// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package waf

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListBlockRuleCommon = "ListBlockRule"

// ListBlockRuleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBlockRuleCommon operation. The "output" return
// value will be populated with the ListBlockRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBlockRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBlockRuleCommon Send returns without error.
//
// See ListBlockRuleCommon for more information on using the ListBlockRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the ListBlockRuleCommonRequest method.
//    req, resp := client.ListBlockRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) ListBlockRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListBlockRuleCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBlockRuleCommon API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation ListBlockRuleCommon for usage and error information.
func (c *WAF) ListBlockRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListBlockRuleCommonRequest(input)
	return out, req.Send()
}

// ListBlockRuleCommonWithContext is the same as ListBlockRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListBlockRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) ListBlockRuleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListBlockRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListBlockRule = "ListBlockRule"

// ListBlockRuleRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBlockRule operation. The "output" return
// value will be populated with the ListBlockRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBlockRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBlockRuleCommon Send returns without error.
//
// See ListBlockRule for more information on using the ListBlockRule
// API call, and error handling.
//
//    // Example sending a request using the ListBlockRuleRequest method.
//    req, resp := client.ListBlockRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) ListBlockRuleRequest(input *ListBlockRuleInput) (req *request.Request, output *ListBlockRuleOutput) {
	op := &request.Operation{
		Name:       opListBlockRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListBlockRuleInput{}
	}

	output = &ListBlockRuleOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBlockRule API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation ListBlockRule for usage and error information.
func (c *WAF) ListBlockRule(input *ListBlockRuleInput) (*ListBlockRuleOutput, error) {
	req, out := c.ListBlockRuleRequest(input)
	return out, req.Send()
}

// ListBlockRuleWithContext is the same as ListBlockRule with the addition of
// the ability to pass a context and additional request options.
//
// See ListBlockRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) ListBlockRuleWithContext(ctx volcengine.Context, input *ListBlockRuleInput, opts ...request.Option) (*ListBlockRuleOutput, error) {
	req, out := c.ListBlockRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListBlockRuleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Action *string `type:"string" json:",omitempty"`

	AddSrc *int32 `type:"int32" json:",omitempty"`

	Advanced *int32 `type:"int32" json:",omitempty"`

	ClientIp *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Enable *int32 `type:"int32" json:",omitempty"`

	GroupId *int32 `type:"int32" json:",omitempty"`

	Host *string `type:"string" json:",omitempty"`

	Id *int32 `type:"int32" json:",omitempty"`

	IpAddType *int32 `type:"int32" json:",omitempty"`

	IpGroups []*IpGroupForListBlockRuleOutput `type:"list" json:",omitempty"`

	IpType *int32 `type:"int32" json:",omitempty"`

	IsolationId *string `type:"string" json:",omitempty"`

	JsConfId *int32 `type:"int32" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	RuleTag *string `type:"string" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`

	Url *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForListBlockRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListBlockRuleOutput) GoString() string {
	return s.String()
}

// SetAction sets the Action field's value.
func (s *DataForListBlockRuleOutput) SetAction(v string) *DataForListBlockRuleOutput {
	s.Action = &v
	return s
}

// SetAddSrc sets the AddSrc field's value.
func (s *DataForListBlockRuleOutput) SetAddSrc(v int32) *DataForListBlockRuleOutput {
	s.AddSrc = &v
	return s
}

// SetAdvanced sets the Advanced field's value.
func (s *DataForListBlockRuleOutput) SetAdvanced(v int32) *DataForListBlockRuleOutput {
	s.Advanced = &v
	return s
}

// SetClientIp sets the ClientIp field's value.
func (s *DataForListBlockRuleOutput) SetClientIp(v string) *DataForListBlockRuleOutput {
	s.ClientIp = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DataForListBlockRuleOutput) SetDescription(v string) *DataForListBlockRuleOutput {
	s.Description = &v
	return s
}

// SetEnable sets the Enable field's value.
func (s *DataForListBlockRuleOutput) SetEnable(v int32) *DataForListBlockRuleOutput {
	s.Enable = &v
	return s
}

// SetGroupId sets the GroupId field's value.
func (s *DataForListBlockRuleOutput) SetGroupId(v int32) *DataForListBlockRuleOutput {
	s.GroupId = &v
	return s
}

// SetHost sets the Host field's value.
func (s *DataForListBlockRuleOutput) SetHost(v string) *DataForListBlockRuleOutput {
	s.Host = &v
	return s
}

// SetId sets the Id field's value.
func (s *DataForListBlockRuleOutput) SetId(v int32) *DataForListBlockRuleOutput {
	s.Id = &v
	return s
}

// SetIpAddType sets the IpAddType field's value.
func (s *DataForListBlockRuleOutput) SetIpAddType(v int32) *DataForListBlockRuleOutput {
	s.IpAddType = &v
	return s
}

// SetIpGroups sets the IpGroups field's value.
func (s *DataForListBlockRuleOutput) SetIpGroups(v []*IpGroupForListBlockRuleOutput) *DataForListBlockRuleOutput {
	s.IpGroups = v
	return s
}

// SetIpType sets the IpType field's value.
func (s *DataForListBlockRuleOutput) SetIpType(v int32) *DataForListBlockRuleOutput {
	s.IpType = &v
	return s
}

// SetIsolationId sets the IsolationId field's value.
func (s *DataForListBlockRuleOutput) SetIsolationId(v string) *DataForListBlockRuleOutput {
	s.IsolationId = &v
	return s
}

// SetJsConfId sets the JsConfId field's value.
func (s *DataForListBlockRuleOutput) SetJsConfId(v int32) *DataForListBlockRuleOutput {
	s.JsConfId = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForListBlockRuleOutput) SetName(v string) *DataForListBlockRuleOutput {
	s.Name = &v
	return s
}

// SetRuleTag sets the RuleTag field's value.
func (s *DataForListBlockRuleOutput) SetRuleTag(v string) *DataForListBlockRuleOutput {
	s.RuleTag = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DataForListBlockRuleOutput) SetUpdateTime(v string) *DataForListBlockRuleOutput {
	s.UpdateTime = &v
	return s
}

// SetUrl sets the Url field's value.
func (s *DataForListBlockRuleOutput) SetUrl(v string) *DataForListBlockRuleOutput {
	s.Url = &v
	return s
}

type IpGroupForListBlockRuleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	IpGroupId *int32 `type:"int32" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s IpGroupForListBlockRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s IpGroupForListBlockRuleOutput) GoString() string {
	return s.String()
}

// SetIpGroupId sets the IpGroupId field's value.
func (s *IpGroupForListBlockRuleOutput) SetIpGroupId(v int32) *IpGroupForListBlockRuleOutput {
	s.IpGroupId = &v
	return s
}

// SetName sets the Name field's value.
func (s *IpGroupForListBlockRuleOutput) SetName(v string) *IpGroupForListBlockRuleOutput {
	s.Name = &v
	return s
}

type ListBlockRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Host is a required field
	Host *string `type:"string" json:",omitempty" required:"true"`

	Page *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListBlockRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBlockRuleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListBlockRuleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListBlockRuleInput"}
	if s.Host == nil {
		invalidParams.Add(request.NewErrParamRequired("Host"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetHost sets the Host field's value.
func (s *ListBlockRuleInput) SetHost(v string) *ListBlockRuleInput {
	s.Host = &v
	return s
}

// SetPage sets the Page field's value.
func (s *ListBlockRuleInput) SetPage(v int32) *ListBlockRuleInput {
	s.Page = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListBlockRuleInput) SetPageSize(v int32) *ListBlockRuleInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ListBlockRuleInput) SetProjectName(v string) *ListBlockRuleInput {
	s.ProjectName = &v
	return s
}

type ListBlockRuleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Count *int32 `type:"int32" json:",omitempty"`

	CurrentPage *int32 `type:"int32" json:",omitempty"`

	Data []*DataForListBlockRuleOutput `type:"list" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListBlockRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBlockRuleOutput) GoString() string {
	return s.String()
}

// SetCount sets the Count field's value.
func (s *ListBlockRuleOutput) SetCount(v int32) *ListBlockRuleOutput {
	s.Count = &v
	return s
}

// SetCurrentPage sets the CurrentPage field's value.
func (s *ListBlockRuleOutput) SetCurrentPage(v int32) *ListBlockRuleOutput {
	s.CurrentPage = &v
	return s
}

// SetData sets the Data field's value.
func (s *ListBlockRuleOutput) SetData(v []*DataForListBlockRuleOutput) *ListBlockRuleOutput {
	s.Data = v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListBlockRuleOutput) SetPageSize(v int32) *ListBlockRuleOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListBlockRuleOutput) SetTotalCount(v int32) *ListBlockRuleOutput {
	s.TotalCount = &v
	return s
}
