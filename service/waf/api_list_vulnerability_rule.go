// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package waf

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListVulnerabilityRuleCommon = "ListVulnerabilityRule"

// ListVulnerabilityRuleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListVulnerabilityRuleCommon operation. The "output" return
// value will be populated with the ListVulnerabilityRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListVulnerabilityRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListVulnerabilityRuleCommon Send returns without error.
//
// See ListVulnerabilityRuleCommon for more information on using the ListVulnerabilityRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the ListVulnerabilityRuleCommonRequest method.
//    req, resp := client.ListVulnerabilityRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) ListVulnerabilityRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListVulnerabilityRuleCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListVulnerabilityRuleCommon API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation ListVulnerabilityRuleCommon for usage and error information.
func (c *WAF) ListVulnerabilityRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListVulnerabilityRuleCommonRequest(input)
	return out, req.Send()
}

// ListVulnerabilityRuleCommonWithContext is the same as ListVulnerabilityRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListVulnerabilityRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) ListVulnerabilityRuleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListVulnerabilityRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListVulnerabilityRule = "ListVulnerabilityRule"

// ListVulnerabilityRuleRequest generates a "volcengine/request.Request" representing the
// client's request for the ListVulnerabilityRule operation. The "output" return
// value will be populated with the ListVulnerabilityRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListVulnerabilityRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListVulnerabilityRuleCommon Send returns without error.
//
// See ListVulnerabilityRule for more information on using the ListVulnerabilityRule
// API call, and error handling.
//
//    // Example sending a request using the ListVulnerabilityRuleRequest method.
//    req, resp := client.ListVulnerabilityRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) ListVulnerabilityRuleRequest(input *ListVulnerabilityRuleInput) (req *request.Request, output *ListVulnerabilityRuleOutput) {
	op := &request.Operation{
		Name:       opListVulnerabilityRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListVulnerabilityRuleInput{}
	}

	output = &ListVulnerabilityRuleOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListVulnerabilityRule API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation ListVulnerabilityRule for usage and error information.
func (c *WAF) ListVulnerabilityRule(input *ListVulnerabilityRuleInput) (*ListVulnerabilityRuleOutput, error) {
	req, out := c.ListVulnerabilityRuleRequest(input)
	return out, req.Send()
}

// ListVulnerabilityRuleWithContext is the same as ListVulnerabilityRule with the addition of
// the ability to pass a context and additional request options.
//
// See ListVulnerabilityRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) ListVulnerabilityRuleWithContext(ctx volcengine.Context, input *ListVulnerabilityRuleInput, opts ...request.Option) (*ListVulnerabilityRuleOutput, error) {
	req, out := c.ListVulnerabilityRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListVulnerabilityRuleInput struct {
	_ struct{} `type:"structure"`

	// Host is a required field
	Host *string `type:"string" required:"true"`

	// RuleMode is a required field
	RuleMode *string `type:"string" required:"true"`
}

// String returns the string representation
func (s ListVulnerabilityRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListVulnerabilityRuleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListVulnerabilityRuleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListVulnerabilityRuleInput"}
	if s.Host == nil {
		invalidParams.Add(request.NewErrParamRequired("Host"))
	}
	if s.RuleMode == nil {
		invalidParams.Add(request.NewErrParamRequired("RuleMode"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetHost sets the Host field's value.
func (s *ListVulnerabilityRuleInput) SetHost(v string) *ListVulnerabilityRuleInput {
	s.Host = &v
	return s
}

// SetRuleMode sets the RuleMode field's value.
func (s *ListVulnerabilityRuleInput) SetRuleMode(v string) *ListVulnerabilityRuleInput {
	s.RuleMode = &v
	return s
}

type ListVulnerabilityRuleOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RuleDetail []*RuleDetailForListVulnerabilityRuleOutput `type:"list"`
}

// String returns the string representation
func (s ListVulnerabilityRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListVulnerabilityRuleOutput) GoString() string {
	return s.String()
}

// SetRuleDetail sets the RuleDetail field's value.
func (s *ListVulnerabilityRuleOutput) SetRuleDetail(v []*RuleDetailForListVulnerabilityRuleOutput) *ListVulnerabilityRuleOutput {
	s.RuleDetail = v
	return s
}

type RuleDetailForListVulnerabilityRuleOutput struct {
	_ struct{} `type:"structure"`

	Accuracy *int32 `type:"int32"`

	CVEID *string `type:"string"`

	CustomSystemRuleSwitch *int32 `type:"int32"`

	Description *string `type:"string"`

	RiskLevel *int32 `type:"int32"`

	RuleID *int32 `type:"int32"`

	RuleName *string `type:"string"`

	RuleSetName *string `type:"string"`

	RuleTag *string `type:"string"`

	RuleType *string `type:"string"`

	Subcategory *string `type:"string"`

	UpdateTime *string `type:"string"`
}

// String returns the string representation
func (s RuleDetailForListVulnerabilityRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RuleDetailForListVulnerabilityRuleOutput) GoString() string {
	return s.String()
}

// SetAccuracy sets the Accuracy field's value.
func (s *RuleDetailForListVulnerabilityRuleOutput) SetAccuracy(v int32) *RuleDetailForListVulnerabilityRuleOutput {
	s.Accuracy = &v
	return s
}

// SetCVEID sets the CVEID field's value.
func (s *RuleDetailForListVulnerabilityRuleOutput) SetCVEID(v string) *RuleDetailForListVulnerabilityRuleOutput {
	s.CVEID = &v
	return s
}

// SetCustomSystemRuleSwitch sets the CustomSystemRuleSwitch field's value.
func (s *RuleDetailForListVulnerabilityRuleOutput) SetCustomSystemRuleSwitch(v int32) *RuleDetailForListVulnerabilityRuleOutput {
	s.CustomSystemRuleSwitch = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *RuleDetailForListVulnerabilityRuleOutput) SetDescription(v string) *RuleDetailForListVulnerabilityRuleOutput {
	s.Description = &v
	return s
}

// SetRiskLevel sets the RiskLevel field's value.
func (s *RuleDetailForListVulnerabilityRuleOutput) SetRiskLevel(v int32) *RuleDetailForListVulnerabilityRuleOutput {
	s.RiskLevel = &v
	return s
}

// SetRuleID sets the RuleID field's value.
func (s *RuleDetailForListVulnerabilityRuleOutput) SetRuleID(v int32) *RuleDetailForListVulnerabilityRuleOutput {
	s.RuleID = &v
	return s
}

// SetRuleName sets the RuleName field's value.
func (s *RuleDetailForListVulnerabilityRuleOutput) SetRuleName(v string) *RuleDetailForListVulnerabilityRuleOutput {
	s.RuleName = &v
	return s
}

// SetRuleSetName sets the RuleSetName field's value.
func (s *RuleDetailForListVulnerabilityRuleOutput) SetRuleSetName(v string) *RuleDetailForListVulnerabilityRuleOutput {
	s.RuleSetName = &v
	return s
}

// SetRuleTag sets the RuleTag field's value.
func (s *RuleDetailForListVulnerabilityRuleOutput) SetRuleTag(v string) *RuleDetailForListVulnerabilityRuleOutput {
	s.RuleTag = &v
	return s
}

// SetRuleType sets the RuleType field's value.
func (s *RuleDetailForListVulnerabilityRuleOutput) SetRuleType(v string) *RuleDetailForListVulnerabilityRuleOutput {
	s.RuleType = &v
	return s
}

// SetSubcategory sets the Subcategory field's value.
func (s *RuleDetailForListVulnerabilityRuleOutput) SetSubcategory(v string) *RuleDetailForListVulnerabilityRuleOutput {
	s.Subcategory = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *RuleDetailForListVulnerabilityRuleOutput) SetUpdateTime(v string) *RuleDetailForListVulnerabilityRuleOutput {
	s.UpdateTime = &v
	return s
}
