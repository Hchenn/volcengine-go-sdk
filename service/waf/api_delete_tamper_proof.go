// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package waf

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteTamperProofCommon = "DeleteTamperProof"

// DeleteTamperProofCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteTamperProofCommon operation. The "output" return
// value will be populated with the DeleteTamperProofCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteTamperProofCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteTamperProofCommon Send returns without error.
//
// See DeleteTamperProofCommon for more information on using the DeleteTamperProofCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteTamperProofCommonRequest method.
//    req, resp := client.DeleteTamperProofCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) DeleteTamperProofCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteTamperProofCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteTamperProofCommon API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation DeleteTamperProofCommon for usage and error information.
func (c *WAF) DeleteTamperProofCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteTamperProofCommonRequest(input)
	return out, req.Send()
}

// DeleteTamperProofCommonWithContext is the same as DeleteTamperProofCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteTamperProofCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) DeleteTamperProofCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteTamperProofCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteTamperProof = "DeleteTamperProof"

// DeleteTamperProofRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteTamperProof operation. The "output" return
// value will be populated with the DeleteTamperProofCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteTamperProofCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteTamperProofCommon Send returns without error.
//
// See DeleteTamperProof for more information on using the DeleteTamperProof
// API call, and error handling.
//
//    // Example sending a request using the DeleteTamperProofRequest method.
//    req, resp := client.DeleteTamperProofRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) DeleteTamperProofRequest(input *DeleteTamperProofInput) (req *request.Request, output *DeleteTamperProofOutput) {
	op := &request.Operation{
		Name:       opDeleteTamperProof,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteTamperProofInput{}
	}

	output = &DeleteTamperProofOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteTamperProof API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation DeleteTamperProof for usage and error information.
func (c *WAF) DeleteTamperProof(input *DeleteTamperProofInput) (*DeleteTamperProofOutput, error) {
	req, out := c.DeleteTamperProofRequest(input)
	return out, req.Send()
}

// DeleteTamperProofWithContext is the same as DeleteTamperProof with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteTamperProof for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) DeleteTamperProofWithContext(ctx volcengine.Context, input *DeleteTamperProofInput, opts ...request.Option) (*DeleteTamperProofOutput, error) {
	req, out := c.DeleteTamperProofRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteTamperProofInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Host is a required field
	Host *string `type:"string" json:",omitempty" required:"true"`

	// ID is a required field
	ID *int32 `type:"int32" json:",omitempty" required:"true"`

	ProjectName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DeleteTamperProofInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteTamperProofInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteTamperProofInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteTamperProofInput"}
	if s.Host == nil {
		invalidParams.Add(request.NewErrParamRequired("Host"))
	}
	if s.ID == nil {
		invalidParams.Add(request.NewErrParamRequired("ID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetHost sets the Host field's value.
func (s *DeleteTamperProofInput) SetHost(v string) *DeleteTamperProofInput {
	s.Host = &v
	return s
}

// SetID sets the ID field's value.
func (s *DeleteTamperProofInput) SetID(v int32) *DeleteTamperProofInput {
	s.ID = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DeleteTamperProofInput) SetProjectName(v string) *DeleteTamperProofInput {
	s.ProjectName = &v
	return s
}

type DeleteTamperProofOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteTamperProofOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteTamperProofOutput) GoString() string {
	return s.String()
}
