// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package waf

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteIpGroupCommon = "DeleteIpGroup"

// DeleteIpGroupCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteIpGroupCommon operation. The "output" return
// value will be populated with the DeleteIpGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteIpGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteIpGroupCommon Send returns without error.
//
// See DeleteIpGroupCommon for more information on using the DeleteIpGroupCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteIpGroupCommonRequest method.
//    req, resp := client.DeleteIpGroupCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) DeleteIpGroupCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteIpGroupCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteIpGroupCommon API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation DeleteIpGroupCommon for usage and error information.
func (c *WAF) DeleteIpGroupCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteIpGroupCommonRequest(input)
	return out, req.Send()
}

// DeleteIpGroupCommonWithContext is the same as DeleteIpGroupCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteIpGroupCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) DeleteIpGroupCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteIpGroupCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteIpGroup = "DeleteIpGroup"

// DeleteIpGroupRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteIpGroup operation. The "output" return
// value will be populated with the DeleteIpGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteIpGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteIpGroupCommon Send returns without error.
//
// See DeleteIpGroup for more information on using the DeleteIpGroup
// API call, and error handling.
//
//    // Example sending a request using the DeleteIpGroupRequest method.
//    req, resp := client.DeleteIpGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) DeleteIpGroupRequest(input *DeleteIpGroupInput) (req *request.Request, output *DeleteIpGroupOutput) {
	op := &request.Operation{
		Name:       opDeleteIpGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteIpGroupInput{}
	}

	output = &DeleteIpGroupOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteIpGroup API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation DeleteIpGroup for usage and error information.
func (c *WAF) DeleteIpGroup(input *DeleteIpGroupInput) (*DeleteIpGroupOutput, error) {
	req, out := c.DeleteIpGroupRequest(input)
	return out, req.Send()
}

// DeleteIpGroupWithContext is the same as DeleteIpGroup with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteIpGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) DeleteIpGroupWithContext(ctx volcengine.Context, input *DeleteIpGroupInput, opts ...request.Option) (*DeleteIpGroupOutput, error) {
	req, out := c.DeleteIpGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteIpGroupInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	IpGroupIds []*int32 `type:"list" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DeleteIpGroupInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteIpGroupInput) GoString() string {
	return s.String()
}

// SetIpGroupIds sets the IpGroupIds field's value.
func (s *DeleteIpGroupInput) SetIpGroupIds(v []*int32) *DeleteIpGroupInput {
	s.IpGroupIds = v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DeleteIpGroupInput) SetProjectName(v string) *DeleteIpGroupInput {
	s.ProjectName = &v
	return s
}

type DeleteIpGroupOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteIpGroupOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteIpGroupOutput) GoString() string {
	return s.String()
}
