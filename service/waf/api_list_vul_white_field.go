// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package waf

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListVulWhiteFieldCommon = "ListVulWhiteField"

// ListVulWhiteFieldCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListVulWhiteFieldCommon operation. The "output" return
// value will be populated with the ListVulWhiteFieldCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListVulWhiteFieldCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListVulWhiteFieldCommon Send returns without error.
//
// See ListVulWhiteFieldCommon for more information on using the ListVulWhiteFieldCommon
// API call, and error handling.
//
//    // Example sending a request using the ListVulWhiteFieldCommonRequest method.
//    req, resp := client.ListVulWhiteFieldCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) ListVulWhiteFieldCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListVulWhiteFieldCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListVulWhiteFieldCommon API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation ListVulWhiteFieldCommon for usage and error information.
func (c *WAF) ListVulWhiteFieldCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListVulWhiteFieldCommonRequest(input)
	return out, req.Send()
}

// ListVulWhiteFieldCommonWithContext is the same as ListVulWhiteFieldCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListVulWhiteFieldCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) ListVulWhiteFieldCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListVulWhiteFieldCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListVulWhiteField = "ListVulWhiteField"

// ListVulWhiteFieldRequest generates a "volcengine/request.Request" representing the
// client's request for the ListVulWhiteField operation. The "output" return
// value will be populated with the ListVulWhiteFieldCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListVulWhiteFieldCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListVulWhiteFieldCommon Send returns without error.
//
// See ListVulWhiteField for more information on using the ListVulWhiteField
// API call, and error handling.
//
//    // Example sending a request using the ListVulWhiteFieldRequest method.
//    req, resp := client.ListVulWhiteFieldRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) ListVulWhiteFieldRequest(input *ListVulWhiteFieldInput) (req *request.Request, output *ListVulWhiteFieldOutput) {
	op := &request.Operation{
		Name:       opListVulWhiteField,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListVulWhiteFieldInput{}
	}

	output = &ListVulWhiteFieldOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListVulWhiteField API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation ListVulWhiteField for usage and error information.
func (c *WAF) ListVulWhiteField(input *ListVulWhiteFieldInput) (*ListVulWhiteFieldOutput, error) {
	req, out := c.ListVulWhiteFieldRequest(input)
	return out, req.Send()
}

// ListVulWhiteFieldWithContext is the same as ListVulWhiteField with the addition of
// the ability to pass a context and additional request options.
//
// See ListVulWhiteField for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) ListVulWhiteFieldWithContext(ctx volcengine.Context, input *ListVulWhiteFieldInput, opts ...request.Option) (*ListVulWhiteFieldOutput, error) {
	req, out := c.ListVulWhiteFieldRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListVulWhiteFieldOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enable *int32 `type:"int32" json:",omitempty"`

	FieldArea *string `type:"string" json:",omitempty"`

	FieldList *string `type:"string" json:",omitempty"`

	Host *string `type:"string" json:",omitempty"`

	ID *int32 `type:"int32" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	RuleTag *string `type:"string" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForListVulWhiteFieldOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListVulWhiteFieldOutput) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *DataForListVulWhiteFieldOutput) SetEnable(v int32) *DataForListVulWhiteFieldOutput {
	s.Enable = &v
	return s
}

// SetFieldArea sets the FieldArea field's value.
func (s *DataForListVulWhiteFieldOutput) SetFieldArea(v string) *DataForListVulWhiteFieldOutput {
	s.FieldArea = &v
	return s
}

// SetFieldList sets the FieldList field's value.
func (s *DataForListVulWhiteFieldOutput) SetFieldList(v string) *DataForListVulWhiteFieldOutput {
	s.FieldList = &v
	return s
}

// SetHost sets the Host field's value.
func (s *DataForListVulWhiteFieldOutput) SetHost(v string) *DataForListVulWhiteFieldOutput {
	s.Host = &v
	return s
}

// SetID sets the ID field's value.
func (s *DataForListVulWhiteFieldOutput) SetID(v int32) *DataForListVulWhiteFieldOutput {
	s.ID = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForListVulWhiteFieldOutput) SetName(v string) *DataForListVulWhiteFieldOutput {
	s.Name = &v
	return s
}

// SetRuleTag sets the RuleTag field's value.
func (s *DataForListVulWhiteFieldOutput) SetRuleTag(v string) *DataForListVulWhiteFieldOutput {
	s.RuleTag = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DataForListVulWhiteFieldOutput) SetUpdateTime(v string) *DataForListVulWhiteFieldOutput {
	s.UpdateTime = &v
	return s
}

type ListVulWhiteFieldInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Host is a required field
	Host *string `type:"string" json:",omitempty" required:"true"`

	Page *int32 `type:"int32" json:",omitempty"`

	// PageSize is a required field
	PageSize *int32 `type:"int32" json:",omitempty" required:"true"`

	ProjectName *string `type:"string" json:",omitempty"`

	RuleTag *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListVulWhiteFieldInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListVulWhiteFieldInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListVulWhiteFieldInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListVulWhiteFieldInput"}
	if s.Host == nil {
		invalidParams.Add(request.NewErrParamRequired("Host"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetHost sets the Host field's value.
func (s *ListVulWhiteFieldInput) SetHost(v string) *ListVulWhiteFieldInput {
	s.Host = &v
	return s
}

// SetPage sets the Page field's value.
func (s *ListVulWhiteFieldInput) SetPage(v int32) *ListVulWhiteFieldInput {
	s.Page = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListVulWhiteFieldInput) SetPageSize(v int32) *ListVulWhiteFieldInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ListVulWhiteFieldInput) SetProjectName(v string) *ListVulWhiteFieldInput {
	s.ProjectName = &v
	return s
}

// SetRuleTag sets the RuleTag field's value.
func (s *ListVulWhiteFieldInput) SetRuleTag(v string) *ListVulWhiteFieldInput {
	s.RuleTag = &v
	return s
}

type ListVulWhiteFieldOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Count *int32 `type:"int32" json:",omitempty"`

	CurrentPage *int32 `type:"int32" json:",omitempty"`

	Data []*DataForListVulWhiteFieldOutput `type:"list" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListVulWhiteFieldOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListVulWhiteFieldOutput) GoString() string {
	return s.String()
}

// SetCount sets the Count field's value.
func (s *ListVulWhiteFieldOutput) SetCount(v int32) *ListVulWhiteFieldOutput {
	s.Count = &v
	return s
}

// SetCurrentPage sets the CurrentPage field's value.
func (s *ListVulWhiteFieldOutput) SetCurrentPage(v int32) *ListVulWhiteFieldOutput {
	s.CurrentPage = &v
	return s
}

// SetData sets the Data field's value.
func (s *ListVulWhiteFieldOutput) SetData(v []*DataForListVulWhiteFieldOutput) *ListVulWhiteFieldOutput {
	s.Data = v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListVulWhiteFieldOutput) SetPageSize(v int32) *ListVulWhiteFieldOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListVulWhiteFieldOutput) SetTotalCount(v int32) *ListVulWhiteFieldOutput {
	s.TotalCount = &v
	return s
}
