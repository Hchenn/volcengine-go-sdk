// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package waf

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetReqQPSAnalysisCommon = "GetReqQPSAnalysis"

// GetReqQPSAnalysisCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetReqQPSAnalysisCommon operation. The "output" return
// value will be populated with the GetReqQPSAnalysisCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetReqQPSAnalysisCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetReqQPSAnalysisCommon Send returns without error.
//
// See GetReqQPSAnalysisCommon for more information on using the GetReqQPSAnalysisCommon
// API call, and error handling.
//
//    // Example sending a request using the GetReqQPSAnalysisCommonRequest method.
//    req, resp := client.GetReqQPSAnalysisCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) GetReqQPSAnalysisCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetReqQPSAnalysisCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetReqQPSAnalysisCommon API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation GetReqQPSAnalysisCommon for usage and error information.
func (c *WAF) GetReqQPSAnalysisCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetReqQPSAnalysisCommonRequest(input)
	return out, req.Send()
}

// GetReqQPSAnalysisCommonWithContext is the same as GetReqQPSAnalysisCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetReqQPSAnalysisCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) GetReqQPSAnalysisCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetReqQPSAnalysisCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetReqQPSAnalysis = "GetReqQPSAnalysis"

// GetReqQPSAnalysisRequest generates a "volcengine/request.Request" representing the
// client's request for the GetReqQPSAnalysis operation. The "output" return
// value will be populated with the GetReqQPSAnalysisCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetReqQPSAnalysisCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetReqQPSAnalysisCommon Send returns without error.
//
// See GetReqQPSAnalysis for more information on using the GetReqQPSAnalysis
// API call, and error handling.
//
//    // Example sending a request using the GetReqQPSAnalysisRequest method.
//    req, resp := client.GetReqQPSAnalysisRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) GetReqQPSAnalysisRequest(input *GetReqQPSAnalysisInput) (req *request.Request, output *GetReqQPSAnalysisOutput) {
	op := &request.Operation{
		Name:       opGetReqQPSAnalysis,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetReqQPSAnalysisInput{}
	}

	output = &GetReqQPSAnalysisOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetReqQPSAnalysis API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation GetReqQPSAnalysis for usage and error information.
func (c *WAF) GetReqQPSAnalysis(input *GetReqQPSAnalysisInput) (*GetReqQPSAnalysisOutput, error) {
	req, out := c.GetReqQPSAnalysisRequest(input)
	return out, req.Send()
}

// GetReqQPSAnalysisWithContext is the same as GetReqQPSAnalysis with the addition of
// the ability to pass a context and additional request options.
//
// See GetReqQPSAnalysis for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) GetReqQPSAnalysisWithContext(ctx volcengine.Context, input *GetReqQPSAnalysisInput, opts ...request.Option) (*GetReqQPSAnalysisOutput, error) {
	req, out := c.GetReqQPSAnalysisRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetReqQPSAnalysisInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Domain *string `type:"string" json:",omitempty"`

	EndTime *string `type:"string" json:",omitempty"`

	// StartTime is a required field
	StartTime *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetReqQPSAnalysisInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetReqQPSAnalysisInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetReqQPSAnalysisInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetReqQPSAnalysisInput"}
	if s.StartTime == nil {
		invalidParams.Add(request.NewErrParamRequired("StartTime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDomain sets the Domain field's value.
func (s *GetReqQPSAnalysisInput) SetDomain(v string) *GetReqQPSAnalysisInput {
	s.Domain = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *GetReqQPSAnalysisInput) SetEndTime(v string) *GetReqQPSAnalysisInput {
	s.EndTime = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *GetReqQPSAnalysisInput) SetStartTime(v string) *GetReqQPSAnalysisInput {
	s.StartTime = &v
	return s
}

type GetReqQPSAnalysisOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AverageQPS *float64 `type:"float" json:",omitempty"`

	PeakQPS *float64 `type:"float" json:",omitempty"`
}

// String returns the string representation
func (s GetReqQPSAnalysisOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetReqQPSAnalysisOutput) GoString() string {
	return s.String()
}

// SetAverageQPS sets the AverageQPS field's value.
func (s *GetReqQPSAnalysisOutput) SetAverageQPS(v float64) *GetReqQPSAnalysisOutput {
	s.AverageQPS = &v
	return s
}

// SetPeakQPS sets the PeakQPS field's value.
func (s *GetReqQPSAnalysisOutput) SetPeakQPS(v float64) *GetReqQPSAnalysisOutput {
	s.PeakQPS = &v
	return s
}
