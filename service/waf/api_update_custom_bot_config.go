// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package waf

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateCustomBotConfigCommon = "UpdateCustomBotConfig"

// UpdateCustomBotConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateCustomBotConfigCommon operation. The "output" return
// value will be populated with the UpdateCustomBotConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateCustomBotConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateCustomBotConfigCommon Send returns without error.
//
// See UpdateCustomBotConfigCommon for more information on using the UpdateCustomBotConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateCustomBotConfigCommonRequest method.
//    req, resp := client.UpdateCustomBotConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) UpdateCustomBotConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateCustomBotConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateCustomBotConfigCommon API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation UpdateCustomBotConfigCommon for usage and error information.
func (c *WAF) UpdateCustomBotConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateCustomBotConfigCommonRequest(input)
	return out, req.Send()
}

// UpdateCustomBotConfigCommonWithContext is the same as UpdateCustomBotConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateCustomBotConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) UpdateCustomBotConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateCustomBotConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateCustomBotConfig = "UpdateCustomBotConfig"

// UpdateCustomBotConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateCustomBotConfig operation. The "output" return
// value will be populated with the UpdateCustomBotConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateCustomBotConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateCustomBotConfigCommon Send returns without error.
//
// See UpdateCustomBotConfig for more information on using the UpdateCustomBotConfig
// API call, and error handling.
//
//    // Example sending a request using the UpdateCustomBotConfigRequest method.
//    req, resp := client.UpdateCustomBotConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) UpdateCustomBotConfigRequest(input *UpdateCustomBotConfigInput) (req *request.Request, output *UpdateCustomBotConfigOutput) {
	op := &request.Operation{
		Name:       opUpdateCustomBotConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateCustomBotConfigInput{}
	}

	output = &UpdateCustomBotConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateCustomBotConfig API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation UpdateCustomBotConfig for usage and error information.
func (c *WAF) UpdateCustomBotConfig(input *UpdateCustomBotConfigInput) (*UpdateCustomBotConfigOutput, error) {
	req, out := c.UpdateCustomBotConfigRequest(input)
	return out, req.Send()
}

// UpdateCustomBotConfigWithContext is the same as UpdateCustomBotConfig with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateCustomBotConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) UpdateCustomBotConfigWithContext(ctx volcengine.Context, input *UpdateCustomBotConfigInput, opts ...request.Option) (*UpdateCustomBotConfigOutput, error) {
	req, out := c.UpdateCustomBotConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AccurateForUpdateCustomBotConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccurateRules []*AccurateRuleForUpdateCustomBotConfigInput `type:"list" json:",omitempty"`

	Logic *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s AccurateForUpdateCustomBotConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AccurateForUpdateCustomBotConfigInput) GoString() string {
	return s.String()
}

// SetAccurateRules sets the AccurateRules field's value.
func (s *AccurateForUpdateCustomBotConfigInput) SetAccurateRules(v []*AccurateRuleForUpdateCustomBotConfigInput) *AccurateForUpdateCustomBotConfigInput {
	s.AccurateRules = v
	return s
}

// SetLogic sets the Logic field's value.
func (s *AccurateForUpdateCustomBotConfigInput) SetLogic(v int32) *AccurateForUpdateCustomBotConfigInput {
	s.Logic = &v
	return s
}

type AccurateRuleForUpdateCustomBotConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	HttpObj *string `type:"string" json:",omitempty"`

	ObjType *int32 `type:"int32" json:",omitempty"`

	Opretar *int32 `type:"int32" json:",omitempty"`

	Property *int32 `type:"int32" json:",omitempty"`

	ValueString *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AccurateRuleForUpdateCustomBotConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AccurateRuleForUpdateCustomBotConfigInput) GoString() string {
	return s.String()
}

// SetHttpObj sets the HttpObj field's value.
func (s *AccurateRuleForUpdateCustomBotConfigInput) SetHttpObj(v string) *AccurateRuleForUpdateCustomBotConfigInput {
	s.HttpObj = &v
	return s
}

// SetObjType sets the ObjType field's value.
func (s *AccurateRuleForUpdateCustomBotConfigInput) SetObjType(v int32) *AccurateRuleForUpdateCustomBotConfigInput {
	s.ObjType = &v
	return s
}

// SetOpretar sets the Opretar field's value.
func (s *AccurateRuleForUpdateCustomBotConfigInput) SetOpretar(v int32) *AccurateRuleForUpdateCustomBotConfigInput {
	s.Opretar = &v
	return s
}

// SetProperty sets the Property field's value.
func (s *AccurateRuleForUpdateCustomBotConfigInput) SetProperty(v int32) *AccurateRuleForUpdateCustomBotConfigInput {
	s.Property = &v
	return s
}

// SetValueString sets the ValueString field's value.
func (s *AccurateRuleForUpdateCustomBotConfigInput) SetValueString(v string) *AccurateRuleForUpdateCustomBotConfigInput {
	s.ValueString = &v
	return s
}

type UpdateCustomBotConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Accurate *AccurateForUpdateCustomBotConfigInput `type:"structure" json:",omitempty"`

	// Action is a required field
	Action *string `type:"string" json:",omitempty" required:"true"`

	// BotType is a required field
	BotType *string `type:"string" json:",omitempty" required:"true"`

	Description *string `type:"string" json:",omitempty"`

	// Enable is a required field
	Enable *int32 `type:"int32" json:",omitempty" required:"true"`

	// Host is a required field
	Host *string `type:"string" json:",omitempty" required:"true"`

	// Id is a required field
	Id *int32 `type:"int32" json:",omitempty" required:"true"`

	ProjectName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateCustomBotConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateCustomBotConfigInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateCustomBotConfigInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateCustomBotConfigInput"}
	if s.Action == nil {
		invalidParams.Add(request.NewErrParamRequired("Action"))
	}
	if s.BotType == nil {
		invalidParams.Add(request.NewErrParamRequired("BotType"))
	}
	if s.Enable == nil {
		invalidParams.Add(request.NewErrParamRequired("Enable"))
	}
	if s.Host == nil {
		invalidParams.Add(request.NewErrParamRequired("Host"))
	}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAccurate sets the Accurate field's value.
func (s *UpdateCustomBotConfigInput) SetAccurate(v *AccurateForUpdateCustomBotConfigInput) *UpdateCustomBotConfigInput {
	s.Accurate = v
	return s
}

// SetAction sets the Action field's value.
func (s *UpdateCustomBotConfigInput) SetAction(v string) *UpdateCustomBotConfigInput {
	s.Action = &v
	return s
}

// SetBotType sets the BotType field's value.
func (s *UpdateCustomBotConfigInput) SetBotType(v string) *UpdateCustomBotConfigInput {
	s.BotType = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *UpdateCustomBotConfigInput) SetDescription(v string) *UpdateCustomBotConfigInput {
	s.Description = &v
	return s
}

// SetEnable sets the Enable field's value.
func (s *UpdateCustomBotConfigInput) SetEnable(v int32) *UpdateCustomBotConfigInput {
	s.Enable = &v
	return s
}

// SetHost sets the Host field's value.
func (s *UpdateCustomBotConfigInput) SetHost(v string) *UpdateCustomBotConfigInput {
	s.Host = &v
	return s
}

// SetId sets the Id field's value.
func (s *UpdateCustomBotConfigInput) SetId(v int32) *UpdateCustomBotConfigInput {
	s.Id = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *UpdateCustomBotConfigInput) SetProjectName(v string) *UpdateCustomBotConfigInput {
	s.ProjectName = &v
	return s
}

type UpdateCustomBotConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateCustomBotConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateCustomBotConfigOutput) GoString() string {
	return s.String()
}
