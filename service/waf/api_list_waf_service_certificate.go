// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package waf

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListWafServiceCertificateCommon = "ListWafServiceCertificate"

// ListWafServiceCertificateCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListWafServiceCertificateCommon operation. The "output" return
// value will be populated with the ListWafServiceCertificateCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListWafServiceCertificateCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListWafServiceCertificateCommon Send returns without error.
//
// See ListWafServiceCertificateCommon for more information on using the ListWafServiceCertificateCommon
// API call, and error handling.
//
//    // Example sending a request using the ListWafServiceCertificateCommonRequest method.
//    req, resp := client.ListWafServiceCertificateCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) ListWafServiceCertificateCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListWafServiceCertificateCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListWafServiceCertificateCommon API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation ListWafServiceCertificateCommon for usage and error information.
func (c *WAF) ListWafServiceCertificateCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListWafServiceCertificateCommonRequest(input)
	return out, req.Send()
}

// ListWafServiceCertificateCommonWithContext is the same as ListWafServiceCertificateCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListWafServiceCertificateCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) ListWafServiceCertificateCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListWafServiceCertificateCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListWafServiceCertificate = "ListWafServiceCertificate"

// ListWafServiceCertificateRequest generates a "volcengine/request.Request" representing the
// client's request for the ListWafServiceCertificate operation. The "output" return
// value will be populated with the ListWafServiceCertificateCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListWafServiceCertificateCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListWafServiceCertificateCommon Send returns without error.
//
// See ListWafServiceCertificate for more information on using the ListWafServiceCertificate
// API call, and error handling.
//
//    // Example sending a request using the ListWafServiceCertificateRequest method.
//    req, resp := client.ListWafServiceCertificateRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) ListWafServiceCertificateRequest(input *ListWafServiceCertificateInput) (req *request.Request, output *ListWafServiceCertificateOutput) {
	op := &request.Operation{
		Name:       opListWafServiceCertificate,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListWafServiceCertificateInput{}
	}

	output = &ListWafServiceCertificateOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListWafServiceCertificate API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation ListWafServiceCertificate for usage and error information.
func (c *WAF) ListWafServiceCertificate(input *ListWafServiceCertificateInput) (*ListWafServiceCertificateOutput, error) {
	req, out := c.ListWafServiceCertificateRequest(input)
	return out, req.Send()
}

// ListWafServiceCertificateWithContext is the same as ListWafServiceCertificate with the addition of
// the ability to pass a context and additional request options.
//
// See ListWafServiceCertificate for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) ListWafServiceCertificateWithContext(ctx volcengine.Context, input *ListWafServiceCertificateInput, opts ...request.Option) (*ListWafServiceCertificateOutput, error) {
	req, out := c.ListWafServiceCertificateRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListWafServiceCertificateOutput struct {
	_ struct{} `type:"structure"`

	ApplicableDomains *string `type:"string"`

	ClbCertificateId *string `type:"string"`

	Description *string `type:"string"`

	ExpireTime *string `type:"string"`

	Id *int32 `type:"int32"`

	InsertTime *string `type:"string"`

	IsolationId *string `type:"string"`

	Name *string `type:"string"`

	Operator *string `type:"string"`

	Optsrc *string `type:"string"`

	PrivateKey *string `type:"string"`

	PublicKey *string `type:"string"`

	User *string `type:"string"`

	VolcCertificateId *string `type:"string"`
}

// String returns the string representation
func (s DataForListWafServiceCertificateOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListWafServiceCertificateOutput) GoString() string {
	return s.String()
}

// SetApplicableDomains sets the ApplicableDomains field's value.
func (s *DataForListWafServiceCertificateOutput) SetApplicableDomains(v string) *DataForListWafServiceCertificateOutput {
	s.ApplicableDomains = &v
	return s
}

// SetClbCertificateId sets the ClbCertificateId field's value.
func (s *DataForListWafServiceCertificateOutput) SetClbCertificateId(v string) *DataForListWafServiceCertificateOutput {
	s.ClbCertificateId = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DataForListWafServiceCertificateOutput) SetDescription(v string) *DataForListWafServiceCertificateOutput {
	s.Description = &v
	return s
}

// SetExpireTime sets the ExpireTime field's value.
func (s *DataForListWafServiceCertificateOutput) SetExpireTime(v string) *DataForListWafServiceCertificateOutput {
	s.ExpireTime = &v
	return s
}

// SetId sets the Id field's value.
func (s *DataForListWafServiceCertificateOutput) SetId(v int32) *DataForListWafServiceCertificateOutput {
	s.Id = &v
	return s
}

// SetInsertTime sets the InsertTime field's value.
func (s *DataForListWafServiceCertificateOutput) SetInsertTime(v string) *DataForListWafServiceCertificateOutput {
	s.InsertTime = &v
	return s
}

// SetIsolationId sets the IsolationId field's value.
func (s *DataForListWafServiceCertificateOutput) SetIsolationId(v string) *DataForListWafServiceCertificateOutput {
	s.IsolationId = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForListWafServiceCertificateOutput) SetName(v string) *DataForListWafServiceCertificateOutput {
	s.Name = &v
	return s
}

// SetOperator sets the Operator field's value.
func (s *DataForListWafServiceCertificateOutput) SetOperator(v string) *DataForListWafServiceCertificateOutput {
	s.Operator = &v
	return s
}

// SetOptsrc sets the Optsrc field's value.
func (s *DataForListWafServiceCertificateOutput) SetOptsrc(v string) *DataForListWafServiceCertificateOutput {
	s.Optsrc = &v
	return s
}

// SetPrivateKey sets the PrivateKey field's value.
func (s *DataForListWafServiceCertificateOutput) SetPrivateKey(v string) *DataForListWafServiceCertificateOutput {
	s.PrivateKey = &v
	return s
}

// SetPublicKey sets the PublicKey field's value.
func (s *DataForListWafServiceCertificateOutput) SetPublicKey(v string) *DataForListWafServiceCertificateOutput {
	s.PublicKey = &v
	return s
}

// SetUser sets the User field's value.
func (s *DataForListWafServiceCertificateOutput) SetUser(v string) *DataForListWafServiceCertificateOutput {
	s.User = &v
	return s
}

// SetVolcCertificateId sets the VolcCertificateId field's value.
func (s *DataForListWafServiceCertificateOutput) SetVolcCertificateId(v string) *DataForListWafServiceCertificateOutput {
	s.VolcCertificateId = &v
	return s
}

type ListWafServiceCertificateInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s ListWafServiceCertificateInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListWafServiceCertificateInput) GoString() string {
	return s.String()
}

type ListWafServiceCertificateOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Data []*DataForListWafServiceCertificateOutput `type:"list"`
}

// String returns the string representation
func (s ListWafServiceCertificateOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListWafServiceCertificateOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListWafServiceCertificateOutput) SetData(v []*DataForListWafServiceCertificateOutput) *ListWafServiceCertificateOutput {
	s.Data = v
	return s
}
