// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package waf

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListProhibitionCommon = "ListProhibition"

// ListProhibitionCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListProhibitionCommon operation. The "output" return
// value will be populated with the ListProhibitionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListProhibitionCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListProhibitionCommon Send returns without error.
//
// See ListProhibitionCommon for more information on using the ListProhibitionCommon
// API call, and error handling.
//
//    // Example sending a request using the ListProhibitionCommonRequest method.
//    req, resp := client.ListProhibitionCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) ListProhibitionCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListProhibitionCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListProhibitionCommon API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation ListProhibitionCommon for usage and error information.
func (c *WAF) ListProhibitionCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListProhibitionCommonRequest(input)
	return out, req.Send()
}

// ListProhibitionCommonWithContext is the same as ListProhibitionCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListProhibitionCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) ListProhibitionCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListProhibitionCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListProhibition = "ListProhibition"

// ListProhibitionRequest generates a "volcengine/request.Request" representing the
// client's request for the ListProhibition operation. The "output" return
// value will be populated with the ListProhibitionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListProhibitionCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListProhibitionCommon Send returns without error.
//
// See ListProhibition for more information on using the ListProhibition
// API call, and error handling.
//
//    // Example sending a request using the ListProhibitionRequest method.
//    req, resp := client.ListProhibitionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) ListProhibitionRequest(input *ListProhibitionInput) (req *request.Request, output *ListProhibitionOutput) {
	op := &request.Operation{
		Name:       opListProhibition,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListProhibitionInput{}
	}

	output = &ListProhibitionOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListProhibition API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation ListProhibition for usage and error information.
func (c *WAF) ListProhibition(input *ListProhibitionInput) (*ListProhibitionOutput, error) {
	req, out := c.ListProhibitionRequest(input)
	return out, req.Send()
}

// ListProhibitionWithContext is the same as ListProhibition with the addition of
// the ability to pass a context and additional request options.
//
// See ListProhibition for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) ListProhibitionWithContext(ctx volcengine.Context, input *ListProhibitionInput, opts ...request.Option) (*ListProhibitionOutput, error) {
	req, out := c.ListProhibitionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type IpAggGroupForListProhibitionOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DropCount *int32 `type:"int32" json:",omitempty"`

	Ip *string `type:"string" json:",omitempty"`

	Reason *ReasonForListProhibitionOutput `type:"structure" json:",omitempty"`

	RuleName *string `type:"string" json:",omitempty"`

	RuleTag *string `type:"string" json:",omitempty"`

	Status *int32 `type:"int32" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s IpAggGroupForListProhibitionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s IpAggGroupForListProhibitionOutput) GoString() string {
	return s.String()
}

// SetDropCount sets the DropCount field's value.
func (s *IpAggGroupForListProhibitionOutput) SetDropCount(v int32) *IpAggGroupForListProhibitionOutput {
	s.DropCount = &v
	return s
}

// SetIp sets the Ip field's value.
func (s *IpAggGroupForListProhibitionOutput) SetIp(v string) *IpAggGroupForListProhibitionOutput {
	s.Ip = &v
	return s
}

// SetReason sets the Reason field's value.
func (s *IpAggGroupForListProhibitionOutput) SetReason(v *ReasonForListProhibitionOutput) *IpAggGroupForListProhibitionOutput {
	s.Reason = v
	return s
}

// SetRuleName sets the RuleName field's value.
func (s *IpAggGroupForListProhibitionOutput) SetRuleName(v string) *IpAggGroupForListProhibitionOutput {
	s.RuleName = &v
	return s
}

// SetRuleTag sets the RuleTag field's value.
func (s *IpAggGroupForListProhibitionOutput) SetRuleTag(v string) *IpAggGroupForListProhibitionOutput {
	s.RuleTag = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *IpAggGroupForListProhibitionOutput) SetStatus(v int32) *IpAggGroupForListProhibitionOutput {
	s.Status = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *IpAggGroupForListProhibitionOutput) SetUpdateTime(v string) *IpAggGroupForListProhibitionOutput {
	s.UpdateTime = &v
	return s
}

type ListProhibitionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// EndTime is a required field
	EndTime *int32 `type:"int32" json:",omitempty" required:"true"`

	// Host is a required field
	Host *string `type:"string" json:",omitempty" required:"true"`

	Ip *string `type:"string" json:",omitempty"`

	LetterOrderBy *string `type:"string" json:",omitempty"`

	Page *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	PathOrderBy *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	Reason []*string `type:"list" json:",omitempty"`

	// StartTime is a required field
	StartTime *int32 `type:"int32" json:",omitempty" required:"true"`

	Status []*int32 `type:"list" json:",omitempty"`

	TimeOrderBy *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListProhibitionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListProhibitionInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListProhibitionInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListProhibitionInput"}
	if s.EndTime == nil {
		invalidParams.Add(request.NewErrParamRequired("EndTime"))
	}
	if s.Host == nil {
		invalidParams.Add(request.NewErrParamRequired("Host"))
	}
	if s.StartTime == nil {
		invalidParams.Add(request.NewErrParamRequired("StartTime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetEndTime sets the EndTime field's value.
func (s *ListProhibitionInput) SetEndTime(v int32) *ListProhibitionInput {
	s.EndTime = &v
	return s
}

// SetHost sets the Host field's value.
func (s *ListProhibitionInput) SetHost(v string) *ListProhibitionInput {
	s.Host = &v
	return s
}

// SetIp sets the Ip field's value.
func (s *ListProhibitionInput) SetIp(v string) *ListProhibitionInput {
	s.Ip = &v
	return s
}

// SetLetterOrderBy sets the LetterOrderBy field's value.
func (s *ListProhibitionInput) SetLetterOrderBy(v string) *ListProhibitionInput {
	s.LetterOrderBy = &v
	return s
}

// SetPage sets the Page field's value.
func (s *ListProhibitionInput) SetPage(v int32) *ListProhibitionInput {
	s.Page = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListProhibitionInput) SetPageSize(v int32) *ListProhibitionInput {
	s.PageSize = &v
	return s
}

// SetPathOrderBy sets the PathOrderBy field's value.
func (s *ListProhibitionInput) SetPathOrderBy(v string) *ListProhibitionInput {
	s.PathOrderBy = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ListProhibitionInput) SetProjectName(v string) *ListProhibitionInput {
	s.ProjectName = &v
	return s
}

// SetReason sets the Reason field's value.
func (s *ListProhibitionInput) SetReason(v []*string) *ListProhibitionInput {
	s.Reason = v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *ListProhibitionInput) SetStartTime(v int32) *ListProhibitionInput {
	s.StartTime = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ListProhibitionInput) SetStatus(v []*int32) *ListProhibitionInput {
	s.Status = v
	return s
}

// SetTimeOrderBy sets the TimeOrderBy field's value.
func (s *ListProhibitionInput) SetTimeOrderBy(v string) *ListProhibitionInput {
	s.TimeOrderBy = &v
	return s
}

type ListProhibitionOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Count *int32 `type:"int32" json:",omitempty"`

	CurrentPage *int32 `type:"int32" json:",omitempty"`

	IpAggGroup []*IpAggGroupForListProhibitionOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListProhibitionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListProhibitionOutput) GoString() string {
	return s.String()
}

// SetCount sets the Count field's value.
func (s *ListProhibitionOutput) SetCount(v int32) *ListProhibitionOutput {
	s.Count = &v
	return s
}

// SetCurrentPage sets the CurrentPage field's value.
func (s *ListProhibitionOutput) SetCurrentPage(v int32) *ListProhibitionOutput {
	s.CurrentPage = &v
	return s
}

// SetIpAggGroup sets the IpAggGroup field's value.
func (s *ListProhibitionOutput) SetIpAggGroup(v []*IpAggGroupForListProhibitionOutput) *ListProhibitionOutput {
	s.IpAggGroup = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListProhibitionOutput) SetPageNumber(v int32) *ListProhibitionOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListProhibitionOutput) SetPageSize(v int32) *ListProhibitionOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListProhibitionOutput) SetTotalCount(v int32) *ListProhibitionOutput {
	s.TotalCount = &v
	return s
}

type ReasonForListProhibitionOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Black *int32 `type:"int32" json:"black,omitempty"`

	Bot *int32 `type:"int32" json:"bot,omitempty"`

	Geo_black *int32 `type:"int32" json:"geo_black,omitempty"`

	Httpflood *int32 `type:"int32" json:"httpflood,omitempty"`

	Param_abnormal *int32 `type:"int32" json:"param_abnormal,omitempty"`

	Route_abnormal *int32 `type:"int32" json:"route_abnormal,omitempty"`

	Sensitive_info *int32 `type:"int32" json:"sensitive_info,omitempty"`

	Web_vulnerability *int32 `type:"int32" json:"web_vulnerability,omitempty"`
}

// String returns the string representation
func (s ReasonForListProhibitionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ReasonForListProhibitionOutput) GoString() string {
	return s.String()
}

// SetBlack sets the Black field's value.
func (s *ReasonForListProhibitionOutput) SetBlack(v int32) *ReasonForListProhibitionOutput {
	s.Black = &v
	return s
}

// SetBot sets the Bot field's value.
func (s *ReasonForListProhibitionOutput) SetBot(v int32) *ReasonForListProhibitionOutput {
	s.Bot = &v
	return s
}

// SetGeo_black sets the Geo_black field's value.
func (s *ReasonForListProhibitionOutput) SetGeo_black(v int32) *ReasonForListProhibitionOutput {
	s.Geo_black = &v
	return s
}

// SetHttpflood sets the Httpflood field's value.
func (s *ReasonForListProhibitionOutput) SetHttpflood(v int32) *ReasonForListProhibitionOutput {
	s.Httpflood = &v
	return s
}

// SetParam_abnormal sets the Param_abnormal field's value.
func (s *ReasonForListProhibitionOutput) SetParam_abnormal(v int32) *ReasonForListProhibitionOutput {
	s.Param_abnormal = &v
	return s
}

// SetRoute_abnormal sets the Route_abnormal field's value.
func (s *ReasonForListProhibitionOutput) SetRoute_abnormal(v int32) *ReasonForListProhibitionOutput {
	s.Route_abnormal = &v
	return s
}

// SetSensitive_info sets the Sensitive_info field's value.
func (s *ReasonForListProhibitionOutput) SetSensitive_info(v int32) *ReasonForListProhibitionOutput {
	s.Sensitive_info = &v
	return s
}

// SetWeb_vulnerability sets the Web_vulnerability field's value.
func (s *ReasonForListProhibitionOutput) SetWeb_vulnerability(v int32) *ReasonForListProhibitionOutput {
	s.Web_vulnerability = &v
	return s
}
