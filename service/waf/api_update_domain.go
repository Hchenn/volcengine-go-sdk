// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package waf

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateDomainCommon = "UpdateDomain"

// UpdateDomainCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateDomainCommon operation. The "output" return
// value will be populated with the UpdateDomainCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateDomainCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateDomainCommon Send returns without error.
//
// See UpdateDomainCommon for more information on using the UpdateDomainCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateDomainCommonRequest method.
//    req, resp := client.UpdateDomainCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) UpdateDomainCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateDomainCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateDomainCommon API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation UpdateDomainCommon for usage and error information.
func (c *WAF) UpdateDomainCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateDomainCommonRequest(input)
	return out, req.Send()
}

// UpdateDomainCommonWithContext is the same as UpdateDomainCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateDomainCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) UpdateDomainCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateDomainCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateDomain = "UpdateDomain"

// UpdateDomainRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateDomain operation. The "output" return
// value will be populated with the UpdateDomainCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateDomainCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateDomainCommon Send returns without error.
//
// See UpdateDomain for more information on using the UpdateDomain
// API call, and error handling.
//
//    // Example sending a request using the UpdateDomainRequest method.
//    req, resp := client.UpdateDomainRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) UpdateDomainRequest(input *UpdateDomainInput) (req *request.Request, output *UpdateDomainOutput) {
	op := &request.Operation{
		Name:       opUpdateDomain,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateDomainInput{}
	}

	output = &UpdateDomainOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateDomain API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation UpdateDomain for usage and error information.
func (c *WAF) UpdateDomain(input *UpdateDomainInput) (*UpdateDomainOutput, error) {
	req, out := c.UpdateDomainRequest(input)
	return out, req.Send()
}

// UpdateDomainWithContext is the same as UpdateDomain with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateDomain for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) UpdateDomainWithContext(ctx volcengine.Context, input *UpdateDomainInput, opts ...request.Option) (*UpdateDomainOutput, error) {
	req, out := c.UpdateDomainRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type BackendForUpdateDomainInput struct {
	_ struct{} `type:"structure"`

	IP *string `type:"string"`

	Port *int32 `type:"int32"`

	Protocol *string `type:"string"`

	Weight *int32 `type:"int32"`
}

// String returns the string representation
func (s BackendForUpdateDomainInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BackendForUpdateDomainInput) GoString() string {
	return s.String()
}

// SetIP sets the IP field's value.
func (s *BackendForUpdateDomainInput) SetIP(v string) *BackendForUpdateDomainInput {
	s.IP = &v
	return s
}

// SetPort sets the Port field's value.
func (s *BackendForUpdateDomainInput) SetPort(v int32) *BackendForUpdateDomainInput {
	s.Port = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *BackendForUpdateDomainInput) SetProtocol(v string) *BackendForUpdateDomainInput {
	s.Protocol = &v
	return s
}

// SetWeight sets the Weight field's value.
func (s *BackendForUpdateDomainInput) SetWeight(v int32) *BackendForUpdateDomainInput {
	s.Weight = &v
	return s
}

type BackendGroupForUpdateDomainInput struct {
	_ struct{} `type:"structure"`

	AccessPort []*int32 `type:"list"`

	Backends []*BackendForUpdateDomainInput `type:"list"`

	Name *string `type:"string"`
}

// String returns the string representation
func (s BackendGroupForUpdateDomainInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BackendGroupForUpdateDomainInput) GoString() string {
	return s.String()
}

// SetAccessPort sets the AccessPort field's value.
func (s *BackendGroupForUpdateDomainInput) SetAccessPort(v []*int32) *BackendGroupForUpdateDomainInput {
	s.AccessPort = v
	return s
}

// SetBackends sets the Backends field's value.
func (s *BackendGroupForUpdateDomainInput) SetBackends(v []*BackendForUpdateDomainInput) *BackendGroupForUpdateDomainInput {
	s.Backends = v
	return s
}

// SetName sets the Name field's value.
func (s *BackendGroupForUpdateDomainInput) SetName(v string) *BackendGroupForUpdateDomainInput {
	s.Name = &v
	return s
}

type CloudAccessConfigForUpdateDomainInput struct {
	_ struct{} `type:"structure"`

	AccessProtocol *string `type:"string"`

	InstanceID *string `type:"string"`

	ListenerID *string `type:"string"`

	Port *string `type:"string"`

	Protocol *string `type:"string"`
}

// String returns the string representation
func (s CloudAccessConfigForUpdateDomainInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CloudAccessConfigForUpdateDomainInput) GoString() string {
	return s.String()
}

// SetAccessProtocol sets the AccessProtocol field's value.
func (s *CloudAccessConfigForUpdateDomainInput) SetAccessProtocol(v string) *CloudAccessConfigForUpdateDomainInput {
	s.AccessProtocol = &v
	return s
}

// SetInstanceID sets the InstanceID field's value.
func (s *CloudAccessConfigForUpdateDomainInput) SetInstanceID(v string) *CloudAccessConfigForUpdateDomainInput {
	s.InstanceID = &v
	return s
}

// SetListenerID sets the ListenerID field's value.
func (s *CloudAccessConfigForUpdateDomainInput) SetListenerID(v string) *CloudAccessConfigForUpdateDomainInput {
	s.ListenerID = &v
	return s
}

// SetPort sets the Port field's value.
func (s *CloudAccessConfigForUpdateDomainInput) SetPort(v string) *CloudAccessConfigForUpdateDomainInput {
	s.Port = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *CloudAccessConfigForUpdateDomainInput) SetProtocol(v string) *CloudAccessConfigForUpdateDomainInput {
	s.Protocol = &v
	return s
}

type ProtocolPortsForUpdateDomainInput struct {
	_ struct{} `type:"structure"`

	HTTP []*int32 `type:"list"`

	HTTPS []*int32 `type:"list"`
}

// String returns the string representation
func (s ProtocolPortsForUpdateDomainInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProtocolPortsForUpdateDomainInput) GoString() string {
	return s.String()
}

// SetHTTP sets the HTTP field's value.
func (s *ProtocolPortsForUpdateDomainInput) SetHTTP(v []*int32) *ProtocolPortsForUpdateDomainInput {
	s.HTTP = v
	return s
}

// SetHTTPS sets the HTTPS field's value.
func (s *ProtocolPortsForUpdateDomainInput) SetHTTPS(v []*int32) *ProtocolPortsForUpdateDomainInput {
	s.HTTPS = v
	return s
}

type UpdateDomainInput struct {
	_ struct{} `type:"structure"`

	// AccessMode is a required field
	AccessMode *int32 `type:"int32" required:"true"`

	BackendGroups []*BackendGroupForUpdateDomainInput `type:"list"`

	BotDytokenEnable *int32 `type:"int32"`

	BotFrequencyEnable *int32 `type:"int32"`

	BotRepeatEnable *int32 `type:"int32"`

	BotSequenceDefaultAction *int32 `type:"int32"`

	BotSequenceEnable *int32 `type:"int32"`

	CertificateID *int32 `type:"int32"`

	CertificatePlatform *string `type:"string"`

	ClientIPLocation *int32 `type:"int32"`

	ClientMaxBodySize *int32 `type:"int32"`

	CloudAccessConfig []*CloudAccessConfigForUpdateDomainInput `type:"list"`

	CustomHeader []*string `type:"list"`

	// Domain is a required field
	Domain *string `type:"string" required:"true"`

	EnableHTTP2 *int32 `type:"int32"`

	EnableIPv6 *int32 `type:"int32"`

	KeepAliveRequest *int32 `type:"int32"`

	KeepAliveTimeOut *int32 `type:"int32"`

	LBAlgorithm *string `type:"string"`

	ProtocolFollow *int32 `type:"int32"`

	ProtocolPorts *ProtocolPortsForUpdateDomainInput `type:"structure"`

	Protocols []*string `type:"list"`

	ProxyConfig *int32 `type:"int32"`

	ProxyConnectTimeOut *int32 `type:"int32"`

	ProxyKeepAlive *int32 `type:"int32"`

	ProxyKeepAliveTimeOut *int32 `type:"int32"`

	ProxyReadTimeOut *int32 `type:"int32"`

	ProxyRetry *int32 `type:"int32"`

	ProxyWriteTimeOut *int32 `type:"int32"`

	PublicRealServer *int32 `type:"int32"`

	RedirectHTTPS *bool `type:"boolean"`

	// Region is a required field
	Region *string `type:"string" required:"true"`

	SSLCiphers []*string `type:"list"`

	SSLProtocols []*string `type:"list"`

	TLSEnable *int32 `type:"int32"`

	VolcCertificateID *string `type:"string"`

	VpcID *string `type:"string"`
}

// String returns the string representation
func (s UpdateDomainInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateDomainInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateDomainInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateDomainInput"}
	if s.AccessMode == nil {
		invalidParams.Add(request.NewErrParamRequired("AccessMode"))
	}
	if s.Domain == nil {
		invalidParams.Add(request.NewErrParamRequired("Domain"))
	}
	if s.Region == nil {
		invalidParams.Add(request.NewErrParamRequired("Region"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAccessMode sets the AccessMode field's value.
func (s *UpdateDomainInput) SetAccessMode(v int32) *UpdateDomainInput {
	s.AccessMode = &v
	return s
}

// SetBackendGroups sets the BackendGroups field's value.
func (s *UpdateDomainInput) SetBackendGroups(v []*BackendGroupForUpdateDomainInput) *UpdateDomainInput {
	s.BackendGroups = v
	return s
}

// SetBotDytokenEnable sets the BotDytokenEnable field's value.
func (s *UpdateDomainInput) SetBotDytokenEnable(v int32) *UpdateDomainInput {
	s.BotDytokenEnable = &v
	return s
}

// SetBotFrequencyEnable sets the BotFrequencyEnable field's value.
func (s *UpdateDomainInput) SetBotFrequencyEnable(v int32) *UpdateDomainInput {
	s.BotFrequencyEnable = &v
	return s
}

// SetBotRepeatEnable sets the BotRepeatEnable field's value.
func (s *UpdateDomainInput) SetBotRepeatEnable(v int32) *UpdateDomainInput {
	s.BotRepeatEnable = &v
	return s
}

// SetBotSequenceDefaultAction sets the BotSequenceDefaultAction field's value.
func (s *UpdateDomainInput) SetBotSequenceDefaultAction(v int32) *UpdateDomainInput {
	s.BotSequenceDefaultAction = &v
	return s
}

// SetBotSequenceEnable sets the BotSequenceEnable field's value.
func (s *UpdateDomainInput) SetBotSequenceEnable(v int32) *UpdateDomainInput {
	s.BotSequenceEnable = &v
	return s
}

// SetCertificateID sets the CertificateID field's value.
func (s *UpdateDomainInput) SetCertificateID(v int32) *UpdateDomainInput {
	s.CertificateID = &v
	return s
}

// SetCertificatePlatform sets the CertificatePlatform field's value.
func (s *UpdateDomainInput) SetCertificatePlatform(v string) *UpdateDomainInput {
	s.CertificatePlatform = &v
	return s
}

// SetClientIPLocation sets the ClientIPLocation field's value.
func (s *UpdateDomainInput) SetClientIPLocation(v int32) *UpdateDomainInput {
	s.ClientIPLocation = &v
	return s
}

// SetClientMaxBodySize sets the ClientMaxBodySize field's value.
func (s *UpdateDomainInput) SetClientMaxBodySize(v int32) *UpdateDomainInput {
	s.ClientMaxBodySize = &v
	return s
}

// SetCloudAccessConfig sets the CloudAccessConfig field's value.
func (s *UpdateDomainInput) SetCloudAccessConfig(v []*CloudAccessConfigForUpdateDomainInput) *UpdateDomainInput {
	s.CloudAccessConfig = v
	return s
}

// SetCustomHeader sets the CustomHeader field's value.
func (s *UpdateDomainInput) SetCustomHeader(v []*string) *UpdateDomainInput {
	s.CustomHeader = v
	return s
}

// SetDomain sets the Domain field's value.
func (s *UpdateDomainInput) SetDomain(v string) *UpdateDomainInput {
	s.Domain = &v
	return s
}

// SetEnableHTTP2 sets the EnableHTTP2 field's value.
func (s *UpdateDomainInput) SetEnableHTTP2(v int32) *UpdateDomainInput {
	s.EnableHTTP2 = &v
	return s
}

// SetEnableIPv6 sets the EnableIPv6 field's value.
func (s *UpdateDomainInput) SetEnableIPv6(v int32) *UpdateDomainInput {
	s.EnableIPv6 = &v
	return s
}

// SetKeepAliveRequest sets the KeepAliveRequest field's value.
func (s *UpdateDomainInput) SetKeepAliveRequest(v int32) *UpdateDomainInput {
	s.KeepAliveRequest = &v
	return s
}

// SetKeepAliveTimeOut sets the KeepAliveTimeOut field's value.
func (s *UpdateDomainInput) SetKeepAliveTimeOut(v int32) *UpdateDomainInput {
	s.KeepAliveTimeOut = &v
	return s
}

// SetLBAlgorithm sets the LBAlgorithm field's value.
func (s *UpdateDomainInput) SetLBAlgorithm(v string) *UpdateDomainInput {
	s.LBAlgorithm = &v
	return s
}

// SetProtocolFollow sets the ProtocolFollow field's value.
func (s *UpdateDomainInput) SetProtocolFollow(v int32) *UpdateDomainInput {
	s.ProtocolFollow = &v
	return s
}

// SetProtocolPorts sets the ProtocolPorts field's value.
func (s *UpdateDomainInput) SetProtocolPorts(v *ProtocolPortsForUpdateDomainInput) *UpdateDomainInput {
	s.ProtocolPorts = v
	return s
}

// SetProtocols sets the Protocols field's value.
func (s *UpdateDomainInput) SetProtocols(v []*string) *UpdateDomainInput {
	s.Protocols = v
	return s
}

// SetProxyConfig sets the ProxyConfig field's value.
func (s *UpdateDomainInput) SetProxyConfig(v int32) *UpdateDomainInput {
	s.ProxyConfig = &v
	return s
}

// SetProxyConnectTimeOut sets the ProxyConnectTimeOut field's value.
func (s *UpdateDomainInput) SetProxyConnectTimeOut(v int32) *UpdateDomainInput {
	s.ProxyConnectTimeOut = &v
	return s
}

// SetProxyKeepAlive sets the ProxyKeepAlive field's value.
func (s *UpdateDomainInput) SetProxyKeepAlive(v int32) *UpdateDomainInput {
	s.ProxyKeepAlive = &v
	return s
}

// SetProxyKeepAliveTimeOut sets the ProxyKeepAliveTimeOut field's value.
func (s *UpdateDomainInput) SetProxyKeepAliveTimeOut(v int32) *UpdateDomainInput {
	s.ProxyKeepAliveTimeOut = &v
	return s
}

// SetProxyReadTimeOut sets the ProxyReadTimeOut field's value.
func (s *UpdateDomainInput) SetProxyReadTimeOut(v int32) *UpdateDomainInput {
	s.ProxyReadTimeOut = &v
	return s
}

// SetProxyRetry sets the ProxyRetry field's value.
func (s *UpdateDomainInput) SetProxyRetry(v int32) *UpdateDomainInput {
	s.ProxyRetry = &v
	return s
}

// SetProxyWriteTimeOut sets the ProxyWriteTimeOut field's value.
func (s *UpdateDomainInput) SetProxyWriteTimeOut(v int32) *UpdateDomainInput {
	s.ProxyWriteTimeOut = &v
	return s
}

// SetPublicRealServer sets the PublicRealServer field's value.
func (s *UpdateDomainInput) SetPublicRealServer(v int32) *UpdateDomainInput {
	s.PublicRealServer = &v
	return s
}

// SetRedirectHTTPS sets the RedirectHTTPS field's value.
func (s *UpdateDomainInput) SetRedirectHTTPS(v bool) *UpdateDomainInput {
	s.RedirectHTTPS = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *UpdateDomainInput) SetRegion(v string) *UpdateDomainInput {
	s.Region = &v
	return s
}

// SetSSLCiphers sets the SSLCiphers field's value.
func (s *UpdateDomainInput) SetSSLCiphers(v []*string) *UpdateDomainInput {
	s.SSLCiphers = v
	return s
}

// SetSSLProtocols sets the SSLProtocols field's value.
func (s *UpdateDomainInput) SetSSLProtocols(v []*string) *UpdateDomainInput {
	s.SSLProtocols = v
	return s
}

// SetTLSEnable sets the TLSEnable field's value.
func (s *UpdateDomainInput) SetTLSEnable(v int32) *UpdateDomainInput {
	s.TLSEnable = &v
	return s
}

// SetVolcCertificateID sets the VolcCertificateID field's value.
func (s *UpdateDomainInput) SetVolcCertificateID(v string) *UpdateDomainInput {
	s.VolcCertificateID = &v
	return s
}

// SetVpcID sets the VpcID field's value.
func (s *UpdateDomainInput) SetVpcID(v string) *UpdateDomainInput {
	s.VpcID = &v
	return s
}

type UpdateDomainOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateDomainOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateDomainOutput) GoString() string {
	return s.String()
}
