// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package waf

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateCustomSystemVulRuleCommon = "UpdateCustomSystemVulRule"

// UpdateCustomSystemVulRuleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateCustomSystemVulRuleCommon operation. The "output" return
// value will be populated with the UpdateCustomSystemVulRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateCustomSystemVulRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateCustomSystemVulRuleCommon Send returns without error.
//
// See UpdateCustomSystemVulRuleCommon for more information on using the UpdateCustomSystemVulRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateCustomSystemVulRuleCommonRequest method.
//    req, resp := client.UpdateCustomSystemVulRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) UpdateCustomSystemVulRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateCustomSystemVulRuleCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateCustomSystemVulRuleCommon API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation UpdateCustomSystemVulRuleCommon for usage and error information.
func (c *WAF) UpdateCustomSystemVulRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateCustomSystemVulRuleCommonRequest(input)
	return out, req.Send()
}

// UpdateCustomSystemVulRuleCommonWithContext is the same as UpdateCustomSystemVulRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateCustomSystemVulRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) UpdateCustomSystemVulRuleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateCustomSystemVulRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateCustomSystemVulRule = "UpdateCustomSystemVulRule"

// UpdateCustomSystemVulRuleRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateCustomSystemVulRule operation. The "output" return
// value will be populated with the UpdateCustomSystemVulRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateCustomSystemVulRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateCustomSystemVulRuleCommon Send returns without error.
//
// See UpdateCustomSystemVulRule for more information on using the UpdateCustomSystemVulRule
// API call, and error handling.
//
//    // Example sending a request using the UpdateCustomSystemVulRuleRequest method.
//    req, resp := client.UpdateCustomSystemVulRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) UpdateCustomSystemVulRuleRequest(input *UpdateCustomSystemVulRuleInput) (req *request.Request, output *UpdateCustomSystemVulRuleOutput) {
	op := &request.Operation{
		Name:       opUpdateCustomSystemVulRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateCustomSystemVulRuleInput{}
	}

	output = &UpdateCustomSystemVulRuleOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateCustomSystemVulRule API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation UpdateCustomSystemVulRule for usage and error information.
func (c *WAF) UpdateCustomSystemVulRule(input *UpdateCustomSystemVulRuleInput) (*UpdateCustomSystemVulRuleOutput, error) {
	req, out := c.UpdateCustomSystemVulRuleRequest(input)
	return out, req.Send()
}

// UpdateCustomSystemVulRuleWithContext is the same as UpdateCustomSystemVulRule with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateCustomSystemVulRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) UpdateCustomSystemVulRuleWithContext(ctx volcengine.Context, input *UpdateCustomSystemVulRuleInput, opts ...request.Option) (*UpdateCustomSystemVulRuleOutput, error) {
	req, out := c.UpdateCustomSystemVulRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type SystemRuleSwitchForUpdateCustomSystemVulRuleInput struct {
	_ struct{} `type:"structure"`

	CustomSystemRuleSwitch *int32 `type:"int32"`

	RuleID *int32 `type:"int32"`
}

// String returns the string representation
func (s SystemRuleSwitchForUpdateCustomSystemVulRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SystemRuleSwitchForUpdateCustomSystemVulRuleInput) GoString() string {
	return s.String()
}

// SetCustomSystemRuleSwitch sets the CustomSystemRuleSwitch field's value.
func (s *SystemRuleSwitchForUpdateCustomSystemVulRuleInput) SetCustomSystemRuleSwitch(v int32) *SystemRuleSwitchForUpdateCustomSystemVulRuleInput {
	s.CustomSystemRuleSwitch = &v
	return s
}

// SetRuleID sets the RuleID field's value.
func (s *SystemRuleSwitchForUpdateCustomSystemVulRuleInput) SetRuleID(v int32) *SystemRuleSwitchForUpdateCustomSystemVulRuleInput {
	s.RuleID = &v
	return s
}

type UpdateCustomSystemVulRuleInput struct {
	_ struct{} `type:"structure"`

	// Host is a required field
	Host *string `type:"string" required:"true"`

	SystemRuleSwitch []*SystemRuleSwitchForUpdateCustomSystemVulRuleInput `type:"list"`
}

// String returns the string representation
func (s UpdateCustomSystemVulRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateCustomSystemVulRuleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateCustomSystemVulRuleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateCustomSystemVulRuleInput"}
	if s.Host == nil {
		invalidParams.Add(request.NewErrParamRequired("Host"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetHost sets the Host field's value.
func (s *UpdateCustomSystemVulRuleInput) SetHost(v string) *UpdateCustomSystemVulRuleInput {
	s.Host = &v
	return s
}

// SetSystemRuleSwitch sets the SystemRuleSwitch field's value.
func (s *UpdateCustomSystemVulRuleInput) SetSystemRuleSwitch(v []*SystemRuleSwitchForUpdateCustomSystemVulRuleInput) *UpdateCustomSystemVulRuleInput {
	s.SystemRuleSwitch = v
	return s
}

type UpdateCustomSystemVulRuleOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateCustomSystemVulRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateCustomSystemVulRuleOutput) GoString() string {
	return s.String()
}
