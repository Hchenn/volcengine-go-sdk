// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package organization

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetAccountSecureContactInfoCommon = "GetAccountSecureContactInfo"

// GetAccountSecureContactInfoCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetAccountSecureContactInfoCommon operation. The "output" return
// value will be populated with the GetAccountSecureContactInfoCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetAccountSecureContactInfoCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetAccountSecureContactInfoCommon Send returns without error.
//
// See GetAccountSecureContactInfoCommon for more information on using the GetAccountSecureContactInfoCommon
// API call, and error handling.
//
//    // Example sending a request using the GetAccountSecureContactInfoCommonRequest method.
//    req, resp := client.GetAccountSecureContactInfoCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ORGANIZATION) GetAccountSecureContactInfoCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetAccountSecureContactInfoCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetAccountSecureContactInfoCommon API operation for ORGANIZATION.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ORGANIZATION's
// API operation GetAccountSecureContactInfoCommon for usage and error information.
func (c *ORGANIZATION) GetAccountSecureContactInfoCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetAccountSecureContactInfoCommonRequest(input)
	return out, req.Send()
}

// GetAccountSecureContactInfoCommonWithContext is the same as GetAccountSecureContactInfoCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetAccountSecureContactInfoCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ORGANIZATION) GetAccountSecureContactInfoCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetAccountSecureContactInfoCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetAccountSecureContactInfo = "GetAccountSecureContactInfo"

// GetAccountSecureContactInfoRequest generates a "volcengine/request.Request" representing the
// client's request for the GetAccountSecureContactInfo operation. The "output" return
// value will be populated with the GetAccountSecureContactInfoCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetAccountSecureContactInfoCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetAccountSecureContactInfoCommon Send returns without error.
//
// See GetAccountSecureContactInfo for more information on using the GetAccountSecureContactInfo
// API call, and error handling.
//
//    // Example sending a request using the GetAccountSecureContactInfoRequest method.
//    req, resp := client.GetAccountSecureContactInfoRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ORGANIZATION) GetAccountSecureContactInfoRequest(input *GetAccountSecureContactInfoInput) (req *request.Request, output *GetAccountSecureContactInfoOutput) {
	op := &request.Operation{
		Name:       opGetAccountSecureContactInfo,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetAccountSecureContactInfoInput{}
	}

	output = &GetAccountSecureContactInfoOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetAccountSecureContactInfo API operation for ORGANIZATION.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ORGANIZATION's
// API operation GetAccountSecureContactInfo for usage and error information.
func (c *ORGANIZATION) GetAccountSecureContactInfo(input *GetAccountSecureContactInfoInput) (*GetAccountSecureContactInfoOutput, error) {
	req, out := c.GetAccountSecureContactInfoRequest(input)
	return out, req.Send()
}

// GetAccountSecureContactInfoWithContext is the same as GetAccountSecureContactInfo with the addition of
// the ability to pass a context and additional request options.
//
// See GetAccountSecureContactInfo for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ORGANIZATION) GetAccountSecureContactInfoWithContext(ctx volcengine.Context, input *GetAccountSecureContactInfoInput, opts ...request.Option) (*GetAccountSecureContactInfoOutput, error) {
	req, out := c.GetAccountSecureContactInfoRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetAccountSecureContactInfoInput struct {
	_ struct{} `type:"structure"`

	// AccountId is a required field
	AccountId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s GetAccountSecureContactInfoInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetAccountSecureContactInfoInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetAccountSecureContactInfoInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetAccountSecureContactInfoInput"}
	if s.AccountId == nil {
		invalidParams.Add(request.NewErrParamRequired("AccountId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAccountId sets the AccountId field's value.
func (s *GetAccountSecureContactInfoInput) SetAccountId(v string) *GetAccountSecureContactInfoInput {
	s.AccountId = &v
	return s
}

type GetAccountSecureContactInfoOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Email *string `type:"string"`

	EmailVerified *int32 `type:"int32"`

	NewEmail *string `type:"string"`

	NewPhone *string `type:"string"`

	Phone *string `type:"string"`

	PhoneVerified *int32 `type:"int32"`
}

// String returns the string representation
func (s GetAccountSecureContactInfoOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetAccountSecureContactInfoOutput) GoString() string {
	return s.String()
}

// SetEmail sets the Email field's value.
func (s *GetAccountSecureContactInfoOutput) SetEmail(v string) *GetAccountSecureContactInfoOutput {
	s.Email = &v
	return s
}

// SetEmailVerified sets the EmailVerified field's value.
func (s *GetAccountSecureContactInfoOutput) SetEmailVerified(v int32) *GetAccountSecureContactInfoOutput {
	s.EmailVerified = &v
	return s
}

// SetNewEmail sets the NewEmail field's value.
func (s *GetAccountSecureContactInfoOutput) SetNewEmail(v string) *GetAccountSecureContactInfoOutput {
	s.NewEmail = &v
	return s
}

// SetNewPhone sets the NewPhone field's value.
func (s *GetAccountSecureContactInfoOutput) SetNewPhone(v string) *GetAccountSecureContactInfoOutput {
	s.NewPhone = &v
	return s
}

// SetPhone sets the Phone field's value.
func (s *GetAccountSecureContactInfoOutput) SetPhone(v string) *GetAccountSecureContactInfoOutput {
	s.Phone = &v
	return s
}

// SetPhoneVerified sets the PhoneVerified field's value.
func (s *GetAccountSecureContactInfoOutput) SetPhoneVerified(v int32) *GetAccountSecureContactInfoOutput {
	s.PhoneVerified = &v
	return s
}
