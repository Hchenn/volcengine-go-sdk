// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package organization

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetServiceControlPolicyCommon = "GetServiceControlPolicy"

// GetServiceControlPolicyCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetServiceControlPolicyCommon operation. The "output" return
// value will be populated with the GetServiceControlPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetServiceControlPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetServiceControlPolicyCommon Send returns without error.
//
// See GetServiceControlPolicyCommon for more information on using the GetServiceControlPolicyCommon
// API call, and error handling.
//
//    // Example sending a request using the GetServiceControlPolicyCommonRequest method.
//    req, resp := client.GetServiceControlPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ORGANIZATION) GetServiceControlPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetServiceControlPolicyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetServiceControlPolicyCommon API operation for ORGANIZATION.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ORGANIZATION's
// API operation GetServiceControlPolicyCommon for usage and error information.
func (c *ORGANIZATION) GetServiceControlPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetServiceControlPolicyCommonRequest(input)
	return out, req.Send()
}

// GetServiceControlPolicyCommonWithContext is the same as GetServiceControlPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetServiceControlPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ORGANIZATION) GetServiceControlPolicyCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetServiceControlPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetServiceControlPolicy = "GetServiceControlPolicy"

// GetServiceControlPolicyRequest generates a "volcengine/request.Request" representing the
// client's request for the GetServiceControlPolicy operation. The "output" return
// value will be populated with the GetServiceControlPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetServiceControlPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetServiceControlPolicyCommon Send returns without error.
//
// See GetServiceControlPolicy for more information on using the GetServiceControlPolicy
// API call, and error handling.
//
//    // Example sending a request using the GetServiceControlPolicyRequest method.
//    req, resp := client.GetServiceControlPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ORGANIZATION) GetServiceControlPolicyRequest(input *GetServiceControlPolicyInput) (req *request.Request, output *GetServiceControlPolicyOutput) {
	op := &request.Operation{
		Name:       opGetServiceControlPolicy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetServiceControlPolicyInput{}
	}

	output = &GetServiceControlPolicyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetServiceControlPolicy API operation for ORGANIZATION.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ORGANIZATION's
// API operation GetServiceControlPolicy for usage and error information.
func (c *ORGANIZATION) GetServiceControlPolicy(input *GetServiceControlPolicyInput) (*GetServiceControlPolicyOutput, error) {
	req, out := c.GetServiceControlPolicyRequest(input)
	return out, req.Send()
}

// GetServiceControlPolicyWithContext is the same as GetServiceControlPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See GetServiceControlPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ORGANIZATION) GetServiceControlPolicyWithContext(ctx volcengine.Context, input *GetServiceControlPolicyInput, opts ...request.Option) (*GetServiceControlPolicyOutput, error) {
	req, out := c.GetServiceControlPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetServiceControlPolicyInput struct {
	_ struct{} `type:"structure"`

	// PolicyID is a required field
	PolicyID *string `type:"string" required:"true"`
}

// String returns the string representation
func (s GetServiceControlPolicyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetServiceControlPolicyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetServiceControlPolicyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetServiceControlPolicyInput"}
	if s.PolicyID == nil {
		invalidParams.Add(request.NewErrParamRequired("PolicyID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetPolicyID sets the PolicyID field's value.
func (s *GetServiceControlPolicyInput) SetPolicyID(v string) *GetServiceControlPolicyInput {
	s.PolicyID = &v
	return s
}

type GetServiceControlPolicyOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	CreateDate *string `type:"string"`

	Description *string `type:"string"`

	PolicyID *string `type:"string"`

	PolicyName *string `type:"string"`

	PolicyType *string `type:"string"`

	Statement *string `type:"string"`

	UpdateDate *string `type:"string"`
}

// String returns the string representation
func (s GetServiceControlPolicyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetServiceControlPolicyOutput) GoString() string {
	return s.String()
}

// SetCreateDate sets the CreateDate field's value.
func (s *GetServiceControlPolicyOutput) SetCreateDate(v string) *GetServiceControlPolicyOutput {
	s.CreateDate = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *GetServiceControlPolicyOutput) SetDescription(v string) *GetServiceControlPolicyOutput {
	s.Description = &v
	return s
}

// SetPolicyID sets the PolicyID field's value.
func (s *GetServiceControlPolicyOutput) SetPolicyID(v string) *GetServiceControlPolicyOutput {
	s.PolicyID = &v
	return s
}

// SetPolicyName sets the PolicyName field's value.
func (s *GetServiceControlPolicyOutput) SetPolicyName(v string) *GetServiceControlPolicyOutput {
	s.PolicyName = &v
	return s
}

// SetPolicyType sets the PolicyType field's value.
func (s *GetServiceControlPolicyOutput) SetPolicyType(v string) *GetServiceControlPolicyOutput {
	s.PolicyType = &v
	return s
}

// SetStatement sets the Statement field's value.
func (s *GetServiceControlPolicyOutput) SetStatement(v string) *GetServiceControlPolicyOutput {
	s.Statement = &v
	return s
}

// SetUpdateDate sets the UpdateDate field's value.
func (s *GetServiceControlPolicyOutput) SetUpdateDate(v string) *GetServiceControlPolicyOutput {
	s.UpdateDate = &v
	return s
}
