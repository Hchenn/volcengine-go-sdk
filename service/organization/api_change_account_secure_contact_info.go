// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package organization

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opChangeAccountSecureContactInfoCommon = "ChangeAccountSecureContactInfo"

// ChangeAccountSecureContactInfoCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ChangeAccountSecureContactInfoCommon operation. The "output" return
// value will be populated with the ChangeAccountSecureContactInfoCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ChangeAccountSecureContactInfoCommon Request to send the API call to the service.
// the "output" return value is not valid until after ChangeAccountSecureContactInfoCommon Send returns without error.
//
// See ChangeAccountSecureContactInfoCommon for more information on using the ChangeAccountSecureContactInfoCommon
// API call, and error handling.
//
//    // Example sending a request using the ChangeAccountSecureContactInfoCommonRequest method.
//    req, resp := client.ChangeAccountSecureContactInfoCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ORGANIZATION) ChangeAccountSecureContactInfoCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opChangeAccountSecureContactInfoCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ChangeAccountSecureContactInfoCommon API operation for ORGANIZATION.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ORGANIZATION's
// API operation ChangeAccountSecureContactInfoCommon for usage and error information.
func (c *ORGANIZATION) ChangeAccountSecureContactInfoCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ChangeAccountSecureContactInfoCommonRequest(input)
	return out, req.Send()
}

// ChangeAccountSecureContactInfoCommonWithContext is the same as ChangeAccountSecureContactInfoCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ChangeAccountSecureContactInfoCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ORGANIZATION) ChangeAccountSecureContactInfoCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ChangeAccountSecureContactInfoCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opChangeAccountSecureContactInfo = "ChangeAccountSecureContactInfo"

// ChangeAccountSecureContactInfoRequest generates a "volcengine/request.Request" representing the
// client's request for the ChangeAccountSecureContactInfo operation. The "output" return
// value will be populated with the ChangeAccountSecureContactInfoCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ChangeAccountSecureContactInfoCommon Request to send the API call to the service.
// the "output" return value is not valid until after ChangeAccountSecureContactInfoCommon Send returns without error.
//
// See ChangeAccountSecureContactInfo for more information on using the ChangeAccountSecureContactInfo
// API call, and error handling.
//
//    // Example sending a request using the ChangeAccountSecureContactInfoRequest method.
//    req, resp := client.ChangeAccountSecureContactInfoRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ORGANIZATION) ChangeAccountSecureContactInfoRequest(input *ChangeAccountSecureContactInfoInput) (req *request.Request, output *ChangeAccountSecureContactInfoOutput) {
	op := &request.Operation{
		Name:       opChangeAccountSecureContactInfo,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ChangeAccountSecureContactInfoInput{}
	}

	output = &ChangeAccountSecureContactInfoOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ChangeAccountSecureContactInfo API operation for ORGANIZATION.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ORGANIZATION's
// API operation ChangeAccountSecureContactInfo for usage and error information.
func (c *ORGANIZATION) ChangeAccountSecureContactInfo(input *ChangeAccountSecureContactInfoInput) (*ChangeAccountSecureContactInfoOutput, error) {
	req, out := c.ChangeAccountSecureContactInfoRequest(input)
	return out, req.Send()
}

// ChangeAccountSecureContactInfoWithContext is the same as ChangeAccountSecureContactInfo with the addition of
// the ability to pass a context and additional request options.
//
// See ChangeAccountSecureContactInfo for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ORGANIZATION) ChangeAccountSecureContactInfoWithContext(ctx volcengine.Context, input *ChangeAccountSecureContactInfoInput, opts ...request.Option) (*ChangeAccountSecureContactInfoOutput, error) {
	req, out := c.ChangeAccountSecureContactInfoRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ChangeAccountSecureContactInfoInput struct {
	_ struct{} `type:"structure"`

	// AccountId is a required field
	AccountId *string `type:"string" required:"true"`

	// Contact is a required field
	Contact *string `type:"string" required:"true"`

	// ContactType is a required field
	ContactType *int32 `type:"int32" required:"true"`
}

// String returns the string representation
func (s ChangeAccountSecureContactInfoInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ChangeAccountSecureContactInfoInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ChangeAccountSecureContactInfoInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ChangeAccountSecureContactInfoInput"}
	if s.AccountId == nil {
		invalidParams.Add(request.NewErrParamRequired("AccountId"))
	}
	if s.Contact == nil {
		invalidParams.Add(request.NewErrParamRequired("Contact"))
	}
	if s.ContactType == nil {
		invalidParams.Add(request.NewErrParamRequired("ContactType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAccountId sets the AccountId field's value.
func (s *ChangeAccountSecureContactInfoInput) SetAccountId(v string) *ChangeAccountSecureContactInfoInput {
	s.AccountId = &v
	return s
}

// SetContact sets the Contact field's value.
func (s *ChangeAccountSecureContactInfoInput) SetContact(v string) *ChangeAccountSecureContactInfoInput {
	s.Contact = &v
	return s
}

// SetContactType sets the ContactType field's value.
func (s *ChangeAccountSecureContactInfoInput) SetContactType(v int32) *ChangeAccountSecureContactInfoInput {
	s.ContactType = &v
	return s
}

type ChangeAccountSecureContactInfoOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ChangeAccountSecureContactInfoOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ChangeAccountSecureContactInfoOutput) GoString() string {
	return s.String()
}
