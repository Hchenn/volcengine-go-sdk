// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package organization

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeOrganizationCommon = "DescribeOrganization"

// DescribeOrganizationCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeOrganizationCommon operation. The "output" return
// value will be populated with the DescribeOrganizationCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeOrganizationCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeOrganizationCommon Send returns without error.
//
// See DescribeOrganizationCommon for more information on using the DescribeOrganizationCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeOrganizationCommonRequest method.
//    req, resp := client.DescribeOrganizationCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ORGANIZATION) DescribeOrganizationCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeOrganizationCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeOrganizationCommon API operation for ORGANIZATION.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ORGANIZATION's
// API operation DescribeOrganizationCommon for usage and error information.
func (c *ORGANIZATION) DescribeOrganizationCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeOrganizationCommonRequest(input)
	return out, req.Send()
}

// DescribeOrganizationCommonWithContext is the same as DescribeOrganizationCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeOrganizationCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ORGANIZATION) DescribeOrganizationCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeOrganizationCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeOrganization = "DescribeOrganization"

// DescribeOrganizationRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeOrganization operation. The "output" return
// value will be populated with the DescribeOrganizationCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeOrganizationCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeOrganizationCommon Send returns without error.
//
// See DescribeOrganization for more information on using the DescribeOrganization
// API call, and error handling.
//
//    // Example sending a request using the DescribeOrganizationRequest method.
//    req, resp := client.DescribeOrganizationRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ORGANIZATION) DescribeOrganizationRequest(input *DescribeOrganizationInput) (req *request.Request, output *DescribeOrganizationOutput) {
	op := &request.Operation{
		Name:       opDescribeOrganization,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeOrganizationInput{}
	}

	output = &DescribeOrganizationOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeOrganization API operation for ORGANIZATION.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ORGANIZATION's
// API operation DescribeOrganization for usage and error information.
func (c *ORGANIZATION) DescribeOrganization(input *DescribeOrganizationInput) (*DescribeOrganizationOutput, error) {
	req, out := c.DescribeOrganizationRequest(input)
	return out, req.Send()
}

// DescribeOrganizationWithContext is the same as DescribeOrganization with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeOrganization for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ORGANIZATION) DescribeOrganizationWithContext(ctx volcengine.Context, input *DescribeOrganizationInput, opts ...request.Option) (*DescribeOrganizationOutput, error) {
	req, out := c.DescribeOrganizationRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeOrganizationInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DescribeOrganizationInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeOrganizationInput) GoString() string {
	return s.String()
}

type DescribeOrganizationOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Organization *OrganizationForDescribeOrganizationOutput `type:"structure" json:",omitempty"`

	Owner *OwnerForDescribeOrganizationOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DescribeOrganizationOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeOrganizationOutput) GoString() string {
	return s.String()
}

// SetOrganization sets the Organization field's value.
func (s *DescribeOrganizationOutput) SetOrganization(v *OrganizationForDescribeOrganizationOutput) *DescribeOrganizationOutput {
	s.Organization = v
	return s
}

// SetOwner sets the Owner field's value.
func (s *DescribeOrganizationOutput) SetOwner(v *OwnerForDescribeOrganizationOutput) *DescribeOrganizationOutput {
	s.Owner = v
	return s
}

type OrganizationForDescribeOrganizationOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreatedTime *string `type:"string" json:",omitempty"`

	DeleteUk *string `type:"string" json:",omitempty"`

	DeletedTime *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	ID *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Owner *string `type:"string" json:",omitempty"`

	Status *int32 `type:"int32" json:",omitempty"`

	Type *int32 `type:"int32" json:",omitempty"`

	UpdatedTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s OrganizationForDescribeOrganizationOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OrganizationForDescribeOrganizationOutput) GoString() string {
	return s.String()
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *OrganizationForDescribeOrganizationOutput) SetCreatedTime(v string) *OrganizationForDescribeOrganizationOutput {
	s.CreatedTime = &v
	return s
}

// SetDeleteUk sets the DeleteUk field's value.
func (s *OrganizationForDescribeOrganizationOutput) SetDeleteUk(v string) *OrganizationForDescribeOrganizationOutput {
	s.DeleteUk = &v
	return s
}

// SetDeletedTime sets the DeletedTime field's value.
func (s *OrganizationForDescribeOrganizationOutput) SetDeletedTime(v string) *OrganizationForDescribeOrganizationOutput {
	s.DeletedTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *OrganizationForDescribeOrganizationOutput) SetDescription(v string) *OrganizationForDescribeOrganizationOutput {
	s.Description = &v
	return s
}

// SetID sets the ID field's value.
func (s *OrganizationForDescribeOrganizationOutput) SetID(v string) *OrganizationForDescribeOrganizationOutput {
	s.ID = &v
	return s
}

// SetName sets the Name field's value.
func (s *OrganizationForDescribeOrganizationOutput) SetName(v string) *OrganizationForDescribeOrganizationOutput {
	s.Name = &v
	return s
}

// SetOwner sets the Owner field's value.
func (s *OrganizationForDescribeOrganizationOutput) SetOwner(v string) *OrganizationForDescribeOrganizationOutput {
	s.Owner = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *OrganizationForDescribeOrganizationOutput) SetStatus(v int32) *OrganizationForDescribeOrganizationOutput {
	s.Status = &v
	return s
}

// SetType sets the Type field's value.
func (s *OrganizationForDescribeOrganizationOutput) SetType(v int32) *OrganizationForDescribeOrganizationOutput {
	s.Type = &v
	return s
}

// SetUpdatedTime sets the UpdatedTime field's value.
func (s *OrganizationForDescribeOrganizationOutput) SetUpdatedTime(v string) *OrganizationForDescribeOrganizationOutput {
	s.UpdatedTime = &v
	return s
}

type OwnerForDescribeOrganizationOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountID *int64 `type:"int64" json:",omitempty"`

	AccountName *string `type:"string" json:",omitempty"`

	MainName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s OwnerForDescribeOrganizationOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OwnerForDescribeOrganizationOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *OwnerForDescribeOrganizationOutput) SetAccountID(v int64) *OwnerForDescribeOrganizationOutput {
	s.AccountID = &v
	return s
}

// SetAccountName sets the AccountName field's value.
func (s *OwnerForDescribeOrganizationOutput) SetAccountName(v string) *OwnerForDescribeOrganizationOutput {
	s.AccountName = &v
	return s
}

// SetMainName sets the MainName field's value.
func (s *OwnerForDescribeOrganizationOutput) SetMainName(v string) *OwnerForDescribeOrganizationOutput {
	s.MainName = &v
	return s
}
