// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package organization

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAccountsCommon = "ListAccounts"

// ListAccountsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAccountsCommon operation. The "output" return
// value will be populated with the ListAccountsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAccountsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAccountsCommon Send returns without error.
//
// See ListAccountsCommon for more information on using the ListAccountsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAccountsCommonRequest method.
//    req, resp := client.ListAccountsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ORGANIZATION) ListAccountsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAccountsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAccountsCommon API operation for ORGANIZATION.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ORGANIZATION's
// API operation ListAccountsCommon for usage and error information.
func (c *ORGANIZATION) ListAccountsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAccountsCommonRequest(input)
	return out, req.Send()
}

// ListAccountsCommonWithContext is the same as ListAccountsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAccountsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ORGANIZATION) ListAccountsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAccountsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAccounts = "ListAccounts"

// ListAccountsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAccounts operation. The "output" return
// value will be populated with the ListAccountsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAccountsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAccountsCommon Send returns without error.
//
// See ListAccounts for more information on using the ListAccounts
// API call, and error handling.
//
//    // Example sending a request using the ListAccountsRequest method.
//    req, resp := client.ListAccountsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ORGANIZATION) ListAccountsRequest(input *ListAccountsInput) (req *request.Request, output *ListAccountsOutput) {
	op := &request.Operation{
		Name:       opListAccounts,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAccountsInput{}
	}

	output = &ListAccountsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAccounts API operation for ORGANIZATION.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ORGANIZATION's
// API operation ListAccounts for usage and error information.
func (c *ORGANIZATION) ListAccounts(input *ListAccountsInput) (*ListAccountsOutput, error) {
	req, out := c.ListAccountsRequest(input)
	return out, req.Send()
}

// ListAccountsWithContext is the same as ListAccounts with the addition of
// the ability to pass a context and additional request options.
//
// See ListAccounts for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ORGANIZATION) ListAccountsWithContext(ctx volcengine.Context, input *ListAccountsInput, opts ...request.Option) (*ListAccountsOutput, error) {
	req, out := c.ListAccountsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AccountListForListAccountsOutput struct {
	_ struct{} `type:"structure"`

	AccountID *string `type:"string"`

	AccountName *string `type:"string"`

	AllowConsole *int32 `type:"int32"`

	AllowExit *int32 `type:"int32"`

	CreatedTime *string `type:"string"`

	DeleteUk *string `type:"string"`

	DeletedTime *string `type:"string"`

	Description *string `type:"string"`

	ID *string `type:"string"`

	IamRole *string `type:"string"`

	IsOwner *int32 `type:"int32"`

	JoinType *int32 `type:"int32"`

	OrgID *string `type:"string"`

	OrgType *int32 `type:"int32"`

	OrgUnitID *string `type:"string"`

	OrgUnitName *string `type:"string"`

	OrgVerificationID *string `type:"string"`

	Owner *string `type:"string"`

	ShowName *string `type:"string"`

	Tags []*TagForListAccountsOutput `type:"list"`

	UpdatedTime *string `type:"string"`
}

// String returns the string representation
func (s AccountListForListAccountsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AccountListForListAccountsOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *AccountListForListAccountsOutput) SetAccountID(v string) *AccountListForListAccountsOutput {
	s.AccountID = &v
	return s
}

// SetAccountName sets the AccountName field's value.
func (s *AccountListForListAccountsOutput) SetAccountName(v string) *AccountListForListAccountsOutput {
	s.AccountName = &v
	return s
}

// SetAllowConsole sets the AllowConsole field's value.
func (s *AccountListForListAccountsOutput) SetAllowConsole(v int32) *AccountListForListAccountsOutput {
	s.AllowConsole = &v
	return s
}

// SetAllowExit sets the AllowExit field's value.
func (s *AccountListForListAccountsOutput) SetAllowExit(v int32) *AccountListForListAccountsOutput {
	s.AllowExit = &v
	return s
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *AccountListForListAccountsOutput) SetCreatedTime(v string) *AccountListForListAccountsOutput {
	s.CreatedTime = &v
	return s
}

// SetDeleteUk sets the DeleteUk field's value.
func (s *AccountListForListAccountsOutput) SetDeleteUk(v string) *AccountListForListAccountsOutput {
	s.DeleteUk = &v
	return s
}

// SetDeletedTime sets the DeletedTime field's value.
func (s *AccountListForListAccountsOutput) SetDeletedTime(v string) *AccountListForListAccountsOutput {
	s.DeletedTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *AccountListForListAccountsOutput) SetDescription(v string) *AccountListForListAccountsOutput {
	s.Description = &v
	return s
}

// SetID sets the ID field's value.
func (s *AccountListForListAccountsOutput) SetID(v string) *AccountListForListAccountsOutput {
	s.ID = &v
	return s
}

// SetIamRole sets the IamRole field's value.
func (s *AccountListForListAccountsOutput) SetIamRole(v string) *AccountListForListAccountsOutput {
	s.IamRole = &v
	return s
}

// SetIsOwner sets the IsOwner field's value.
func (s *AccountListForListAccountsOutput) SetIsOwner(v int32) *AccountListForListAccountsOutput {
	s.IsOwner = &v
	return s
}

// SetJoinType sets the JoinType field's value.
func (s *AccountListForListAccountsOutput) SetJoinType(v int32) *AccountListForListAccountsOutput {
	s.JoinType = &v
	return s
}

// SetOrgID sets the OrgID field's value.
func (s *AccountListForListAccountsOutput) SetOrgID(v string) *AccountListForListAccountsOutput {
	s.OrgID = &v
	return s
}

// SetOrgType sets the OrgType field's value.
func (s *AccountListForListAccountsOutput) SetOrgType(v int32) *AccountListForListAccountsOutput {
	s.OrgType = &v
	return s
}

// SetOrgUnitID sets the OrgUnitID field's value.
func (s *AccountListForListAccountsOutput) SetOrgUnitID(v string) *AccountListForListAccountsOutput {
	s.OrgUnitID = &v
	return s
}

// SetOrgUnitName sets the OrgUnitName field's value.
func (s *AccountListForListAccountsOutput) SetOrgUnitName(v string) *AccountListForListAccountsOutput {
	s.OrgUnitName = &v
	return s
}

// SetOrgVerificationID sets the OrgVerificationID field's value.
func (s *AccountListForListAccountsOutput) SetOrgVerificationID(v string) *AccountListForListAccountsOutput {
	s.OrgVerificationID = &v
	return s
}

// SetOwner sets the Owner field's value.
func (s *AccountListForListAccountsOutput) SetOwner(v string) *AccountListForListAccountsOutput {
	s.Owner = &v
	return s
}

// SetShowName sets the ShowName field's value.
func (s *AccountListForListAccountsOutput) SetShowName(v string) *AccountListForListAccountsOutput {
	s.ShowName = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *AccountListForListAccountsOutput) SetTags(v []*TagForListAccountsOutput) *AccountListForListAccountsOutput {
	s.Tags = v
	return s
}

// SetUpdatedTime sets the UpdatedTime field's value.
func (s *AccountListForListAccountsOutput) SetUpdatedTime(v string) *AccountListForListAccountsOutput {
	s.UpdatedTime = &v
	return s
}

type ListAccountsInput struct {
	_ struct{} `type:"structure"`

	IncludeTags *bool `type:"boolean"`

	Limit *int32 `type:"int32"`

	Offset *int32 `type:"int32"`

	OrderBy *int32 `type:"int32"`

	OrgUnitId *string `type:"string"`

	Search *string `type:"string"`

	VerificationId *string `type:"string"`
}

// String returns the string representation
func (s ListAccountsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAccountsInput) GoString() string {
	return s.String()
}

// SetIncludeTags sets the IncludeTags field's value.
func (s *ListAccountsInput) SetIncludeTags(v bool) *ListAccountsInput {
	s.IncludeTags = &v
	return s
}

// SetLimit sets the Limit field's value.
func (s *ListAccountsInput) SetLimit(v int32) *ListAccountsInput {
	s.Limit = &v
	return s
}

// SetOffset sets the Offset field's value.
func (s *ListAccountsInput) SetOffset(v int32) *ListAccountsInput {
	s.Offset = &v
	return s
}

// SetOrderBy sets the OrderBy field's value.
func (s *ListAccountsInput) SetOrderBy(v int32) *ListAccountsInput {
	s.OrderBy = &v
	return s
}

// SetOrgUnitId sets the OrgUnitId field's value.
func (s *ListAccountsInput) SetOrgUnitId(v string) *ListAccountsInput {
	s.OrgUnitId = &v
	return s
}

// SetSearch sets the Search field's value.
func (s *ListAccountsInput) SetSearch(v string) *ListAccountsInput {
	s.Search = &v
	return s
}

// SetVerificationId sets the VerificationId field's value.
func (s *ListAccountsInput) SetVerificationId(v string) *ListAccountsInput {
	s.VerificationId = &v
	return s
}

type ListAccountsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	AccountList []*AccountListForListAccountsOutput `type:"list"`

	Limit *int32 `type:"int32"`

	Offset *int32 `type:"int32"`

	Total *int32 `type:"int32"`
}

// String returns the string representation
func (s ListAccountsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAccountsOutput) GoString() string {
	return s.String()
}

// SetAccountList sets the AccountList field's value.
func (s *ListAccountsOutput) SetAccountList(v []*AccountListForListAccountsOutput) *ListAccountsOutput {
	s.AccountList = v
	return s
}

// SetLimit sets the Limit field's value.
func (s *ListAccountsOutput) SetLimit(v int32) *ListAccountsOutput {
	s.Limit = &v
	return s
}

// SetOffset sets the Offset field's value.
func (s *ListAccountsOutput) SetOffset(v int32) *ListAccountsOutput {
	s.Offset = &v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListAccountsOutput) SetTotal(v int32) *ListAccountsOutput {
	s.Total = &v
	return s
}

type TagForListAccountsOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForListAccountsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForListAccountsOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForListAccountsOutput) SetKey(v string) *TagForListAccountsOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForListAccountsOutput) SetValue(v string) *TagForListAccountsOutput {
	s.Value = &v
	return s
}
