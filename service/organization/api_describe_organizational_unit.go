// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package organization

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeOrganizationalUnitCommon = "DescribeOrganizationalUnit"

// DescribeOrganizationalUnitCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeOrganizationalUnitCommon operation. The "output" return
// value will be populated with the DescribeOrganizationalUnitCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeOrganizationalUnitCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeOrganizationalUnitCommon Send returns without error.
//
// See DescribeOrganizationalUnitCommon for more information on using the DescribeOrganizationalUnitCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeOrganizationalUnitCommonRequest method.
//    req, resp := client.DescribeOrganizationalUnitCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ORGANIZATION) DescribeOrganizationalUnitCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeOrganizationalUnitCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeOrganizationalUnitCommon API operation for ORGANIZATION.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ORGANIZATION's
// API operation DescribeOrganizationalUnitCommon for usage and error information.
func (c *ORGANIZATION) DescribeOrganizationalUnitCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeOrganizationalUnitCommonRequest(input)
	return out, req.Send()
}

// DescribeOrganizationalUnitCommonWithContext is the same as DescribeOrganizationalUnitCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeOrganizationalUnitCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ORGANIZATION) DescribeOrganizationalUnitCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeOrganizationalUnitCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeOrganizationalUnit = "DescribeOrganizationalUnit"

// DescribeOrganizationalUnitRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeOrganizationalUnit operation. The "output" return
// value will be populated with the DescribeOrganizationalUnitCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeOrganizationalUnitCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeOrganizationalUnitCommon Send returns without error.
//
// See DescribeOrganizationalUnit for more information on using the DescribeOrganizationalUnit
// API call, and error handling.
//
//    // Example sending a request using the DescribeOrganizationalUnitRequest method.
//    req, resp := client.DescribeOrganizationalUnitRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ORGANIZATION) DescribeOrganizationalUnitRequest(input *DescribeOrganizationalUnitInput) (req *request.Request, output *DescribeOrganizationalUnitOutput) {
	op := &request.Operation{
		Name:       opDescribeOrganizationalUnit,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeOrganizationalUnitInput{}
	}

	output = &DescribeOrganizationalUnitOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeOrganizationalUnit API operation for ORGANIZATION.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ORGANIZATION's
// API operation DescribeOrganizationalUnit for usage and error information.
func (c *ORGANIZATION) DescribeOrganizationalUnit(input *DescribeOrganizationalUnitInput) (*DescribeOrganizationalUnitOutput, error) {
	req, out := c.DescribeOrganizationalUnitRequest(input)
	return out, req.Send()
}

// DescribeOrganizationalUnitWithContext is the same as DescribeOrganizationalUnit with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeOrganizationalUnit for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ORGANIZATION) DescribeOrganizationalUnitWithContext(ctx volcengine.Context, input *DescribeOrganizationalUnitInput, opts ...request.Option) (*DescribeOrganizationalUnitOutput, error) {
	req, out := c.DescribeOrganizationalUnitRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeOrganizationalUnitInput struct {
	_ struct{} `type:"structure"`

	// OrgUnitId is a required field
	OrgUnitId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeOrganizationalUnitInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeOrganizationalUnitInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeOrganizationalUnitInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeOrganizationalUnitInput"}
	if s.OrgUnitId == nil {
		invalidParams.Add(request.NewErrParamRequired("OrgUnitId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetOrgUnitId sets the OrgUnitId field's value.
func (s *DescribeOrganizationalUnitInput) SetOrgUnitId(v string) *DescribeOrganizationalUnitInput {
	s.OrgUnitId = &v
	return s
}

type DescribeOrganizationalUnitOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	OrganizationUnit *OrganizationUnitForDescribeOrganizationalUnitOutput `type:"structure"`
}

// String returns the string representation
func (s DescribeOrganizationalUnitOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeOrganizationalUnitOutput) GoString() string {
	return s.String()
}

// SetOrganizationUnit sets the OrganizationUnit field's value.
func (s *DescribeOrganizationalUnitOutput) SetOrganizationUnit(v *OrganizationUnitForDescribeOrganizationalUnitOutput) *DescribeOrganizationalUnitOutput {
	s.OrganizationUnit = v
	return s
}

type OrganizationUnitForDescribeOrganizationalUnitOutput struct {
	_ struct{} `type:"structure"`

	CreatedTime *string `type:"string"`

	DeleteUk *string `type:"string"`

	DeletedTime *string `type:"string"`

	Depth *int32 `type:"int32"`

	Description *string `type:"string"`

	ID *string `type:"string"`

	Name *string `type:"string"`

	OrgID *string `type:"string"`

	OrgType *int32 `type:"int32"`

	Owner *string `type:"string"`

	ParentID *string `type:"string"`

	UpdatedTime *string `type:"string"`
}

// String returns the string representation
func (s OrganizationUnitForDescribeOrganizationalUnitOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OrganizationUnitForDescribeOrganizationalUnitOutput) GoString() string {
	return s.String()
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *OrganizationUnitForDescribeOrganizationalUnitOutput) SetCreatedTime(v string) *OrganizationUnitForDescribeOrganizationalUnitOutput {
	s.CreatedTime = &v
	return s
}

// SetDeleteUk sets the DeleteUk field's value.
func (s *OrganizationUnitForDescribeOrganizationalUnitOutput) SetDeleteUk(v string) *OrganizationUnitForDescribeOrganizationalUnitOutput {
	s.DeleteUk = &v
	return s
}

// SetDeletedTime sets the DeletedTime field's value.
func (s *OrganizationUnitForDescribeOrganizationalUnitOutput) SetDeletedTime(v string) *OrganizationUnitForDescribeOrganizationalUnitOutput {
	s.DeletedTime = &v
	return s
}

// SetDepth sets the Depth field's value.
func (s *OrganizationUnitForDescribeOrganizationalUnitOutput) SetDepth(v int32) *OrganizationUnitForDescribeOrganizationalUnitOutput {
	s.Depth = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *OrganizationUnitForDescribeOrganizationalUnitOutput) SetDescription(v string) *OrganizationUnitForDescribeOrganizationalUnitOutput {
	s.Description = &v
	return s
}

// SetID sets the ID field's value.
func (s *OrganizationUnitForDescribeOrganizationalUnitOutput) SetID(v string) *OrganizationUnitForDescribeOrganizationalUnitOutput {
	s.ID = &v
	return s
}

// SetName sets the Name field's value.
func (s *OrganizationUnitForDescribeOrganizationalUnitOutput) SetName(v string) *OrganizationUnitForDescribeOrganizationalUnitOutput {
	s.Name = &v
	return s
}

// SetOrgID sets the OrgID field's value.
func (s *OrganizationUnitForDescribeOrganizationalUnitOutput) SetOrgID(v string) *OrganizationUnitForDescribeOrganizationalUnitOutput {
	s.OrgID = &v
	return s
}

// SetOrgType sets the OrgType field's value.
func (s *OrganizationUnitForDescribeOrganizationalUnitOutput) SetOrgType(v int32) *OrganizationUnitForDescribeOrganizationalUnitOutput {
	s.OrgType = &v
	return s
}

// SetOwner sets the Owner field's value.
func (s *OrganizationUnitForDescribeOrganizationalUnitOutput) SetOwner(v string) *OrganizationUnitForDescribeOrganizationalUnitOutput {
	s.Owner = &v
	return s
}

// SetParentID sets the ParentID field's value.
func (s *OrganizationUnitForDescribeOrganizationalUnitOutput) SetParentID(v string) *OrganizationUnitForDescribeOrganizationalUnitOutput {
	s.ParentID = &v
	return s
}

// SetUpdatedTime sets the UpdatedTime field's value.
func (s *OrganizationUnitForDescribeOrganizationalUnitOutput) SetUpdatedTime(v string) *OrganizationUnitForDescribeOrganizationalUnitOutput {
	s.UpdatedTime = &v
	return s
}
