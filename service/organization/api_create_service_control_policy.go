// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package organization

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateServiceControlPolicyCommon = "CreateServiceControlPolicy"

// CreateServiceControlPolicyCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateServiceControlPolicyCommon operation. The "output" return
// value will be populated with the CreateServiceControlPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateServiceControlPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateServiceControlPolicyCommon Send returns without error.
//
// See CreateServiceControlPolicyCommon for more information on using the CreateServiceControlPolicyCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateServiceControlPolicyCommonRequest method.
//    req, resp := client.CreateServiceControlPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ORGANIZATION) CreateServiceControlPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateServiceControlPolicyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateServiceControlPolicyCommon API operation for ORGANIZATION.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ORGANIZATION's
// API operation CreateServiceControlPolicyCommon for usage and error information.
func (c *ORGANIZATION) CreateServiceControlPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateServiceControlPolicyCommonRequest(input)
	return out, req.Send()
}

// CreateServiceControlPolicyCommonWithContext is the same as CreateServiceControlPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateServiceControlPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ORGANIZATION) CreateServiceControlPolicyCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateServiceControlPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateServiceControlPolicy = "CreateServiceControlPolicy"

// CreateServiceControlPolicyRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateServiceControlPolicy operation. The "output" return
// value will be populated with the CreateServiceControlPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateServiceControlPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateServiceControlPolicyCommon Send returns without error.
//
// See CreateServiceControlPolicy for more information on using the CreateServiceControlPolicy
// API call, and error handling.
//
//    // Example sending a request using the CreateServiceControlPolicyRequest method.
//    req, resp := client.CreateServiceControlPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ORGANIZATION) CreateServiceControlPolicyRequest(input *CreateServiceControlPolicyInput) (req *request.Request, output *CreateServiceControlPolicyOutput) {
	op := &request.Operation{
		Name:       opCreateServiceControlPolicy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateServiceControlPolicyInput{}
	}

	output = &CreateServiceControlPolicyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateServiceControlPolicy API operation for ORGANIZATION.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ORGANIZATION's
// API operation CreateServiceControlPolicy for usage and error information.
func (c *ORGANIZATION) CreateServiceControlPolicy(input *CreateServiceControlPolicyInput) (*CreateServiceControlPolicyOutput, error) {
	req, out := c.CreateServiceControlPolicyRequest(input)
	return out, req.Send()
}

// CreateServiceControlPolicyWithContext is the same as CreateServiceControlPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See CreateServiceControlPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ORGANIZATION) CreateServiceControlPolicyWithContext(ctx volcengine.Context, input *CreateServiceControlPolicyInput, opts ...request.Option) (*CreateServiceControlPolicyOutput, error) {
	req, out := c.CreateServiceControlPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateServiceControlPolicyInput struct {
	_ struct{} `type:"structure"`

	Description *string `type:"string"`

	// PolicyName is a required field
	PolicyName *string `type:"string" required:"true"`

	// Statement is a required field
	Statement *string `type:"string" required:"true"`
}

// String returns the string representation
func (s CreateServiceControlPolicyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateServiceControlPolicyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateServiceControlPolicyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateServiceControlPolicyInput"}
	if s.PolicyName == nil {
		invalidParams.Add(request.NewErrParamRequired("PolicyName"))
	}
	if s.Statement == nil {
		invalidParams.Add(request.NewErrParamRequired("Statement"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *CreateServiceControlPolicyInput) SetDescription(v string) *CreateServiceControlPolicyInput {
	s.Description = &v
	return s
}

// SetPolicyName sets the PolicyName field's value.
func (s *CreateServiceControlPolicyInput) SetPolicyName(v string) *CreateServiceControlPolicyInput {
	s.PolicyName = &v
	return s
}

// SetStatement sets the Statement field's value.
func (s *CreateServiceControlPolicyInput) SetStatement(v string) *CreateServiceControlPolicyInput {
	s.Statement = &v
	return s
}

type CreateServiceControlPolicyOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	CreateDate *string `type:"string"`

	Description *string `type:"string"`

	PolicyId *string `type:"string"`

	PolicyName *string `type:"string"`

	PolicyType *string `type:"string"`

	UpdateDate *string `type:"string"`
}

// String returns the string representation
func (s CreateServiceControlPolicyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateServiceControlPolicyOutput) GoString() string {
	return s.String()
}

// SetCreateDate sets the CreateDate field's value.
func (s *CreateServiceControlPolicyOutput) SetCreateDate(v string) *CreateServiceControlPolicyOutput {
	s.CreateDate = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateServiceControlPolicyOutput) SetDescription(v string) *CreateServiceControlPolicyOutput {
	s.Description = &v
	return s
}

// SetPolicyId sets the PolicyId field's value.
func (s *CreateServiceControlPolicyOutput) SetPolicyId(v string) *CreateServiceControlPolicyOutput {
	s.PolicyId = &v
	return s
}

// SetPolicyName sets the PolicyName field's value.
func (s *CreateServiceControlPolicyOutput) SetPolicyName(v string) *CreateServiceControlPolicyOutput {
	s.PolicyName = &v
	return s
}

// SetPolicyType sets the PolicyType field's value.
func (s *CreateServiceControlPolicyOutput) SetPolicyType(v string) *CreateServiceControlPolicyOutput {
	s.PolicyType = &v
	return s
}

// SetUpdateDate sets the UpdateDate field's value.
func (s *CreateServiceControlPolicyOutput) SetUpdateDate(v string) *CreateServiceControlPolicyOutput {
	s.UpdateDate = &v
	return s
}
