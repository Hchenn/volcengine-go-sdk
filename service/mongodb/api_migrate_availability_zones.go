// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mongodb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opMigrateAvailabilityZonesCommon = "MigrateAvailabilityZones"

// MigrateAvailabilityZonesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the MigrateAvailabilityZonesCommon operation. The "output" return
// value will be populated with the MigrateAvailabilityZonesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned MigrateAvailabilityZonesCommon Request to send the API call to the service.
// the "output" return value is not valid until after MigrateAvailabilityZonesCommon Send returns without error.
//
// See MigrateAvailabilityZonesCommon for more information on using the MigrateAvailabilityZonesCommon
// API call, and error handling.
//
//    // Example sending a request using the MigrateAvailabilityZonesCommonRequest method.
//    req, resp := client.MigrateAvailabilityZonesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MONGODB) MigrateAvailabilityZonesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opMigrateAvailabilityZonesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// MigrateAvailabilityZonesCommon API operation for MONGODB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MONGODB's
// API operation MigrateAvailabilityZonesCommon for usage and error information.
func (c *MONGODB) MigrateAvailabilityZonesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.MigrateAvailabilityZonesCommonRequest(input)
	return out, req.Send()
}

// MigrateAvailabilityZonesCommonWithContext is the same as MigrateAvailabilityZonesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See MigrateAvailabilityZonesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MONGODB) MigrateAvailabilityZonesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.MigrateAvailabilityZonesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opMigrateAvailabilityZones = "MigrateAvailabilityZones"

// MigrateAvailabilityZonesRequest generates a "volcengine/request.Request" representing the
// client's request for the MigrateAvailabilityZones operation. The "output" return
// value will be populated with the MigrateAvailabilityZonesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned MigrateAvailabilityZonesCommon Request to send the API call to the service.
// the "output" return value is not valid until after MigrateAvailabilityZonesCommon Send returns without error.
//
// See MigrateAvailabilityZones for more information on using the MigrateAvailabilityZones
// API call, and error handling.
//
//    // Example sending a request using the MigrateAvailabilityZonesRequest method.
//    req, resp := client.MigrateAvailabilityZonesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MONGODB) MigrateAvailabilityZonesRequest(input *MigrateAvailabilityZonesInput) (req *request.Request, output *MigrateAvailabilityZonesOutput) {
	op := &request.Operation{
		Name:       opMigrateAvailabilityZones,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &MigrateAvailabilityZonesInput{}
	}

	output = &MigrateAvailabilityZonesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// MigrateAvailabilityZones API operation for MONGODB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MONGODB's
// API operation MigrateAvailabilityZones for usage and error information.
func (c *MONGODB) MigrateAvailabilityZones(input *MigrateAvailabilityZonesInput) (*MigrateAvailabilityZonesOutput, error) {
	req, out := c.MigrateAvailabilityZonesRequest(input)
	return out, req.Send()
}

// MigrateAvailabilityZonesWithContext is the same as MigrateAvailabilityZones with the addition of
// the ability to pass a context and additional request options.
//
// See MigrateAvailabilityZones for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MONGODB) MigrateAvailabilityZonesWithContext(ctx volcengine.Context, input *MigrateAvailabilityZonesInput, opts ...request.Option) (*MigrateAvailabilityZonesOutput, error) {
	req, out := c.MigrateAvailabilityZonesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type MigrateAvailabilityZonesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	SubnetId *string `type:"string" json:",omitempty"`

	TargetZones []*TargetZoneForMigrateAvailabilityZonesInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s MigrateAvailabilityZonesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MigrateAvailabilityZonesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *MigrateAvailabilityZonesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "MigrateAvailabilityZonesInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *MigrateAvailabilityZonesInput) SetInstanceId(v string) *MigrateAvailabilityZonesInput {
	s.InstanceId = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *MigrateAvailabilityZonesInput) SetSubnetId(v string) *MigrateAvailabilityZonesInput {
	s.SubnetId = &v
	return s
}

// SetTargetZones sets the TargetZones field's value.
func (s *MigrateAvailabilityZonesInput) SetTargetZones(v []*TargetZoneForMigrateAvailabilityZonesInput) *MigrateAvailabilityZonesInput {
	s.TargetZones = v
	return s
}

type MigrateAvailabilityZonesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s MigrateAvailabilityZonesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MigrateAvailabilityZonesOutput) GoString() string {
	return s.String()
}

type TargetZoneForMigrateAvailabilityZonesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s TargetZoneForMigrateAvailabilityZonesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TargetZoneForMigrateAvailabilityZonesInput) GoString() string {
	return s.String()
}
