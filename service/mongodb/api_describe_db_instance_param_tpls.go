// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mongodb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDBInstanceParamTplsCommon = "DescribeDBInstanceParamTpls"

// DescribeDBInstanceParamTplsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstanceParamTplsCommon operation. The "output" return
// value will be populated with the DescribeDBInstanceParamTplsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstanceParamTplsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstanceParamTplsCommon Send returns without error.
//
// See DescribeDBInstanceParamTplsCommon for more information on using the DescribeDBInstanceParamTplsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstanceParamTplsCommonRequest method.
//    req, resp := client.DescribeDBInstanceParamTplsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MONGODB) DescribeDBInstanceParamTplsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDBInstanceParamTplsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstanceParamTplsCommon API operation for MONGODB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MONGODB's
// API operation DescribeDBInstanceParamTplsCommon for usage and error information.
func (c *MONGODB) DescribeDBInstanceParamTplsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstanceParamTplsCommonRequest(input)
	return out, req.Send()
}

// DescribeDBInstanceParamTplsCommonWithContext is the same as DescribeDBInstanceParamTplsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstanceParamTplsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MONGODB) DescribeDBInstanceParamTplsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstanceParamTplsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDBInstanceParamTpls = "DescribeDBInstanceParamTpls"

// DescribeDBInstanceParamTplsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstanceParamTpls operation. The "output" return
// value will be populated with the DescribeDBInstanceParamTplsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstanceParamTplsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstanceParamTplsCommon Send returns without error.
//
// See DescribeDBInstanceParamTpls for more information on using the DescribeDBInstanceParamTpls
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstanceParamTplsRequest method.
//    req, resp := client.DescribeDBInstanceParamTplsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MONGODB) DescribeDBInstanceParamTplsRequest(input *DescribeDBInstanceParamTplsInput) (req *request.Request, output *DescribeDBInstanceParamTplsOutput) {
	op := &request.Operation{
		Name:       opDescribeDBInstanceParamTpls,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDBInstanceParamTplsInput{}
	}

	output = &DescribeDBInstanceParamTplsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstanceParamTpls API operation for MONGODB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MONGODB's
// API operation DescribeDBInstanceParamTpls for usage and error information.
func (c *MONGODB) DescribeDBInstanceParamTpls(input *DescribeDBInstanceParamTplsInput) (*DescribeDBInstanceParamTplsOutput, error) {
	req, out := c.DescribeDBInstanceParamTplsRequest(input)
	return out, req.Send()
}

// DescribeDBInstanceParamTplsWithContext is the same as DescribeDBInstanceParamTpls with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstanceParamTpls for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MONGODB) DescribeDBInstanceParamTplsWithContext(ctx volcengine.Context, input *DescribeDBInstanceParamTplsInput, opts ...request.Option) (*DescribeDBInstanceParamTplsOutput, error) {
	req, out := c.DescribeDBInstanceParamTplsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DBInstanceParamTplForDescribeDBInstanceParamTplsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	DBEngineVersion *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	NeedRestart *bool `type:"boolean" json:",omitempty"`

	ParamCount *int32 `type:"int32" json:",omitempty"`

	ParamRole *string `type:"string" json:",omitempty"`

	TemplateId *string `type:"string" json:",omitempty"`

	TemplateName *string `type:"string" json:",omitempty"`

	TemplateSource *string `type:"string" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DBInstanceParamTplForDescribeDBInstanceParamTplsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DBInstanceParamTplForDescribeDBInstanceParamTplsOutput) GoString() string {
	return s.String()
}

// SetCreateTime sets the CreateTime field's value.
func (s *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput) SetCreateTime(v string) *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput {
	s.CreateTime = &v
	return s
}

// SetDBEngineVersion sets the DBEngineVersion field's value.
func (s *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput) SetDBEngineVersion(v string) *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput {
	s.DBEngineVersion = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput) SetDescription(v string) *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput {
	s.Description = &v
	return s
}

// SetNeedRestart sets the NeedRestart field's value.
func (s *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput) SetNeedRestart(v bool) *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput {
	s.NeedRestart = &v
	return s
}

// SetParamCount sets the ParamCount field's value.
func (s *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput) SetParamCount(v int32) *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput {
	s.ParamCount = &v
	return s
}

// SetParamRole sets the ParamRole field's value.
func (s *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput) SetParamRole(v string) *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput {
	s.ParamRole = &v
	return s
}

// SetTemplateId sets the TemplateId field's value.
func (s *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput) SetTemplateId(v string) *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput {
	s.TemplateId = &v
	return s
}

// SetTemplateName sets the TemplateName field's value.
func (s *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput) SetTemplateName(v string) *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput {
	s.TemplateName = &v
	return s
}

// SetTemplateSource sets the TemplateSource field's value.
func (s *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput) SetTemplateSource(v string) *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput {
	s.TemplateSource = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput) SetUpdateTime(v string) *DBInstanceParamTplForDescribeDBInstanceParamTplsOutput {
	s.UpdateTime = &v
	return s
}

type DescribeDBInstanceParamTplsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DBEngineVersions []*string `type:"list" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int32 `type:"int32" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int32 `type:"int32" json:",omitempty" required:"true"`

	ParamRole *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	TemplateName *string `type:"string" json:",omitempty"`

	TemplateSource *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDBInstanceParamTplsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstanceParamTplsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDBInstanceParamTplsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDBInstanceParamTplsInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDBEngineVersions sets the DBEngineVersions field's value.
func (s *DescribeDBInstanceParamTplsInput) SetDBEngineVersions(v []*string) *DescribeDBInstanceParamTplsInput {
	s.DBEngineVersions = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeDBInstanceParamTplsInput) SetPageNumber(v int32) *DescribeDBInstanceParamTplsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeDBInstanceParamTplsInput) SetPageSize(v int32) *DescribeDBInstanceParamTplsInput {
	s.PageSize = &v
	return s
}

// SetParamRole sets the ParamRole field's value.
func (s *DescribeDBInstanceParamTplsInput) SetParamRole(v string) *DescribeDBInstanceParamTplsInput {
	s.ParamRole = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeDBInstanceParamTplsInput) SetProjectName(v string) *DescribeDBInstanceParamTplsInput {
	s.ProjectName = &v
	return s
}

// SetTemplateName sets the TemplateName field's value.
func (s *DescribeDBInstanceParamTplsInput) SetTemplateName(v string) *DescribeDBInstanceParamTplsInput {
	s.TemplateName = &v
	return s
}

// SetTemplateSource sets the TemplateSource field's value.
func (s *DescribeDBInstanceParamTplsInput) SetTemplateSource(v string) *DescribeDBInstanceParamTplsInput {
	s.TemplateSource = &v
	return s
}

type DescribeDBInstanceParamTplsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	DBInstanceParamTpls []*DBInstanceParamTplForDescribeDBInstanceParamTplsOutput `type:"list" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDBInstanceParamTplsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstanceParamTplsOutput) GoString() string {
	return s.String()
}

// SetDBInstanceParamTpls sets the DBInstanceParamTpls field's value.
func (s *DescribeDBInstanceParamTplsOutput) SetDBInstanceParamTpls(v []*DBInstanceParamTplForDescribeDBInstanceParamTplsOutput) *DescribeDBInstanceParamTplsOutput {
	s.DBInstanceParamTpls = v
	return s
}

// SetTotal sets the Total field's value.
func (s *DescribeDBInstanceParamTplsOutput) SetTotal(v int32) *DescribeDBInstanceParamTplsOutput {
	s.Total = &v
	return s
}
