// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mongodb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDBInstanceParamTplDetailCommon = "DescribeDBInstanceParamTplDetail"

// DescribeDBInstanceParamTplDetailCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstanceParamTplDetailCommon operation. The "output" return
// value will be populated with the DescribeDBInstanceParamTplDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstanceParamTplDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstanceParamTplDetailCommon Send returns without error.
//
// See DescribeDBInstanceParamTplDetailCommon for more information on using the DescribeDBInstanceParamTplDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstanceParamTplDetailCommonRequest method.
//    req, resp := client.DescribeDBInstanceParamTplDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MONGODB) DescribeDBInstanceParamTplDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDBInstanceParamTplDetailCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstanceParamTplDetailCommon API operation for MONGODB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MONGODB's
// API operation DescribeDBInstanceParamTplDetailCommon for usage and error information.
func (c *MONGODB) DescribeDBInstanceParamTplDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstanceParamTplDetailCommonRequest(input)
	return out, req.Send()
}

// DescribeDBInstanceParamTplDetailCommonWithContext is the same as DescribeDBInstanceParamTplDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstanceParamTplDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MONGODB) DescribeDBInstanceParamTplDetailCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstanceParamTplDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDBInstanceParamTplDetail = "DescribeDBInstanceParamTplDetail"

// DescribeDBInstanceParamTplDetailRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstanceParamTplDetail operation. The "output" return
// value will be populated with the DescribeDBInstanceParamTplDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstanceParamTplDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstanceParamTplDetailCommon Send returns without error.
//
// See DescribeDBInstanceParamTplDetail for more information on using the DescribeDBInstanceParamTplDetail
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstanceParamTplDetailRequest method.
//    req, resp := client.DescribeDBInstanceParamTplDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MONGODB) DescribeDBInstanceParamTplDetailRequest(input *DescribeDBInstanceParamTplDetailInput) (req *request.Request, output *DescribeDBInstanceParamTplDetailOutput) {
	op := &request.Operation{
		Name:       opDescribeDBInstanceParamTplDetail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDBInstanceParamTplDetailInput{}
	}

	output = &DescribeDBInstanceParamTplDetailOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstanceParamTplDetail API operation for MONGODB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MONGODB's
// API operation DescribeDBInstanceParamTplDetail for usage and error information.
func (c *MONGODB) DescribeDBInstanceParamTplDetail(input *DescribeDBInstanceParamTplDetailInput) (*DescribeDBInstanceParamTplDetailOutput, error) {
	req, out := c.DescribeDBInstanceParamTplDetailRequest(input)
	return out, req.Send()
}

// DescribeDBInstanceParamTplDetailWithContext is the same as DescribeDBInstanceParamTplDetail with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstanceParamTplDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MONGODB) DescribeDBInstanceParamTplDetailWithContext(ctx volcengine.Context, input *DescribeDBInstanceParamTplDetailInput, opts ...request.Option) (*DescribeDBInstanceParamTplDetailOutput, error) {
	req, out := c.DescribeDBInstanceParamTplDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeDBInstanceParamTplDetailInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	// TemplateId is a required field
	TemplateId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeDBInstanceParamTplDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstanceParamTplDetailInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDBInstanceParamTplDetailInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDBInstanceParamTplDetailInput"}
	if s.TemplateId == nil {
		invalidParams.Add(request.NewErrParamRequired("TemplateId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeDBInstanceParamTplDetailInput) SetProjectName(v string) *DescribeDBInstanceParamTplDetailInput {
	s.ProjectName = &v
	return s
}

// SetTemplateId sets the TemplateId field's value.
func (s *DescribeDBInstanceParamTplDetailInput) SetTemplateId(v string) *DescribeDBInstanceParamTplDetailInput {
	s.TemplateId = &v
	return s
}

type DescribeDBInstanceParamTplDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	CreateTime *string `type:"string" json:",omitempty"`

	DBEngineVersion *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	ParameterRole *string `type:"string" json:",omitempty"`

	Params []*ParamForDescribeDBInstanceParamTplDetailOutput `type:"list" json:",omitempty"`

	TemplateId *string `type:"string" json:",omitempty"`

	TemplateName *string `type:"string" json:",omitempty"`

	TemplateSource *string `type:"string" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDBInstanceParamTplDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstanceParamTplDetailOutput) GoString() string {
	return s.String()
}

// SetCreateTime sets the CreateTime field's value.
func (s *DescribeDBInstanceParamTplDetailOutput) SetCreateTime(v string) *DescribeDBInstanceParamTplDetailOutput {
	s.CreateTime = &v
	return s
}

// SetDBEngineVersion sets the DBEngineVersion field's value.
func (s *DescribeDBInstanceParamTplDetailOutput) SetDBEngineVersion(v string) *DescribeDBInstanceParamTplDetailOutput {
	s.DBEngineVersion = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DescribeDBInstanceParamTplDetailOutput) SetDescription(v string) *DescribeDBInstanceParamTplDetailOutput {
	s.Description = &v
	return s
}

// SetParameterRole sets the ParameterRole field's value.
func (s *DescribeDBInstanceParamTplDetailOutput) SetParameterRole(v string) *DescribeDBInstanceParamTplDetailOutput {
	s.ParameterRole = &v
	return s
}

// SetParams sets the Params field's value.
func (s *DescribeDBInstanceParamTplDetailOutput) SetParams(v []*ParamForDescribeDBInstanceParamTplDetailOutput) *DescribeDBInstanceParamTplDetailOutput {
	s.Params = v
	return s
}

// SetTemplateId sets the TemplateId field's value.
func (s *DescribeDBInstanceParamTplDetailOutput) SetTemplateId(v string) *DescribeDBInstanceParamTplDetailOutput {
	s.TemplateId = &v
	return s
}

// SetTemplateName sets the TemplateName field's value.
func (s *DescribeDBInstanceParamTplDetailOutput) SetTemplateName(v string) *DescribeDBInstanceParamTplDetailOutput {
	s.TemplateName = &v
	return s
}

// SetTemplateSource sets the TemplateSource field's value.
func (s *DescribeDBInstanceParamTplDetailOutput) SetTemplateSource(v string) *DescribeDBInstanceParamTplDetailOutput {
	s.TemplateSource = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DescribeDBInstanceParamTplDetailOutput) SetUpdateTime(v string) *DescribeDBInstanceParamTplDetailOutput {
	s.UpdateTime = &v
	return s
}

type ParamForDescribeDBInstanceParamTplDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DefaultValue *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	NeedRestart *bool `type:"boolean" json:",omitempty"`

	ParamName *string `type:"string" json:",omitempty"`

	Unit *string `type:"string" json:",omitempty"`

	ValueRange *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ParamForDescribeDBInstanceParamTplDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ParamForDescribeDBInstanceParamTplDetailOutput) GoString() string {
	return s.String()
}

// SetDefaultValue sets the DefaultValue field's value.
func (s *ParamForDescribeDBInstanceParamTplDetailOutput) SetDefaultValue(v string) *ParamForDescribeDBInstanceParamTplDetailOutput {
	s.DefaultValue = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ParamForDescribeDBInstanceParamTplDetailOutput) SetDescription(v string) *ParamForDescribeDBInstanceParamTplDetailOutput {
	s.Description = &v
	return s
}

// SetNeedRestart sets the NeedRestart field's value.
func (s *ParamForDescribeDBInstanceParamTplDetailOutput) SetNeedRestart(v bool) *ParamForDescribeDBInstanceParamTplDetailOutput {
	s.NeedRestart = &v
	return s
}

// SetParamName sets the ParamName field's value.
func (s *ParamForDescribeDBInstanceParamTplDetailOutput) SetParamName(v string) *ParamForDescribeDBInstanceParamTplDetailOutput {
	s.ParamName = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *ParamForDescribeDBInstanceParamTplDetailOutput) SetUnit(v string) *ParamForDescribeDBInstanceParamTplDetailOutput {
	s.Unit = &v
	return s
}

// SetValueRange sets the ValueRange field's value.
func (s *ParamForDescribeDBInstanceParamTplDetailOutput) SetValueRange(v string) *ParamForDescribeDBInstanceParamTplDetailOutput {
	s.ValueRange = &v
	return s
}
