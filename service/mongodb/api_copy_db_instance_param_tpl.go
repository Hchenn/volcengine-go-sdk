// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mongodb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCopyDBInstanceParamTplCommon = "CopyDBInstanceParamTpl"

// CopyDBInstanceParamTplCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CopyDBInstanceParamTplCommon operation. The "output" return
// value will be populated with the CopyDBInstanceParamTplCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CopyDBInstanceParamTplCommon Request to send the API call to the service.
// the "output" return value is not valid until after CopyDBInstanceParamTplCommon Send returns without error.
//
// See CopyDBInstanceParamTplCommon for more information on using the CopyDBInstanceParamTplCommon
// API call, and error handling.
//
//    // Example sending a request using the CopyDBInstanceParamTplCommonRequest method.
//    req, resp := client.CopyDBInstanceParamTplCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MONGODB) CopyDBInstanceParamTplCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCopyDBInstanceParamTplCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CopyDBInstanceParamTplCommon API operation for MONGODB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MONGODB's
// API operation CopyDBInstanceParamTplCommon for usage and error information.
func (c *MONGODB) CopyDBInstanceParamTplCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CopyDBInstanceParamTplCommonRequest(input)
	return out, req.Send()
}

// CopyDBInstanceParamTplCommonWithContext is the same as CopyDBInstanceParamTplCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CopyDBInstanceParamTplCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MONGODB) CopyDBInstanceParamTplCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CopyDBInstanceParamTplCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCopyDBInstanceParamTpl = "CopyDBInstanceParamTpl"

// CopyDBInstanceParamTplRequest generates a "volcengine/request.Request" representing the
// client's request for the CopyDBInstanceParamTpl operation. The "output" return
// value will be populated with the CopyDBInstanceParamTplCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CopyDBInstanceParamTplCommon Request to send the API call to the service.
// the "output" return value is not valid until after CopyDBInstanceParamTplCommon Send returns without error.
//
// See CopyDBInstanceParamTpl for more information on using the CopyDBInstanceParamTpl
// API call, and error handling.
//
//    // Example sending a request using the CopyDBInstanceParamTplRequest method.
//    req, resp := client.CopyDBInstanceParamTplRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MONGODB) CopyDBInstanceParamTplRequest(input *CopyDBInstanceParamTplInput) (req *request.Request, output *CopyDBInstanceParamTplOutput) {
	op := &request.Operation{
		Name:       opCopyDBInstanceParamTpl,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CopyDBInstanceParamTplInput{}
	}

	output = &CopyDBInstanceParamTplOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CopyDBInstanceParamTpl API operation for MONGODB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MONGODB's
// API operation CopyDBInstanceParamTpl for usage and error information.
func (c *MONGODB) CopyDBInstanceParamTpl(input *CopyDBInstanceParamTplInput) (*CopyDBInstanceParamTplOutput, error) {
	req, out := c.CopyDBInstanceParamTplRequest(input)
	return out, req.Send()
}

// CopyDBInstanceParamTplWithContext is the same as CopyDBInstanceParamTpl with the addition of
// the ability to pass a context and additional request options.
//
// See CopyDBInstanceParamTpl for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MONGODB) CopyDBInstanceParamTplWithContext(ctx volcengine.Context, input *CopyDBInstanceParamTplInput, opts ...request.Option) (*CopyDBInstanceParamTplOutput, error) {
	req, out := c.CopyDBInstanceParamTplRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CopyDBInstanceParamTplInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Description is a required field
	Description *string `type:"string" json:",omitempty" required:"true"`

	ProjectName *string `type:"string" json:",omitempty"`

	// SrcTemplateId is a required field
	SrcTemplateId *string `type:"string" json:",omitempty" required:"true"`

	// TemplateName is a required field
	TemplateName *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CopyDBInstanceParamTplInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CopyDBInstanceParamTplInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CopyDBInstanceParamTplInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CopyDBInstanceParamTplInput"}
	if s.Description == nil {
		invalidParams.Add(request.NewErrParamRequired("Description"))
	}
	if s.SrcTemplateId == nil {
		invalidParams.Add(request.NewErrParamRequired("SrcTemplateId"))
	}
	if s.TemplateName == nil {
		invalidParams.Add(request.NewErrParamRequired("TemplateName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *CopyDBInstanceParamTplInput) SetDescription(v string) *CopyDBInstanceParamTplInput {
	s.Description = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *CopyDBInstanceParamTplInput) SetProjectName(v string) *CopyDBInstanceParamTplInput {
	s.ProjectName = &v
	return s
}

// SetSrcTemplateId sets the SrcTemplateId field's value.
func (s *CopyDBInstanceParamTplInput) SetSrcTemplateId(v string) *CopyDBInstanceParamTplInput {
	s.SrcTemplateId = &v
	return s
}

// SetTemplateName sets the TemplateName field's value.
func (s *CopyDBInstanceParamTplInput) SetTemplateName(v string) *CopyDBInstanceParamTplInput {
	s.TemplateName = &v
	return s
}

type CopyDBInstanceParamTplOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	TemplateId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CopyDBInstanceParamTplOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CopyDBInstanceParamTplOutput) GoString() string {
	return s.String()
}

// SetTemplateId sets the TemplateId field's value.
func (s *CopyDBInstanceParamTplOutput) SetTemplateId(v string) *CopyDBInstanceParamTplOutput {
	s.TemplateId = &v
	return s
}
