// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mongodb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDBInstanceBackupURLCommon = "DescribeDBInstanceBackupURL"

// DescribeDBInstanceBackupURLCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstanceBackupURLCommon operation. The "output" return
// value will be populated with the DescribeDBInstanceBackupURLCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstanceBackupURLCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstanceBackupURLCommon Send returns without error.
//
// See DescribeDBInstanceBackupURLCommon for more information on using the DescribeDBInstanceBackupURLCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstanceBackupURLCommonRequest method.
//    req, resp := client.DescribeDBInstanceBackupURLCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MONGODB) DescribeDBInstanceBackupURLCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDBInstanceBackupURLCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstanceBackupURLCommon API operation for MONGODB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MONGODB's
// API operation DescribeDBInstanceBackupURLCommon for usage and error information.
func (c *MONGODB) DescribeDBInstanceBackupURLCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstanceBackupURLCommonRequest(input)
	return out, req.Send()
}

// DescribeDBInstanceBackupURLCommonWithContext is the same as DescribeDBInstanceBackupURLCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstanceBackupURLCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MONGODB) DescribeDBInstanceBackupURLCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstanceBackupURLCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDBInstanceBackupURL = "DescribeDBInstanceBackupURL"

// DescribeDBInstanceBackupURLRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstanceBackupURL operation. The "output" return
// value will be populated with the DescribeDBInstanceBackupURLCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstanceBackupURLCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstanceBackupURLCommon Send returns without error.
//
// See DescribeDBInstanceBackupURL for more information on using the DescribeDBInstanceBackupURL
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstanceBackupURLRequest method.
//    req, resp := client.DescribeDBInstanceBackupURLRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MONGODB) DescribeDBInstanceBackupURLRequest(input *DescribeDBInstanceBackupURLInput) (req *request.Request, output *DescribeDBInstanceBackupURLOutput) {
	op := &request.Operation{
		Name:       opDescribeDBInstanceBackupURL,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDBInstanceBackupURLInput{}
	}

	output = &DescribeDBInstanceBackupURLOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstanceBackupURL API operation for MONGODB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MONGODB's
// API operation DescribeDBInstanceBackupURL for usage and error information.
func (c *MONGODB) DescribeDBInstanceBackupURL(input *DescribeDBInstanceBackupURLInput) (*DescribeDBInstanceBackupURLOutput, error) {
	req, out := c.DescribeDBInstanceBackupURLRequest(input)
	return out, req.Send()
}

// DescribeDBInstanceBackupURLWithContext is the same as DescribeDBInstanceBackupURL with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstanceBackupURL for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MONGODB) DescribeDBInstanceBackupURLWithContext(ctx volcengine.Context, input *DescribeDBInstanceBackupURLInput, opts ...request.Option) (*DescribeDBInstanceBackupURLOutput, error) {
	req, out := c.DescribeDBInstanceBackupURLRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeDBInstanceBackupURLInput struct {
	_ struct{} `type:"structure"`

	// BackupId is a required field
	BackupId *string `type:"string" required:"true"`

	// InstanceId is a required field
	InstanceId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeDBInstanceBackupURLInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstanceBackupURLInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDBInstanceBackupURLInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDBInstanceBackupURLInput"}
	if s.BackupId == nil {
		invalidParams.Add(request.NewErrParamRequired("BackupId"))
	}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBackupId sets the BackupId field's value.
func (s *DescribeDBInstanceBackupURLInput) SetBackupId(v string) *DescribeDBInstanceBackupURLInput {
	s.BackupId = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDBInstanceBackupURLInput) SetInstanceId(v string) *DescribeDBInstanceBackupURLInput {
	s.InstanceId = &v
	return s
}

type DescribeDBInstanceBackupURLOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	BackupDownloadLink *string `type:"string"`

	BackupId *string `type:"string"`

	DownloadProgress *int32 `type:"int32"`

	InstanceId *string `type:"string"`

	LinkExpiredTime *string `type:"string"`
}

// String returns the string representation
func (s DescribeDBInstanceBackupURLOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstanceBackupURLOutput) GoString() string {
	return s.String()
}

// SetBackupDownloadLink sets the BackupDownloadLink field's value.
func (s *DescribeDBInstanceBackupURLOutput) SetBackupDownloadLink(v string) *DescribeDBInstanceBackupURLOutput {
	s.BackupDownloadLink = &v
	return s
}

// SetBackupId sets the BackupId field's value.
func (s *DescribeDBInstanceBackupURLOutput) SetBackupId(v string) *DescribeDBInstanceBackupURLOutput {
	s.BackupId = &v
	return s
}

// SetDownloadProgress sets the DownloadProgress field's value.
func (s *DescribeDBInstanceBackupURLOutput) SetDownloadProgress(v int32) *DescribeDBInstanceBackupURLOutput {
	s.DownloadProgress = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDBInstanceBackupURLOutput) SetInstanceId(v string) *DescribeDBInstanceBackupURLOutput {
	s.InstanceId = &v
	return s
}

// SetLinkExpiredTime sets the LinkExpiredTime field's value.
func (s *DescribeDBInstanceBackupURLOutput) SetLinkExpiredTime(v string) *DescribeDBInstanceBackupURLOutput {
	s.LinkExpiredTime = &v
	return s
}
