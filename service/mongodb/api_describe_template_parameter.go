// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mongodb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeTemplateParameterCommon = "DescribeTemplateParameter"

// DescribeTemplateParameterCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeTemplateParameterCommon operation. The "output" return
// value will be populated with the DescribeTemplateParameterCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTemplateParameterCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTemplateParameterCommon Send returns without error.
//
// See DescribeTemplateParameterCommon for more information on using the DescribeTemplateParameterCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeTemplateParameterCommonRequest method.
//    req, resp := client.DescribeTemplateParameterCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MONGODB) DescribeTemplateParameterCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeTemplateParameterCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeTemplateParameterCommon API operation for MONGODB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MONGODB's
// API operation DescribeTemplateParameterCommon for usage and error information.
func (c *MONGODB) DescribeTemplateParameterCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeTemplateParameterCommonRequest(input)
	return out, req.Send()
}

// DescribeTemplateParameterCommonWithContext is the same as DescribeTemplateParameterCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTemplateParameterCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MONGODB) DescribeTemplateParameterCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeTemplateParameterCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeTemplateParameter = "DescribeTemplateParameter"

// DescribeTemplateParameterRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeTemplateParameter operation. The "output" return
// value will be populated with the DescribeTemplateParameterCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTemplateParameterCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTemplateParameterCommon Send returns without error.
//
// See DescribeTemplateParameter for more information on using the DescribeTemplateParameter
// API call, and error handling.
//
//    // Example sending a request using the DescribeTemplateParameterRequest method.
//    req, resp := client.DescribeTemplateParameterRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MONGODB) DescribeTemplateParameterRequest(input *DescribeTemplateParameterInput) (req *request.Request, output *DescribeTemplateParameterOutput) {
	op := &request.Operation{
		Name:       opDescribeTemplateParameter,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeTemplateParameterInput{}
	}

	output = &DescribeTemplateParameterOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeTemplateParameter API operation for MONGODB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MONGODB's
// API operation DescribeTemplateParameter for usage and error information.
func (c *MONGODB) DescribeTemplateParameter(input *DescribeTemplateParameterInput) (*DescribeTemplateParameterOutput, error) {
	req, out := c.DescribeTemplateParameterRequest(input)
	return out, req.Send()
}

// DescribeTemplateParameterWithContext is the same as DescribeTemplateParameter with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTemplateParameter for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MONGODB) DescribeTemplateParameterWithContext(ctx volcengine.Context, input *DescribeTemplateParameterInput, opts ...request.Option) (*DescribeTemplateParameterOutput, error) {
	req, out := c.DescribeTemplateParameterRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeTemplateParameterInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// DBEngineVersion is a required field
	DBEngineVersion *string `type:"string" json:",omitempty" required:"true"`

	// ParamRole is a required field
	ParamRole *string `type:"string" json:",omitempty" required:"true"`

	ProjectName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeTemplateParameterInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTemplateParameterInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeTemplateParameterInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeTemplateParameterInput"}
	if s.DBEngineVersion == nil {
		invalidParams.Add(request.NewErrParamRequired("DBEngineVersion"))
	}
	if s.ParamRole == nil {
		invalidParams.Add(request.NewErrParamRequired("ParamRole"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDBEngineVersion sets the DBEngineVersion field's value.
func (s *DescribeTemplateParameterInput) SetDBEngineVersion(v string) *DescribeTemplateParameterInput {
	s.DBEngineVersion = &v
	return s
}

// SetParamRole sets the ParamRole field's value.
func (s *DescribeTemplateParameterInput) SetParamRole(v string) *DescribeTemplateParameterInput {
	s.ParamRole = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeTemplateParameterInput) SetProjectName(v string) *DescribeTemplateParameterInput {
	s.ProjectName = &v
	return s
}

type DescribeTemplateParameterOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Params []*ParamForDescribeTemplateParameterOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeTemplateParameterOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTemplateParameterOutput) GoString() string {
	return s.String()
}

// SetParams sets the Params field's value.
func (s *DescribeTemplateParameterOutput) SetParams(v []*ParamForDescribeTemplateParameterOutput) *DescribeTemplateParameterOutput {
	s.Params = v
	return s
}

type ParamForDescribeTemplateParameterOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DefaultValue *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	NeedRestart *bool `type:"boolean" json:",omitempty"`

	ParamName *string `type:"string" json:",omitempty"`

	Unit *string `type:"string" json:",omitempty"`

	ValueRange *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ParamForDescribeTemplateParameterOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ParamForDescribeTemplateParameterOutput) GoString() string {
	return s.String()
}

// SetDefaultValue sets the DefaultValue field's value.
func (s *ParamForDescribeTemplateParameterOutput) SetDefaultValue(v string) *ParamForDescribeTemplateParameterOutput {
	s.DefaultValue = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ParamForDescribeTemplateParameterOutput) SetDescription(v string) *ParamForDescribeTemplateParameterOutput {
	s.Description = &v
	return s
}

// SetNeedRestart sets the NeedRestart field's value.
func (s *ParamForDescribeTemplateParameterOutput) SetNeedRestart(v bool) *ParamForDescribeTemplateParameterOutput {
	s.NeedRestart = &v
	return s
}

// SetParamName sets the ParamName field's value.
func (s *ParamForDescribeTemplateParameterOutput) SetParamName(v string) *ParamForDescribeTemplateParameterOutput {
	s.ParamName = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *ParamForDescribeTemplateParameterOutput) SetUnit(v string) *ParamForDescribeTemplateParameterOutput {
	s.Unit = &v
	return s
}

// SetValueRange sets the ValueRange field's value.
func (s *ParamForDescribeTemplateParameterOutput) SetValueRange(v string) *ParamForDescribeTemplateParameterOutput {
	s.ValueRange = &v
	return s
}
